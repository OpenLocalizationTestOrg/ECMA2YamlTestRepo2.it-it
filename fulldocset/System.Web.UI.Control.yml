### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Control
  id: Control
  children:
  - System.Web.UI.Control.#ctor
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  langs:
  - csharp
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
  type: Class
  summary: "Definisce le proprietà, metodi ed eventi che vengono condivisi da tutti i controlli server ASP.NET."
  remarks: "Questa è la classe principale che è possibile derivare da durante lo sviluppo di controlli server ASP.NET personalizzati. Controllo non dispone di alcuna funzionalità specifica dell&quot;interfaccia utente. Se si sta creando un controllo che non dispone di un&quot;interfaccia utente, o combina altri controlli che utilizzano la propria interfaccia utente, è possibile derivare dal controllo. Se si modifica un controllo che dispone di un&quot;interfaccia utente, derivare da <xref:System.Web.UI.WebControls.WebControl>o qualsiasi controllo il <xref:System.Web.UI.WebControls>punto dello spazio dei nomi che fornisce un avvio appropriato per il controllo personalizzato.</xref:System.Web.UI.WebControls> </xref:System.Web.UI.WebControls.WebControl>       La classe di controllo è la classe base per tutti i controlli server ASP.NET, inclusi i controlli personalizzati, i controlli utente e le pagine. Le pagine ASP.NET sono istanze di <xref:System.Web.UI.Page>classe che eredita dalla classe Control e che gestisce le richieste per i file con estensione aspx.</xref:System.Web.UI.Page>       La classe del controllo possono direttamente o indirettamente utilizzato come parte dell&quot;interfaccia utente per l&quot;applicazione Web e di conseguenza deve essere analizzata per assicurarsi che le procedure consigliate per la scrittura di codice sicuro e la sicurezza delle applicazioni viene seguita.       Per informazioni generali su questi argomenti, vedere [Panoramica di Web applicazione minacce alla sicurezza](~/add/includes/ajax-current-ext-md.md), [NIB: procedure consigliate per criteri di sicurezza](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), e [concetti principali sulla sicurezza](~/add/includes/ajax-current-ext-md.md). Per ulteriori informazioni, vedere [protezione dei controlli Standard](~/add/includes/ajax-current-ext-md.md), [come: messaggi di errore visualizzato](~/add/includes/ajax-current-ext-md.md), [come: protezione dagli attacchi tramite Script in un&quot;applicazione Web da applicare la codifica HTML alle stringhe](~/add/includes/ajax-current-ext-md.md), e [Introduzione ai controlli di convalida](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."
  example:
  - "The following example demonstrates a custom server control that derives from the Control class. The `InnerContent` class overrides the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method, checks to see if the class has any child controls on the page and determines whether the first child of the control is a literal control. If both of these conditions are met, the overridden method writes the HTML string \\<H2>Your Message:, the contents of the literal control, and a closing \\</H2> tag to the Web Forms page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic Control Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.control_1.vb)]\n [!code-cs[Classic Control Example#1](~/add/codesnippet/csharp/t-system.web.ui.control_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.DefaultProperty("ID")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.DesignerCategory("Code")]

      [System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItemFilter("System.Web.UI", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.Web.UI.Themeable(false)]

      public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  - System.Web.UI.IControlBuilderAccessor
  - System.Web.UI.IControlDesignerAccessor
  - System.Web.UI.IDataBindingsAccessor
  - System.Web.UI.IExpressionsAccessor
  - System.Web.UI.IParserAccessor
  - System.Web.UI.IUrlResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Control.#ctor
  id: '#ctor'
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Web.UI.Control.Control()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.Control&quot;> </xref> classe."
  syntax:
    content: public Control ();
    parameters: []
  overload: System.Web.UI.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Adapter
  id: Adapter
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Adapter
  nameWithType: Control.Adapter
  fullName: System.Web.UI.Control.Adapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene la scheda del browser per il controllo."
  remarks: "Le pagine Web ASP.NET sono utilizzabili in una vasta gamma di dispositivi e browser che possono richiedere informazioni dal Web. La scheda proprietà restituisce il <xref:System.Web.UI.Adapters.ControlAdapter>oggetto che esegue il rendering del controllo nel dispositivo richiedente o una schermata del browser.</xref:System.Web.UI.Adapters.ControlAdapter>       Per ulteriori informazioni sugli adapter, vedere [dell&quot;architettura Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }
    return:
      type: System.Web.UI.Adapters.ControlAdapter
      description: "Oggetto <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> per questo controllo. Se il browser di destinazione non richiede un adattatore, restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.Adapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  id: AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AddedControl(Control,Int32)
  nameWithType: Control.AddedControl(Control,Int32)
  fullName: System.Web.UI.Control.AddedControl(Control,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chiamato dopo l&quot;aggiunta di un controllo figlio per il <xref:System.Web.UI.Control.Controls*>insieme il <xref href=&quot;System.Web.UI.Control&quot;> </xref> oggetto.</xref:System.Web.UI.Control.Controls*>"
  remarks: "Il metodo AddedControl viene chiamato immediatamente dopo l&quot;aggiunta di un controllo per il <xref:System.Web.UI.Control.Controls%2A>insieme.</xref:System.Web.UI.Control.Controls%2A>"
  syntax:
    content: protected virtual void AddedControl (System.Web.UI.Control control, int index);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> che è stato aggiunto."
    - id: index
      type: System.Int32
      description: "L&quot;indice del controllo nel <xref:System.Web.UI.Control.Controls*>insieme.</xref:System.Web.UI.Control.Controls*>"
  overload: System.Web.UI.Control.AddedControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>control</code>è un <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controllo."
  platform:
  - net462
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifica al controllo server che un elemento, XML o HTML, è stato analizzato e aggiunge l&quot;elemento del controllo server <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> oggetto."
  remarks: "A meno che non venga sottoposto a override, questo metodo aggiunge automaticamente <xref:System.Web.UI.LiteralControl>oggetti per il controllo server <xref:System.Web.UI.ControlCollection>oggetto.</xref:System.Web.UI.ControlCollection> </xref:System.Web.UI.LiteralControl> Questa raccolta è accessibile tramite <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>"
  example:
  - "The following example is a custom server control that uses the AddParsedSubObject method to determine if elements declared between the opening and closing tags of this control are <xref:System.Web.UI.WebControls.TextBox> Web server controls. If they are, they are added to an <xref:System.Collections.ArrayList> object, `items`. When the overridden <xref:System.Web.UI.Control.CreateChildControls%2A> method is called, it iterates through the <xref:System.Collections.ArrayList> and adds each object in it to the <xref:System.Web.UI.ControlCollection> of the custom server control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Control_AddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.control._12_1.cs)]\n [!code-vb[Control_AddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._12_1.vb)]"
  syntax:
    content: protected virtual void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta l&quot;elemento sottoposto ad analisi.</xref:System.Object>"
  overload: System.Web.UI.Control.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  id: ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.Control.ApplyStyleSheetSkin(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Applica le proprietà di stile definite nel foglio di stile della pagina al controllo."
  remarks: "Il metodo ApplyStyleSheetSkin imposta le proprietà dello stile del controllo in base alle proprietà dell&quot;interfaccia definita in una directory dei temi. L&quot;interfaccia applicata è l&quot;interfaccia predefinita per il controllo o di quella specificata nella <xref:System.Web.UI.Control.SkinID%2A>proprietà.</xref:System.Web.UI.Control.SkinID%2A> Il metodo ApplyStyleSheetSkin viene chiamato da ASP.NET per i controlli dichiarativi inseriti in una pagina. È necessario chiamare il metodo ApplyStyleSheetSkin tutti i controlli creati a livello di codice in fase di esecuzione per le interfacce dei fogli di stile da applicare al controllo. Le interfacce dei temi vengono applicate automaticamente. Per ulteriori informazioni sulla differenza tra i temi e fogli di stile CSS, vedere [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Il <xref href=&quot;System.Web.UI.Page&quot;> </xref> che contiene il controllo."
  overload: System.Web.UI.Control.ApplyStyleSheetSkin*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il foglio di stile è già applicato."
  platform:
  - net462
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  id: AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta la directory virtuale relativo dell&quot;applicazione del <xref href=&quot;System.Web.UI.Page&quot;> </xref> o <xref href=&quot;System.Web.UI.UserControl&quot;> </xref> oggetto che contiene questo controllo."
  remarks: "La proprietà AppRelativeTemplateSourceDirectory contiene il percorso relativo dell&quot;applicazione per il controllo utente o di pagina che contiene il controllo corrente. Ad esempio, se la pagina Web si trova in http://www.contoso.com/application/subdirectory, la proprietà AppRelativeTemplateSourceDirectory restituisce &quot;~ / sottodirectory&quot;.       Per restituire il percorso virtuale (&quot;application/subdirectory&quot;), utilizzare il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A>proprietà.</xref:System.Web.UI.Control.TemplateSourceDirectory%2A>"
  syntax:
    content: public string AppRelativeTemplateSourceDirectory { get; set; }
    return:
      type: System.String
      description: "La directory virtuale relativo dell&quot;applicazione del controllo utente o di pagina che contiene il controllo."
  overload: System.Web.UI.Control.AppRelativeTemplateSourceDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  id: BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BeginRenderTracing(TextWriter,Object)
  nameWithType: Control.BeginRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.BeginRenderTracing(TextWriter,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Avvia la traccia in fase di progettazione dei dati per il rendering."
  syntax:
    content: protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Oggetto che scrive i dati."
    - id: traceObject
      type: System.Object
      description: "L&quot;oggetto trace."
  overload: System.Web.UI.Control.BeginRenderTracing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BindingContainer
  id: BindingContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: System.Web.UI.Control.BindingContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il controllo che contiene l&quot;associazione del controllo dati."
  remarks: "La proprietà proprietà BindingContainer contiene un riferimento di <xref:System.Web.UI.Control>oggetto che contiene le informazioni di associazione dati per il controllo corrente.</xref:System.Web.UI.Control>       La proprietà BindingContainer è lo stesso come il <xref:System.Web.UI.Control.NamingContainer%2A>proprietà, tranne quando il controllo è parte di un modello.</xref:System.Web.UI.Control.NamingContainer%2A> In tal caso, impostare la proprietà proprietà BindingContainer il <xref:System.Web.UI.Control>che definisce il modello.</xref:System.Web.UI.Control>"
  syntax:
    content: public System.Web.UI.Control BindingContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> che contiene l&quot;associazione del controllo dati."
  overload: System.Web.UI.Control.BindingContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  id: BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BuildProfileTree(String,Boolean)
  nameWithType: Control.BuildProfileTree(String,Boolean)
  fullName: System.Web.UI.Control.BuildProfileTree(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Raccoglie informazioni sul controllo del server e li recapita al <xref:System.Web.UI.Page.Trace*>proprietà da visualizzare quando la traccia è abilitata per la pagina.</xref:System.Web.UI.Page.Trace*>"
  remarks: "Questa proprietà consente di raccogliere le informazioni necessarie sulla gerarchia dell&quot;interfaccia utente della pagina e lo passa alla pagina [ \\&lt; traccia\\&gt;](../Topic/%3Ctrace%3E%20Element.md) proprietà. Quando si abilita la traccia, per una pagina o per l&quot;applicazione, queste informazioni vengono visualizzate nel `Control Tree` sezione dell&quot;output di traccia. Output di traccia per una pagina viene aggiunto alla fine della pagina. mentre l&quot;output di traccia per un&quot;applicazione possono essere visualizzate dal Visualizzatore di traccia (file trace.axd) che viene archiviato nella directory radice dell&quot;applicazione. Per ulteriori informazioni sulla traccia, vedere [Panoramica della traccia ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void BuildProfileTree (string parentId, bool calcViewState);
    parameters:
    - id: parentId
      type: System.String
      description: "Identificatore dell&quot;elemento padre del controllo."
    - id: calcViewState
      type: System.Boolean
      description: "Valore booleano che indica se le dimensioni dello stato di visualizzazione viene calcolata."
  overload: System.Web.UI.Control.BuildProfileTree*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ChildControlsCreated
  id: ChildControlsCreated
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: System.Web.UI.Control.ChildControlsCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se sono stati creati i controlli figlio del controllo server."
  remarks: ''
  example:
  - "The following example demonstrates an override of the <xref:System.Web.UI.Control.OnDataBinding%2A> method of a custom <xref:System.Web.UI.WebControls.Repeater> control. To ensure that child controls are not created until data binding occurs again, the ChildControlsCreated property is set to `true` after the <xref:System.Web.UI.WebControls.RepeaterItem> objects are created and added to the control's <xref:System.Web.UI.ControlCollection> object.  \n  \n [!code-cs[TemplatedDataBoundControl3#1](~/add/codesnippet/csharp/p-system.web.ui.control._14_1.cs)]\n [!code-vb[TemplatedDataBoundControl3#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._14_1.vb)]  \n  \n The following example demonstrates how to use the custom repeater control in a Web page.  \n  \n [!code-cs[TemplatedDataBoundControl3#2](~/add/codesnippet/csharp/p-system.web.ui.control._14_2.aspx)]\n [!code-vb[TemplatedDataBoundControl3#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._14_2.aspx)]"
  syntax:
    content: protected bool ChildControlsCreated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati creati i controlli figlio; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.ChildControlsCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearCachedClientID
  id: ClearCachedClientID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: System.Web.UI.Control.ClearCachedClientID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Imposta la cache <xref:System.Web.UI.Control.ClientID*>valore <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.ClientID*>"
  syntax:
    content: protected void ClearCachedClientID ();
    parameters: []
  overload: System.Web.UI.Control.ClearCachedClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildControlState
  id: ClearChildControlState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: System.Web.UI.Control.ClearChildControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Elimina le informazioni sullo stato del controllo per i controlli figlio del controllo server."
  remarks: "Il metodo ClearChildControlState viene utilizzato quando viene eseguito l&quot;override delle informazioni sullo stato del controllo figlio scritte nello stato del controllo padre quando vengono creati nuovi controlli figlio, ad esempio quando i controlli figlio con associazione a dati in un controllo server associato a dati basati su modelli. La chiamata al metodo ClearChildControlState ai controlli figlio vuoto prima di chiamare il <xref:System.Web.UI.Control.SaveControlState%2A>metodo riduce le dimensioni delle informazioni sullo stato del controllo che devono essere archiviate o trasmesso.</xref:System.Web.UI.Control.SaveControlState%2A>       Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control>di oggetto, utilizzare il metodo ClearChildControlState per cancellare lo stato del controllo figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.</xref:System.Web.UI.Control>       Deselezionare le caselle di utilizzare lo stato di visualizzazione, lo stato del controllo figlio di <xref:System.Web.UI.Control.ClearChildState%2A>metodo.</xref:System.Web.UI.Control.ClearChildState%2A>"
  syntax:
    content: protected void ClearChildControlState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildState
  id: ClearChildState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: System.Web.UI.Control.ClearChildState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Elimina le informazioni sullo stato di visualizzazione e dello stato di controllo per i controlli figlio di tutti i server del controllo."
  remarks: "Il metodo ClearChildState Cancella tutte le informazioni sullo stato di visualizzazione e dello stato di controllo per i controlli figlio. È equivalente alla chiamata sia la <xref:System.Web.UI.Control.ClearChildViewState%2A>(metodo) e <xref:System.Web.UI.Control.ClearChildControlState%2A>metodo.</xref:System.Web.UI.Control.ClearChildControlState%2A> </xref:System.Web.UI.Control.ClearChildViewState%2A>       Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control>di oggetto, utilizzare il metodo ClearChildState per cancellare lo stato di figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.</xref:System.Web.UI.Control>"
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.Control.OnDataBinding%2A> method for a templated data-bound control. If the data source that the control binds to is populated, the control's <xref:System.Web.UI.ControlCollection> collection is emptied using the <xref:System.Web.UI.ControlCollection.Clear%2A> method, and the ClearChildState method is used to remove any state information that had been saved for the child controls.  \n  \n [!code-cs[TemplatedDataBoundControl2#3](~/add/codesnippet/csharp/m-system.web.ui.control._15_1.cs)]\n [!code-vb[TemplatedDataBoundControl2#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._15_1.vb)]"
  syntax:
    content: protected void ClearChildState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildViewState
  id: ClearChildViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: System.Web.UI.Control.ClearChildViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Elimina le informazioni sullo stato di visualizzazione per i controlli figlio di tutti i server del controllo."
  remarks: "Questo metodo viene comunemente utilizzato quando si esegue l&quot;override di <xref:System.Web.UI.Control.DataBind%2A>metodo durante lo sviluppo di controlli server associati a dati basati su modelli.</xref:System.Web.UI.Control.DataBind%2A> Se non si chiama questo metodo, è possono creare informazioni sullo stato di visualizzazione di controllo figlio da un controllo server padre, per essere sottoposte a override durante l&quot;associazione dati.       Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control>, utilizzare il metodo ClearChildViewState per cancellare lo stato di visualizzazione figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.</xref:System.Web.UI.Control>       Per ulteriori informazioni sull&quot;utilizzo di questo metodo, vedere [procedura: creare controlli utente ASP.NET basati su modelli](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void ClearChildViewState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  id: ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: System.Web.UI.Control.ClearEffectiveClientIDMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Imposta il <xref:System.Web.UI.Control.ClientIDMode*>proprietà dell&quot;istanza del controllo corrente e di eventuali controlli figlio per <xref href=&quot;System.Web.UI.ClientIDMode&quot;> </xref>.</xref:System.Web.UI.Control.ClientIDMode*>"
  syntax:
    content: protected void ClearEffectiveClientIDMode ();
    parameters: []
  overload: System.Web.UI.Control.ClearEffectiveClientIDMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientID
  id: ClientID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientID
  nameWithType: Control.ClientID
  fullName: System.Web.UI.Control.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;ID di controllo per il markup HTML generato da ASP.NET."
  remarks: "Quando viene eseguito il rendering di un controllo server Web come un elemento HTML, il `id` attributo dell&quot;elemento HTML è impostato sul valore della proprietà ClientID. Il valore ClientID viene spesso utilizzato per accedere all&quot;elemento HTML nello script client utilizzando il `document.getElementById` metodo. L&quot;ID viene spesso utilizzato nelle regole CSS per specificare gli elementi di stile. Ad esempio, la regola di stile CSS seguente seleziona tutti `span` gli elementi che hanno il `id` valore dell&quot;attributo `ProductIDLabel` e imposta i `background-color` attributo `white`: ```   span#ProductIDLabel { background-color: white; }   ``` ASP.NET fornisce più algoritmi come generare il valore della proprietà ClientID. Si seleziona l&quot;algoritmo da utilizzare per un controllo impostando il relativo <xref:System.Web.UI.Control.ClientIDMode%2A>proprietà.</xref:System.Web.UI.Control.ClientIDMode%2A> Gli algoritmi sono identificati dal <xref:System.Web.UI.ClientIDMode>valori di enumerazione elencati nella tabella seguente.</xref:System.Web.UI.ClientIDMode>      | Valore | Descrizione |   |-----------|-----------------|   | <xref:System.Web.UI.ClientIDMode>| Il valore ClientID è generato concatenando il <xref:System.Web.UI.Control.ID%2A>padre di valori di ogni contenitore di denominazione con la <xref:System.Web.UI.Control.ID%2A>valore del controllo.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.ClientIDMode> Negli scenari di associazione di dati in cui vengono sottoposti a rendering più istanze di un controllo, viene inserito un valore incrementale davanti del controllo <xref:System.Web.UI.Control.ID%2A>valore.</xref:System.Web.UI.Control.ID%2A> Ogni segmento è separato da un carattere di sottolineatura (_). Questo algoritmo è stato utilizzato nelle versioni di ASP.NET precedenti ad ASP.NET 4. |   | <xref:System.Web.UI.ClientIDMode>| Il valore ClientID è impostato il valore di <xref:System.Web.UI.Control.ID%2A>proprietà.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.ClientIDMode> Se il controllo è un contenitore di denominazione, il controllo viene utilizzato come parte superiore della gerarchia di contenitori di denominazione per tutti i controlli in esso contenuti. |   | <xref:System.Web.UI.ClientIDMode>| Questo algoritmo viene utilizzato per i controlli che sono nei controlli con associazione a dati.</xref:System.Web.UI.ClientIDMode> Il valore ClientID è generato concatenando il valore ClientID del contenitore di denominazione padre con il <xref:System.Web.UI.Control.ID%2A>valore del controllo.</xref:System.Web.UI.Control.ID%2A> Se il controllo è un controllo con associazione a dati che genera più righe, il valore del campo dati è specificato nella <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>proprietà viene aggiunta alla fine.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Per il <xref:System.Web.UI.WebControls.GridView>controllare, i dati di più campi possono essere specificati.</xref:System.Web.UI.WebControls.GridView> Se il <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>proprietà è vuota, viene aggiunto un numero sequenziale alla fine anziché un valore del campo dati.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Ogni segmento è separato da un carattere di sottolineatura (_). |   | <xref:System.Web.UI.ClientIDMode>| Il controllo eredita l&quot;impostazione <xref:System.Web.UI.ClientIDMode>del controllo <xref:System.Web.UI.Control.NamingContainer%2A>. |       Il valore predefinito <xref:System.Web.UI.Control.ClientIDMode%2A>per una pagina è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> </xref:System.Web.UI.Control.NamingContainer%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> Il valore predefinito <xref:System.Web.UI.Control.ClientIDMode%2A>per un controllo è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Poiché per impostazione predefinita per i controlli <xref:System.Web.UI.ClientIDMode>, la modalità di generazione predefinita è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> (Tuttavia, se si utilizza Visual Studio per convertire un progetto Web in ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il valore predefinito del sito <xref:System.Web.UI.ClientIDMode>nel file Web. config.)</xref:System.Web.UI.ClientIDMode>       Per ulteriori informazioni, vedere [identificazione del controllo Server Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show a Web user control that is inside a content page for a master page. The user control contains a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.Label> control. The text that is displayed in the <xref:System.Web.UI.WebControls.Label> control is determined by the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control. The text value is set through client script so that the Web page does not have to post back to the server in order to set this value. To get a reference to the HTML element that is rendered for the <xref:System.Web.UI.WebControls.Label> control in client script, you must know the value of the control's ClientID property. However, because the user control can be put anywhere in a Web page, it is impossible to know in advance which naming containers will contain the controls. To make sure that the ClientID value will be the same as the <xref:System.Web.UI.Control.ID%2A> value, the code sets the <xref:System.Web.UI.Control.ClientIDMode%2A> value to <xref:System.Web.UI.WebControls.ValidatorDisplay>.  \n  \n The following example shows the user control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows the content page that contains the user control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows the master page that contains the content page.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual string ClientID { get; }
    return:
      type: System.String
      description: "L&quot;ID di controllo per il markup HTML generato da ASP.NET."
  overload: System.Web.UI.Control.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientIDMode
  id: ClientIDMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: System.Web.UI.Control.ClientIDMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta l&quot;algoritmo utilizzato per generare il valore della <xref:System.Web.UI.Control.ClientID*>proprietà.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "ASP.NET fornisce più algoritmi come generare il <xref:System.Web.UI.Control.ClientID%2A>valore della proprietà.</xref:System.Web.UI.Control.ClientID%2A> Selezionare l&quot;algoritmo da utilizzare per un controllo impostando la proprietà ClientIDMode. Gli algoritmi sono identificati dal <xref:System.Web.UI.ClientIDMode>valori di enumerazione elencati nella tabella seguente.</xref:System.Web.UI.ClientIDMode>      | Valore | Descrizione |   |-----------|-----------------|   | <xref:System.Web.UI.ClientIDMode>| Il <xref:System.Web.UI.Control.ClientID%2A>valore viene generato concatenando il <xref:System.Web.UI.Control.ID%2A>padre di valori di ogni contenitore di denominazione con la <xref:System.Web.UI.Control.ID%2A>valore del controllo.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> Negli scenari di associazione di dati in cui vengono sottoposti a rendering più istanze di un controllo, viene inserito un valore incrementale davanti del controllo <xref:System.Web.UI.Control.ID%2A>valore.</xref:System.Web.UI.Control.ID%2A> Ogni segmento è separato da un carattere di sottolineatura (_). Questo algoritmo è stato utilizzato nelle versioni di ASP.NET precedenti ad ASP.NET 4. |   | <xref:System.Web.UI.ClientIDMode>| Il <xref:System.Web.UI.Control.ClientID%2A>è impostato il valore di <xref:System.Web.UI.Control.ID%2A>proprietà.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> Se il controllo è un contenitore di denominazione, il controllo viene utilizzato come parte superiore della gerarchia di contenitori di denominazione per tutti i controlli in esso contenuti. |   | <xref:System.Web.UI.ClientIDMode>| Questo algoritmo viene utilizzato per i controlli che sono nei controlli con associazione a dati.</xref:System.Web.UI.ClientIDMode> Il <xref:System.Web.UI.Control.ClientID%2A>valore viene generato concatenando il <xref:System.Web.UI.Control.ClientID%2A>valore del contenitore di denominazione padre con il <xref:System.Web.UI.Control.ID%2A>valore del controllo.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.Control.ClientID%2A> Se il controllo è un controllo con associazione a dati che genera più righe, il valore del campo dati è specificato nella <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>proprietà viene aggiunta alla fine.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Per il <xref:System.Web.UI.WebControls.GridView>controllare, i dati di più campi possono essere specificati.</xref:System.Web.UI.WebControls.GridView> Se il <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>proprietà è vuota, viene aggiunto un numero sequenziale alla fine anziché un valore del campo dati.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Questo numero inizia da zero e viene incrementato di 1 per ogni riga. Ogni segmento è separato da un carattere di sottolineatura (_). |   | <xref:System.Web.UI.ClientIDMode>| Il controllo eredita l&quot;impostazione <xref:System.Web.UI.ClientIDMode>del controllo <xref:System.Web.UI.Control.NamingContainer%2A>. |       Il valore predefinito di ClientIDMode per una pagina è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.NamingContainer%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> Il valore predefinito di ClientIDMode per un controllo è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> Poiché per impostazione predefinita per i controlli <xref:System.Web.UI.ClientIDMode>, la modalità di generazione predefinita è <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> (Tuttavia, se si utilizza Visual Studio per convertire un progetto Web in ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il valore predefinito del sito <xref:System.Web.UI.ClientIDMode>nel file Web. config.)</xref:System.Web.UI.ClientIDMode>       Per ulteriori informazioni, vedere [identificazione del controllo Server Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows <xref:System.Web.UI.WebControls.Label> controls that are contained in a <xref:System.Web.UI.WebControls.ListView> control. On the <xref:System.Web.UI.WebControls.ListView> control, the ClientIDMode property is set to <xref:System.Web.UI.ClientIDMode> and the <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> property is set to `ProductID`. In the rendered HTML, this creates three `span` elements that correspond to three `ProductIDLabel` controls. When the page runs, the `id` attributes for the `span` elements are set to the following values:  \n  \n-   `ListView1_ProductIDLabel_1`  \n  \n-   `ListView1_ProductIDLabel_34`  \n  \n-   `ListView1_ProductIDLabel_43`  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }
    return:
      type: System.Web.UI.ClientIDMode
      description: "Un valore che indica come il <xref:System.Web.UI.Control.ClientID*>proprietà viene generata.</xref:System.Web.UI.Control.ClientID*> Il valore predefinito è <xref href=&quot;System.Web.UI.ClientIDMode&quot;> </xref>."
  overload: System.Web.UI.Control.ClientIDMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientIDSeparator
  id: ClientIDSeparator
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: System.Web.UI.Control.ClientIDSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore di carattere che rappresenta il separatore utilizzato nella <xref:System.Web.UI.Control.ClientID*>proprietà.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "Il <xref:System.Web.UI.Control.ClientID%2A>valore viene generato concatenando il <xref:System.Web.UI.Control.ID%2A>valore del controllo e <xref:System.Web.UI.Control.UniqueID%2A>valore del relativo controllo padre.</xref:System.Web.UI.Control.UniqueID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> Ogni parte dell&quot;oggetto generato <xref:System.Web.UI.Control.ID%2A>proprietà è separata dal valore della proprietà ClientIDSeparator.</xref:System.Web.UI.Control.ID%2A> Il valore restituisce sempre un carattere di sottolineatura (_)."
  syntax:
    content: protected char ClientIDSeparator { get; }
    return:
      type: System.Char
      description: "Restituisce sempre il carattere di sottolineatura (_)."
  overload: System.Web.UI.Control.ClientIDSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Context
  id: Context
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Context
  nameWithType: Control.Context
  fullName: System.Web.UI.Control.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto associato al controllo del server per la richiesta Web corrente."
  remarks: "Questa proprietà consente di accedere al <xref:System.Web.HttpContext>oggetto per la richiesta Web corrente.</xref:System.Web.HttpContext> L&quot;oggetto fornisce proprietà di cui il <xref:System.Web.HttpContext.Application%2A>, <xref:System.Web.HttpContext.Session%2A>, <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>e altri oggetti che contengono informazioni sulla richiesta HTTP corrente.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.HttpContext.Application%2A> Fornisce inoltre metodi che consentono di ottenere informazioni di configurazione e set o eliminare gli errori per la richiesta."
  example:
  - >-
    [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._15_1.vb)]
     [!code-cs[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/add/codesnippet/csharp/p-system.web.ui.control._15_1.cs)]
  syntax:
    content: protected virtual System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Specificato <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto associato alla richiesta corrente."
  overload: System.Web.UI.Control.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Controls
  id: Controls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Web.UI.Control.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> oggetto che rappresenta i controlli figlio per un controllo server specificato nella gerarchia dell&quot;interfaccia utente."
  remarks: "In una pagina ASP.NET, quando vengono aggiunti in modo dichiarativo tra i tag di apertura e chiusura di un controllo server ASP.NET aggiunge automaticamente i controlli per il contenitore del controllo server <xref:System.Web.UI.ControlCollection>.</xref:System.Web.UI.ControlCollection> Qualsiasi tag HTML o le stringhe di testo non vengono elaborate nel server vengono considerate <xref:System.Web.UI.LiteralControl>oggetti.</xref:System.Web.UI.LiteralControl> Questi vengono aggiunti alla raccolta come gli altri controlli server.       La proprietà di controlli consente l&quot;accesso programmatico all&quot;istanza del <xref:System.Web.UI.ControlCollection>classe per qualsiasi controllo server.</xref:System.Web.UI.ControlCollection> È possibile aggiungere controlli alla raccolta, rimuovere i controlli dalla raccolta o scorrere i controlli server nell&quot;insieme."
  example:
  - "The following example demonstrates how to add child controls to a server control's <xref:System.Web.UI.ControlCollection> object through its Controls property.  \n  \n [!code-cs[Classic Control.Controls Example#1](~/add/codesnippet/csharp/p-system.web.ui.control._3_1.cs)]\n [!code-vb[Classic Control.Controls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._3_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "Raccolta di controlli figlio per il controllo server specificato."
  overload: System.Web.UI.Control.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: System.Web.UI.Control.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chiamato dal framework della pagina ASP.NET per notificare ai controlli server che utilizzano l&quot;implementazione basata sulla composizione di creare controlli figlio di questo tipo che contengono preparazione per postback o il rendering."
  remarks: "Quando si sviluppa un controllo server composito o basato su modelli, è necessario eseguire l&quot;override di questo metodo. I controlli che eseguono l&quot;override del metodo CreateChildControls devono implementare il <xref:System.Web.UI.INamingContainer>interfaccia per evitare conflitti di denominazione.</xref:System.Web.UI.INamingContainer>       Per ulteriori informazioni, vedere [modelli di controlli Server Web](~/add/includes/ajax-current-ext-md.md) e [lo sviluppo di controlli Server ASP.NET personalizzati](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates an overridden version of the CreateChildControls method. In this implementation, the composite control displays a <xref:System.Web.UI.WebControls.TextBox> control enclosed in two literal controls that render HTML.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/add/codesnippet/csharp/m-system.web.ui.control._8_1.cs)]\n [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._8_1.vb)]"
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Control.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Control.CreateControlCollection()
  fullName: System.Web.UI.Control.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Crea un nuovo <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> oggetto per contenere i controlli figlio (valore letterale e server) del controllo server."
  remarks: "Eseguire l&quot;override di questo metodo in un controllo server personalizzato se è stato creato un oggetto raccolta che deriva dalla <xref:System.Web.UI.ControlCollection>classe.</xref:System.Web.UI.ControlCollection> È quindi possibile creare un&quot;istanza di tale classe di raccolta per eseguire l&quot;override di questo metodo."
  example:
  - "The following code example overrides the CreateControlCollection method to create an instance of a `CustomControlCollection` class, which inherits from the <xref:System.Web.UI.ControlCollection> class.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#2](~/add/codesnippet/csharp/m-system.web.ui.control._20_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._20_1.vb)]  \n  \n The following code example uses the CreateControlCollection method in a custom server control override of the <xref:System.Web.UI.Control.CreateChildControls%2A> method. The new collection is created, and then populated with two child controls, `firstControl` and `secondControl`.  \n  \n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._20_2.vb)]\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/m-system.web.ui.control._20_2.cs)]"
  syntax:
    content: protected virtual System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> oggetto che contiene i controlli server figlio del controllo server corrente."
  overload: System.Web.UI.Control.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBind
  id: DataBind
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: System.Web.UI.Control.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa un&quot;origine dati per il controllo server richiamato e tutti i controlli figlio."
  remarks: "Utilizzare questo metodo per associare i dati da un&quot;origine a un controllo server. Questo metodo è comunemente utilizzato dopo il recupero di un set di dati tramite una query sul database. La maggior parte dei controlli eseguono automaticamente, l&quot;associazione a dati che significa che in genere non occorre chiamare questo metodo in modo esplicito.       È in genere l&quot;override del metodo quando si crea un controllo con associazione a dati basati su modelli personalizzato. Per ulteriori informazioni, vedere [procedura: creare controlli utente ASP.NET basati su modelli](~/add/includes/ajax-current-ext-md.md) e [controlli Server Web di sviluppo personalizzato associato](~/add/includes/ajax-current-ext-md.md). Quando viene chiamato su un controllo server, questo metodo risolve tutte le espressioni di associazione di dati nel controllo del server e in tutti i relativi controlli figlio."
  example:
  - "The following example overrides the DataBind method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=fullName> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` and the control is instructed to track any changes to the view state of the newly created controls with the <xref:System.Web.UI.Control.TrackViewState%2A> method. This is a common technique when binding data to a control to ensure that new data does not conflict with data stored from a previous DataBind method call.  \n  \n [!code-cs[Control_StateManagement#6](~/add/codesnippet/csharp/m-system.web.ui.control._5_1.cs)]\n [!code-vb[Control_StateManagement#6](~/add/codesnippet/visualbasic/m-system.web.ui.control._5_1.vb)]"
  syntax:
    content: public virtual void DataBind ();
    parameters: []
  overload: System.Web.UI.Control.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  id: DataBind(System.Boolean)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: System.Web.UI.Control.DataBind(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa un&quot;origine dati per il controllo server richiamato e tutti i relativi controlli figlio con un&quot;opzione per generare il <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> evento."
  remarks: "Usare il metodo DataBind in uno scenario, quando si esegue l&quot;override del controllo personalizzato di <xref:System.Web.UI.Control.DataBind%2A>(metodo) e implementa il <xref:System.Web.UI.IDataItemContainer>interfaccia.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.Control.DataBind%2A> In questo scenario, il controllo personalizzato chiama il metodo DataBind con `raiseOnDataBinding` impostato su `false` per garantire che la classe base <xref:System.Web.UI.Control.DataBind%2A>metodo viene chiamato.</xref:System.Web.UI.Control.DataBind%2A>       Il <xref:System.Web.UI.Control.DataBind?displayProperty=fullName>metodo richiama il metodo DataBind con `raiseOnDataBinding` impostato su `true`.</xref:System.Web.UI.Control.DataBind?displayProperty=fullName>      > [!NOTE] > Chiamando il metodo DataBind con `raiseOnDataBinding` impostato su `false` imposta figlio controlli l&quot;associazione con dati la <xref:System.Web.UI.Control.DataBind?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.DataBind?displayProperty=fullName>"
  syntax:
    content: protected virtual void DataBind (bool raiseOnDataBinding);
    parameters:
    - id: raiseOnDataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> evento viene generato in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBindChildren
  id: DataBindChildren
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: System.Web.UI.Control.DataBindChildren()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa un&quot;origine dati ai controlli figlio del controllo server."
  remarks: "Utilizzare il metodo DataBindChildren per associare un&quot;origine dati ai controlli figlio di un controllo server.      > [!NOTE] > Quando viene chiamato su un controllo server, questo metodo non associare i dati al controllo. Per associare un controllo server e tutti i controlli figlio, chiamare il <xref:System.Web.UI.Control.DataBind%2A>metodo.</xref:System.Web.UI.Control.DataBind%2A>"
  syntax:
    content: protected virtual void DataBindChildren ();
    parameters: []
  overload: System.Web.UI.Control.DataBindChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBinding
  id: DataBinding
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: System.Web.UI.Control.DataBinding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando il controllo server viene associato a un&quot;origine dati."
  remarks: "Questo evento di notifica per eseguire qualsiasi logica di associazione di dati che è stata scritta per il controllo del server."
  example:
  - >-
    [!code-vb[ITemplate_Interface#1](~/add/codesnippet/visualbasic/e-system.web.ui.control._0_1.vb)]
     [!code-cs[ITemplate_Interface#1](~/add/codesnippet/csharp/e-system.web.ui.control._0_1.cs)]
  syntax:
    content: public event EventHandler DataBinding;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataItemContainer
  id: DataItemContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: System.Web.UI.Control.DataItemContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento al contenitore di denominazione, se il contenitore di denominazione implementa <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>."
  syntax:
    content: public System.Web.UI.Control DataItemContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "Il contenitore di denominazione. In una gerarchia di denominazione dei contenitori che implementano <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>, questa proprietà restituisce il contenitore di denominazione nella parte superiore della gerarchia, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se corrente <xref href=&quot;System.Web.UI.Control&quot;> </xref> oggetto non è un contenitore di denominazione che implementa <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>."
  overload: System.Web.UI.Control.DataItemContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataKeysContainer
  id: DataKeysContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: System.Web.UI.Control.DataKeysContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento al contenitore di denominazione, se il contenitore di denominazione implementa <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>."
  syntax:
    content: public System.Web.UI.Control DataKeysContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "Il contenitore di denominazione. In una gerarchia di denominazione dei contenitori che implementano <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>, la proprietà restituisce il contenitore di denominazione nella parte superiore della gerarchia, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se corrente <xref href=&quot;System.Web.UI.Control&quot;> </xref> oggetto non è un contenitore di denominazione che implementa <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>."
  overload: System.Web.UI.Control.DataKeysContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DesignMode
  id: DesignMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: System.Web.UI.Control.DesignMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se un controllo viene utilizzato in un&quot;area di progettazione."
  remarks: "La proprietà restituisce DesignMode `true` per indicare che il controllo viene usato nel contesto di una finestra di progettazione. I controlli personalizzati è possono utilizzare questa proprietà quando il comportamento in fase di progettazione è diverso dal comportamento in fase di esecuzione."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo viene utilizzato in una finestra di progettazione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Dispose
  id: Dispose
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: System.Web.UI.Control.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Consente a un controllo server eseguire finale di pulizia prima che venga rilasciato dalla memoria."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Il metodo Dispose lascia il <xref:System.Web.UI.Control>in uno stato inutilizzabile.</xref:System.Web.UI.Control> Dopo aver chiamato questo metodo, è necessario rilasciare tutti i riferimenti al controllo in modo che la memoria occupata può essere recuperata tramite garbage collection."
  example:
  - "The following code example overrides the Dispose method to close the <xref:System.Web.UI.HtmlTextWriter> object associated with a control, and call the Dispose method on a <xref:System.Web.UI.WebControls.Button> control, named `myButton`. If an <xref:System.Exception> is thrown when this version of the Dispose method is called, the control writes a message to the current <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Control_Dispose#1](~/add/codesnippet/csharp/m-system.web.ui.control._2_1.cs)]\n [!code-vb[Control_Dispose#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._2_1.vb)]"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Web.UI.Control.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Disposed
  id: Disposed
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Disposed
  nameWithType: Control.Disposed
  fullName: System.Web.UI.Control.Disposed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando un controllo server viene rilasciato dalla memoria, che è l&quot;ultima fase del ciclo di vita di controllo server quando viene richiesta una pagina ASP.NET."
  remarks: "Risorse che richiedono un tempo del processore, ad esempio le connessioni di database, devono essere rilasciate con questo evento."
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Control.EnableTheming
  fullName: System.Web.UI.Control.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un valore che indica se i temi si applicano a questo controllo."
  remarks: "La proprietà EnableTheming indica se i temi sono abilitati per un controllo specificato. Quando la proprietà EnableTheming è `true`, directory dei temi dell&quot;applicazione viene eseguita la ricerca per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, le interfacce non sono applicate.       Quando la proprietà EnableTheming è `false`, la directory di tema non viene eseguita la ricerca e il contenuto del <xref:System.Web.UI.Control.SkinID%2A>proprietà non viene utilizzata.</xref:System.Web.UI.Control.SkinID%2A>       Temi possono essere abilitati a livello di pagina, contenitore o controllo. Un controllo è possibile eseguire l&quot;override del valore EnableTheming impostato dal relativo controllo padre, o dalla pagina contenitore."
  syntax:
    content: public virtual bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare i temi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.EnableTheming*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_Page_PreInit\" name=\"Page_PreInit\" href=\"\"></xref> event has already occurred.  \n  \n \\- or -  \n  \n The control has already been added to the <xref uid=\"langword_csharp_Controls\" name=\"Controls\" href=\"\"></xref> collection."
  platform:
  - net462
- uid: System.Web.UI.Control.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: System.Web.UI.Control.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un valore che indica se il controllo server mantiene lo stato di visualizzazione e lo stato di visualizzazione degli eventuali controlli figlio in esso contenuti per il client richiedente."
  remarks: "Lo stato di visualizzazione consente un controllo server mantiene lo stato tra le richieste HTTP. Lo stato di visualizzazione per un controllo è abilitato se vengono soddisfatte tutte le condizioni seguenti:-EnableViewState la proprietà per la pagina è impostata su `true`.      -La proprietà EnableViewState per il controllo è impostata su `true`.      -La <xref:System.Web.UI.Control.ViewStateMode%2A>per il controllo è impostata su <xref:System.Web.UI.ViewStateMode>o eredita il <xref:System.Web.UI.ViewStateMode>impostazione.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.ViewStateMode%2A>       Per ulteriori informazioni, vedere il <xref:System.Web.UI.Control.ViewStateMode%2A>proprietà.</xref:System.Web.UI.Control.ViewStateMode%2A>       Lo stato di visualizzazione di un controllo server è costituito da tutti i valori delle proprietà. Per conservare questi valori in tutte le richieste HTTP, ASP.NET utilizza un&quot;istanza di <xref:System.Web.UI.StateBag>classe per archiviare i valori delle proprietà.</xref:System.Web.UI.StateBag> I valori vengono quindi passati come una variabile a un campo nascosto quando vengono elaborate le richieste successive. Per ulteriori informazioni sullo stato di visualizzazione, vedere [panoramica dello stato di visualizzazione ASP.NET](~/add/includes/ajax-current-ext-md.md).       Esistono casi in cui è opportuno disabilitare lo stato di visualizzazione, in particolare per migliorare le prestazioni dell&quot;applicazione. Ad esempio, se si sta caricando una richiesta di database in un controllo server, impostare questa proprietà su `false`. In caso contrario, il tempo del processore sarà sarebbero sprecato caricare lo stato di visualizzazione nel controllo server che verrà sostituito solo da una query sul database. Se è EnableViewState `false`, è possibile utilizzare lo stato di controllo per mantenere le informazioni specifiche di un controllo e non possono essere disattivate come la proprietà di stato di visualizzazione. Per ulteriori informazioni sulla differenza tra lo stato del controllo e lo stato di visualizzazione, vedere [vs lo stato del controllo. Stato di visualizzazione](~/add/includes/ajax-current-ext-md.md).       Per informazioni su come abilitare o disabilitare lo stato di visualizzazione in modo dichiarativo di una pagina ASP.NET, vedere."
  example:
  - "The following example sets the EnableViewState property to `false`.  \n  \n [!code-vb[Control_StateManagement#7](~/add/codesnippet/visualbasic/p-system.web.ui.control._13_1.aspx)]\n [!code-cs[Control_StateManagement#7](~/add/codesnippet/csharp/p-system.web.ui.control._13_1.aspx)]"
  syntax:
    content: public virtual bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo server mantiene lo stato di visualizzazione; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  id: EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EndRenderTracing(TextWriter,Object)
  nameWithType: Control.EndRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.EndRenderTracing(TextWriter,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Termina l&quot;analisi in fase di progettazione dei dati per il rendering."
  syntax:
    content: protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Oggetto che scrive i dati."
    - id: traceObject
      type: System.Object
      description: "L&quot;oggetto trace."
  overload: System.Web.UI.Control.EndRenderTracing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnsureChildControls
  id: EnsureChildControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: System.Web.UI.Control.EnsureChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se il controllo del server contiene i controlli figlio. In caso contrario, crea dei controlli figlio."
  remarks: "Questo metodo controlla innanzitutto il valore corrente di <xref:System.Web.UI.Control.ChildControlsCreated%2A>proprietà.</xref:System.Web.UI.Control.ChildControlsCreated%2A> Se questo valore è `false`, <xref:System.Web.UI.Control.CreateChildControls%2A>metodo viene chiamato.</xref:System.Web.UI.Control.CreateChildControls%2A>       Il metodo EnsureChildControls viene in genere utilizzato nei controlli compositi, vale a dire controlli che utilizzano i controlli figlio per alcune o tutte le relative funzionalità. Il metodo EnsureChildControls viene chiamato per verificare che i controlli figlio sono stati creati e sono pronti a elaborare l&quot;input, per eseguire l&quot;associazione di dati o eseguire altre attività.       Il <xref:System.Web.UI.WebControls.GridView>controllo è un esempio di un controllo composito.</xref:System.Web.UI.WebControls.GridView> Crea dei controlli figlio, ad esempio <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell>, <xref:System.Web.UI.WebControls.Label>, e <xref:System.Web.UI.WebControls.TextBox>tabella controlli, vengono utilizzati per eseguire il rendering HTML di <xref:System.Web.UI.WebControls.GridView>Genera l&quot;errore.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.Table>       Nella maggior parte dei casi, gli sviluppatori di controllo di server personalizzati insufficienti eseguire l&quot;override di questo metodo. Se si esegue l&quot;override di questo metodo, è possibile utilizzarlo in modo simile al comportamento predefinito."
  example:
  - "The following example uses the EnsureChildControls method to ensure that the current server control has child controls. It then gets or sets a <xref:System.Web.UI.WebControls.TextBox.Text%2A> property for a child <xref:System.Web.UI.WebControls.TextBox> Web control in the current server control's <xref:System.Web.UI.ControlCollection> object.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/add/codesnippet/csharp/m-system.web.ui.control._26_1.cs)]\n [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._26_1.vb)]"
  syntax:
    content: protected virtual void EnsureChildControls ();
    parameters: []
  overload: System.Web.UI.Control.EnsureChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnsureID
  id: EnsureID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: System.Web.UI.Control.EnsureID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Crea un identificatore per i controlli che non dispongono di un identificatore assegnato."
  remarks: "Il metodo EnsureID genera un identificatore per i controlli contenuti in un altro controllo. Gli identificatori vengono generati solo per i controlli che non sono assegnato un valore di <xref:System.Web.UI.Control.ID%2A>proprietà.</xref:System.Web.UI.Control.ID%2A>"
  syntax:
    content: protected void EnsureID ();
    parameters: []
  overload: System.Web.UI.Control.EnsureID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Events
  id: Events
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Events
  nameWithType: Control.Events
  fullName: System.Web.UI.Control.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco di delegati del gestore eventi per il controllo. Questa proprietà è di sola lettura."
  remarks: "Questa proprietà è di tipo <xref:System.ComponentModel.EventHandlerList>, che utilizza un algoritmo di ricerca lineare per trovare le voci dell&quot;elenco di delegati.</xref:System.ComponentModel.EventHandlerList> Algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci. Pertanto, quando si dispone di un elenco di grandi dimensioni, la ricerca di voci con questa proprietà sarà lente."
  example:
  - "The following example creates an event, named `Click`, that adds and removes handlers from the control's <xref:System.ComponentModel.EventHandlerList> collection when the event is called from a page.  \n  \n **Note** This example optimizes how a control adds and removes events from the list of them that the control maintains. If you create custom control and want to define an event, use code similar to this. This technique can be used in C#, but not in Visual Basic.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/add/codesnippet/csharp/p-system.web.ui.control._9_1.cs)]"
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "Elenco di delegati del gestore eventi."
  overload: System.Web.UI.Control.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: System.Web.UI.Control.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cerca nel contenitore di denominazione corrente per un controllo server con l&quot;oggetto specificato <code> id </code> parametro."
  remarks: 'Utilizzare FindControl per un controllo di accesso da una funzione in una pagina code-behind, per accedere a un controllo che si trova all&quot;interno di un altro contenitore o in altre circostanze in cui il controllo di destinazione non è direttamente accessibile al chiamante. Questo metodo troverà un controllo solo se il controllo è contenuto direttamente dal contenitore specificato. ovvero, il metodo non esegue la ricerca in tutta la gerarchia dei controlli all&quot;interno dei controlli. Per informazioni su come trovare un controllo quando non si conosce il contenitore immediato, vedere [come: i controlli Server di accesso dall&quot;ID](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example defines a `Button1_Click` event handler. When invoked, this handler uses the <xref:System.Web.UI.Control.FindControl%2A> method to locate a control with an <xref:System.Web.UI.Control.ID%2A> property of `TextBox2` on the containing page. If the control is found, its parent is determined using the <xref:System.Web.UI.Control.Parent%2A> property and the parent control's <xref:System.Web.UI.Control.ID%2A> is written to the page. If `TextBox2` is not found, \"Control Not Found\" is written to the page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.control._6_1.aspx)]\n [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._6_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "L&quot;identificatore per il controllo da trovare."
    return:
      type: System.Web.UI.Control
      description: "Il controllo specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il controllo specificato non esiste."
  overload: System.Web.UI.Control.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  id: FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: FindControl(String,Int32)
  nameWithType: Control.FindControl(String,Int32)
  fullName: System.Web.UI.Control.FindControl(String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cerca nel contenitore di denominazione corrente per un controllo server con l&quot;oggetto specificato <code> id </code> e un numero intero, incluso il <code> pathOffset </code> parametro, che facilita la ricerca. Eseguire l&quot;override di questa versione di <xref:System.Web.UI.Control.FindControl*>metodo.</xref:System.Web.UI.Control.FindControl*>"
  syntax:
    content: protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);
    parameters:
    - id: id
      type: System.String
      description: "L&quot;identificatore per il controllo da trovare."
    - id: pathOffset
      type: System.Int32
      description: "Il numero di controlli superiore nella gerarchia di controllo pagina necessario per raggiungere un contenitore di denominazione."
    return:
      type: System.Web.UI.Control
      description: "Il controllo specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il controllo specificato non esiste."
  overload: System.Web.UI.Control.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Focus
  id: Focus
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Web.UI.Control.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Imposta lo stato attivo a un controllo di input."
  remarks: "Utilizzare il metodo lo stato attivo per impostare lo stato attivo iniziale della pagina Web al controllo. Verrà aperta la pagina nel browser con il controllo selezionato.       Il metodo lo stato attivo determina una chiamata allo script lo stato attivo della pagina da generare sulla pagina sottoposta a rendering. Se la pagina non contiene un controllo con un elemento HTML `ID` attributo che corrisponde al controllo che è stato richiamato il metodo lo stato attivo, quindi non imposterà lo stato attivo alla pagina. Un esempio in cui questa situazione può verificarsi è quando si imposta lo stato attivo su un controllo utente anziché impostare lo stato attivo in un controllo figlio del controllo utente. In questo scenario, è possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>per trovare il controllo figlio del controllo utente e richiamare il metodo lo stato attivo.</xref:System.Web.UI.Control.FindControl%2A>"
  syntax:
    content: public virtual void Focus ();
    parameters: []
  overload: System.Web.UI.Control.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: System.Web.UI.Control.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene i dati in fase di progettazione per un controllo."
  remarks: "Il metodo GetDesignModeState restituisce dati in fase di progettazione per un controllo."
  syntax:
    content: protected virtual System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>contenente i dati in fase di progettazione per il controllo.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  id: GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: System.Web.UI.Control.GetRouteUrl(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;URL che corrisponde a un set di parametri di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName> Questo metodo converte l&quot;oggetto è passato in `routeParameters` per un <xref:System.Web.Routing.RouteValueDictionary>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary>"
  example:
  - "The following example shows how to call the GetRouteUrl method to get the URL of a route that has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public string GetRouteUrl (object routeParameters);
    parameters:
    - id: routeParameters
      type: System.Object
      description: "I parametri di route."
    return:
      type: System.String
      description: "L&quot;URL che corrisponde ai parametri di route specificati."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  id: GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;URL che corrisponde a un set di parametri di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>"
  example:
  - "The following example shows how to call this method to get the URL of a route that has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);
    parameters:
    - id: routeParameters
      type: System.Web.Routing.RouteValueDictionary
      description: "I parametri di route."
    return:
      type: System.String
      description: "L&quot;URL che corrisponde ai parametri di route specificati."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  id: GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(String,Object)
  nameWithType: Control.GetRouteUrl(String,Object)
  fullName: System.Web.UI.Control.GetRouteUrl(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;URL che corrisponde a un set di parametri di route e un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName> Questo metodo converte l&quot;oggetto è passato in `routeParameters` per un <xref:System.Web.Routing.RouteValueDictionary>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary>"
  example:
  - "The following example shows how to call this method to get the URL of a route that is named `Product` and has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public string GetRouteUrl (string routeName, object routeParameters);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeParameters
      type: System.Object
      description: "I parametri di route."
    return:
      type: System.String
      description: "L&quot;URL che corrisponde al nome della route e i parametri di route specificato."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  id: GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(String,RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String,RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;URL che corrisponde a un set di parametri di route e un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>"
  example:
  - "The following example shows how to call this method to get the URL of a route that is named `Product` and has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeParameters
      type: System.Web.Routing.RouteValueDictionary
      description: "I parametri di route."
    return:
      type: System.String
      description: "L&quot;URL che corrisponde al nome della route e i parametri di route specificato."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  id: GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: System.Web.UI.Control.GetUniqueIDRelativeTo(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce la parte del prefissata di <xref:System.Web.UI.Control.UniqueID*>proprietà del controllo specificato.</xref:System.Web.UI.Control.UniqueID*>"
  remarks: "Il <xref:System.Web.UI.Control.UniqueID%2A>proprietà di un controllo viene generato mediante l&quot;aggiunta di un prefisso per il controllo <xref:System.Web.UI.Control.ID%2A>proprietà.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.UniqueID%2A> Il prefisso è costituito il <xref:System.Web.UI.Control.UniqueID%2A>proprietà del controllo contenitore concatenato con un carattere separatore di denominazione.</xref:System.Web.UI.Control.UniqueID%2A> Se il contenitore di denominazione è la pagina, non è presente alcun prefisso. Questo metodo restituisce la stringa di prefisso. Se viene individuata alcuna stringa di prefisso, viene restituito il <xref:System.Web.UI.Control.UniqueID%2A>valore del controllo.</xref:System.Web.UI.Control.UniqueID%2A>"
  syntax:
    content: public string GetUniqueIDRelativeTo (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Un controllo che si trova all&quot;interno di un contenitore di denominazione."
    return:
      type: System.String
      description: "La parte del prefissata di <xref:System.Web.UI.Control.UniqueID*>proprietà del controllo specificato.</xref:System.Web.UI.Control.UniqueID*>"
  overload: System.Web.UI.Control.GetUniqueIDRelativeTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.Control.NamingContainer*> property of <code>control</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.Control.NamingContainer*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.HasChildViewState
  id: HasChildViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: System.Web.UI.Control.HasChildViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se i controlli figlio del controllo server corrente sono impostazioni dello stato di visualizzazione salvate."
  remarks: "È possibile evitare le chiamate per il <xref:System.Web.UI.Control.ClearChildViewState%2A>metodo utilizzando questa proprietà per verificare che tutti i controlli figlio del controllo server archiviano informazioni sullo stato di visualizzazione.</xref:System.Web.UI.Control.ClearChildViewState%2A>"
  example:
  - >-
    [!code-cs[Control_StateManagement#5](~/add/codesnippet/csharp/p-system.web.ui.control._0_1.cs)]
     [!code-vb[Control_StateManagement#5](~/add/codesnippet/visualbasic/p-system.web.ui.control._0_1.vb)]
  syntax:
    content: protected bool HasChildViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti i controlli figlio sono salvate le informazioni sullo stato di visualizzazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasChildViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.HasControls
  id: HasControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: System.Web.UI.Control.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se il controllo del server contiene tutti i controlli figlio."
  remarks: "Poiché questo metodo si limita a determinare se esistono eventuali controlli figlio, può migliorare le prestazioni, consentendo di evitare superflua <xref:System.Web.UI.ControlCollection.Count%2A>chiamata alla proprietà.</xref:System.Web.UI.ControlCollection.Count%2A> Le chiamate a questa proprietà richiedono un <xref:System.Web.UI.ControlCollection>oggetto deve essere creata un&quot;istanza.</xref:System.Web.UI.ControlCollection> Se non sono presenti figli, la creazione dell&quot;oggetto comporta uno spreco di risorse del server."
  example:
  - "The following example uses the HasControls method to determine if any controls exist before using the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a <xref:System.Web.UI.ControlCollection> object.  \n  \n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._16_1.vb)]\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/m-system.web.ui.control._16_1.cs)]"
  syntax:
    content: public virtual bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo contiene altri controlli. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.HasEvents
  id: HasEvents
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: System.Web.UI.Control.HasEvents()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce un valore che indica se gli eventi vengono registrati per il controllo o eventuali controlli figlio."
  syntax:
    content: protected bool HasEvents ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vengono registrati eventi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ID
  id: ID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ID
  nameWithType: Control.ID
  fullName: System.Web.UI.Control.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta l&quot;identificatore a livello di codice assegnato al controllo server."
  remarks: "Impostazione di questa proprietà su un controllo server fornisce l&quot;accesso a livello di codice alle proprietà, eventi e metodi del controllo server. Questa proprietà può essere impostata dagli sviluppatori Web dichiarando un attributo ID nel tag di apertura di un controllo server ASP.NET.       Se questa proprietà non è specificata per un controllo server, in modo dichiarativo o a livello di codice, è possibile ottenere un riferimento al controllo e del relativo controllo padre <xref:System.Web.UI.Control.Controls%2A>proprietà.</xref:System.Web.UI.Control.Controls%2A>      > [!NOTE] > Solo le combinazioni di caratteri alfanumerici e il carattere di sottolineatura (_) sono i valori validi per questa proprietà. Inserimento di spazi o altri caratteri non validi causerà un errore del parser pagina ASP.NET."
  example:
  - >-
    [!code-cs[Control_Sample#2](~/add/codesnippet/csharp/p-system.web.ui.control.id_1.aspx)]
     [!code-vb[Control_Sample#2](~/add/codesnippet/visualbasic/p-system.web.ui.control.id_1.aspx)]
  syntax:
    content: public virtual string ID { get; set; }
    return:
      type: System.String
      description: "Identificatore programmatico assegnato al controllo."
  overload: System.Web.UI.Control.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: System.Web.UI.Control.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il carattere usato per separare gli identificatori di controllo."
  remarks: "Il carattere contenuto nella proprietà IdSeparator viene utilizzato per separare gli identificatori di controllo per i controlli figlio. Il carattere separatore di ID viene aggiunto per il <xref:System.Web.UI.Control.ID%2A>proprietà.</xref:System.Web.UI.Control.ID%2A>"
  syntax:
    content: protected char IdSeparator { get; }
    return:
      type: System.Char
      description: "Il carattere separatore. Il valore predefinito è &quot;$&quot;."
  overload: System.Web.UI.Control.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Init
  id: Init
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Init
  nameWithType: Control.Init
  fullName: System.Web.UI.Control.Init
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando viene inizializzato il controllo del server, ovvero il primo passaggio nel ciclo di vita."
  remarks: "Controlli server devono eseguire le operazioni di inizializzazione necessari per creare e configurare un&quot;istanza. Non è possibile utilizzare le informazioni sullo stato di visualizzazione all&quot;interno di questo evento. non si è ancora popolato. Non è necessario accedere un altro controllo server durante questo evento, che si tratti di un controllo figlio o padre di questo controllo. Altri controlli server non siano creati e pronto per l&quot;accesso. Per ulteriori informazioni sugli eventi di controllo server, vedere [del modello di eventi controllo ASP.NET Web Forms Server](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example assigns a custom event handler, `Calendar_Init`, to the `Init` event of a <xref:System.Web.UI.WebControls.Calendar> control.  \n  \n [!code-cs[Control_Sample#4](~/add/codesnippet/csharp/e-system.web.ui.control._2_1.aspx)]\n [!code-vb[Control_Sample#4](~/add/codesnippet/visualbasic/e-system.web.ui.control._2_1.aspx)]"
  syntax:
    content: public event EventHandler Init;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsChildControlStateCleared
  id: IsChildControlStateCleared
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: System.Web.UI.Control.IsChildControlStateCleared
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se i controlli contenuti in questo controllo lo stato del controllo."
  syntax:
    content: protected bool IsChildControlStateCleared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli elementi figlio di questo controllo non utilizzano lo stato del controllo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsChildControlStateCleared*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsLiteralContent
  id: IsLiteralContent
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: System.Web.UI.Control.IsLiteralContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se il controllo del server contiene solo il contenuto literal."
  remarks: "Quando questo metodo restituisce `true`, la raccolta del controllo server conserva un singolo controllo."
  example:
  - "The following example checks whether the page that contains the server controls has posted back. If it has, it calls the IsLiteralContent method to determine whether the control contains just literal content, or is a parent control to other server controls. If it contains solely literal content, the <xref:System.Web.UI.Control.UniqueID%2A> property of the <xref:System.Web.UI.LiteralControl> that represents that content is written to the response.  \n  \n [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._19_1.vb)]\n [!code-cs[System.Web.UI.Control_ViewStateIgnoresCase#1](~/add/codesnippet/csharp/m-system.web.ui.control._19_1.cs)]"
  syntax:
    content: protected bool IsLiteralContent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo del server contiene solo il contenuto literal; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsLiteralContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: System.Web.UI.Control.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il controllo server Salva le modifiche apportate allo stato di visualizzazione."
  remarks: "Per un esempio di controllo server personalizzato che utilizza questa proprietà, vedere [esempio basato su modelli di controllo Server](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.DataBind%2A> method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the `ControlCollection` object. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=fullName> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true`. The control then uses the IsTrackingViewState property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the <xref:System.Web.UI.Control.TrackViewState%2A> method is called.  \n  \n [!code-cs[Control_StateManagement#4](~/add/codesnippet/csharp/p-system.web.ui.control._1_1.cs)]\n [!code-vb[Control_StateManagement#4](~/add/codesnippet/visualbasic/p-system.web.ui.control._1_1.vb)]"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo è contrassegnato per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsViewStateEnabled
  id: IsViewStateEnabled
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: System.Web.UI.Control.IsViewStateEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se lo stato di visualizzazione è abilitato per questo controllo."
  remarks: "Lo stato di visualizzazione può essere abilitato a livello di pagina, contenitore o controllo. Quando lo stato di visualizzazione è disabilitato a livello di pagina o del contenitore, lo stato di visualizzazione è disabilitato per tutti i controlli contenuti nella pagina o il contenitore. La proprietà IsViewStateEnabled indica se lo stato di visualizzazione è abilitato per le pagine, contenitori o controlli.       È possibile che il <xref:System.Web.UI.Control.EnableViewState%2A>IsViewStateEnabled proprietà e può essere diverso.</xref:System.Web.UI.Control.EnableViewState%2A> Ad esempio, se il <xref:System.Web.UI.Page>che contiene il controllo ha lo stato di visualizzazione è disabilitato, il <xref:System.Web.UI.Control.EnableViewState%2A>proprietà può essere `true` mentre la proprietà IsViewStateEnabled `false`.</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected bool IsViewStateEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se lo stato di visualizzazione è abilitato per il controllo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsViewStateEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Load
  id: Load
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Load
  nameWithType: Control.Load
  fullName: System.Web.UI.Control.Load
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando il controllo server viene caricato la <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto."
  remarks: "Notifica al controllo del server di eseguire le operazioni di elaborazione che vengono impostate per ogni richiesta di pagina. È possibile accedere a informazioni sullo stato di visualizzazione e Web form dati inviati da questo evento. È possibile accedere anche altri controlli server nella gerarchia dei controlli della pagina.      > [!NOTE] > Se si imposta un modello personalizzato in un controllo durante la `Page_Load` eventi, i valori di testo dei controlli figlio nel modello personalizzato andranno persi. Questo errore si verifica perché i valori del form sono già stati caricati."
  example:
  - >-
    [!code-cs[System.Web.UI.Control_Load#2](~/add/codesnippet/csharp/e-system.web.ui.control._1_1.cs)]
     [!code-vb[System.Web.UI.Control_Load#2](~/add/codesnippet/visualbasic/e-system.web.ui.control._1_1.vb)]
  syntax:
    content: public event EventHandler Load;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: Control.LoadControlState(Object)
  fullName: System.Web.UI.Control.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ripristina le informazioni sullo stato del controllo da una richiesta di pagina precedente salvata dal <xref:System.Web.UI.Control.SaveControlState*>metodo.</xref:System.Web.UI.Control.SaveControlState*>"
  remarks: "Eseguire l&quot;override di questo metodo quando è necessario specificare come un controllo server personalizzato ripristina lo stato di controllo. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example overrides the LoadControlState method in a custom ASP.NET control. When this method is invoked, it determines whether control state was previously saved for the control and, if so, sets the internal property `currentIndex` to the saved value.  \n  \n The <xref:System.Web.UI.Control.OnInit%2A> method is overridden to call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on the <xref:System.Web.UI.Control.Page%2A> to indicate that the custom control uses control state.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._23_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.control._23_1.aspx)]"
  syntax:
    content: protected virtual void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta lo stato del controllo da ripristinare.</xref:System.Object>"
  overload: System.Web.UI.Control.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: Control.LoadViewState(Object)
  fullName: System.Web.UI.Control.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ripristina le informazioni sullo stato di visualizzazione da una richiesta di pagina precedente salvata dal <xref:System.Web.UI.Control.SaveViewState*>metodo.</xref:System.Web.UI.Control.SaveViewState*>"
  remarks: "Questo metodo viene utilizzato principalmente dall&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Tuttavia, gli sviluppatori di controlli possono eseguire l&quot;override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example overrides the LoadViewState method for a custom ASP.NET server control. It creates an <xref:System.Object> array to contain the view state information passed in the `savedState` parameter, and then calls the base implementation of the LoadViewState method for the first index location of the array. It assigns the values stored at the next two index locations to variables named `UserText` and `PasswordText`, respectively.  \n  \n [!code-cs[Control_StateManagement#1](~/add/codesnippet/csharp/m-system.web.ui.control._4_1.cs)]\n [!code-vb[Control_StateManagement#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._4_1.vb)]"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta lo stato del controllo da ripristinare.</xref:System.Object>"
  overload: System.Web.UI.Control.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadViewStateByID
  id: LoadViewStateByID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: System.Web.UI.Control.LoadViewStateByID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il controllo viene inclusa nel caricamento del proprio stato di visualizzazione da <xref:System.Web.UI.Control.ID*>invece di indice.</xref:System.Web.UI.Control.ID*>"
  remarks: "Per impostazione predefinita, quando un controllo padre carica lo stato di visualizzazione nei controlli figlio creati, questo avviene la posizione di ogni controllo figlio del controllo padre <xref:System.Web.UI.Control.Controls%2A>insieme.</xref:System.Web.UI.Control.Controls%2A> Quando lo stato di visualizzazione viene inizialmente applicato, è possibile che tutti i controlli figlio non sono stati creati. In questo caso, lo stato di visualizzazione per i controlli non ancora creati viene salvato e applicato quando i controlli figlio vengono creati in un secondo momento.       Per un controllo padre applicare lo stato di visualizzazione per i controlli figlio, è necessario soddisfare due condizioni:-durante il postback, il controllo padre deve creare i controlli figlio nello stesso ordine della richiesta precedente in modo che l&quot;ordine dei controlli di coerenza.      -Dopo il postback, i controlli figlio creati devono essere aggiunti alla fine della finestra del controllo padre <xref:System.Web.UI.Control.Controls%2A>insieme.</xref:System.Web.UI.Control.Controls%2A>       Se queste due condizioni non vengono soddisfatte, come nel caso di creazione ritardata di un controllo figlio, il controllo padre può caricare lo stato di visualizzazione tramite <xref:System.Web.UI.Control.ID%2A>.</xref:System.Web.UI.Control.ID%2A> Per impostare la proprietà LoadViewStateByID `true`, utilizzare il <xref:System.Web.UI.ViewStateModeByIdAttribute>attributo dei metadati per il controllo padre.</xref:System.Web.UI.ViewStateModeByIdAttribute>"
  syntax:
    content: protected bool LoadViewStateByID { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo carica lo stato di visualizzazione da <xref:System.Web.UI.Control.ID*>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.ID*> Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.LoadViewStateByID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  id: MapPathSecure(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: System.Web.UI.Control.MapPathSecure(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera il percorso fisico che esegue il mapping a un percorso virtuale, assoluto o relativo."
  remarks: "Questo metodo può essere utilizzato solo dai controlli server che dispone delle autorizzazioni per leggere i file e che fanno parte del file DLL completamente attendibili, ad esempio System.Web.dll. Ciò aiuta a evitare violazioni della sicurezza."
  example:
  - "The following example uses the MapPathSecure method to obtain the physical path of a virtual directory of the containing <xref:System.Web.UI.Page> or <xref:System.Web.UI.UserControl> object.  \n  \n [!code-cs[Control_MapPathSecure#1](~/add/codesnippet/csharp/m-system.web.ui.control._1_1.cs)]\n [!code-vb[Control_MapPathSecure#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._1_1.vb)]"
  syntax:
    content: protected string MapPathSecure (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Un valore relativo o il relativo URL radice."
    return:
      type: System.String
      description: "Il percorso fisico del file richiesto."
  overload: System.Web.UI.Control.MapPathSecure*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Control.NamingContainer
  id: NamingContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: System.Web.UI.Control.NamingContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento al controllo del server dei nomi del contenitore, che crea uno spazio dei nomi univoco per distinguere tra i controlli server con lo stesso &lt;xref:System.Web.UI.Control.ID%2A?displayProperty=fullName&gt; valore della proprietà."
  remarks: "Ogni pagina in un&quot;applicazione Web ASP.NET contiene una gerarchia dei controlli. Questa gerarchia non è dipendente da un controllo che genera l&quot;errore dell&quot;interfaccia utente visibile all&quot;utente. Il contenitore di denominazione per un determinato controllo rappresenta il controllo padre nella gerarchia che implementa il <xref:System.Web.UI.INamingContainer>interfaccia.</xref:System.Web.UI.INamingContainer> Un controllo server che implementa questa interfaccia consente di creare uno spazio dei nomi univoco per il <xref:System.Web.UI.Control.ID%2A>i valori delle proprietà dei controlli server figlio.</xref:System.Web.UI.Control.ID%2A> È possibile utilizzare la proprietà NamingContainer del controllo figlio di un contenitore di denominazione per ottenere un riferimento al contenitore padre.       Creazione di uno spazio dei nomi univoco per i controlli server è particolarmente importante quando si associano i controlli server Web ai dati, ad esempio il <xref:System.Web.UI.WebControls.Repeater>e <xref:System.Web.UI.WebControls.DataList>i controlli server.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Quando più voci nell&quot;origine dati creano più istanze di un controllo server che è un elemento figlio del controllo ripetuto, il contenitore di denominazione garantisce che ogni istanza dei controlli figlio dispone <xref:System.Web.UI.Control.UniqueID%2A>i valori delle proprietà che non siano in conflitto.</xref:System.Web.UI.Control.UniqueID%2A> Il contenitore di denominazione predefinito per una pagina è l&quot;istanza del <xref:System.Web.UI.Page>classe che viene generato quando la pagina viene richiesta.</xref:System.Web.UI.Page>       Il <xref:System.Web.UI.Control.ClientID%2A>proprietà contiene il valore che viene eseguito il rendering dell&quot;elemento `id` attributo nel markup HTML.</xref:System.Web.UI.Control.ClientID%2A> A seconda del valore assegnato al <xref:System.Web.UI.Control.ClientIDMode%2A>proprietà, il valore generato per il <xref:System.Web.UI.Control.ClientID%2A>proprietà potrebbe includere l&quot;ID dell&quot;oggetto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.Control.ClientIDMode%2A> Quando si imposta <xref:System.Web.UI.Control.ClientIDMode%2A>a <xref:System.Web.UI.ClientIDMode>, <xref:System.Web.UI.Control.ClientID%2A>valore non include l&quot;ID dell&quot;oggetto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Quando si imposta <xref:System.Web.UI.Control.ClientIDMode%2A>al <xref:System.Web.UI.ClientIDMode>o <xref:System.Web.UI.ClientIDMode>, <xref:System.Web.UI.Control.ClientID%2A>valore includerà l&quot;ID dell&quot;oggetto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Per ulteriori informazioni, vedere [identificazione del controllo Server Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates using the NamingContainer property.  \n  \n [!code-cs[Control_NamingContainer#1](~/add/codesnippet/csharp/p-system.web.ui.control._5_1.aspx)]\n [!code-vb[Control_NamingContainer#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._5_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control NamingContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "Il server dei nomi del controllo contenitore."
  overload: System.Web.UI.Control.NamingContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: Control.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se l&quot;evento per il controllo server viene passato di gerarchia dei controlli server dell&quot;interfaccia utente della pagina."
  remarks: "I controlli server ASP.NET, ad esempio il <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.GridView>i controlli Web possono contenere controlli figlio che generano eventi.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Ad esempio, ogni riga in un <xref:System.Web.UI.WebControls.GridView>controllo può contenere uno o più pulsanti creati dinamicamente dai modelli.</xref:System.Web.UI.WebControls.GridView> Anziché ogni pulsante genera un singolo evento, gli eventi dei controlli annidati vengono &quot;trasmessi&quot;, vale a dire vengono inviati al contenitore di denominazione. Il contenitore di denominazione a sua volta genera un evento generico denominato <xref:System.Web.UI.WebControls.GridView.RowCommand>con i valori dei parametri.</xref:System.Web.UI.WebControls.GridView.RowCommand> Questi valori consentono di determinare il singolo controllo che ha generato l&quot;evento originale. Rispondendo a questo evento singolo, è possibile evitare la necessità di scrivere i singoli metodi di gestione degli eventi per i controlli figlio."
  example:
  - "The following example overrides the OnBubbleEvent method in a custom ASP.NET server control, `ParentControl`. This method is invoked when a child control of `ParentControl` calls the <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> method. When this happens, the `ParentControl` class writes two strings to the containing ASP.NET page, the first stating that its OnBubbleEvent method has been called, the second identifying the source control of the <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> method.  \n  \n [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._21_1.vb)]\n [!code-cs[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/add/codesnippet/csharp/m-system.web.ui.control._21_1.cs)]"
  syntax:
    content: protected virtual bool OnBubbleEvent (object source, EventArgs args);
    parameters:
    - id: source
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: args
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;evento è stato annullato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: System.Web.UI.Control.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> evento."
  remarks: "Questo metodo notifica a un controllo server per eseguire qualsiasi logica di associazione dati che sono associati.       Se si desidera gestire il <xref:System.Web.UI.Control.DataBinding>evento, è necessario eseguire l&quot;override di questo metodo di gestione degli eventi.</xref:System.Web.UI.Control.DataBinding> In questo modo si garantisce che tutti i delegati è collegata la <xref:System.Web.UI.Control.DataBinding>evento vengono richiamati.</xref:System.Web.UI.Control.DataBinding>"
  example:
  - "The following example demonstrates how to override the OnDataBinding method to add child controls to the parent control from a data source.  \n  \n [!code-cs[TemplatedDataBoundControl#3](~/add/codesnippet/csharp/m-system.web.ui.control._14_1.cs)]\n [!code-vb[TemplatedDataBoundControl#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._14_1.vb)]"
  syntax:
    content: protected virtual void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Control.OnInit(EventArgs)
  fullName: System.Web.UI.Control.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> evento."
  remarks: "In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Init>evento.</xref:System.Web.UI.Control.Init> Se si sviluppa un controllo personalizzato, è possibile eseguire l&quot;override di questo metodo per fornire un&quot;ulteriore elaborazione. Se si esegue l&quot;override di questo metodo, chiamare il metodo OnInit del controllo di base per notificare ai sottoscrittori per l&quot;evento."
  example:
  - >-
    [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._25_1.vb)]
     [!code-cs[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/add/codesnippet/csharp/m-system.web.ui.control._25_1.cs)]
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: System.Web.UI.Control.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> evento."
  remarks: "In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Load>evento.</xref:System.Web.UI.Control.Load> Se si sviluppa un controllo personalizzato, è possibile eseguire l&quot;override di questo metodo per fornire un&quot;ulteriore elaborazione. Se si esegue l&quot;override di questo metodo, chiamare il metodo OnLoad del controllo di base per notificare ai sottoscrittori per l&quot;evento."
  example:
  - >-
    [!code-vb[Control_OnUnload#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._24_1.vb)]
     [!code-cs[Control_OnUnload#3](~/add/codesnippet/csharp/m-system.web.ui.control._24_1.cs)]
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Il <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Control.OnPreRender(EventArgs)
  fullName: System.Web.UI.Control.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> evento."
  remarks: "In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.PreRender>evento.</xref:System.Web.UI.Control.PreRender> Se si sviluppa un controllo personalizzato, è possibile eseguire l&quot;override di questo metodo per fornire un&quot;ulteriore elaborazione. Se si esegue l&quot;override di questo metodo, chiamare il metodo OnPreRender del controllo di base per notificare ai sottoscrittori per l&quot;evento."
  example:
  - >-
    [!code-vb[Control_Sample_1_snipper#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._0_1.vb)]
     [!code-cs[Control_Sample_1_snipper#1](~/add/codesnippet/csharp/m-system.web.ui.control._0_1.cs)]
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: Control.OnUnload(EventArgs)
  fullName: System.Web.UI.Control.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> evento."
  remarks: "In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Unload>evento.</xref:System.Web.UI.Control.Unload> Se si sviluppa un controllo personalizzato, è possibile eseguire l&quot;override di questo metodo per fornire un&quot;ulteriore elaborazione. Se si esegue l&quot;override di questo metodo, chiamare il metodo OnUnload del controllo di base per notificare ai sottoscrittori per l&quot;evento."
  example:
  - >-
    [!code-vb[Control_OnUnload#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._10_1.vb)]
     [!code-cs[Control_OnUnload#2](~/add/codesnippet/csharp/m-system.web.ui.control._10_1.cs)]
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OpenFile(System.String)
  id: OpenFile(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: System.Web.UI.Control.OpenFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un <xref:System.IO.Stream>usato per leggere un file.</xref:System.IO.Stream>"
  remarks: "The OpenFile method returns a <xref:System.IO.Stream> object that can be used to read the contents of the file specified in the `path` parameter. The path parameter can be either a relative or root URL without a protocol (such as \"~/mySite/myFile.txt), or a physical path, either local (\"c:\\mySite\\myFile.txt\") or UNC (\"\\\\\\myServer\\myFile.txt\").  \n  \n The OpenFile method uses file access security to control access to the specified file. If the current ASP.NET user does not have access to the file, then the file is not opened and an <xref:System.Web.HttpException> exception is thrown to indicate that access was denied. If the `path` parameter specified a relative path, the exception does not include information about the physical path to the requested file."
  syntax:
    content: protected System.IO.Stream OpenFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file desiderato."
    return:
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>che fa riferimento al file desiderato.</xref:System.IO.Stream>"
  overload: System.Web.UI.Control.OpenFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato negato l&quot;accesso al file specificato."
  platform:
  - net462
- uid: System.Web.UI.Control.Page
  id: Page
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Page
  nameWithType: Control.Page
  fullName: System.Web.UI.Control.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento di <xref href=&quot;System.Web.UI.Page&quot;> </xref> istanza che contiene il controllo del server."
  remarks: "Valore di questa proprietà corrisponda al nome del file con estensione aspx che contiene il controllo del server."
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method. It uses the <xref:System.Web.UI.Page> property to access the <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=fullName> property and determine whether the page that contains this control has just been loaded for the first time or is the result of a postback.  \n  \n [!code-cs[Control_Sample#1](~/add/codesnippet/csharp/p-system.web.ui.control._12_1.cs)]\n [!code-vb[Control_Sample#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._12_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "Il <xref href=&quot;System.Web.UI.Page&quot;> </xref> istanza che contiene il controllo del server."
  overload: System.Web.UI.Control.Page*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il controllo è un <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controllo."
  platform:
  - net462
- uid: System.Web.UI.Control.Parent
  id: Parent
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Web.UI.Control.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento al controllo padre del controllo server nella gerarchia del controllo pagina."
  remarks: "Ogni volta che viene richiesta una pagina, viene creata una gerarchia dei controlli server nella pagina. Questa proprietà consente di determinare il controllo padre del controllo del server corrente in tale gerarchia e per il programma."
  example:
  - "The following example sets a new <xref:System.Web.UI.Control> object on a page, `myControl1`, to the control specified in a <xref:System.Web.UI.Control.FindControl%2A> method call. If the call returns a control, the code uses the Parent property to identify the control that contains `myControl1`. If the parent control exists, the string \"The parent of the text box is\" is concatenated with the <xref:System.Web.UI.Control.ID%2A> property of the parent control and written to the <xref:System.Web.UI.Control.Page%2A>. If no parent control is found, the string \"Control not found\" is written.  \n  \n [!code-cs[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/csharp/p-system.web.ui.control._6_1.aspx)]\n [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._6_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control Parent { get; }
    return:
      type: System.Web.UI.Control
      description: "Un riferimento al controllo padre del controllo server."
  overload: System.Web.UI.Control.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.PreRender
  id: PreRender
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: PreRender
  nameWithType: Control.PreRender
  fullName: System.Web.UI.Control.PreRender
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica dopo il <xref href=&quot;System.Web.UI.Control&quot;> </xref> oggetto viene caricato, ma prima del rendering."
  remarks: "Usare questo evento per eseguire eventuali aggiornamenti prima che il controllo server viene eseguito il rendering della pagina. Eventuali modifiche nello stato di visualizzazione del controllo del server possono essere salvate durante questo evento. Vengono salvate le modifiche apportate nella fase di rendering."
  syntax:
    content: public event EventHandler PreRender;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  id: RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RaiseBubbleEvent(Object,EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.RaiseBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Assegna eventuali origini dell&quot;evento e le informazioni relative al padre del controllo."
  remarks: "I controlli server ASP.NET, ad esempio il <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.GridView>i controlli Web possono contenere controlli figlio che generano eventi.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Ad esempio, ogni riga in un <xref:System.Web.UI.WebControls.GridView>controllo può contenere uno o più pulsanti creati dinamicamente dai modelli.</xref:System.Web.UI.WebControls.GridView> Anziché ogni pulsante genera un singolo evento, gli eventi dei controlli annidati vengono &quot;trasmessi&quot;, vale a dire sono inviati al padre controllo. L&quot;elemento padre a sua volta genera un evento generico denominato <xref:System.Web.UI.WebControls.GridView.RowCommand>con i valori dei parametri.</xref:System.Web.UI.WebControls.GridView.RowCommand> Questi valori consentono di determinare il singolo controllo che ha generato l&quot;evento originale. Rispondendo a questo evento singolo, è possibile evitare la necessità di scrivere i singoli metodi di gestione degli eventi per i controlli figlio.       Mentre è possibile eseguire l&quot;override di questo metodo, mediante i controlli possano gestire o generare eventi propagati eseguendo l&quot;override di <xref:System.Web.UI.Control.OnBubbleEvent%2A>metodo.</xref:System.Web.UI.Control.OnBubbleEvent%2A>"
  example:
  - "The following code example demonstrate how to create a custom class, `ChildControl`, overriding the <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=fullName> method to call the RaiseBubbleEvent method that sends the <xref:System.Web.UI.WebControls.Button.Click?displayProperty=fullName> event to its parent ASP.NET server control. When the user clicks a button in an ASP.NET page that includes an instance of `ChildControl`, it raises the <xref:System.Web.UI.Control.OnBubbleEvent%2A> method on the parent control that contains the instance of `ChildControl` and writes the string \"The ChildControl class OnClick method is called\" to the page.  \n  \n [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._3_1.vb)]\n [!code-cs[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/add/codesnippet/csharp/m-system.web.ui.control._3_1.cs)]"
  syntax:
    content: protected void RaiseBubbleEvent (object source, EventArgs args);
    parameters:
    - id: source
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: args
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>oggetto che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.RaiseBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  id: RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: System.Web.UI.Control.RemovedControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chiamato dopo che un controllo figlio viene rimosso dal <xref:System.Web.UI.Control.Controls*>insieme il <xref href=&quot;System.Web.UI.Control&quot;> </xref> oggetto.</xref:System.Web.UI.Control.Controls*>"
  remarks: "Viene chiamato il metodo RemovedControl immediatamente dopo la rimozione di un controllo dal <xref:System.Web.UI.Control.Controls%2A>insieme.</xref:System.Web.UI.Control.Controls%2A>"
  syntax:
    content: protected virtual void RemovedControl (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> che è stato rimosso."
  overload: System.Web.UI.Control.RemovedControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il controllo è un <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controllo."
  platform:
  - net462
- uid: System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Control.Render(HtmlTextWriter)
  fullName: System.Web.UI.Control.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Invia il contenuto del controllo server a un oggetto fornito <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto, che scrive il contenuto da sottoporre a rendering nel client."
  remarks: "Durante lo sviluppo di controlli server personalizzati, è possibile eseguire l&quot;override di questo metodo per generare il contenuto di una pagina ASP.NET."
  example:
  - "The following code example demonstrates overriding the Render method. The <xref:System.Web.UI.Control.HasControls%2A> method is used to determine whether the server control has any child controls stored in its <xref:System.Web.UI.ControlCollection> object, which is accessible through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> property. If <xref:System.Web.UI.Control.HasControls%2A> returns true and the first server control in the collection is literal text, then the literal text is appended to an HTML string.  \n  \n [!code-cs[Classic Control.Render Example#1](~/add/codesnippet/csharp/m-system.web.ui.control._7_1.cs)]\n [!code-vb[Classic Control.Render Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._7_1.vb)]"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto che riceve il contenuto del controllo server."
  overload: System.Web.UI.Control.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce il contenuto di elementi figlio di un controllo server a un oggetto fornito <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto, che scrive il contenuto da sottoporre a rendering nel client."
  remarks: "Questo metodo di notifica ad ASP.NET per il rendering di qualsiasi codice pagine ASP (Active Server) nella pagina. Se nella pagina è presente alcun codice ASP, questo metodo esegue il rendering di qualsiasi figlio controlli per il controllo server. Questo metodo viene chiamato dal <xref:System.Web.UI.Control.Render%2A>metodo.</xref:System.Web.UI.Control.Render%2A>"
  example:
  - "The following example overrides the RenderChildren method in a custom server control. It determines whether the current control has any child controls in its <xref:System.Web.UI.ControlCollection> object. If it does, it uses the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through the collection. As it encounters each child control, it uses the <xref:System.Web.UI.Control.RenderControl%2A> method to render the parent control, and all of its child controls, to the containing page.  \n  \n The overridden <xref:System.Web.UI.Control.Render%2A> method then calls the overridden RenderChildren method.  \n  \n [!code-vb[Control_Sample_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.control._13_1.vb)]\n [!code-cs[Control_Sample_1#4](~/add/codesnippet/csharp/m-system.web.ui.control._13_1.cs)]"
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto che riceve il contenuto sottoposto a rendering."
  overload: System.Web.UI.Control.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  id: RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce il contenuto del controllo a un oggetto fornito <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> dell&quot;oggetto e archivia le informazioni di traccia sul controllo, se è attivata."
  remarks: "Se un controllo server <xref:System.Web.UI.Control.Visible%2A>è impostata su `true`, questo metodo determina se la traccia è abilitata per la pagina.</xref:System.Web.UI.Control.Visible%2A> In caso affermativo, archivia le informazioni di traccia associate al controllo e viene eseguito il rendering del contenuto del controllo server alla pagina.       Questo metodo viene chiamato automaticamente dalla pagina durante il rendering, ma può essere sottoposto a override dagli sviluppatori di controlli personalizzati."
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.RenderChildren%2A> method in a custom server control. It determines whether the current control has any child controls in its <xref:System.Web.UI.ControlCollection> object. If it does, it uses the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through the collection. As it encounters each child control, it uses the RenderControl method to render the child control, and all of its child controls, to the containing page. The <xref:System.Web.UI.XhtmlTextWriter> object that is passed to this method is instantiated by the <xref:System.Web.UI.Page.Render%2A> method.  \n  \n [!code-vb[Control_Sample_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._11_1.vb)]\n [!code-cs[Control_Sample_1#3](~/add/codesnippet/csharp/m-system.web.ui.control._11_1.cs)]"
  syntax:
    content: public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto che riceve il contenuto del controllo."
  overload: System.Web.UI.Control.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  id: RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter,ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter,ControlAdapter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter,ControlAdapter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce il contenuto del controllo a un oggetto fornito <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto utilizzando un fornito <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> oggetto."
  remarks: "Le pagine Web ASP.NET sono utilizzabili in una vasta gamma di dispositivi e browser che possono richiedere informazioni dal Web. Il <xref:System.Web.UI.Control.Adapter%2A>proprietà restituisce il <xref:System.Web.UI.Adapters.ControlAdapter>oggetto che esegue il rendering del controllo nel dispositivo richiedente o una schermata del browser.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Adapter%2A>       Per ulteriori informazioni sugli adapter, vedere [dell&quot;architettura Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md).       Se un controllo server <xref:System.Web.UI.Control.Visible%2A>è impostata su `true` traccia è abilitata per la pagina, quindi vengono acquisite le informazioni di traccia associate al controllo.</xref:System.Web.UI.Control.Visible%2A>"
  syntax:
    content: protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> che riceve il contenuto del controllo."
    - id: adapter
      type: System.Web.UI.Adapters.ControlAdapter
      description: "Il <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> che definisce il rendering."
  overload: System.Web.UI.Control.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderingCompatibility
  id: RenderingCompatibility
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: System.Web.UI.Control.RenderingCompatibility
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che specifica la versione di ASP.NET che il rendering HTML sarà compatibile con."
  remarks: "ASP.NET imposta questa proprietà sul valore di `controlRenderingCompatibilityVersion` attributo del `pages` elemento nel file Web. config. Se il `controlRenderingCompatibilityVersion` attributo non è impostato nel file Web. config, il valore predefinito è la versione corrente di ASP.NET.      > [!CAUTION] > È una funzione di accesso set pubblica per questa proprietà, ma la funzione di accesso set supporta l&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Se si imposta questo valore nel codice, l&quot;effetto è imprevedibile.       Ogni versione di ASP.NET può eseguire il rendering HTML in modo diverso rispetto alle versioni precedenti. Ad esempio, in ASP.NET 3.5, se il <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>proprietà di un <xref:System.Web.UI.WebControls.Label>controllo `false`, per impostazione predefinita, ASP.NET esegue il rendering di un `span` elemento il cui `disabled` attributo è impostato su &quot;disabled&quot;.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> In ASP.NET 4, per impostazione predefinita, il `span` elemento sottoposto a rendering con un foglio di stile (CSS) `class` attributo anziché il `disabled` attributo. Questo consente di specificare l&quot;aspetto del controllo disabilitato, evitando il rendering di HTML non valido. (In HTML 4.0 e XHTML 1.1, il `span` elemento non supporta il `disabled` attributo.)       Un&quot;applicazione Web può includere codice che potrebbe non funzionare correttamente se viene modificata per il rendering HTML. Per evitare questo problema, è possibile impostare il `controlRenderingCompatibilityVersion` attributo del `pages` elemento nel file Web. config per indicare quale versione precedente che si desidera mantenere la compatibilità con. Ad esempio, se si imposta la proprietà RenderingCompatibility su `3.5`, disattivato <xref:System.Web.UI.WebControls.Label>controllo eseguirà il rendering un `disabled` attributo e non una classe CSS</xref:System.Web.UI.WebControls.Label>      > [!NOTE] > È la versione meno recente che è possibile impostare questa proprietà per `3.5`.       Per mantenere la compatibilità con le versioni precedenti, quando si utilizza Visual Studio per aggiornare un progetto Web per ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il `controlRenderingCompatibilityVersion` attributo nel file Web. config per `3.5`. Se si desidera che un sito Web aggiornato per il rendering HTML utilizzando l&quot;algoritmo che è stato introdotto in ASP.NET 4, è possibile modificare o rimuovere il `controlRenderingCompatibilityVersion` attributo.       La maggior parte dei casi, il comportamento controllato da questa proprietà è automatico e non è necessario controllare la proprietà RenderingCompatibility nel codice. Tuttavia, se si utilizza un controllo personalizzato, potrebbe essere necessario includere il codice che modifica il comportamento del controllo in base all&quot;impostazione di questa proprietà. Ad esempio, un controllo personalizzato per ASP.NET 4 potrebbe essere composta da <xref:System.Web.UI.WebControls.Label>controlli e il controllo personalizzato può specificare l&quot;aspetto del controllo disabilitato tramite la generazione di codice JavaScript che modifica la `aspNetDisabled` classe</xref:System.Web.UI.WebControls.Label> Questo funzionerà come previsto se RenderingCompatibility è `4.0` o versione successiva. Ma per ottenere lo stesso effetto quando RenderingCompatibility è `3.5`, codice del controllo personalizzato è necessario impostare il controllo `CssClass` proprietà su &quot;aspNetDisabled&quot; quando la <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>proprietà `false`.</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>"
  syntax:
    content: public virtual Version RenderingCompatibility { get; set; }
    return:
      type: System.Version
      description: "In futuro sarà compatibile con la versione di ASP.NET che il rendering HTML."
  overload: System.Web.UI.Control.RenderingCompatibility*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveAdapter
  id: ResolveAdapter
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: System.Web.UI.Control.ResolveAdapter()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;adattatore del controllo è responsabile per il rendering del controllo specificato."
  remarks: "Le pagine Web ASP.NET possono essere visualizzate in una vasta gamma di dispositivi che sono in grado di richieste di pagine dal Web. Il metodo ResolveAdapter restituisce l&quot;adattatore del controllo responsabile per il rendering del controllo nel browser o nel dispositivo che ha richiesto la pagina ASP.NET.       Il tipo di adattatore specifico restituito dipende dal tipo di discendente di <xref:System.Web.UI.Control>classe che viene eseguito il rendering.</xref:System.Web.UI.Control>       Per ulteriori informazioni sugli adapter, vedere [dell&quot;architettura Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();
    parameters: []
    return:
      type: System.Web.UI.Adapters.ControlAdapter
      description: "Oggetto <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> che esegue il rendering del controllo."
  overload: System.Web.UI.Control.ResolveAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  id: ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: System.Web.UI.Control.ResolveClientUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un URL che può essere usato dal browser."
  remarks: "Utilizzare il metodo ResolveClientUrl per restituire una stringa URL utilizzabile dal client per accedere alle risorse server Web, ad esempio i file di immagine, i collegamenti a pagine aggiuntive e così via.      > [!NOTE] > L&quot;URL restituito da questo metodo è relativo alla cartella contenente il file di origine in cui il controllo viene creata un&quot;istanza. I controlli che ereditano questa proprietà, ad esempio <xref:System.Web.UI.UserControl>e <xref:System.Web.UI.MasterPage>, verrà restituito un URL completo rispetto al controllo.</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.UserControl>"
  syntax:
    content: public string ResolveClientUrl (string relativeUrl);
    parameters:
    - id: relativeUrl
      type: System.String
      description: "Un URL relativo della pagina corrente."
    return:
      type: System.String
      description: "Un URL completo per la risorsa specificata adatto per l&quot;uso del browser."
  overload: System.Web.UI.Control.ResolveClientUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relativeUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  id: ResolveUrl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: System.Web.UI.Control.ResolveUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Converte un URL in un formato utilizzabile dal client richiedente."
  remarks: "Se il `relativeUrl` parametro contiene un URL assoluto, l&quot;URL viene restituito invariato. Se il `relativeUrl` parametro contiene un URL relativo, che l&quot;URL viene modificato in un URL relativo che sia corretto per il percorso della richiesta corrente, in modo che il browser è possibile risolvere l&quot;URL.       Ad esempio, si consideri lo scenario seguente:-un client ha richiesto una pagina ASP.NET che contiene un controllo utente che dispone di un&quot;immagine è associata.      -La pagina ASP.NET è /Store/Page1.aspx..      -Il controllo utente si trova in /Store/UserControls/UC1.ascx.      -Il file di immagine si trova in /UserControls/Images/Image1.jpg.       Se il controllo utente passa il percorso relativo dell&quot;immagine (vale a dire /Store/UserControls/Images/Image1.jpg) per il metodo ResolveUrl, il metodo restituirà il valore /Images/Image1.jpg..       Questo metodo Usa il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A>proprietà per ottenere l&quot;URL assoluto.</xref:System.Web.UI.Control.TemplateSourceDirectory%2A> L&quot;URL restituito può essere usata dal client.       Per ulteriori informazioni sui percorsi delle risorse in un sito Web, vedere [percorsi di progetti Web ASP.NET](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Pagine Web per dispositivi mobili, solo se l&quot;applicazione si basa su sessioni senza cookie o potrebbe ricevere richieste dal browser per dispositivi mobili che richiedono sessioni senza cookie, usando una tilde (&quot;~&quot;) in un percorso può causare inavvertitamente la creazione di una nuova sessione e la possibile perdita di dati della sessione. Per impostare una proprietà con un percorso, ad esempio &quot;~ /*percorso&quot;*, risolvere il percorso chiamando il <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>con un argomento, ad esempio &quot;~ /*percorso&quot;* prima di assegnarlo alla proprietà.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"
  example:
  - "The following example creates an <xref:System.Web.UI.WebControls.Image> Web server control object and uses the ResolveUrl method to set the path to the image, which is stored by the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.  \n  \n [!code-cs[Control_ResolveUrl#1](~/add/codesnippet/csharp/m-system.web.ui.control._22_1.cs)]\n [!code-vb[Control_ResolveUrl#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._22_1.vb)]"
  syntax:
    content: public string ResolveUrl (string relativeUrl);
    parameters:
    - id: relativeUrl
      type: System.String
      description: "L&quot;URL è associato il <xref:System.Web.UI.Control.TemplateSourceDirectory*>proprietà.</xref:System.Web.UI.Control.TemplateSourceDirectory*>"
    return:
      type: System.String
      description: "URL convertito."
  overload: System.Web.UI.Control.ResolveUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Si verifica se il <code> relativeUrl </code> parametro contiene <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: Control.SaveControlState()
  fullName: System.Web.UI.Control.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Salva le modifiche dello stato che si sono verificati dopo il postback della pagina al server di un controllo server."
  remarks: "Utilizzare il metodo SaveControlState per salvare le informazioni sullo stato necessarie per l&quot;operazione di un controllo specifico. Questo dati sullo stato del controllo vengono archiviati separatamente dai dati dello stato di visualizzazione del controllo.       Controlli personalizzati usando lo stato del controllo devono chiamare il <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>metodo il <xref:System.Web.UI.Control.Page%2A>prima di salvare lo stato del controllo.</xref:System.Web.UI.Control.Page%2A> </xref:System.Web.UI.Page.RegisterRequiresControlState%2A>"
  example:
  - "The following code example overrides the SaveControlState method in a custom ASP.NET control. When this method is invoked, it determines whether the internal property `currentIndex` is set to a non-default value and, if so, saves the value to control state.  \n  \n The <xref:System.Web.UI.Control.OnInit%2A> method is overridden to call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on the <xref:System.Web.UI.Control.Page%2A> to indicate that the custom control uses control state.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._18_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.control._18_1.aspx)]"
  syntax:
    content: protected virtual object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Restituisce il server di stato corrente del controllo. Se non è associato il controllo alcuno stato, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: Control.SaveViewState()
  fullName: System.Web.UI.Control.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Salva le modifiche dello stato di visualizzazione che si sono verificati dopo il postback della pagina al server di un controllo server."
  remarks: "Lo stato di visualizzazione è costituito da tutti i valori delle proprietà di un controllo server. Questi valori vengono inseriti automaticamente nel <xref:System.Web.UI.Control.ViewState%2A>proprietà, ovvero un&quot;istanza della <xref:System.Web.UI.StateBag>classe. server la</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Valore di questa proprietà viene quindi inserito in un oggetto stringa dopo il salvataggio dello stato fase del ciclo di vita del controllo server. Per ulteriori informazioni, vedere [Panoramica del ciclo di vita della pagina ASP.NET](~/add/includes/ajax-current-ext-md.md).       Quando viene salvato lo stato di visualizzazione, l&quot;oggetto stringa viene restituito al client come una variabile che viene archiviata in un elemento HTML `HIDDEN` elemento. Quando si crea un controllo server personalizzata con uno stato di visualizzazione personalizzato, lo stato di visualizzazione può essere gestito in modo esplicito con il SaveViewState e <xref:System.Web.UI.Control.LoadViewState%2A>metodi.</xref:System.Web.UI.Control.LoadViewState%2A> Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md). Per informazioni sull&quot;implementazione di un provider di stato sessione personalizzato, vedere [implementando un Provider di archivio dello stato sessione](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example overrides the SaveViewState method in a custom ASP.NET server control. When this method is invoked, it determines whether the control has any child controls and whether the containing <xref:System.Web.UI.Page> object is the result of a postback. If both are true, it changes the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> Web server control to read `Custom Control Has Saved State`. It then saves the view state of the control as an array of objects, named `allStates`.  \n  \n [!code-cs[Control_StateManagement#2](~/add/codesnippet/csharp/m-system.web.ui.control._17_1.cs)]\n [!code-vb[Control_StateManagement#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._17_1.vb)]"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Restituisce lo stato di visualizzazione corrente del controllo server. Se è presente alcuno stato di visualizzazione associato al controllo, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  id: SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Imposta i dati in fase di progettazione per un controllo."
  remarks: "Il metodo SetDesignModeState Salva i dati in fase di progettazione per un controllo."
  syntax:
    content: protected virtual void SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>contenente i dati in fase di progettazione per il controllo.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.SetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  id: SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Assegna un delegato del gestore eventi per eseguire il rendering del controllo server e il relativo contenuto nel controllo padre."
  remarks: "Questo metodo viene fornito solo a fini di implementazione non si deve mai essere chiamato direttamente."
  syntax:
    content: public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);
    parameters:
    - id: renderMethod
      type: System.Web.UI.RenderMethod
      description: "Le informazioni necessarie per passare al delegato in modo che possa eseguire il rendering del controllo server."
  overload: System.Web.UI.Control.SetRenderMethodDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  id: SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetTraceData(Object,Object)
  nameWithType: Control.SetTraceData(Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Set di dati per la fase di progettazione la tracciatura di dati di rendering, utilizzando la chiave di dati di traccia e il valore di dati di traccia di traccia."
  syntax:
    content: public void SetTraceData (object traceDataKey, object traceDataValue);
    parameters:
    - id: traceDataKey
      type: System.Object
      description: "La chiave di dati di traccia."
    - id: traceDataValue
      type: System.Object
      description: "Il valore di dati di traccia."
  overload: System.Web.UI.Control.SetTraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  id: SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetTraceData(Object,Object,Object)
  nameWithType: Control.SetTraceData(Object,Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Set di dati per la fase di progettazione la tracciatura di dati di rendering, utilizzando l&quot;oggetto inseriti nella traccia, la chiave di dati di traccia e il valore di dati di traccia di traccia."
  syntax:
    content: public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);
    parameters:
    - id: tracedObject
      type: System.Object
      description: "L&quot;oggetto inseriti nella traccia."
    - id: traceDataKey
      type: System.Object
      description: "La chiave di dati di traccia."
    - id: traceDataValue
      type: System.Object
      description: "Il valore di dati di traccia."
  overload: System.Web.UI.Control.SetTraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Site
  id: Site
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Site
  nameWithType: Control.Site
  fullName: System.Web.UI.Control.Site
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene informazioni sul contenitore che ospita il controllo corrente quando il rendering in un&quot;area di progettazione."
  remarks: "Associa un sito di un <xref:System.ComponentModel.Component>l&quot;oggetto in un <xref:System.ComponentModel.Container>dell&quot;oggetto e consente la comunicazione tra i due.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Component> Fornisce inoltre un modo per il contenitore gestire i relativi componenti."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "Un <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> che contiene informazioni sul contenitore che ospita il controllo in."
  overload: System.Web.UI.Control.Site*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il controllo è un <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controllo."
  platform:
  - net462
- uid: System.Web.UI.Control.SkinID
  id: SkinID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SkinID
  nameWithType: Control.SkinID
  fullName: System.Web.UI.Control.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta l&quot;interfaccia da applicare al controllo."
  remarks: "Le interfacce disponibili per un controllo sono contenute in uno o più file di interfaccia in una directory dei temi. La proprietà SkinID specifica quale di queste interfacce da applicare al controllo. Un&quot;interfaccia è specifica per un determinato controllo. non è possibile condividere le impostazioni dell&quot;interfaccia tra i controlli di tipi diversi.       Se non si imposta la proprietà SkinID, un controllo utilizza l&quot;interfaccia predefinita, se definita. Ad esempio, se un&quot;interfaccia senza un ID è definito per un <xref:System.Web.UI.WebControls.Image>controllare, tale interfaccia verrà applicata a tutti <xref:System.Web.UI.WebControls.Image>controlli che non fa riferimento in modo esplicito un&quot;interfaccia in base all&quot;ID e che non sono impostati per disattivare i temi.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image> Se è definita un&quot;interfaccia con un ID per un <xref:System.Web.UI.WebControls.Image>controllo, quindi tale interfaccia verrà applicata solo ai <xref:System.Web.UI.WebControls.Image>controlli con SkinID la proprietà è impostata su tale ID.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image>       Se i file di interfaccia in una directory di tema non contengono un&quot;interfaccia con la proprietà SkinID specificata, un <xref:System.ArgumentException>viene generata l&quot;eccezione in fase di esecuzione.</xref:System.ArgumentException>"
  syntax:
    content: public virtual string SkinID { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;interfaccia da applicare al controllo. Il valore predefinito è <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.Control.SkinID*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The style sheet has already been applied.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_Page_PreInit\" name=\"Page_PreInit\" href=\"\"></xref> event has already occurred.  \n  \n \\- or -  \n  \n The control was already added to the <xref uid=\"langword_csharp_Controls\" name=\"Controls\" href=\"\"></xref> collection."
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  id: System#Web#UI#IControlBuilderAccessor#ControlBuilder
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  fullName: System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IControlBuilderAccessor.ControlBuilder%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IControlBuilderAccessor>interfaccia.</xref:System.Web.UI.IControlBuilderAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }
    return:
      type: System.Web.UI.ControlBuilder
      description: "Il <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> che creato il controllo; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è stato utilizzato alcun generatore."
  overload: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  id: System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IControlDesignerAccessor.GetDesignModeState%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IControlDesignerAccessor>interfaccia.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>dello stato del controllo.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  id: System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IControlDesignerAccessor.SetDesignModeState%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IControlDesignerAccessor>interfaccia.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>contenente i dati in fase di progettazione per il controllo.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  id: System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IControlDesignerAccessor.SetOwnerControl%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IControlDesignerAccessor>interfaccia.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>       Il <xref:System.Web.UI.IControlDesignerAccessor>interfaccia viene utilizzata una finestra di progettazione controlli per eseguire azioni in fase di progettazione del controllo.</xref:System.Web.UI.IControlDesignerAccessor>"
  syntax:
    content: void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "Il proprietario del controllo."
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>owner</code>è impostato per il controllo corrente."
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  id: System#Web#UI#IControlDesignerAccessor#UserData
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.UserData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IControlDesignerAccessor.UserData%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IControlDesignerAccessor>interfaccia.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>contenente informazioni sul controllo.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  id: System#Web#UI#IDataBindingsAccessor#DataBindings
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IDataBindingsAccessor.DataBindings%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IDataBindingsAccessor>interfaccia.</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }
    return:
      type: System.Web.UI.DataBindingCollection
      description: "La raccolta di associazioni di dati."
  overload: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  id: System#Web#UI#IDataBindingsAccessor#HasDataBindings
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IDataBindingsAccessor.HasDataBindings%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IDataBindingsAccessor>interfaccia.</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo contiene la logica di associazione a dati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  id: System#Web#UI#IExpressionsAccessor#Expressions
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.Expressions
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IExpressionsAccessor.Expressions%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IExpressionsAccessor>interfaccia.</xref:System.Web.UI.IExpressionsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }
    return:
      type: System.Web.UI.ExpressionBindingCollection
      description: "Un <xref href=&quot;System.Web.UI.ExpressionBindingCollection&quot;> </xref> contenente <xref href=&quot;System.Web.UI.ExpressionBinding&quot;> </xref> gli oggetti che rappresentano le proprietà e le espressioni per un controllo."
  overload: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  id: System#Web#UI#IExpressionsAccessor#HasExpressions
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IExpressionsAccessor.HasExpressions%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IExpressionsAccessor>interfaccia.</xref:System.Web.UI.IExpressionsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo ha proprietà impostate tramite espressioni. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  id: System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.Control>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IParserAccessor>interfaccia.</xref:System.Web.UI.IParserAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: void IParserAccessor.AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da aggiungere."
  overload: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TemplateControl
  id: TemplateControl
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: System.Web.UI.Control.TemplateControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un riferimento a un modello contenente questo controllo."
  remarks: "Quando un <xref:System.Web.UI.Control>istanza fa parte di un modello di controllo, la proprietà TemplateControl contiene un riferimento al controllo contenitore.</xref:System.Web.UI.Control> Per ulteriori informazioni, vedere il <xref:System.Web.UI.TemplateControl?displayProperty=fullName>documentazione.</xref:System.Web.UI.TemplateControl?displayProperty=fullName>"
  syntax:
    content: public System.Web.UI.TemplateControl TemplateControl { get; set; }
    return:
      type: System.Web.UI.TemplateControl
      description: "Il <xref href=&quot;System.Web.UI.TemplateControl&quot;> </xref> istanza che contiene questo controllo."
  overload: System.Web.UI.Control.TemplateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TemplateSourceDirectory
  id: TemplateSourceDirectory
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: System.Web.UI.Control.TemplateSourceDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene la directory virtuale del <xref href=&quot;System.Web.UI.Page&quot;> </xref> o <xref href=&quot;System.Web.UI.UserControl&quot;> </xref> che contiene il controllo del server corrente."
  remarks: "La proprietà TemplateSourceDirectory specifica il percorso per il controllo utente o di pagina che contiene il controllo corrente. Ad esempio, se la pagina Web si trova in http://www.contoso.com/application/subdirectory, la proprietà TemplateSourceDirectory restituisce &quot;application/subdirectory&quot;.       Per restituire il percorso virtuale relativo dell&quot;applicazione (&quot;~ / sottodirectory&quot;), utilizzare il <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A>proprietà.</xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A>"
  example:
  - "The following example uses the TemplateSourceDirectory property twice. The first time it is used in a <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=fullName> method call to obtain the path to the directory in which the control resides. The second time it is in a <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> method call to obtain the list of all the files contained within that directory.  \n  \n [!code-cs[Control_TemplateSourceDirectory#2](~/add/codesnippet/csharp/p-system.web.ui.control._10_1.cs)]\n [!code-vb[Control_TemplateSourceDirectory#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._10_1.vb)]"
  syntax:
    content: public virtual string TemplateSourceDirectory { get; }
    return:
      type: System.String
      description: "La directory virtuale del controllo utente o di pagina che contiene il controllo del server."
  overload: System.Web.UI.Control.TemplateSourceDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: Control.TrackViewState()
  fullName: System.Web.UI.Control.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Fa sì che il rilevamento delle modifiche dello stato di visualizzazione per il controllo del server in modo che possano essere archiviate nel controllo del server <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> oggetto. Questo oggetto è possibile accedere tramite il &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; proprietà."
  remarks: "Questo metodo viene chiamato automaticamente alla fine del <xref:System.Web.UI.Control.Init>eventi del ciclo di vita del controllo server.</xref:System.Web.UI.Control.Init>       Richiamare questo metodo quando si sviluppano i controlli con associazione a dati basati su modelli. Questo metodo segnala ad ASP.NET di monitorare le modifiche allo stato di visualizzazione di un controllo server, è necessario quando esegue l&quot;override di <xref:System.Web.UI.Control.DataBind%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.DataBind%2A?displayProperty=fullName>"
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.DataBind%2A> method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true`. The control then uses the <xref:System.Web.UI.Control.IsTrackingViewState%2A> property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the TrackViewState method is called.  \n  \n [!code-cs[Control_StateManagement#5](~/add/codesnippet/csharp/m-system.web.ui.control._9_1.cs)]\n [!code-vb[Control_StateManagement#5](~/add/codesnippet/visualbasic/m-system.web.ui.control._9_1.vb)]"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.Control.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.UniqueID
  id: UniqueID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: System.Web.UI.Control.UniqueID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene l&quot;identificatore univoco qualificato gerarchicamente per il controllo server."
  remarks: "Questa proprietà è diverso dal <xref:System.Web.UI.Control.ID%2A>proprietà, la proprietà UniqueID include l&quot;identificatore per il contenitore di denominazione del controllo del server.</xref:System.Web.UI.Control.ID%2A> Questo identificatore viene generato automaticamente quando viene elaborata una richiesta di pagina.       Questa proprietà è particolarmente importante per distinguere i controlli server contenuti all&quot;interno di un controllo server di data binding che si ripete. Il controllo ripetuto, che sono <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView>controllo server Web (o i controlli server personalizzati creati per includere funzionalità ripetute quando i dati associati), funge da contenitore di denominazione per i controlli figlio.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Ciò significa che crea uno spazio dei nomi univoco per il relativo elemento figlio dei controlli in modo che i relativi <xref:System.Web.UI.Control.ID%2A>i valori delle proprietà non sono in conflitto.</xref:System.Web.UI.Control.ID%2A>       Ad esempio, se si include un ASP.NET <xref:System.Web.UI.WebControls.Label>Web di controllo del server in un <xref:System.Web.UI.WebControls.Repeater>controllo server e assegnare il <xref:System.Web.UI.WebControls.Label>controllo un <xref:System.Web.UI.Control.ID%2A>valore della proprietà `MyLabel`e <xref:System.Web.UI.WebControls.Repeater>un <xref:System.Web.UI.Control.ID%2A>di `MyRepeater`.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.Label> Se si associano dati al <xref:System.Web.UI.WebControls.Repeater>per un <xref:System.Collections.ArrayList>proprietà dell&quot;oggetto con tre voci, l&quot;ID univoco di risulta per ogni istanza del <xref:System.Web.UI.WebControls.Label>i controlli server sono `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, e `MyRepeater$ctl02$MyLabel`.</xref:System.Web.UI.WebControls.Label> </xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.Repeater>"
  example:
  - "The following example creates an <xref:System.Collections.ArrayList> object and populates it with three text strings, then binds a <xref:System.Web.UI.WebControls.Repeater> Web server control to the data in the <xref:System.Collections.ArrayList> when the page is loaded. The code gets the UniqueID property for each child control generated during data binding. The code generates three versions of the <xref:System.Web.UI.WebControls.Label> control and writes their `UniqueID` property values to the page.  \n  \n [!code-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._11_1.aspx)]\n [!code-cs[AccessingAspNetControlsProgramaticallyConcepts#2](~/add/codesnippet/csharp/p-system.web.ui.control._11_1.aspx)]"
  syntax:
    content: public virtual string UniqueID { get; }
    return:
      type: System.String
      description: "L&quot;identificatore completo per il controllo server."
  overload: System.Web.UI.Control.UniqueID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Unload
  id: Unload
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Unload
  nameWithType: Control.Unload
  fullName: System.Web.UI.Control.Unload
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando il controllo server viene scaricato dalla memoria."
  remarks: "I controlli server devono eseguire qualsiasi pulizia finale, ad esempio la chiusura di file, le connessioni al database e l&quot;eliminazione di oggetti, durante questa fase del ciclo di vita controllo prima che l&quot;istanza viene scaricata."
  syntax:
    content: public event EventHandler Unload;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: System.Web.UI.Control.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un valore che indica se il controllo Controlla l&quot;input per il client dal browser per valori potenzialmente pericolosi."
  remarks: "Per ulteriori informazioni sulla convalida richiesta, vedere <xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Un valore che determina se il controllo verifica input per il client. Values can include <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>, <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>, and <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>. Il valore predefinito è <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>, il che significa che il controllo ottiene il valore dall&quot;elemento padre."
  overload: System.Web.UI.Control.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewState
  id: ViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewState
  nameWithType: Control.ViewState
  fullName: System.Web.UI.Control.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un dizionario di informazioni sullo stato che consente di salvare e ripristinare lo stato di visualizzazione di un controllo server in più richieste per la stessa pagina."
  remarks: "Lo stato di visualizzazione di un controllo server è costituito da tutti i valori delle proprietà. Per conservare questi valori in tutte le richieste HTTP, i controlli server ASP.NET utilizzano questa proprietà, che è un&quot;istanza del <xref:System.Web.UI.StateBag>(classe), per archiviare i valori delle proprietà.</xref:System.Web.UI.StateBag> I valori vengono quindi passati come una variabile a un elemento input nascosto HTML quando vengono elaborate le richieste successive. Per ulteriori informazioni sul salvataggio dello stato di visualizzazione controllo server, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Lo stato di visualizzazione è abilitato per tutti i controlli server per impostazione predefinita, ma in alcuni casi in cui si desidererà per disabilitarlo. Per ulteriori informazioni, vedere [Cenni preliminari sulle prestazioni di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Per informazioni sui dizionari e sul loro utilizzo, vedere [raccolte e strutture di dati](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates implementing a `Text` property that stores and retrieves its value from its control's ViewState property.  \n  \n [!code-vb[SysWebUIControlViewState#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._4_1.vb)]\n [!code-cs[SysWebUIControlViewState#2](~/add/codesnippet/csharp/p-system.web.ui.control._4_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.StateBag ViewState { get; }
    return:
      type: System.Web.UI.StateBag
      description: "Un&quot;istanza di <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> classe che contiene informazioni sullo stato di visualizzazione del controllo server."
  overload: System.Web.UI.Control.ViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  id: ViewStateIgnoresCase
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: System.Web.UI.Control.ViewStateIgnoresCase
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> oggetto è tra maiuscole e minuscole."
  remarks: "Eseguire l&quot;override di questo metodo se si crea un controllo server personalizzato che salva lo stato di visualizzazione senza tener conto di case. Quando si esegue in modo più oggetti con la stessa chiave, ma con maiuscole e minuscole diverse, possono essere archiviati nel <xref:System.Web.UI.StateBag>associato il <xref:System.Web.UI.Control.ViewState%2A>proprietà.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  example:
  - "The following example demonstrates how to override the ViewStateIgnoresCase property to return `true`.  \n  \n [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._2_1.vb)]\n [!code-cs[System.Web.UI.Control_ViewStateIgnoresCase#2](~/add/codesnippet/csharp/p-system.web.ui.control._2_1.cs)]"
  syntax:
    content: protected virtual bool ViewStateIgnoresCase { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> istanza è tra maiuscole e minuscole; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.ViewStateIgnoresCase*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewStateMode
  id: ViewStateMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: System.Web.UI.Control.ViewStateMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta la modalità di stato di visualizzazione di questo controllo."
  remarks: "È possibile utilizzare la proprietà ViewStateMode per abilitare lo stato di visualizzazione per un singolo controllo, anche se lo stato di visualizzazione è disabilitato per la pagina. Per ulteriori informazioni sullo stato di visualizzazione e lo stato del controllo, vedere il <xref:System.Web.UI.Control.EnableViewState%2A>proprietà.</xref:System.Web.UI.Control.EnableViewState%2A>       Per disabilitare lo stato di visualizzazione per una pagina e abilitarlo per un controllo specifico nella pagina, impostare il <xref:System.Web.UI.Control.EnableViewState%2A>proprietà della pagina e il controllo `true`, impostare la proprietà ViewStateMode della pagina per <xref:System.Web.UI.ViewStateMode>e impostare la proprietà ViewStateMode del controllo da <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.EnableViewState%2A>       Il valore predefinito della proprietà ViewStateMode per una pagina è <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> Il valore predefinito della proprietà ViewStateMode per un controllo server Web in una pagina è <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> Di conseguenza, se non si imposta questa proprietà nella pagina o il livello di controllo, il valore della <xref:System.Web.UI.Control.EnableViewState%2A>proprietà determina il comportamento dello stato di visualizzazione.</xref:System.Web.UI.Control.EnableViewState%2A>       La proprietà ViewStateMode di una pagina o un controllo ha effetto solo se il <xref:System.Web.UI.Control.EnableViewState%2A>è impostata su `true`.</xref:System.Web.UI.Control.EnableViewState%2A> Se il <xref:System.Web.UI.Control.EnableViewState%2A>è impostata su `false`, lo stato di visualizzazione verrà disattivato anche se la proprietà ViewStateMode è impostata su <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }
    return:
      type: System.Web.UI.ViewStateMode
      description: "La modalità di stato di visualizzazione di questo controllo."
  overload: System.Web.UI.Control.ViewStateMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Per impostare questa proprietà su un valore che non si trova nello stato effettuato un tentativo di <xref href=&quot;System.Web.UI.ViewStateMode&quot;> </xref> enumerazione."
  platform:
  - net462
- uid: System.Web.UI.Control.Visible
  id: Visible
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Web.UI.Control.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un valore che indica se viene eseguito il rendering di un controllo server come interfaccia utente della pagina."
  remarks: "Se questa proprietà è `false`, non viene eseguito il controllo del server. È necessario considerare questo organizzare il layout della pagina.      > [!NOTE] > Se non viene eseguito un controllo contenitore, tutti i controlli in esso contenuti non vengono visualizzati anche se si imposta la proprietà Visible di un singolo controllo `true`. In questo caso, il singolo controllo restituisce `false` per la proprietà Visible anche se è stato impostato in modo esplicito `true`. (Ovvero, se il `Visible` del controllo padre è impostata su `false`, il controllo figlio eredita questa impostazione e l&quot;impostazione ha la precedenza su qualsiasi impostazione locale.)"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo è visibile nella pagina. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Control.#ctor
  parent: System.Web.UI.Control
  isExternal: false
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Web.UI.Control.Control()
- uid: System.Web.UI.Control.Adapter
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
  fullName: System.Web.UI.Control.Adapter
- uid: System.Web.UI.Adapters.ControlAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl(Control,Int32)
  nameWithType: Control.AddedControl(Control,Int32)
  fullName: System.Web.UI.Control.AddedControl(Control,Int32)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.Control.ApplyStyleSheetSkin(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing(TextWriter,Object)
  nameWithType: Control.BeginRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.BeginRenderTracing(TextWriter,Object)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Control.BindingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: System.Web.UI.Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree(String,Boolean)
  nameWithType: Control.BuildProfileTree(String,Boolean)
  fullName: System.Web.UI.Control.BuildProfileTree(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control.ChildControlsCreated
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: System.Web.UI.Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: System.Web.UI.Control.ClearCachedClientID()
- uid: System.Web.UI.Control.ClearChildControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: System.Web.UI.Control.ClearChildControlState()
- uid: System.Web.UI.Control.ClearChildState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: System.Web.UI.Control.ClearChildState()
- uid: System.Web.UI.Control.ClearChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: System.Web.UI.Control.ClearChildViewState()
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: System.Web.UI.Control.ClearEffectiveClientIDMode()
- uid: System.Web.UI.Control.ClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
  fullName: System.Web.UI.Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: System.Web.UI.Control.ClientIDMode
- uid: System.Web.UI.ClientIDMode
  parent: System.Web.UI
  isExternal: false
  name: ClientIDMode
  nameWithType: ClientIDMode
  fullName: System.Web.UI.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: System.Web.UI.Control.ClientIDSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Control.Context
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
  fullName: System.Web.UI.Control.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control.Controls
  parent: System.Web.UI.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Web.UI.Control.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.Control.CreateChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: System.Web.UI.Control.CreateChildControls()
- uid: System.Web.UI.Control.CreateControlCollection
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Control.CreateControlCollection()
  fullName: System.Web.UI.Control.CreateControlCollection()
- uid: System.Web.UI.Control.DataBind
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: System.Web.UI.Control.DataBind()
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: System.Web.UI.Control.DataBind(Boolean)
- uid: System.Web.UI.Control.DataBindChildren
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: System.Web.UI.Control.DataBindChildren()
- uid: System.Web.UI.Control.DataBinding
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: System.Web.UI.Control.DataBinding
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Control.DataItemContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: System.Web.UI.Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: System.Web.UI.Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: System.Web.UI.Control.DesignMode
- uid: System.Web.UI.Control.Dispose
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: System.Web.UI.Control.Dispose()
- uid: System.Web.UI.Control.Disposed
  parent: System.Web.UI.Control
  isExternal: false
  name: Disposed
  nameWithType: Control.Disposed
  fullName: System.Web.UI.Control.Disposed
- uid: System.Web.UI.Control.EnableTheming
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableTheming
  nameWithType: Control.EnableTheming
  fullName: System.Web.UI.Control.EnableTheming
- uid: System.Web.UI.Control.EnableViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: System.Web.UI.Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing(TextWriter,Object)
  nameWithType: Control.EndRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.EndRenderTracing(TextWriter,Object)
- uid: System.Web.UI.Control.EnsureChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: System.Web.UI.Control.EnsureChildControls()
- uid: System.Web.UI.Control.EnsureID
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: System.Web.UI.Control.EnsureID()
- uid: System.Web.UI.Control.Events
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
  fullName: System.Web.UI.Control.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.Control.FindControl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: System.Web.UI.Control.FindControl(String)
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String,Int32)
  nameWithType: Control.FindControl(String,Int32)
  fullName: System.Web.UI.Control.FindControl(String,Int32)
- uid: System.Web.UI.Control.Focus
  parent: System.Web.UI.Control
  isExternal: false
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Web.UI.Control.Focus()
- uid: System.Web.UI.Control.GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: System.Web.UI.Control.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: System.Web.UI.Control.GetRouteUrl(Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String,Object)
  nameWithType: Control.GetRouteUrl(String,Object)
  fullName: System.Web.UI.Control.GetRouteUrl(String,Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String,RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String,RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(String,RouteValueDictionary)
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: System.Web.UI.Control.GetUniqueIDRelativeTo(Control)
- uid: System.Web.UI.Control.HasChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: System.Web.UI.Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: System.Web.UI.Control.HasControls()
- uid: System.Web.UI.Control.HasEvents
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: System.Web.UI.Control.HasEvents()
- uid: System.Web.UI.Control.ID
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
  fullName: System.Web.UI.Control.ID
- uid: System.Web.UI.Control.IdSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: System.Web.UI.Control.IdSeparator
- uid: System.Web.UI.Control.Init
  parent: System.Web.UI.Control
  isExternal: false
  name: Init
  nameWithType: Control.Init
  fullName: System.Web.UI.Control.Init
- uid: System.Web.UI.Control.IsChildControlStateCleared
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: System.Web.UI.Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: System.Web.UI.Control.IsLiteralContent()
- uid: System.Web.UI.Control.IsTrackingViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: System.Web.UI.Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: System.Web.UI.Control.IsViewStateEnabled
- uid: System.Web.UI.Control.Load
  parent: System.Web.UI.Control
  isExternal: false
  name: Load
  nameWithType: Control.Load
  fullName: System.Web.UI.Control.Load
- uid: System.Web.UI.Control.LoadControlState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: Control.LoadControlState(Object)
  fullName: System.Web.UI.Control.LoadControlState(Object)
- uid: System.Web.UI.Control.LoadViewState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: Control.LoadViewState(Object)
  fullName: System.Web.UI.Control.LoadViewState(Object)
- uid: System.Web.UI.Control.LoadViewStateByID
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: System.Web.UI.Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: System.Web.UI.Control.MapPathSecure(String)
- uid: System.Web.UI.Control.NamingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: System.Web.UI.Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: Control.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: System.Web.UI.Control.OnDataBinding(EventArgs)
- uid: System.Web.UI.Control.OnInit(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Control.OnInit(EventArgs)
  fullName: System.Web.UI.Control.OnInit(EventArgs)
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: System.Web.UI.Control.OnLoad(EventArgs)
- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Control.OnPreRender(EventArgs)
  fullName: System.Web.UI.Control.OnPreRender(EventArgs)
- uid: System.Web.UI.Control.OnUnload(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: Control.OnUnload(EventArgs)
  fullName: System.Web.UI.Control.OnUnload(EventArgs)
- uid: System.Web.UI.Control.OpenFile(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: System.Web.UI.Control.OpenFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.UI.Control.Page
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
  fullName: System.Web.UI.Control.Page
- uid: System.Web.UI.Control.Parent
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Web.UI.Control.Parent
- uid: System.Web.UI.Control.PreRender
  parent: System.Web.UI.Control
  isExternal: false
  name: PreRender
  nameWithType: Control.PreRender
  fullName: System.Web.UI.Control.PreRender
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent(Object,EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.RaiseBubbleEvent(Object,EventArgs)
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: System.Web.UI.Control.RemovedControl(Control)
- uid: System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Control.Render(HtmlTextWriter)
  fullName: System.Web.UI.Control.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter,ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter,ControlAdapter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter,ControlAdapter)
- uid: System.Web.UI.Control.RenderingCompatibility
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: System.Web.UI.Control.RenderingCompatibility
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.UI.Control.ResolveAdapter
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: System.Web.UI.Control.ResolveAdapter()
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: System.Web.UI.Control.ResolveClientUrl(String)
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: System.Web.UI.Control.ResolveUrl(String)
- uid: System.Web.UI.Control.SaveControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveControlState()
  nameWithType: Control.SaveControlState()
  fullName: System.Web.UI.Control.SaveControlState()
- uid: System.Web.UI.Control.SaveViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveViewState()
  nameWithType: Control.SaveViewState()
  fullName: System.Web.UI.Control.SaveViewState()
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod)
- uid: System.Web.UI.RenderMethod
  parent: System.Web.UI
  isExternal: false
  name: RenderMethod
  nameWithType: RenderMethod
  fullName: System.Web.UI.RenderMethod
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object,Object)
  nameWithType: Control.SetTraceData(Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object,Object,Object)
  nameWithType: Control.SetTraceData(Object,Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object,Object)
- uid: System.Web.UI.Control.Site
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: System.Web.UI.Control.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Web.UI.Control.SkinID
  parent: System.Web.UI.Control
  isExternal: false
  name: SkinID
  nameWithType: Control.SkinID
  fullName: System.Web.UI.Control.SkinID
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  fullName: System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.ControlBuilder
  parent: System.Web.UI
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.DataBindingCollection
  parent: System.Web.UI
  isExternal: false
  name: DataBindingCollection
  nameWithType: DataBindingCollection
  fullName: System.Web.UI.DataBindingCollection
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.Expressions
- uid: System.Web.UI.ExpressionBindingCollection
  parent: System.Web.UI
  isExternal: false
  name: ExpressionBindingCollection
  nameWithType: ExpressionBindingCollection
  fullName: System.Web.UI.ExpressionBindingCollection
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.TemplateControl
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: System.Web.UI.Control.TemplateControl
- uid: System.Web.UI.TemplateControl
  parent: System.Web.UI
  isExternal: false
  name: TemplateControl
  nameWithType: TemplateControl
  fullName: System.Web.UI.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: System.Web.UI.Control.TemplateSourceDirectory
- uid: System.Web.UI.Control.TrackViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: TrackViewState()
  nameWithType: Control.TrackViewState()
  fullName: System.Web.UI.Control.TrackViewState()
- uid: System.Web.UI.Control.UniqueID
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: System.Web.UI.Control.UniqueID
- uid: System.Web.UI.Control.Unload
  parent: System.Web.UI.Control
  isExternal: false
  name: Unload
  nameWithType: Control.Unload
  fullName: System.Web.UI.Control.Unload
- uid: System.Web.UI.Control.ValidateRequestMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: System.Web.UI.Control.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
  fullName: System.Web.UI.Control.ViewState
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: System.Web.UI.Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: System.Web.UI.Control.ViewStateMode
- uid: System.Web.UI.ViewStateMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateMode
  nameWithType: ViewStateMode
  fullName: System.Web.UI.ViewStateMode
- uid: System.Web.UI.Control.Visible
  parent: System.Web.UI.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Web.UI.Control.Visible
- uid: System.Web.UI.Control.#ctor*
  parent: System.Web.UI.Control
  isExternal: false
  name: Control
  nameWithType: Control.Control
- uid: System.Web.UI.Control.Adapter*
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
- uid: System.Web.UI.Control.AddedControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl
  nameWithType: Control.AddedControl
- uid: System.Web.UI.Control.AddParsedSubObject*
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Control.AddParsedSubObject
- uid: System.Web.UI.Control.ApplyStyleSheetSkin*
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin
  nameWithType: Control.ApplyStyleSheetSkin
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory*
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
- uid: System.Web.UI.Control.BeginRenderTracing*
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing
  nameWithType: Control.BeginRenderTracing
- uid: System.Web.UI.Control.BindingContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree*
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree
  nameWithType: Control.BuildProfileTree
- uid: System.Web.UI.Control.ChildControlsCreated*
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID
  nameWithType: Control.ClearCachedClientID
- uid: System.Web.UI.Control.ClearChildControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState
  nameWithType: Control.ClearChildControlState
- uid: System.Web.UI.Control.ClearChildState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState
  nameWithType: Control.ClearChildState
- uid: System.Web.UI.Control.ClearChildViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState
  nameWithType: Control.ClearChildViewState
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode
  nameWithType: Control.ClearEffectiveClientIDMode
- uid: System.Web.UI.Control.ClientID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
- uid: System.Web.UI.Control.Context*
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
- uid: System.Web.UI.Control.Controls*
  parent: System.Web.UI.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
- uid: System.Web.UI.Control.CreateChildControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls
  nameWithType: Control.CreateChildControls
- uid: System.Web.UI.Control.CreateControlCollection*
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateControlCollection
  nameWithType: Control.CreateControlCollection
- uid: System.Web.UI.Control.DataBind*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind
  nameWithType: Control.DataBind
- uid: System.Web.UI.Control.DataBindChildren*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren
  nameWithType: Control.DataBindChildren
- uid: System.Web.UI.Control.DataItemContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
- uid: System.Web.UI.Control.Dispose*
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose
  nameWithType: Control.Dispose
- uid: System.Web.UI.Control.EnableTheming*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableTheming
  nameWithType: Control.EnableTheming
- uid: System.Web.UI.Control.EnableViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing*
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing
  nameWithType: Control.EndRenderTracing
- uid: System.Web.UI.Control.EnsureChildControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls
  nameWithType: Control.EnsureChildControls
- uid: System.Web.UI.Control.EnsureID*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID
  nameWithType: Control.EnsureID
- uid: System.Web.UI.Control.Events*
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
- uid: System.Web.UI.Control.FindControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl
  nameWithType: Control.FindControl
- uid: System.Web.UI.Control.Focus*
  parent: System.Web.UI.Control
  isExternal: false
  name: Focus
  nameWithType: Control.Focus
- uid: System.Web.UI.Control.GetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState
  nameWithType: Control.GetDesignModeState
- uid: System.Web.UI.Control.GetRouteUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl
  nameWithType: Control.GetRouteUrl
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo
  nameWithType: Control.GetUniqueIDRelativeTo
- uid: System.Web.UI.Control.HasChildViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls
  nameWithType: Control.HasControls
- uid: System.Web.UI.Control.HasEvents*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents
  nameWithType: Control.HasEvents
- uid: System.Web.UI.Control.ID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
- uid: System.Web.UI.Control.IdSeparator*
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
- uid: System.Web.UI.Control.IsChildControlStateCleared*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent
  nameWithType: Control.IsLiteralContent
- uid: System.Web.UI.Control.IsTrackingViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
- uid: System.Web.UI.Control.LoadControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadControlState
  nameWithType: Control.LoadControlState
- uid: System.Web.UI.Control.LoadViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewState
  nameWithType: Control.LoadViewState
- uid: System.Web.UI.Control.LoadViewStateByID*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure*
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure
  nameWithType: Control.MapPathSecure
- uid: System.Web.UI.Control.NamingContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent
  nameWithType: Control.OnBubbleEvent
- uid: System.Web.UI.Control.OnDataBinding*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding
  nameWithType: Control.OnDataBinding
- uid: System.Web.UI.Control.OnInit*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnInit
  nameWithType: Control.OnInit
- uid: System.Web.UI.Control.OnLoad*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad
  nameWithType: Control.OnLoad
- uid: System.Web.UI.Control.OnPreRender*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnPreRender
  nameWithType: Control.OnPreRender
- uid: System.Web.UI.Control.OnUnload*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnUnload
  nameWithType: Control.OnUnload
- uid: System.Web.UI.Control.OpenFile*
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile
  nameWithType: Control.OpenFile
- uid: System.Web.UI.Control.Page*
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
- uid: System.Web.UI.Control.Parent*
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
- uid: System.Web.UI.Control.RaiseBubbleEvent*
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent
  nameWithType: Control.RaiseBubbleEvent
- uid: System.Web.UI.Control.RemovedControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl
  nameWithType: Control.RemovedControl
- uid: System.Web.UI.Control.Render*
  parent: System.Web.UI.Control
  isExternal: false
  name: Render
  nameWithType: Control.Render
- uid: System.Web.UI.Control.RenderChildren*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren
  nameWithType: Control.RenderChildren
- uid: System.Web.UI.Control.RenderControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl
  nameWithType: Control.RenderControl
- uid: System.Web.UI.Control.RenderingCompatibility*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
- uid: System.Web.UI.Control.ResolveAdapter*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter
  nameWithType: Control.ResolveAdapter
- uid: System.Web.UI.Control.ResolveClientUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl
  nameWithType: Control.ResolveClientUrl
- uid: System.Web.UI.Control.ResolveUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl
  nameWithType: Control.ResolveUrl
- uid: System.Web.UI.Control.SaveControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveControlState
  nameWithType: Control.SaveControlState
- uid: System.Web.UI.Control.SaveViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveViewState
  nameWithType: Control.SaveViewState
- uid: System.Web.UI.Control.SetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState
  nameWithType: Control.SetDesignModeState
- uid: System.Web.UI.Control.SetRenderMethodDelegate*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate
  nameWithType: Control.SetRenderMethodDelegate
- uid: System.Web.UI.Control.SetTraceData*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData
  nameWithType: Control.SetTraceData
- uid: System.Web.UI.Control.Site*
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
- uid: System.Web.UI.Control.SkinID*
  parent: System.Web.UI.Control
  isExternal: false
  name: SkinID
  nameWithType: Control.SkinID
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject
- uid: System.Web.UI.Control.TemplateControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory*
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
- uid: System.Web.UI.Control.TrackViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: TrackViewState
  nameWithType: Control.TrackViewState
- uid: System.Web.UI.Control.UniqueID*
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
- uid: System.Web.UI.Control.ValidateRequestMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
- uid: System.Web.UI.Control.ViewStateIgnoresCase*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
- uid: System.Web.UI.Control.Visible*
  parent: System.Web.UI.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
