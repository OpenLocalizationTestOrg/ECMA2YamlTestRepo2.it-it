### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "Fornisce query sulle funzionalità specifiche del sistema operativo."
  remarks: "Utilizzare il `static` istanza di questa classe a cui il <xref:System.Windows.Forms.OSFeature.Feature%2A>proprietà per eseguire query per le funzionalità del sistema operativo.</xref:System.Windows.Forms.OSFeature.Feature%2A> È possibile creare un&quot;istanza di questa classe.       Per determinare la versione di una funzionalità, chiamare il <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metodo.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Per determinare se è presente una funzionalità o una versione specifica, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>(metodo) e specificare la funzionalità per cercare con gli identificatori di funzionalità disponibili in questa classe.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> classe."
  remarks: "Questa classe non può essere creata un&quot;istanza. Per eseguire una query per le funzionalità del sistema operativo, utilizzare il `static` istanza <xref:System.Windows.Forms.OSFeature>disponibili in questa classe.</xref:System.Windows.Forms.OSFeature>"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene un <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> istanza il <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> classe da utilizzare per le query sulle funzionalità. Questa proprietà è di sola lettura."
  remarks: "Utilizzare questo `static` proprietà per eseguire query per le funzionalità del sistema operativo. È possibile creare un&quot;istanza di questa classe.       Per determinare la versione di una funzionalità, chiamare il <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metodo.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Per determinare se è presente una funzionalità o una versione specifica, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>(metodo) e specificare la funzionalità per cercare con gli identificatori di funzionalità disponibili in questa classe.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "Un&quot;istanza di <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> classe."
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera la versione della funzionalità specificata è attualmente disponibile nel sistema."
  remarks: "Utilizzare il <xref:System.Windows.Forms.OSFeature.Feature%2A>proprietà, il `static` istanza <xref:System.Windows.Forms.OSFeature>forniti in questa classe per eseguire query per il numero di versione di una funzionalità.</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "La funzionalità la cui versione è richiesta, <xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;> </xref> o <xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>."
    return:
      type: System.Version
      description: "Oggetto <xref:System.Version>che rappresenta la versione della funzionalità del sistema operativo specificata attualmente disponibile nel sistema; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la funzionalità non viene trovata.</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera un valore che indica se il sistema operativo supporta la funzionalità specificata o la metrica."
  remarks: "In genere, utilizzare il metodo IsPresent per determinare se il sistema operativo supporta la funzionalità specifica o metrica identificato da `enumValue`. In base al valore restituito da IsPresent, nel codice vengono eseguite azioni condizionali. Ad esempio, se questo metodo con un valore del parametro <xref:System.Windows.Forms.SystemParameter>restituisce `true`, è possibile creare menu creato dal proprietario dell&quot;applicazione in uno stile flat.</xref:System.Windows.Forms.SystemParameter>       L&quot;accesso ad alcune funzionalità di sistema o una metrica può generare eccezioni se non sono disponibili in una versione specifica del sistema operativo. In questo caso, utilizzare innanzitutto la corrispondente <xref:System.Windows.Forms.SystemParameter>valore di enumerazione, insieme a IsPresent, per determinare se la metrica è supportata.</xref:System.Windows.Forms.SystemParameter> Ad esempio, chiamare IsPresent con <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>prima di ottenere il <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>valore della proprietà.</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "Oggetto <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref> che rappresenta la funzionalità per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la funzionalità è disponibile nel sistema. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Rappresenta la funzionalità di windows a più livelli di livello superiore. Questo campo è di sola lettura."
  remarks: "Una finestra a livelli può essere reso trasparente o semitrasparente dal sistema operativo. Supporto per windows su più livelli è stata introdotta in Windows 2000. Per ulteriori informazioni, vedere la &quot;a più livelli Windows: nuovo modo per utilizzare traslucidità e trasparenza effetti in Windows Applications&quot; nella documentazione di Platform SDK http://msdn.microsoft.com.       Per determinare se è installata la funzionalità di windows a più livelli, utilizzare il <xref:System.Windows.Forms.OSFeature.Feature%2A>proprietà per chiamare il metodo della classe base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>con LayeredWindows come la funzionalità per la ricerca for</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       In alternativa, è possibile verificare se la funzionalità viene installata chiamando il <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metodo con LayeredWindows come la funzionalità di ricerca.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Rappresenta la funzionalità di temi del sistema operativo. Questo campo è di sola lettura."
  remarks: "Un tema è una raccolta di impostazioni di interfaccia visiva che includono sfondi, cursori, tipi di carattere, suoni e icone introdotte in Microsoft Plus! per Windows 95. .NET Framework non supporta direttamente la gestione dei temi, benché sia disponibile un supporto completo per gli stili di visualizzazione nel <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>dello spazio dei nomi.</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> Per ulteriori informazioni su temi di Windows, vedere gli argomenti, temi e stili di visualizzazione e riferimenti a Visual stili in Win32 SDK.       Per determinare se è installata la funzionalità di temi, chiamare il metodo della classe base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>con temi come la funzionalità per la ricerca for.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       In alternativa, è possibile verificare se la funzionalità viene installata chiamando il <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metodo con temi come funzionalità da ricercare.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
