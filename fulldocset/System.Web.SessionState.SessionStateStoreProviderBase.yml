### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Definisce i membri di un provider di stato della sessione per un archivio dati."
  remarks: "Stato della sessione ASP.NET legge e scrive provider dell&quot;archivio dei dati della sessione in un archivio di dati tramite una sessione. Un provider dell&quot;archivio dello stato sessione è una classe che eredita la classe astratta SessionStateStoreProviderBase ed esegue l&quot;override dei membri con implementazioni specifiche dell&quot;archivio dati. Il provider dell&quot;archivio dello stato della sessione viene chiamato dalla <xref:System.Web.SessionState.SessionStateModule>classe durante l&quot;elaborazione di una pagina ASP.NET per comunicare con l&quot;archivio dati per l&quot;archiviazione e recupero delle variabili di sessione e informazioni sulla sessione correlate, ad esempio il valore di timeout.</xref:System.Web.SessionState.SessionStateModule>       Dati di sessione all&quot;interno di ogni applicazione ASP.NET vengono archiviati separatamente per ogni <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>proprietà.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Applicazioni ASP.NET non condivide dati della sessione.       È possibile specificare un&quot;implementazione personalizzata di SessionStateStoreProviderBase per un&quot;applicazione ASP.NET impostando il `mode` attributo del `sessionState` elemento di configurazione <xref:System.Web.SessionState.SessionStateMode>e `customProvider` attributo sul nome del provider personalizzato, come illustrato nell&quot;esempio di questo argomento.</xref:System.Web.SessionState.SessionStateMode>      ## Il blocco applicazioni per sessione archivio dati perché ASP.NET sono multithreading e supportano la risposta a richieste simultanee, è possibile che le richieste simultanee potrebbero tentare di accedere alle stesse informazioni di sessione. Si consideri uno scenario in cui più frame in un set di frame accedono alla stessa applicazione. Le singole richieste per ogni frame incluso nel set possono essere eseguite nel server Web contemporaneamente in thread diversi. Se le pagine ASP.NET per ogni origine di frame di accedere alle variabili di sessione, quindi è possibile che più thread accedono contemporaneamente l&quot;archivio di sessione.       Per evitare conflitti di dati di archivio della sessione e un comportamento imprevisto dello stato della sessione, il <xref:System.Web.SessionState.SessionStateModule>SessionStateStoreProviderBase classi e includono funzionalità di blocco che esclusivamente di bloccare l&quot;elemento per una particolare sessione per la durata dell&quot;esecuzione di una pagina ASP.NET.</xref:System.Web.SessionState.SessionStateModule> Si noti che, anche se il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è contrassegnato come `ReadOnly`, altre pagine ASP.NET nella stessa applicazione potrebbero essere in grado di scrivere nell&quot;archivio di sessione, è possibile che una richiesta di sessione di sola lettura dati dall&quot;archivio potrebbe essere ancora in attesa di blocco applicato ai dati da liberare.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Viene impostato un blocco sui dati dell&quot;archivio di sessione all&quot;inizio della richiesta, nella chiamata al <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Al completamento della richiesta, il blocco viene rilasciato durante la chiamata di <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Se il <xref:System.Web.SessionState.SessionStateModule>oggetto rileva i dati della sessione bloccata durante la chiamata a uno di <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>(metodo), richiederà nuovamente i dati della sessione a intervalli di mezzo secondo fino a quando viene rilasciato il blocco o la quantità di tempo in cui i dati della sessione sono stati bloccati supera il valore del <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>proprietà.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> Se viene superato il timeout di esecuzione, il <xref:System.Web.SessionState.SessionStateModule>oggetto chiamerà il <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodo per sbloccare i dati dell&quot;archivio di sessione e richiedere i dati dell&quot;archivio di sessione in quel momento.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Perché bloccato dell&quot;archivio dati potrebbero essere stati sbloccati da una chiamata al <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodo in un thread separato prima della chiamata al <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metodo per la risposta corrente, è stato effettuato un tentativo di impostare e rilasciare i dati dell&quot;archivio dello stato della sessione che sono già stati rilasciati e modificati da un&quot;altra sessione.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Per evitare questa situazione, il <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>i metodi restituiscono un identificatore di blocco.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Questo identificatore deve essere incluso in ciascuna richiesta di modifica di dati bloccati. Dell&quot;archivio dati vengono modificati solo se l&quot;identificatore di blocco nell&quot;archivio dati corrisponde all&quot;identificatore di blocco fornito da <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>      ## L&quot;eliminazione scaduto sessione archiviare dati quando il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo viene chiamato per una determinata sessione, i dati per la sessione vengono eliminati dall&quot;archivio dati utilizzando il <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metodo; in caso contrario, i dati rimarranno nell&quot;archivio dati della sessione alle richieste future server per la sessione.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> In questo caso, l&quot;implementazione di SessionStateStoreProviderBase per eliminare i dati di sessione scaduti."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe."
  remarks: "Non è necessario implementare un costruttore per una classe che eredita la <xref:System.Web.SessionState.SessionStateStoreProviderBase>classe astratta.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Valori di inizializzazione per un <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementazione vengono passati al <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>implementazione del metodo.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Crea un nuovo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> oggetto da utilizzare per la richiesta corrente."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo CreateNewStoreData all&quot;inizio di una richiesta per una pagina ASP.NET, durante il <xref:System.Web.HttpApplication.AcquireRequestState>evento.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Viene chiamato il metodo CreateNewStoreData se:: la richiesta in ingresso non esiste alcun ID di sessione o - della richiesta in ingresso avvia una sessione di ID, ma la sessione non viene trovato nell&quot;archivio dati.       Crea un nuovo metodo CreateNewStoreData <xref:System.Web.SessionState.SessionStateStoreData>oggetto con un oggetto vuoto <xref:System.Web.SessionState.ISessionStateItemCollection>oggetto, un <xref:System.Web.HttpStaticObjectsCollection>insieme e il valore specificato `timeout` valore.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> Il <xref:System.Web.HttpStaticObjectsCollection>raccolta per l&quot;applicazione ASP.NET può essere recuperato tramite il <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>metodo.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: timeout
      type: System.Int32
      description: "Lo stato della sessione <xref:System.Web.SessionState.HttpSessionState.Timeout*>valore per il nuovo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Un nuovo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> per la richiesta corrente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aggiunge un nuovo elemento di sessione nell&quot;archivio dati."
  remarks: "Viene utilizzato il metodo CreateUninitializedItem con sessioni quando il `cookieless` e `regenerateExpiredSessionId` gli attributi sono entrambi `true`. Con il `regenerateExpiredSessionId attribute` impostato su `true` provoca il <xref:System.Web.SessionState.SessionStateModule>oggetto per generare un nuovo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore se scaduto <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>viene rilevato un valore.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Il processo di generazione di un nuovo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore richiede il reindirizzamento del browser a un URL contenente appena generato <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Il metodo CreateUninitializedItem viene chiamato durante la richiesta iniziale contenente scaduta <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Dopo il <xref:System.Web.SessionState.SessionStateModule>acquisisce un nuovo oggetto <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore per sostituire il valore scaduto, viene chiamato il metodo CreateUninitializedItem per aggiungere una voce non inizializzata all&quot;archivio dati dello stato della sessione.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> Il browser viene quindi reindirizzato all&quot;URL contenente appena generato <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> L&quot;esistenza della voce nell&quot;archivio dati della sessione non inizializzata garantisce che la richiesta reindirizzata che include appena generato <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore non venga scambiata per una richiesta di una sessione scaduta e trattata come una nuova sessione.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       La voce non inizializzata nell&quot;archivio dati della sessione è associata a appena generato <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore e contiene solo i valori predefiniti, tra cui la data di scadenza e l&quot;ora e un valore che corrisponde alla `actionFlags` parametro del <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metodi.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> La voce non inizializzata nell&quot;archivio dello stato sessione deve includere un `actionFlags` uguale al valore di <xref:System.Web.SessionState.SessionStateActions>valore di enumerazione.</xref:System.Web.SessionState.SessionStateActions> Questo valore viene passato per il <xref:System.Web.SessionState.SessionStateModule>dell&quot;oggetto dal <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metodi e informa il <xref:System.Web.SessionState.SessionStateModule>che la sessione corrente è un nuovo tipo, ma non inizializzato sessione.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> Il <xref:System.Web.SessionState.SessionStateModule>oggetto quindi inizializzare la nuova sessione e genererà il `Session_OnStart` evento.</xref:System.Web.SessionState.SessionStateModule>       Per ulteriori informazioni sulle sessioni senza cookie, vedere il <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>proprietà.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Il <xref:System.Web.SessionState.HttpSessionState.SessionID*>per la richiesta corrente.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "La sessione <xref:System.Web.SessionState.HttpSessionState.Timeout*>per la richiesta corrente.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> implementazione."
  remarks: "Il metodo Dispose viene chiamato quando il <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>il metodo viene eseguito alla chiusura del dominio dell&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> Le classi che ereditano la <xref:System.Web.SessionState.SessionStateStoreProviderBase>classe è possibile utilizzare questo metodo per liberare le risorse non è più in uso.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chiamato dal <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> oggetto alla fine di una richiesta."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo EndRequest alla fine di una richiesta per una pagina ASP.NET, durante il <xref:System.Web.HttpApplication.EndRequest>evento.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> È possibile utilizzare il metodo EndRequest per eseguire le operazioni di pulitura per ogni richiesta richiesti dal provider dell&quot;archivio dello stato di sessione."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Restituisce i dati dello stato della sessione di sola lettura dall&quot;archivio dati della sessione."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo GetItem all&quot;inizio di una richiesta, durante il <xref:System.Web.HttpApplication.AcquireRequestState>evento, quando il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è impostato su `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Se il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è impostato su `true`, <xref:System.Web.SessionState.SessionStateModule>chiamate invece dell&quot;oggetto di <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>(metodo).</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Il metodo GetItem restituisce un <xref:System.Web.SessionState.SessionStateStoreData>oggetto popolato con informazioni di sessione dall&quot;archivio dati e aggiorna la data di scadenza dei dati della sessione.</xref:System.Web.SessionState.SessionStateStoreData> Se viene trovato alcun dato di elemento di sessione nell&quot;archivio dati, il metodo GetItem imposta il `locked``out` parametro `false` e restituisce `null`. In questo modo il <xref:System.Web.SessionState.SessionStateModule>oggetto su cui chiamare il <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metodo per creare un nuovo elemento di sessione nell&quot;archivio dati.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Se dell&quot;elemento di sessione dati sono stati trovati nell&quot;archivio dati ma i dati sono bloccati, il metodo imposta GetItem il `locked``out` parametro `true`, imposta il `lockAge``out` parametro (che viene recuperato dall&quot;archivio dati), imposta la data corrente e l&quot;ora meno la data e ora quando l&quot;elemento è stato bloccato il `lockId``out` parametro per l&quot;identificatore di blocco recuperato dall&quot;archivio dati e restituisce `null`. In questo modo il <xref:System.Web.SessionState.SessionStateModule>oggetto chiamare il metodo GetItem dopo un intervallo di mezzo secondo per tentare di recuperare le informazioni sull&quot;elemento di sessione.</xref:System.Web.SessionState.SessionStateModule>       Se il valore che il `lockAge``out` parametro è impostato su superano il <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valore, il <xref:System.Web.SessionState.SessionStateModule>chiama il <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodo per eliminare il blocco sui dati dell&quot;elemento di sessione e quindi chiama il metodo GetItem nuovamente.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       Il `actionFlags` parametro viene utilizzato quando sia il `cookieless` e `regenerateExpiredSessionId` gli attributi sono impostati `true`. Un `actionFlags` valore impostato su <xref:System.Web.SessionState.SessionStateActions>indica che la voce nell&quot;archivio dati della sessione è una nuova sessione che richiede l&quot;inizializzazione.</xref:System.Web.SessionState.SessionStateActions> Le voci non inizializzate nell&quot;archivio dati della sessione vengono create da una chiamata al <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Se l&quot;elemento dall&quot;archivio dati della sessione non è un elemento non inizializzato, il `actionFlags` parametro verrà impostato su zero.       I responsabili dell&quot;implementazione dell&quot;archivio dello stato sessione personalizzato che supporta sessioni senza cookie deve impostare la `actionFlags` `out` parametro sul valore restituito dall&quot;archivio dati della sessione per l&quot;elemento corrente. Se il `actionFlags` valore del parametro per archiviare la sessione richiesta è uguale a elemento il <xref:System.Web.SessionState.SessionStateActions>valore di enumerazione, il metodo GetItem deve impostare il valore nell&quot;archivio dati a zero dopo l&quot;impostazione di `actionFlags` `out` parametro.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Il <xref:System.Web.SessionState.HttpSessionState.SessionID*>per la richiesta corrente.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore booleano che è impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se l&quot;elemento di sessione richiesto è bloccata nell&quot;archivio dati di sessione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Quando termina, questo metodo contiene un <xref:System.TimeSpan>oggetto impostato per la quantità di tempo che un elemento nell&quot;archivio dati della sessione è stato bloccato.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Quando termina, questo metodo contiene un oggetto che è impostato sull&quot;identificatore di blocco per la richiesta corrente. Per informazioni dettagliate sull&quot;identificatore di blocco, vedere &quot;Blocco dell&quot;archivio dati&quot; nella <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe riepilogo."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Quando questo metodo viene restituito, contiene uno del <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> valori, che indica se la sessione corrente è una sessione senza cookie non inizializzata."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Oggetto <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> popolato con i valori della sessione e le informazioni dall&quot;archivio dati della sessione."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Restituisce i dati dello stato della sessione di sola lettura dall&quot;archivio dati della sessione."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo GetItemExclusive all&quot;inizio di una richiesta, durante il <xref:System.Web.HttpApplication.AcquireRequestState>evento, quando il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è impostato su `true`, ovvero l&quot;impostazione predefinita.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Se il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è impostato su `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule>chiamate invece dell&quot;oggetto di <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>(metodo).</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Il metodo GetItemExclusive restituisce un <xref:System.Web.SessionState.SessionStateStoreData>oggetto popolato con informazioni di sessione dall&quot;archivio dati, aggiorna la data di scadenza dei dati archiviati e blocca i dati dell&quot;elemento di sessione nell&quot;archivio dati per la durata della richiesta.</xref:System.Web.SessionState.SessionStateStoreData> Se viene trovato alcun dato di elemento di sessione nell&quot;archivio dati, il metodo GetItemExclusive imposta il `locked` `out` parametro `false` e restituisce `null`. In questo modo il <xref:System.Web.SessionState.SessionStateModule>oggetto su cui chiamare il <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metodo per creare un nuovo elemento di sessione nell&quot;archivio dati.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Se dell&quot;elemento di sessione dati sono stati trovati nell&quot;archivio dati ma i dati sono bloccati, il metodo imposta GetItemExclusive il `locked` `out` parametro `true`, imposta il `lockAge` `out` parametro (che viene recuperato dall&quot;archivio dati), imposta la data corrente e l&quot;ora meno la data e ora quando l&quot;elemento è stato bloccato il `lockId` `out` parametro per l&quot;identificatore di blocco recuperato dall&quot;archivio dati e restituisce `null`. In questo modo il <xref:System.Web.SessionState.SessionStateModule>oggetto chiamare il metodo GetItemExclusive dopo un intervallo di mezzo secondo per tentare di recuperare le informazioni dell&quot;elemento di sessione e ottenere un blocco sui dati.</xref:System.Web.SessionState.SessionStateModule> Se il valore che il `lockAge` `out` parametro è impostato su supera il <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valore, il <xref:System.Web.SessionState.SessionStateModule>chiamate di <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodo per eliminare il blocco sui dati dell&quot;elemento di sessione e quindi chiama il metodo GetItemExclusive nuovamente.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       Il `actionFlags` parametro viene utilizzato quando il `cookieless` e `regenerateExpiredSessionId` gli attributi sono impostati entrambi su `true`. Un `actionFlags` valore impostato su <xref:System.Web.SessionState.SessionStateActions>indica che la voce nell&quot;archivio dati della sessione è una nuova sessione che richiede l&quot;inizializzazione.</xref:System.Web.SessionState.SessionStateActions> Le voci non inizializzate nell&quot;archivio dati della sessione vengono create da una chiamata al <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Se l&quot;elemento dall&quot;archivio dati della sessione non è un elemento non inizializzato, il `actionFlags` parametro verrà impostato su zero.       I responsabili dell&quot;implementazione dell&quot;archivio dello stato sessione personalizzato che supporta sessioni senza cookie deve impostare la `actionFlags` `out` parametro sul valore restituito dall&quot;archivio dati della sessione per l&quot;elemento corrente. Se il `actionFlags` valore del parametro per archiviare la sessione richiesta è uguale a elemento il <xref:System.Web.SessionState.SessionStateActions>valore di enumerazione, il metodo GetItemExclusive deve impostare il valore nell&quot;archivio dati a zero dopo l&quot;impostazione di `actionFlags` `out` parametro.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Il <xref:System.Web.SessionState.HttpSessionState.SessionID*>per la richiesta corrente.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore booleano che è impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> correttamente ottenuta; in caso contrario, se un blocco <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Quando termina, questo metodo contiene un <xref:System.TimeSpan>oggetto impostato per la quantità di tempo che un elemento nell&quot;archivio dati della sessione è stato bloccato.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Quando termina, questo metodo contiene un oggetto che è impostato sull&quot;identificatore di blocco per la richiesta corrente. Per informazioni dettagliate sull&quot;identificatore di blocco, vedere &quot;Blocco dell&quot;archivio dati&quot; nella <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe riepilogo."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Quando questo metodo viene restituito, contiene uno del <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> valori, che indica se la sessione corrente è una sessione senza cookie non inizializzata."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Oggetto <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> popolato con i valori della sessione e le informazioni dall&quot;archivio dati della sessione."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chiamato dal <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> oggetto per l&quot;inizializzazione di ogni richiesta."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo InitializeRequest prima di chiamare qualsiasi altra <xref:System.Web.SessionState.SessionStateStoreProviderBase>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> È possibile utilizzare il metodo InitializeRequest per eseguire qualsiasi inizializzazione richiesta richiesti dal provider dell&quot;archivio dello stato di sessione."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Versioni di archiviare un blocco su un elemento di dati della sessione."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo ReleaseItemExclusive per aggiornare la data di scadenza e rilasciare un blocco su un elemento nell&quot;archivio dati della sessione.</xref:System.Web.SessionState.SessionStateModule> Viene chiamato alla fine di una richiesta, durante il <xref:System.Web.HttpApplication.ReleaseRequestState>evento, se i valori della sessione non sono cambiati.</xref:System.Web.HttpApplication.ReleaseRequestState> Se sono stati modificati i valori della sessione, il <xref:System.Web.SessionState.SessionStateModule>chiamate invece dell&quot;oggetto di <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metodo.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama anche il metodo ReleaseItemExclusive quando un blocco su un elemento nell&quot;archivio dati della sessione ha superato il <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valore.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Per ulteriori informazioni sul blocco e i dettagli relativi all&quot;identificatore di blocco, vedere &quot;Blocco dei dati dell&quot;archivio di sessione&quot; nel <xref:System.Web.SessionState.SessionStateStoreProviderBase>Cenni preliminari sulla classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Il metodo ReleaseItemExclusive rimuove solo il blocco da un elemento nell&quot;archivio dati della sessione per l&quot;applicazione corrente che corrisponde a sessione fornito `id` e `lockId` valori. Se il `lockId` non non corrisponde a quello nell&quot;archivio dati, il metodo ReleaseItemExclusive non esegue alcuna operazione."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Identificatore di sessione per la richiesta corrente."
    - id: lockId
      type: System.Object
      description: "L&quot;identificatore di blocco per la richiesta corrente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Eliminazioni di elementi dati dall&quot;archivio dati della sessione."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo RemoveItem alla fine di una richiesta, durante il <xref:System.Web.HttpApplication.ReleaseRequestState>evento, per eliminare i dati per un elemento di sessione dall&quot;archivio dati della sessione se il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo è stato chiamato.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Solo i dati di sessione per l&quot;applicazione corrente che corrisponde a sessione fornito `id` e `lockId` valori viene eliminato. Per ulteriori informazioni sul blocco e i dettagli relativi all&quot;identificatore di blocco, vedere &quot;Blocco dei dati dell&quot;archivio di sessione&quot; nel <xref:System.Web.SessionState.SessionStateStoreProviderBase>Cenni preliminari sulla classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Identificatore di sessione per la richiesta corrente."
    - id: lockId
      type: System.Object
      description: "L&quot;identificatore di blocco per la richiesta corrente."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "Il <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> che rappresenta l&quot;elemento da eliminare dall&quot;archivio dati."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aggiorna la data di scadenza e l&quot;ora di un elemento nell&quot;archivio dati della sessione."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo ResetItemTimeout per aggiornare la data di scadenza e l&quot;ora per una sessione per la data corrente, ora e la sessione <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>valore quando entrambi: - il <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo `true`, o - la richiesta non è stato generato il <xref:System.Web.HttpApplication.AcquireRequestState>e <xref:System.Web.HttpApplication.ReleaseRequestState>eventi a causa di un errore.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       Se è richiesta una pagina ASP.NET e <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributo è impostato su `false`, il metodo ResetItemTimeout viene comunque chiamato per aggiornare la data di scadenza e l&quot;ora dei dati nell&quot;archivio dati della sessione.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Identificatore di sessione per la richiesta corrente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aggiorna le informazioni dell&quot;elemento di sessione nell&quot;archivio dati di sessione con i valori della richiesta corrente e cancella il blocco dei dati."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo SetAndReleaseItemExclusive alla fine di una richiesta, durante il <xref:System.Web.HttpApplication.ReleaseRequestState>evento, per inserire informazioni relative all&quot;elemento di sessione corrente nell&quot;archivio dati o aggiornare le informazioni dell&quot;elemento di sessione esistenti nell&quot;archivio dati con i valori correnti, per aggiornare l&quot;ora di scadenza per l&quot;elemento e per rilasciare il blocco sui dati.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Solo i dati di sessione per l&quot;applicazione corrente che corrisponde a sessione fornito `id` e `lockId` valori viene aggiornato. Per ulteriori informazioni sui blocchi, vedere &quot;Blocco di dati di archivio di sessione&quot; nel <xref:System.Web.SessionState.SessionStateStoreProviderBase>Cenni preliminari sulla classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Se i valori della sessione per la richiesta corrente non sono stati modificati, il metodo SetAndReleaseItemExclusive non viene chiamato. Al contrario, il <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodo viene chiamato.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Se il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo è stato chiamato, non viene chiamato il metodo SetAndReleaseItemExclusive.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Al contrario, il <xref:System.Web.SessionState.SessionStateModule>chiama il <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metodo per eliminare i dati dell&quot;elemento di sessione dall&quot;origine dati.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
    - id: id
      type: System.String
      description: "Identificatore di sessione per la richiesta corrente."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "Il <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> oggetto che contiene i valori della sessione corrente da archiviare."
    - id: lockId
      type: System.Object
      description: "L&quot;identificatore di blocco per la richiesta corrente."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per identificare l&quot;elemento di sessione come nuovo elemento; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per identificare l&quot;elemento di sessione a un elemento esistente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Imposta un riferimento di <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegato per il <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento definito nel file Global. asax."
  remarks: "Il <xref:System.Web.SessionState.SessionStateModule>oggetto chiama il metodo SetItemExpireCallback quando viene inizializzato il modulo per determinare se le chiamate al `Session_OnEnd` eventi supportati dal <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementazione e associare il <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegato con il `Session_OnEnd` evento.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       I responsabili dell&quot;implementazione di provider dell&quot;archivio dello stato sessione personalizzato deve utilizzare il metodo di SetItemExpireCallback per informare il <xref:System.Web.SessionState.SessionStateModule>oggetto se le chiamate al `Session_OnEnd` evento sono supportati e per impostare un riferimento locale il <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegato fornito dal `expireCallback` parametro.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> L&quot;implementazione personalizzata è necessario decidere quando locale <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegato verrà chiamato.</xref:System.Web.SessionState.SessionStateItemExpireCallback> Ad esempio, è possibile chiamare il delegato durante la chiamata di <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metodo, che viene chiamato quando una sessione.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "Il <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegato per il <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento definito nel file Global. asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider dell&quot;archivio dello stato sessione supporta la chiamata di <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
