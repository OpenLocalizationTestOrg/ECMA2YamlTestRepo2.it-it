### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  id: SecurityTokenRequirement
  children:
  - System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  - System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  - System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  - System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  langs:
  - csharp
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
  type: Class
  summary: "Specifica i requisiti del token di sicurezza."
  remarks: "Il codice dell&quot;applicazione in genere non è necessario utilizzare la classe SecurityTokenRequirement, a meno che un token di sicurezza personalizzato, security token manager, provider di token di sicurezza o sicurezza vengono creati l&quot;autenticatore del token. La classe SecurityTokenRequirement viene utilizzata da un gestore di token di sicurezza per specificare ciò che è richiesto un token di sicurezza, ad esempio la chiave di dimensioni, tipo di chiave e come utilizzare la chiave. Quando viene identificato un token di sicurezza che corrisponde ai criteri specificati, un <xref:System.IdentityModel.Selectors.SecurityTokenProvider>e <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>può essere ottenuto per fornire i token di sicurezza dei messaggi SOAP in uscita e per autenticare i token di sicurezza per i messaggi SOAP in ingresso, rispettivamente.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Ad esempio, il gestore di token di sicurezza predefinito per i messaggi SOAP in uscita è il <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>metodo che accetta un parametro SecurityTokenRequirement che può essere chiamato per ottenere un provider di token di sicurezza che corrisponde ai criteri specificati nel requisito del token di sicurezza.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>"
  example:
  - "<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenProvider>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>"
  syntax:
    content: public class SecurityTokenRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> classe."
  syntax:
    content: public SecurityTokenRequirement ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public TValue GetProperty<TValue> (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Da aggiungere."
    return:
      type: TValue
      description: "Da aggiungere."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  id: IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore della proprietà token se è facoltativo."
  syntax:
    content: public static string IsOptionalTokenProperty { get; }
    return:
      type: System.String
      description: "Valore della proprietà token."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  id: KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene o imposta la dimensione obbligatoria della chiave associata a un token di sicurezza."
  remarks: "Il valore della proprietà KeySize accessibili anche tramite il recupero di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>proprietà, che è una raccolta di valori di proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Il valore della proprietà KeySize viene archiviato in corrispondenza dell&quot;indice corrispondente al valore della <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>"
  syntax:
    content: public int KeySize { get; set; }
    return:
      type: System.Int32
      description: "Le dimensioni della chiave in bit, associata a un token di sicurezza. Il valore predefinito è 0."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà KeySize è impostata su un valore minore di 0."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  id: KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che specifica il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  remarks: "Per impostare la dimensione della chiave necessaria, utilizzare il <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>"
  syntax:
    content: public static string KeySizeProperty { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  id: KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene o imposta il tipo di chiave (asimmetrica o simmetrica) associata a un token di sicurezza."
  remarks: "Il valore della proprietà KeyType accessibili anche tramite il recupero di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>proprietà, che è una raccolta di valori di proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Il valore della proprietà KeyType viene archiviato in corrispondenza dell&quot;indice corrispondente al valore della <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyType KeyType { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;> </xref> che specifica il tipo di chiave (asimmetrica o simmetrica) associata a un token di sicurezza. Il valore predefinito è <xref uid=&quot;langword_csharp_SymmetricKey&quot; name=&quot;SymmetricKey&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  id: KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che specifica il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  remarks: "Per impostare il tipo di chiave richiesto, utilizzare il <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>"
  syntax:
    content: public static string KeyTypeProperty { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  id: KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene o imposta un valore che specifica come è possibile usare la chiave associata a un token di sicurezza."
  remarks: "Il valore della proprietà KeyUsage accessibili anche tramite il recupero di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>proprietà, che è una raccolta di valori di proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Il valore della proprietà KeyUsage viene archiviato in corrispondenza dell&quot;indice corrispondente al valore della <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyUsage KeyUsage { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyUsage
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;> </xref> che specifica come è possibile utilizzare la chiave associata a un token di sicurezza. Il valore predefinito è <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  id: KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che specifica il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  remarks: "Per impostare il requisito di utilizzo chiave, utilizzare il <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>"
  syntax:
    content: public static string KeyUsageProperty { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  id: PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene il nome dell&quot;indice nella <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>insieme per una proprietà che specifica il metodo di autenticazione peer.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>"
  remarks: "Per aggiungere la possibilità di impostare la modalità di autenticazione peer, derivare una classe da <xref:System.IdentityModel.Selectors.SecurityTokenRequirement>ed esporre una proprietà o un costruttore.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement> All&quot;interno del costruttore o proprietà aggiungere la modalità di autenticazione peer al <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>raccolta utilizzando il valore della proprietà PeerAuthenticationMode come indice nella raccolta.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>"
  syntax:
    content: public static string PeerAuthenticationMode { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice nella <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>insieme per una proprietà che specifica il metodo di autenticazione peer.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  id: Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene una raccolta di proprietà non statiche per l&quot;oggetto corrente <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> istanza."
  remarks: "Utilizzare i valori di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>proprietà come indici nella raccolta per ottenere un valore di proprietà specifiche.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Un &lt;xref:System.Collections.Generic.IDictionary%602&gt; che contiene una raccolta di proprietà non statiche per l&quot;oggetto corrente <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> istanza."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  id: RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene o imposta un valore che indica se il token di sicurezza deve essere in grado di eseguire le operazioni di crittografia, ad esempio la crittografia."
  remarks: "Alcuni token di sicurezza, ad esempio il <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, non sono sufficientemente per eseguire le operazioni di crittografia sicuri e deve essere utilizzato solo per l&quot;autenticazione.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>       Il valore della proprietà RequireCryptographicToken accessibili anche tramite il recupero di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>proprietà, che è una raccolta di valori di proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Il valore della proprietà RequireCryptographicToken viene archiviato in corrispondenza dell&quot;indice corrispondente al valore della <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>"
  syntax:
    content: public bool RequireCryptographicToken { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il token di sicurezza deve essere in grado di eseguire operazioni di crittografia in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  id: RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  syntax:
    content: public static string RequireCryptographicTokenProperty { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  id: TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene o imposta il tipo di token di sicurezza necessarie."
  remarks: "Utilizzare una delle proprietà statiche della <xref:System.IdentityModel.Tokens.SecurityTokenTypes>classe per impostare questa proprietà.</xref:System.IdentityModel.Tokens.SecurityTokenTypes>       Il valore della proprietà TokenType accessibili anche tramite il recupero di <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>proprietà, che è una raccolta di valori di proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Il valore della proprietà TokenType viene archiviato in corrispondenza dell&quot;indice corrispondente al valore della <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>"
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "Il tipo di token di sicurezza necessarie."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  id: TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che specifica il nome dell&quot;indice nella <> </> *> raccolta per il <> </> *> proprietà."
  remarks: "Per impostare il tipo di token di sicurezza necessarie, utilizzare il <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>proprietà.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>"
  syntax:
    content: public static string TokenTypeProperty { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;indice di <> </> *> raccolta per il <> </> *> proprietà."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  id: TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public bool TryGetProperty<TValue> (string propertyName, out TValue result);
    parameters:
    - id: propertyName
      type: System.String
      description: "Da aggiungere."
    - id: result
      type: TValue
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Tokens.SecurityKeyUsage
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyUsage
  nameWithType: SecurityKeyUsage
  fullName: System.IdentityModel.Tokens.SecurityKeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty<TValue>
  nameWithType: SecurityTokenRequirement.GetProperty<TValue>
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty<TValue>
  nameWithType: SecurityTokenRequirement.TryGetProperty<TValue>
