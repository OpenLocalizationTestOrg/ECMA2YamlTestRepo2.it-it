### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  id: ClaimTypeRequirement
  children:
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  langs:
  - csharp
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  type: Class
  summary: "Specifica i tipi di attestazione obbligatori e facoltativi previsti in una credenziale federata."
  remarks: "In un scenario federato, i servizi attestano i requisiti per le credenziali in ingresso. Ad esempio, le credenziali in ingresso devono disporre di un determinato set di tipi di attestazione. Questo requisito si presenta in un criterio di sicurezza. Quando un client richiede un token di sicurezza da un servizio token di sicurezza (ad esempio, [!INCLUDE[infocard](~/add/includes/infocard-md.md)]), tale client inserisce i requisiti in una richiesta di token affinché il servizio token di sicurezza può rilasciare token di sicurezza che soddisfa opportunamente i requisiti."
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/t-system.servicemodel.se_14_1.cs)]  \n  \n The following config file is used with the preceding code.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public class ClaimTypeRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref> classe per un&quot;attestazione richiesta del tipo specificato."
  remarks: "I tipi di attestazione predefiniti sono reperibile all&quot;indirizzo <xref:System.IdentityModel.Claims.ClaimTypes>.</xref:System.IdentityModel.Claims.ClaimTypes>"
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/82f0f677-aea6-40fd-b2fa-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: "Il tipo di attestazione."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref> classe per un&quot;attestazione del tipo specificato."
  remarks: ''
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/5f45f1b5-1008-4244-927f-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType, bool isOptional);
    parameters:
    - id: claimType
      type: System.String
      description: "Il tipo di attestazione."
    - id: isOptional
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, l&quot;attestazione è obbligatoria; in caso contrario, è facoltativo."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  id: ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Ottiene il tipo di attestazione specificato nel costruttore."
  remarks: "Questa proprietà è un URI che definisce il tipo di attestazione.  Ad esempio, per acquistare un prodotto da un sito Web, l&quot;utente deve presentare una carta di credito valida con un limite di credito sufficiente. Il tipo di attestazione sarebbe l&quot;URI della carta di credito."
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_5_1.cs)]"
  syntax:
    content: public string ClaimType { get; }
    return:
      type: System.String
      description: "Il tipo di attestazione."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  id: IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Ottiene un valore che indica se l&quot;attestazione è facoltativa."
  remarks: "Un esempio di come utilizzare questa proprietà è lo scenario in cui il servizio richiede alcune informazioni ma non lo richiede. Ad esempio, è necessario immettere il nome, cognome e indirizzo, ma il numero di telefono è facoltativo."
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_17_1.cs)]"
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa istanza della classe per una richiesta facoltativa; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se si specifica un&quot;attestazione richiesta."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
