### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler
  id: DiscoveryRequestHandler
  children:
  - System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  - System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  - System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DiscoveryRequestHandler
  nameWithType: DiscoveryRequestHandler
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler
  type: Class
  summary: "Un gestore HTTP di ASP.NET che elabora una richiesta per il documento di individuazione dei servizi Web."
  remarks: "La classe DiscoveryRequestHandler, tramite il relativo <xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A>metodo elabora una richiesta HTTP per un documento di individuazione.</xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A> Un documento di individuazione è rappresentato dalla <xref:System.Web.Services.Discovery.DiscoveryDocument>classe e in genere è serializzato come file mediante un&quot;estensione disco.</xref:System.Web.Services.Discovery.DiscoveryDocument> Individuazione dei servizi Web fornisce un meccanismo per determinare i servizi Web che sono disponibili in una posizione specificata.       La classe DiscoveryRequestHandler non è necessario in genere essere utilizzata direttamente da uno sviluppatore."
  syntax:
    content: 'public sealed class DiscoveryRequestHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  id: '#ctor'
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: DiscoveryRequestHandler()
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler()
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.DiscoveryRequestHandler()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Services.Discovery.DiscoveryRequestHandler&quot;> </xref> classe."
  syntax:
    content: public DiscoveryRequestHandler ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  id: IsReusable
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Ottiene un valore di <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, indica se l&quot;istanza di <xref href=&quot;System.Web.Services.Discovery.DiscoveryRequestHandler&quot;> </xref> (o una classe derivata) può essere riutilizzato."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DiscoveryRequestHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Gestisce una richiesta HTTP per un documento di individuazione, viene serializzato nella risposta HTTP."
  remarks: "Il metodo ProcessRequest Cerca file validi all&quot;interno di percorso del file system corrispondente della richiesta HTTP URL Uniform Resource Locator (). La ricerca può estendersi alle sottodirectory e passare a estensioni di file di destinazione in base trova nella cartella di ricerca principale.       Il processo di ricerca consente di popolare il <xref:System.Web.Services.Discovery.DiscoveryDocument>dell&quot;oggetto <xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A>proprietà con i file trovati.</xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A> </xref:System.Web.Services.Discovery.DiscoveryDocument>"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <> </> *> e <> </> *> le proprietà del <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe vengono utilizzati per l&quot;input e output, rispettivamente."
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: DiscoveryRequestHandler()
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler()
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.DiscoveryRequestHandler()
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DiscoveryRequestHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: DiscoveryRequestHandler
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DiscoveryRequestHandler.ProcessRequest
