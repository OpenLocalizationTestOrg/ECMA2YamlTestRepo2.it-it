### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Consente l&quot;accesso per l&quot;autenticazione basata su form ASP.NET come servizio Web."
  remarks: "L&quot;oggetto AuthenticationService consente di autenticare gli utenti tramite un [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] servizio. Utilizzare il servizio di autenticazione WCF quando è necessario autenticare gli utenti tramite l&quot;appartenenza ASP.NET da un&quot;applicazione all&quot;esterno dell&quot;applicazione Web che archivia le credenziali dell&quot;utente. L&quot;applicazione deve essere in grado di inviare e utilizzare un messaggio nel formato SOAP. Tramite la classe AuthenticationService, è possibile accedere agli utenti, disconnettere gli utenti, convalidare le credenziali, controllare lo stato di autenticazione, personalizzare l&quot;autenticazione e impostare il cookie di autenticazione.       La classe AuthenticationService contiene quattro metodi che è necessario accedere solo tramite un servizio WCF: il <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, e <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metodi.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Per chiamare questi metodi, si abilita il servizio di autenticazione su un server Web e quindi connettersi a un&quot;applicazione client compatibile con WCF al servizio Web. Per informazioni su come configurare il servizio di autenticazione, vedere [procedura: abilitare il servizio di autenticazione WCF](~/add/includes/ajax-current-ext-md.md).       Per accedere gli utenti, passare le credenziali utente per il <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metodo.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Se le credenziali siano valide, la classe AuthenticationService crea un cookie di autenticazione. Se il cookie di autenticazione non è scaduto, significa che sono state autenticate le credenziali dell&quot;utente e non si dispone di convalidare nuovamente le credenziali. (Minore di cookie di autenticazione non è disponibile tramite la classe AuthenticationService.)       Il AuthenticationService può generare due eventi: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>e <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Il <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento si verifica quando vengono convalidate le credenziali dell&quot;utente.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Creare un gestore eventi per il <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento per personalizzare la modalità di convalida delle credenziali dell&quot;utente.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Il <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>evento si verifica quando il cookie di autenticazione viene impostato dopo la convalida delle credenziali dell&quot;utente.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Creare un gestore eventi per il <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>evento per personalizzare il cookie di autenticazione.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       Il <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metodo controlla le credenziali utente per l&quot;autenticazione, ma non restituisce un ticket di autenticazione.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Utilizzare <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>quando un utente è connesso in precedenza e deve verificare che le credenziali siano ancora valide all&quot;inizio di una nuova sessione dell&quot;applicazione.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       Per un esempio di utilizzo del servizio di autenticazione WCF da un&quot;applicazione console, vedere [procedura dettagliata: utilizzando i servizi delle applicazioni ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> classe."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Si verifica quando vengono convalidate le credenziali dell&quot;utente."
  remarks: "Quando vengono convalidate le credenziali dell&quot;utente, viene generato l&quot;evento di autenticazione. Creare un gestore eventi per l&quot;evento di autenticazione personalizzare la modalità di convalida delle credenziali dell&quot;utente."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Si verifica quando viene impostato il cookie di autenticazione."
  remarks: "L&quot;evento CreatingCookie viene generato quando il cookie di autenticazione viene impostato dopo la convalida delle credenziali dell&quot;utente. Creare un gestore eventi per l&quot;evento CreatingCookie personalizzare il cookie di autenticazione."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Determina se l&quot;utente corrente è stato autenticato."
  remarks: "Il metodo IsLoggedIn verifica se l&quot;utente corrente è autenticato controllando il <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>Property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > Non chiamare il metodo IsLoggedIn dal codice che è in esecuzione nel server Web. Il metodo IsLoggedIn solo come parte di un servizio WCF."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente è stato autenticato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Controlla le credenziali utente e crea un ticket di autenticazione (cookie), se le credenziali sono valide."
  remarks: "Il metodo di accesso convalida le credenziali utente tramite un provider di appartenenze. È possibile utilizzare il provider di appartenenze predefinito o specificare un provider di appartenenze personalizzato in fase di esecuzione. La <xref:System.Web.ApplicationServices.AuthenticationService>classe passa `userName` e `password` per il provider di appartenenze <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>(metodo), ma non passa `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Se <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>restituisce `true`, <xref:System.Web.ApplicationServices.AuthenticationService>Crea un ticket di autenticazione come cookie.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Impostare il `isPersistent` parametro `true` per creare un ticket di autenticazione che duri oltre la sessione corrente.      > [!NOTE] > Utilizzare sempre il servizio di autenticazione con secure sockets layer (SSL), tramite HTTPS) per proteggere dati riservati.       Genera il metodo di accesso di <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>eventi e <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>evento.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Creare un gestore eventi per <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>per personalizzare l&quot;autenticazione, ad esempio controllare i valori in `customCredential` o convalidare le credenziali tramite un provider di appartenenze non predefinito.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> I valori in `customCredential` non vengono convalidati dal provider di appartenenze predefinito. Per personalizzare il cookie di autenticazione, creare un gestore eventi per <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>      > [!NOTE] > Non chiamare il metodo di accesso dal codice che è in esecuzione nel server Web. Chiamare il metodo di accesso solo come parte di un servizio WCF. Per ulteriori informazioni, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente da convalidare."
    - id: password
      type: System.String
      description: "La password per l&quot;utente specificato."
    - id: customCredential
      type: System.String
      description: "Uno o più valori per convalidare oltre a `userName` e `password`, se presente."
    - id: isPersistent
      type: System.Boolean
      description: "Un valore che indica se il ticket di autenticazione rimane valido tra le sessioni."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le credenziali utente vengono. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Cancella il ticket di autenticazione (cookie) nel browser."
  remarks: "Il metodo di disconnessione Cancella il cookie di autenticazione dalla raccolta di cookie del browser. L&quot;utente deve accedere nuovamente per essere autenticato.       La <xref:System.Web.ApplicationServices.AuthenticationService>classe non archivia le informazioni nel server di autenticazione i ticket sono stati cancellati.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > Non chiama il metodo di disconnessione dal codice che è in esecuzione nel server Web. Il metodo Logout solo come parte di un servizio WCF. Per ulteriori informazioni, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Autentica le credenziali dell&quot;utente senza emettere un ticket di autenticazione."
  remarks: "Il metodo ValidateUser autentica le credenziali dell&quot;utente ma non è stato impostato un cookie di autenticazione. Senza un cookie di autenticazione, l&quot;utente non verrà registrato anche se le credenziali sono valide.       Utilizzare il metodo ValidateUser quando è necessario controllare se le credenziali dell&quot;utente sono valide senza ricevere un cookie di autenticazione. Ad esempio, è possibile farlo se il cookie di autenticazione è già archiviato in un&quot;applicazione client, ma si desidera verificare che le credenziali dell&quot;utente siano ancora valide quando si avvia una nuova sessione.       Metodo TheValidateUser genera il <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento, ma non viene generato il <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>evento.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > Non chiamare il metodo ValidateUser dal codice che è in esecuzione nel server Web. Il metodo ValidateUser solo come parte di un servizio WCF. Per ulteriori informazioni, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente da convalidare."
    - id: password
      type: System.String
      description: "La password per l&quot;utente specificato."
    - id: customCredential
      type: System.String
      description: "Uno o più valori per convalidare oltre a `userName` e `password`, se presente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le credenziali utente vengono. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
