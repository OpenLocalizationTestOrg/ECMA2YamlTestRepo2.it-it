### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbTransaction
  id: OleDbTransaction
  children:
  - System.Data.OleDb.OleDbTransaction.Begin
  - System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbTransaction.Commit
  - System.Data.OleDb.OleDbTransaction.Connection
  - System.Data.OleDb.OleDbTransaction.DbConnection
  - System.Data.OleDb.OleDbTransaction.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbTransaction.IsolationLevel
  - System.Data.OleDb.OleDbTransaction.Rollback
  langs:
  - csharp
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
  type: Class
  summary: "Rappresenta una transazione SQL da eseguire in un&quot;origine dati. Questa classe non può essere ereditata."
  remarks: "L&quot;applicazione crea un oggetto OleDbTransaction chiamando <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>sul <xref:System.Data.OleDb.OleDbConnection>oggetto.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> Tutte le operazioni successive associate alla transazione (ad esempio, eseguire il commit o l&quot;interruzione della transazione), vengono eseguite sull&quot;oggetto OleDbTransaction."
  syntax:
    content: 'public sealed class OleDbTransaction : System.Data.Common.DbTransaction'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbTransaction
  implements: []
  inheritedMembers:
  - System.Data.Common.DbTransaction.Dispose
  - System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Begin
  id: Begin
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Begin()
  nameWithType: OleDbTransaction.Begin()
  fullName: System.Data.OleDb.OleDbTransaction.Begin()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Avvia una transazione di database nidificata."
  remarks: "La nuova transazione viene nidificata all&quot;interno della transazione corrente."
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Begin ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Una transazione di database nidificata."
  overload: System.Data.OleDb.OleDbTransaction.Begin*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transazioni annidate non sono supportate."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)
  id: Begin(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Begin(IsolationLevel)
  nameWithType: OleDbTransaction.Begin(IsolationLevel)
  fullName: System.Data.OleDb.OleDbTransaction.Begin(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Avvia una transazione di database nidificata e specifica il livello di isolamento da utilizzare per la nuova transazione."
  remarks: "La nuova transazione viene nidificata all&quot;interno della transazione corrente."
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Begin (System.Data.IsolationLevel isolevel);
    parameters:
    - id: isolevel
      type: System.Data.IsolationLevel
      description: "Il livello di isolamento da utilizzare per la transazione."
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Una transazione di database nidificata."
  overload: System.Data.OleDb.OleDbTransaction.Begin*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transazioni annidate non sono supportate."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Commit
  id: Commit
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: OleDbTransaction.Commit()
  fullName: System.Data.OleDb.OleDbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Esegue il commit della transazione di database."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a Commit, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_13_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_13_1.vb)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Data.OleDb.OleDbTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Si è verificato un errore durante il tentativo di eseguire il commit della transazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La transazione è già stato eseguito il commit o rollback.       - oppure - la connessione viene interrotta."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbTransaction.Connection
  fullName: System.Data.OleDb.OleDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ottiene il <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> oggetto associato alla transazione, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la transazione non è più valida."
  remarks: "Una singola applicazione può avere più connessioni di database, ciascuna con zero o più transazioni. Questa proprietà consente di determinare l&quot;oggetto connessione associato a una particolare transazione creata da <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "Il <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> oggetto associato alla transazione."
  overload: System.Data.OleDb.OleDbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbTransaction.DbConnection
  fullName: System.Data.OleDb.OleDbTransaction.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbTransaction.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbTransaction.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: OleDbTransaction.IsolationLevel
  fullName: System.Data.OleDb.OleDbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Specifica il <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> per questa transazione."
  remarks: "Le transazioni parallele non sono supportate. Pertanto, il <xref:System.Data.IsolationLevel>si applica all&quot;intera transazione.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public override System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "Il <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> per questa transazione. Il valore predefinito è <xref uid=&quot;langword_csharp_ReadCommitted&quot; name=&quot;ReadCommitted&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbTransaction.Rollback
  id: Rollback
  parent: System.Data.OleDb.OleDbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: OleDbTransaction.Rollback()
  fullName: System.Data.OleDb.OleDbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Esegue il rollback di una transazione da uno stato in sospeso."
  remarks: "Può solo essere il rollback della transazione da uno stato in sospeso (dopo <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>è stato chiamato, ma prima <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>viene chiamato).</xref:System.Data.OleDb.OleDbTransaction.Commit%2A> </xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> Rollback della transazione nel caso venga eliminata prima `Commit` o `Rollback` viene chiamato."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and Rollback methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_10_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_10_1.vb)]"
  syntax:
    content: public override void Rollback ();
    parameters: []
  overload: System.Data.OleDb.OleDbTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Si è verificato un errore durante il tentativo di eseguire il commit della transazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La transazione è già stato eseguito il commit o rollback.       - oppure - la connessione viene interrotta."
  platform:
  - net462
references:
- uid: System.Data.Common.DbTransaction
  isExternal: false
  name: System.Data.Common.DbTransaction
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Data.OleDb.OleDbTransaction.Begin
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Begin()
  nameWithType: OleDbTransaction.Begin()
  fullName: System.Data.OleDb.OleDbTransaction.Begin()
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Begin(IsolationLevel)
  nameWithType: OleDbTransaction.Begin(IsolationLevel)
  fullName: System.Data.OleDb.OleDbTransaction.Begin(IsolationLevel)
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OleDb.OleDbTransaction.Commit
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Commit()
  nameWithType: OleDbTransaction.Commit()
  fullName: System.Data.OleDb.OleDbTransaction.Commit()
- uid: System.Data.OleDb.OleDbTransaction.Connection
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Connection
  nameWithType: OleDbTransaction.Connection
  fullName: System.Data.OleDb.OleDbTransaction.Connection
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbTransaction.DbConnection
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: DbConnection
  nameWithType: OleDbTransaction.DbConnection
  fullName: System.Data.OleDb.OleDbTransaction.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbTransaction.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbTransaction.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbTransaction.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbTransaction.IsolationLevel
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: OleDbTransaction.IsolationLevel
  fullName: System.Data.OleDb.OleDbTransaction.IsolationLevel
- uid: System.Data.OleDb.OleDbTransaction.Rollback
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: OleDbTransaction.Rollback()
  fullName: System.Data.OleDb.OleDbTransaction.Rollback()
- uid: System.Data.OleDb.OleDbTransaction.Begin*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Begin
  nameWithType: OleDbTransaction.Begin
- uid: System.Data.OleDb.OleDbTransaction.Commit*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Commit
  nameWithType: OleDbTransaction.Commit
- uid: System.Data.OleDb.OleDbTransaction.Connection*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Connection
  nameWithType: OleDbTransaction.Connection
- uid: System.Data.OleDb.OleDbTransaction.DbConnection*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: DbConnection
  nameWithType: OleDbTransaction.DbConnection
- uid: System.Data.OleDb.OleDbTransaction.Dispose*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Dispose
  nameWithType: OleDbTransaction.Dispose
- uid: System.Data.OleDb.OleDbTransaction.IsolationLevel*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: OleDbTransaction.IsolationLevel
- uid: System.Data.OleDb.OleDbTransaction.Rollback*
  parent: System.Data.OleDb.OleDbTransaction
  isExternal: false
  name: Rollback
  nameWithType: OleDbTransaction.Rollback
