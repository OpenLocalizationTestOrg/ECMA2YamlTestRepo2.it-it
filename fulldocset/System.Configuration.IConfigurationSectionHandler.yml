### YamlMime:ManagedReference
items:
- uid: System.Configuration.IConfigurationSectionHandler
  id: IConfigurationSectionHandler
  children:
  - System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: IConfigurationSectionHandler
  nameWithType: IConfigurationSectionHandler
  fullName: System.Configuration.IConfigurationSectionHandler
  type: Interface
  summary: "Gestisce l&quot;accesso a determinate sezioni di configurazione."
  remarks: "**Importante** IConfigurationSectionHandler è obsoleto in .NET Framework 2.0 e versioni successive. Tuttavia, poiché viene utilizzato internamente, è stata mantenuta. È possibile trovare un esempio, vedere [How to: Create Custom Configuration Sections Using IConfigurationSectionHandler](~/add/includes/ajax-current-ext-md.md). Se si utilizza l&quot;esempio precedente, compilarlo con .NET Framework versione 1.0 o 1.1.       In .NET Framework versione 2.0 e versioni successive, è invece necessario derivare dalla <xref:System.Configuration.ConfigurationSection>classe per implementare il gestore della sezione di configurazione correlati.</xref:System.Configuration.ConfigurationSection> È possibile trovare un esempio, vedere [How to: Create Custom Configuration Sections Using ConfigurationSection](~/add/includes/ajax-current-ext-md.md).       Le istanze della classe IConfigurationSectionHandler devono essere thread-safe e senza stato. Il <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>(metodo) deve essere richiamabile da più thread contemporaneamente.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>       Inoltre, l&quot;oggetto di configurazione generato dal <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>metodo deve essere thread-safe e non modificabile.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Poiché gli oggetti di configurazione vengono memorizzati nella cache dal sistema di configurazione, è importante non modificare l&quot;argomento padre di <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>metodo.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Ad esempio, se il valore restituito di <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>è solo una piccola modifica dell&quot;elemento padre, è necessario apportare le modifiche effettive in un clone dell&quot;elemento padre, non l&quot;originale.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>"
  syntax:
    content: public interface IConfigurationSectionHandler
  implements: []
  platform:
  - net462
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Crea un gestore della sezione di configurazione."
  remarks: "Le istanze del <xref:System.Configuration.IConfigurationSectionHandler>classe deve essere thread-safe e senza stato.</xref:System.Configuration.IConfigurationSectionHandler> Il metodo di creazione deve essere richiamabile da più thread contemporaneamente.       Inoltre, l&quot;oggetto di configurazione generato dal metodo Create deve essere thread-safe e non modificabile. Poiché gli oggetti di configurazione vengono memorizzati nella cache dal sistema di configurazione, è importante non modificare l&quot;argomento padre per creare. Ad esempio, se il valore restituito di creazione è solo una piccola modifica dell&quot;elemento padre, le modifiche effettive devono essere eseguite un clone dell&quot;elemento padre, non l&quot;originale."
  syntax:
    content: public object Create (object parent, object configContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "Oggetto padre."
    - id: configContext
      type: System.Object
      description: "Oggetto di contesto di configurazione."
    - id: section
      type: System.Xml.XmlNode
      description: "Nodo XML della sezione."
    return:
      type: System.Object
      description: "L&quot;oggetto gestore sezione creata."
  overload: System.Configuration.IConfigurationSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.IConfigurationSectionHandler.Create*
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create
  nameWithType: IConfigurationSectionHandler.Create
