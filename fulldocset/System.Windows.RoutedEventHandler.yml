### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventHandler
  id: RoutedEventHandler
  langs:
  - csharp
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
  type: Delegate
  summary: "Rappresenta il metodo che gestirà i vari eventi indirizzati che non contengono dati di evento specifici oltre ai dati che è comuni per tutti gli eventi indirizzati."
  remarks: "Il delegato RoutedEventHandler viene utilizzato per qualsiasi evento indirizzato che non segnala informazioni specifiche degli eventi nei dati dell&quot;evento. Esistono molti tali eventi indirizzati. principali sono esempi <xref:System.Windows.Controls.Primitives.ButtonBase.Click>e <xref:System.Windows.FrameworkElement.Loaded>.</xref:System.Windows.FrameworkElement.Loaded> </xref:System.Windows.Controls.Primitives.ButtonBase.Click>       La differenza principale tra la scrittura di un gestore per un evento indirizzato anziché generale [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] evento è che il `sender` dell&quot;evento (l&quot;elemento associato e in cui viene richiamato il gestore) non può essere considerato necessariamente essere l&quot;origine dell&quot;evento. L&quot;origine viene segnalato come proprietà nei dati dell&quot;evento (<xref:System.Windows.RoutedEventArgs.Source%2A>).</xref:System.Windows.RoutedEventArgs.Source%2A> Una differenza tra `sender`e <xref:System.Windows.RoutedEventArgs.Source%2A>è il risultato dell&quot;evento indirizzato a elementi diversi, durante l&quot;attraversamento dell&quot;evento indirizzato tramite una struttura ad albero.</xref:System.Windows.RoutedEventArgs.Source%2A>       È possibile utilizzare `sender` o <xref:System.Windows.RoutedEventArgs.Source%2A>per un oggetto riferimento se sceglie intenzionalmente di non sono interessati al comportamento di routing di un evento indirizzato diretto o bubbling e si intende gestire gli eventi indirizzati sugli elementi in cui vengono generati prima di tutto.</xref:System.Windows.RoutedEventArgs.Source%2A> In questo caso, `sender` e <xref:System.Windows.RoutedEventArgs.Source%2A>lo stesso oggetto.</xref:System.Windows.RoutedEventArgs.Source%2A>       Se si intende sfruttare le funzionalità intrinseche di eventi indirizzati e scrivere i gestori di conseguenza, le due proprietà importanti dei dati dell&quot;evento che verrà utilizzato durante la scrittura di gestori di eventi sono <xref:System.Windows.RoutedEventArgs.Source%2A>e <xref:System.Windows.RoutedEventArgs.Handled%2A>.</xref:System.Windows.RoutedEventArgs.Handled%2A> </xref:System.Windows.RoutedEventArgs.Source%2A>       Per alcune combinazioni di eventi di input e [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] classi di controlli, l&quot;elemento che genera l&quot;evento non è il primo elemento che ha la possibilità di gestirla. Se l&quot;evento di input ha una versione di anteprima dell&quot;evento, quindi la radice della struttura ad albero dell&quot;elemento prima opportunità, può impostare <xref:System.Windows.RoutedEventArgs.Handled%2A>per `true` nei dati dell&quot;evento condivisa, può influire sulla modalità in cui viene segnalato l&quot;evento di input per gli elementi rimanenti nella propria route di eventi.</xref:System.Windows.RoutedEventArgs.Handled%2A> L&quot;anteprima di comportamento di gestione può dare l&quot;impressione che un evento indirizzato specifico, non è generato come previsto. Per ulteriori informazioni, vedere [eventi di anteprima](~/add/includes/ajax-current-ext-md.md) e [Input Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
