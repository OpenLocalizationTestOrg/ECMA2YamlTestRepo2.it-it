### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "Utilizzato per indicare che un controllo può essere la destinazione di un evento di callback sul server."
  remarks: "Implementare l&quot;interfaccia ICallbackEventHandler per qualsiasi controllo personalizzato che deve ricevere gli eventi di callback. Per ulteriori informazioni, vedere [implementazione di callback Client senza postback](~/add/includes/ajax-current-ext-md.md).       Esempi di controlli che implementano l&quot;interfaccia ICallbackEventHandler il <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView>controlli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Quando un controllo che implementa l&quot;interfaccia ICallbackEventHandler, destinato a un evento di callback di <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metodo viene chiamato per gestire l&quot;evento, passando l&quot;argomento dell&quot;evento come parametro e <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>restituisce il risultato del metodo di callback.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>       I controlli che recuperano dati da un controllo origine dati durante il callback è possono farlo in modo sincrono o asincrono. I controlli ASP.NET come <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView>vengono implementati in modo sincrono.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> I callback sincroni non impedire all&quot;utente nel Visualizzatore. In modalità sincrona, è possibile eseguire un solo callback in un momento, con l&quot;ultimo callback ha la precedenza. Quando un controllo Web viene implementato per supportare il comportamento asincrono, è possibile generare più callback contemporaneamente. Per informazioni dettagliate sulla programmazione asincrona, vedere [basato su eventi modello asincrono (EAP)](~/add/includes/ajax-current-ext-md.md).       È possibile specificare se convalidare gli eventi di callback provenienti dall&quot;interfaccia utente di un controllo che implementa l&quot;interfaccia ICallbackEventHandler esegue il rendering. La convalida degli eventi è buona norma. Tuttavia, per motivi di prestazioni è possibile disabilitarla. Per controllare se la convalida viene eseguita sugli eventi di callback, impostare il `enableEventValidation` attributo del [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direttiva o `enableEventValidation` attributo del [pages Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458) del file Web. config. Se si imposta la <xref:System.Web.UI.Page.EnableEventValidation%2A>proprietà nel codice, impostarla `Page_Init` fase dell&quot;elaborazione della pagina.</xref:System.Web.UI.Page.EnableEventValidation%2A> Per ulteriori informazioni su Bilanciamento il vantaggio di sicurezza della convalida degli eventi con il relativo impatto sulle prestazioni, vedere [Cenni preliminari sulle prestazioni di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce i risultati di un evento di callback che ha come destinazione un controllo."
  remarks: "Le eccezioni generate <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>non impedirà GetCallbackResult la chiamata e restituire un risultato.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Per impedire la restituzione di un risultato GetCallbackResult, impostare un flag quando viene generata un&quot;eccezione <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>e restituire una stringa vuota da GetCallbackResult.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Il risultato del metodo di callback."
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Elabora un evento di callback che ha come destinazione un controllo."
  remarks: "Quando `null` viene utilizzato come parametro di argomento dell&quot;evento, la stringa viene serializzata come &quot;null&quot; e inviata di nuovo al server. Poiché non esiste alcun modo per distinguere tra `null` e &quot;null&quot;, è consigliabile evitare di utilizzare `null` parametri dell&quot;argomento con callback.       Le eccezioni generate in RaiseCallbackEvent non impedirà <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>di essere chiamato e restituire un risultato.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Per evitare <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>di restituire un risultato, impostare un flag quando viene generata un&quot;eccezione in RaiseCallbackEvent e restituiscono una stringa vuota da <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Stringa che rappresenta un argomento dell&quot;evento da passare al gestore dell&quot;evento."
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
