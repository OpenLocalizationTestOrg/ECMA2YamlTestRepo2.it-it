### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProvider
  id: CngProvider
  children:
  - System.Security.Cryptography.CngProvider.#ctor(System.String)
  - System.Security.Cryptography.CngProvider.Equals(System.Object)
  - System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.GetHashCode
  - System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  - System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  - System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.Provider
  - System.Security.Cryptography.CngProvider.ToString
  langs:
  - csharp
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
  type: Class
  summary: "Incapsula il nome di un provider di archiviazione chiavi (KSP) per l&quot;uso con oggetti Cryptography Next Generation (CNG)."
  remarks: "La classe CngProvider è una classe di utilità. È costituito da proprietà statiche, metodi di confronto e una privata, internamente gestita stringa che specifica un provider di archiviazione chiavi.       Le proprietà statiche restituiscono oggetti CngProvider. La stringa interna di ogni oggetto viene inizializzata al nome del provider che corrisponde al nome della proprietà statica.       È inoltre possibile utilizzare questa classe per creare gli oggetti per i tipi di provider che esulano dalle proprietà statiche.       Diverse classi CNG (ad esempio <xref:System.Security.Cryptography.CngKey>) accettano oggetti CngProvider tramite un `provider` parametro.</xref:System.Security.Cryptography.CngKey> Quando la classe riceve l&quot;oggetto di tipo CngProvider, recupera il nome del provider incorporato chiamando l&quot;oggetto <xref:System.Security.Cryptography.CngProvider.Provider%2A>proprietà.</xref:System.Security.Cryptography.CngProvider.Provider%2A>       Pertanto, CngProvider funge da un&quot;enumerazione di provider conosciuti. Consente di identificare il provider con un valore fortemente tipizzato anziché una stringa."
  syntax:
    content: 'public sealed class CngProvider : IEquatable<System.Security.Cryptography.CngProvider>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProvider>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: CngProvider(String)
  nameWithType: CngProvider.CngProvider(String)
  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> classe."
  remarks: "Le istanze del <xref:System.Security.Cryptography.CngProvider>classe mantenere internamente il nome del provider specificato per il `provider` parametro.</xref:System.Security.Cryptography.CngProvider>       Lo scopo principale di questo costruttore è fornire un metodo per la creazione di <xref:System.Security.Cryptography.CngProvider>oggetti per KSP che non sono rappresentate da proprietà statiche della <xref:System.Security.Cryptography.CngProvider>classe.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngProvider> Questa capacità consente futuro [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] versioni, service pack e agli sviluppatori di terze parti di aggiungere nuovi provider, è possibile accedere come i provider che sono attualmente disponibili."
  syntax:
    content: public CngProvider (string provider);
    parameters:
    - id: provider
      type: System.String
      description: "Il nome del provider di archiviazione chiavi (KSP) da inizializzare."
  overload: System.Security.Cryptography.CngProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>provider</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> provider </code> lunghezza del parametro è 0 (zero)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProvider.Equals(Object)
  fullName: System.Security.Cryptography.CngProvider.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Confronta l&quot;oggetto specificato all&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare all&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> obj </code> parametro è un <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> lo stesso provider di archiviazione chiavi (KSP) che specifica l&quot;oggetto corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  id: Equals(System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Equals(CngProvider)
  nameWithType: CngProvider.Equals(CngProvider)
  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Confronta l&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProvider other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProvider
      description: "Oggetto da confrontare all&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> other </code> parametro specifica lo stesso provider di archiviazione chiavi (KSP) dell&quot;oggetto corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProvider.GetHashCode()
  fullName: System.Security.Cryptography.CngProvider.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genera un valore hash per il nome del provider di archiviazione chiavi (KSP) che è incorporato nell&quot;oggetto <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il valore hash del nome del provider di archiviazione CHIAVI incorporato."
  overload: System.Security.Cryptography.CngProvider.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  id: MicrosoftSmartCardKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ottiene un <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto che specifica il Provider di archiviazione chiavi Smart Card Microsoft."
  syntax:
    content: public static System.Security.Cryptography.CngProvider MicrosoftSmartCardKeyStorageProvider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "Oggetto che specifica il Provider di archiviazione chiavi Smart Card Microsoft."
  overload: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  id: MicrosoftSoftwareKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ottiene un <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto che specifica il Provider di archiviazione chiavi Software Microsoft."
  syntax:
    content: public static System.Security.Cryptography.CngProvider MicrosoftSoftwareKeyStorageProvider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "Oggetto che specifica il Provider di archiviazione chiavi Software Microsoft."
  overload: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  id: op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: op_Equality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se due <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetti specificano lo stesso provider di archiviazione chiavi (KSP)."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProvider
      description: "Oggetto che specifica un KSP."
    - id: right
      type: System.Security.Cryptography.CngProvider
      description: "Un secondo oggetto da confrontare con l&quot;oggetto identificato dal `left` parametro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due oggetti rappresentano lo stesso KSP; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  id: op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: op_Inequality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se due <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetti non rappresentano lo stesso provider di archiviazione chiavi (KSP)."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProvider
      description: "Oggetto che specifica un KSP."
    - id: right
      type: System.Security.Cryptography.CngProvider
      description: "Un secondo oggetto da confrontare con l&quot;oggetto identificato dal `left` parametro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due oggetti non rappresentano lo stesso KSP; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Provider
  id: Provider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Provider
  nameWithType: CngProvider.Provider
  fullName: System.Security.Cryptography.CngProvider.Provider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ottiene il nome del provider di archiviazione chiavi (KSP) che corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto specifica."
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "Il nome di provider di archiviazione CHIAVI incorporato."
  overload: System.Security.Cryptography.CngProvider.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.ToString
  id: ToString
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: CngProvider.ToString()
  fullName: System.Security.Cryptography.CngProvider.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ottiene il nome del provider di archiviazione chiavi (KSP) che corrente <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> oggetto specifica."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Il nome di provider di archiviazione CHIAVI incorporato."
  overload: System.Security.Cryptography.CngProvider.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: CngProvider(String)
  nameWithType: CngProvider.CngProvider(String)
  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProvider.Equals(Object)
  fullName: System.Security.Cryptography.CngProvider.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals(CngProvider)
  nameWithType: CngProvider.Equals(CngProvider)
  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngProvider.GetHashCode
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProvider.GetHashCode()
  fullName: System.Security.Cryptography.CngProvider.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Equality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)
- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Inequality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)
- uid: System.Security.Cryptography.CngProvider.Provider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Provider
  nameWithType: CngProvider.Provider
  fullName: System.Security.Cryptography.CngProvider.Provider
- uid: System.Security.Cryptography.CngProvider.ToString
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: ToString()
  nameWithType: CngProvider.ToString()
  fullName: System.Security.Cryptography.CngProvider.ToString()
- uid: System.Security.Cryptography.CngProvider.#ctor*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider.CngProvider
- uid: System.Security.Cryptography.CngProvider.Equals*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals
  nameWithType: CngProvider.Equals
- uid: System.Security.Cryptography.CngProvider.GetHashCode*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: GetHashCode
  nameWithType: CngProvider.GetHashCode
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.op_Equality*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Equality
  nameWithType: CngProvider.op_Equality
- uid: System.Security.Cryptography.CngProvider.op_Inequality*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Inequality
  nameWithType: CngProvider.op_Inequality
- uid: System.Security.Cryptography.CngProvider.Provider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Provider
  nameWithType: CngProvider.Provider
- uid: System.Security.Cryptography.CngProvider.ToString*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: ToString
  nameWithType: CngProvider.ToString
