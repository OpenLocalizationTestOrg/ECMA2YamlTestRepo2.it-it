### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "Rappresenta una risposta a una richiesta gestita da un <xref href=&quot;System.Net.HttpListener&quot;> </xref> oggetto."
  remarks: "Quando un client effettua una richiesta per una risorsa gestita da un <xref:System.Net.HttpListener>dell&quot;oggetto, la richiesta e risposta vengono resi disponibili per l&quot;applicazione in un <xref:System.Net.HttpListenerContext>oggetto.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> La richiesta è rappresentata da un <xref:System.Net.HttpListenerRequest>oggetto ed è disponibile nel <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>proprietà.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> </xref:System.Net.HttpListenerRequest> La risposta è rappresentata da un oggetto HttpListenerResponse ed è disponibile nel <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>proprietà.</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>       È possibile personalizzare la risposta impostando diverse proprietà, ad esempio <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>e <xref:System.Net.HttpListenerResponse.Cookies%2A>.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> Utilizzare il <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>proprietà per ottenere un <xref:System.IO.Stream>istanza per la risposta è possibile scrivere dati.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> Infine, inviare i dati di risposta al client tramite la chiamata di <xref:System.Net.HttpListenerResponse.Close%2A>metodo.</xref:System.Net.HttpListenerResponse.Close%2A>"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Chiude la connessione al client senza inviare una risposta."
  remarks: "Chiamare questo metodo su un oggetto che è già stato chiuso non ha alcun effetto. Se la risposta non è già stato chiuso, questa verrà chiusa dal metodo associato <xref:System.Net.HttpListenerRequest>e <xref:System.Net.HttpListenerContext>oggetti.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListenerRequest> La connessione al client viene inoltre chiuso, indipendentemente dal <xref:System.Net.HttpListenerRequest.KeepAlive%2A>valore della proprietà della richiesta del client.</xref:System.Net.HttpListenerRequest.KeepAlive%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge l&quot;intestazione specificata e il valore per le intestazioni HTTP per la risposta."
  remarks: "Chiamare questo metodo è equivalente alla chiamata di <xref:System.Net.WebHeaderCollection.Set%2A>raccolta restituita dal metodo il <xref:System.Net.HttpListenerResponse.Headers%2A>proprietà.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Set%2A>       Se l&quot;intestazione specificata `name` non esiste, questo metodo inserisce una nuova intestazione nel <xref:System.Net.HttpListenerResponse.Headers%2A>raccolta della proprietà.</xref:System.Net.HttpListenerResponse.Headers%2A> Se `name` è presente nella raccolta, questo metodo sostituisce il valore esistente con `value`. Per aggiungere un valore a un&quot;intestazione esistente senza sostituire il valore esistente, utilizzare il <xref:System.Net.HttpListenerResponse.AppendHeader%2A>metodo.</xref:System.Net.HttpListenerResponse.AppendHeader%2A>"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;intestazione HTTP da impostare."
    - id: value
      type: System.String
      description: "Il valore per il `name` intestazione."
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non è consentito specificare un valore per l&quot;intestazione specificata.       - oppure - <code> name </code> o <code> value </code> contiene caratteri non validi."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La lunghezza di <code> value </code> è maggiore di 65.535 caratteri."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge l&quot;oggetto specificato <xref:System.Net.Cookie>per la raccolta di cookie per la risposta.</xref:System.Net.Cookie>"
  remarks: "Chiamare questo metodo è equivalente alla chiamata di <xref:System.Net.CookieCollection.Add%2A>raccolta restituita dal metodo il <xref:System.Net.HttpListenerResponse.Cookies%2A>proprietà.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.CookieCollection.Add%2A>       Se il cookie specificato non esiste nel <xref:System.Net.HttpListenerResponse.Cookies%2A>raccolta della proprietà, `cookie` viene aggiunto.</xref:System.Net.HttpListenerResponse.Cookies%2A> Se il cookie è presente nella raccolta, `cookie` lo sostituisce."
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "Il <xref:System.Net.Cookie>da aggiungere alla raccolta venga inviato con la risposta.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge un valore per l&quot;intestazione HTTP specificata venga inviato con la risposta."
  remarks: "Chiamare questo metodo è equivalente alla chiamata di <xref:System.Net.WebHeaderCollection.Add%2A>raccolta restituita dal metodo il <xref:System.Net.HttpListenerResponse.Headers%2A>proprietà.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Add%2A>       Se l&quot;intestazione specificata `header` non esiste, questo metodo inserisce una nuova intestazione nel <xref:System.Net.HttpListenerResponse.Headers%2A>raccolta della proprietà.</xref:System.Net.HttpListenerResponse.Headers%2A> Se `header` è presente nella raccolta, questo metodo aggiunge `value` ai valori esistenti. Per sostituire il valore di un&quot;intestazione esistente, utilizzare il <xref:System.Net.HttpListenerResponse.AddHeader%2A>metodo.</xref:System.Net.HttpListenerResponse.AddHeader%2A>"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;intestazione HTTP da aggiungere `value` per."
    - id: value
      type: System.String
      description: "Il valore da aggiungere al `name` intestazione."
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;).       - oppure - non è consentito specificare un valore per l&quot;intestazione specificata.       - oppure - <code>name</code> o <code>value</code> contiene caratteri non validi."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La lunghezza di <code> value </code> è maggiore di 65.535 caratteri."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Invia la risposta al client e rilascia le risorse contenute da questo <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> istanza."
  remarks: "Questo metodo chiude il flusso di risposta e <xref:System.Net.HttpListenerRequest>associato alla risposta.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Restituisce una matrice di byte specificata per il client e rilascia le risorse contenute da questo <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> istanza."
  remarks: "Se si inviano i dati del corpo con la risposta, è possibile utilizzare questo metodo per inviare come un <xref:System.Byte>matrice invece di scrivere i dati del corpo per il <xref:System.Net.HttpListenerResponse.OutputStream%2A>proprietà e la chiamata di <xref:System.Net.HttpListenerResponse.Close%2A>metodo.</xref:System.Net.HttpListenerResponse.Close%2A> </xref:System.Net.HttpListenerResponse.OutputStream%2A> </xref:System.Byte>       Questo metodo chiude il flusso di risposta e <xref:System.Net.HttpListenerRequest>associato alla risposta.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene la risposta da inviare al client.</xref:System.Byte>"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per bloccare l&quot;esecuzione durante lo svuotamento del flusso al client; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il <xref:System.Text.Encoding>relativo a questa risposta <xref:System.Net.HttpListenerResponse.OutputStream*>.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  remarks: "Un <xref:System.Text.Encoding>oggetto può essere utilizzato per convertire le sequenze di byte in caratteri in sequenze di byte e il set di caratteri (codici).</xref:System.Text.Encoding>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Un <xref:System.Text.Encoding>adatto per l&quot;uso con i dati nell&quot;oggetto di <xref:System.Net.HttpListenerResponse.OutputStream*>, proprietà o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è specificata alcuna codifica.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il numero di byte di dati del corpo inclusi nella risposta."
  remarks: "Il `Content-Length` intestazione esprime la lunghezza, espressa in byte, dei dati del corpo della risposta. Quando si utilizza un formato che non invia i dati in blocchi o non elaborati, è necessario impostare la proprietà ContentLength64. In caso contrario, il <xref:System.Net.HttpListener>non invia i dati di risposta.</xref:System.Net.HttpListener>       Per un elenco completo di intestazioni di risposta, vedere il <xref:System.Net.HttpResponseHeader>enumerazione.</xref:System.Net.HttpResponseHeader>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "Il valore della risposta <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> intestazione."
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per un&quot;operazione set è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La risposta è già stata inviata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tipo MIME del contenuto restituito."
  remarks: "Durante la comunicazione con un Web browser, è necessario impostare questa proprietà in modo esplicito quando viene restituito diverso da qualsiasi tipo di contenuto `text/html`.       Per un elenco completo di intestazioni di risposta, vedere il <xref:System.Net.HttpResponseHeader>enumerazione.</xref:System.Net.HttpResponseHeader>"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>istanza che contiene il testo della risposta <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato per un&quot;operazione set è una stringa vuota (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la raccolta di cookie restituito con la risposta."
  remarks: 'Un cookie è dati di testo Nome/valore da un server Web che viene archiviato nel computer locale (client). Sono supportati i seguenti formati di cookie: Netscape, RFC 2109 e RFC 2965. Specifica il cookie di Netscape è disponibile all&quot;indirizzo http://WP.Netscape.com/newsref/std/cookie_spec.HTML i documenti RFC sono disponibili in [http://www.rfc-editor.org](http://www.rfc-editor.org).'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "Oggetto <xref:System.Net.CookieCollection>che contiene i cookie che accompagnano la risposta.</xref:System.Net.CookieCollection> La raccolta è vuota se nessun cookie sono stati aggiunti alla risposta."
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Copia le proprietà dall&quot;oggetto specificato <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> questa risposta."
  remarks: "Se si modifica regolarmente molte proprietà rispetto ai valori predefiniti per un set fisso di nuovi valori, è consigliabile usare un <xref:System.Net.HttpListenerResponse>istanza come modello.</xref:System.Net.HttpListenerResponse> Personalizzare la risposta modello una sola volta e, anziché configurare ogni risposta separatamente, chiamare il metodo CopyFrom per configurare una nuova risposta in base ai valori delle proprietà della risposta modello.       Le seguenti proprietà vengono copiate dal `templateResponse` all&quot;istanza corrente.      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "Il <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> istanza da copiare."
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la raccolta di coppie nome/valore di intestazione restituita dal server."
  remarks: "Intestazioni di risposta contengono informazioni sui metadati, ad esempio la data e il tempo di risposta, l&quot;identità del server di risposta e il tipo MIME dei dati contenuti nel corpo della risposta.       Per un elenco completo di intestazioni di risposta, vedere il <xref:System.Net.HttpResponseHeader>enumerazione.</xref:System.Net.HttpResponseHeader>      > [!NOTE] > Se si tenta di impostare una lunghezza del contenuto, Keep-Alive, Transfer-Encoding, oppure verrà generata un&quot;intestazione WWW-Authenticate utilizzando la proprietà delle intestazioni, un&quot;eccezione. Utilizzare il <xref:System.Net.HttpListenerResponse.KeepAlive%2A>o <xref:System.Net.HttpListenerResponse.ContentLength64%2A>proprietà per impostare queste intestazioni.</xref:System.Net.HttpListenerResponse.ContentLength64%2A> </xref:System.Net.HttpListenerResponse.KeepAlive%2A> È possibile impostare manualmente le intestazioni Transfer-Encoding o WWW-Authenticate."
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A <xref:System.Net.WebHeaderCollection>istanza che contiene tutti i set in modo esplicito le intestazioni HTTP da includere nella risposta.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.Net.WebHeaderCollection>istanza specificato per un&quot;operazione di impostazione non è valida per una risposta.</xref:System.Net.WebHeaderCollection>"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un valore che indica se il server richiede una connessione permanente."
  remarks: "Se un client HTTP e un server prevede di scambiare dati più volte in un breve periodo, una connessione permanente di velocizzare le comunicazioni e consente di evitare l&quot;overhead necessario per aprire e chiudere una connessione TCP per ogni messaggio. Le connessioni permanenti sono ampiamente utilizzate nelle comunicazioni tra Web browser moderni e server Web.       Le connessioni permanenti sono descritte in dettaglio nella specifica di protocollo HTTP/1.1 (RFC 2616) disponibile sul sito Web RTF Editor ([http://www.rfc-editor.org](http://www.rfc-editor.org))."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il server richiede una connessione permanente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.IO.Stream>dell&quot;oggetto al quale è possibile scrivere una risposta.</xref:System.IO.Stream>"
  remarks: "Il <xref:System.Net.HttpListenerResponse.ContentLength64%2A>deve essere impostata in modo esplicito prima della scrittura all&quot;oggetto restituito <xref:System.IO.Stream>oggetto.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.ContentLength64%2A>      > [!NOTE] > La chiusura della richiesta non chiude il flusso restituito da questa proprietà. Quando non è più necessario il flusso, è necessario chiuderlo chiamando il metodo Close."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>dell&quot;oggetto al quale è possibile scrivere una risposta.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la versione HTTP utilizzata per la risposta."
  remarks: "Le funzionalità delle diverse versioni HTTP sono specificate nei documenti disponibili all&quot;indirizzo http://www.ietf.org."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "Oggetto <xref:System.Version>oggetto che indica la versione del protocollo HTTP utilizzata durante la risposta al client.</xref:System.Version> Si noti che questa proprietà è obsoleta."
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato per un&quot;operazione di impostazione non ha il <> </> *> impostata su 1 o non dispone di relativo <> </> *> proprietà è impostata su 0 o 1."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Configura la risposta per reindirizzare il client all&quot;URL specificato."
  remarks: "Il metodo viene utilizzato per reindirizzare un client al nuovo percorso per una risorsa. Questo metodo imposta la risposta `Location` intestazione `url`, <xref:System.Net.HttpListenerResponse.StatusCode%2A>proprietà <xref:System.Net.HttpStatusCode>e <xref:System.Net.HttpListenerResponse.StatusDescription%2A>proprietà su &quot;Found&quot;.</xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "L&quot;URL che il client deve utilizzare per individuare le risorse richieste."
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il valore di HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> intestazione nella risposta."
  remarks: "Il `Location` intestazione specifica l&quot;URL a cui è diretto il client per individuare una risorsa richiesta.      > [!NOTE] > Impostazione di questa proprietà non viene impostata automaticamente la <xref:System.Net.HttpListenerResponse.StatusCode%2A>proprietà.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene l&quot;URL assoluto da inviare al client il <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato per un&quot;operazione set è una stringa vuota (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta se la risposta Usa la codifica di trasferimento chunked."
  remarks: "Il corpo di un messaggio in blocchi è costituito da una serie di blocchi. Ogni blocco è composto da due parti, ovvero le dimensioni dei dati del blocco e i dati effettivi. Se impostato su true la risposta viene inviata utilizzando la codifica."
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la risposta è impostata per utilizzare; codifica di trasferimento chunked in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge o aggiorna un <xref:System.Net.Cookie>nella raccolta di cookie inviati con questa risposta.</xref:System.Net.Cookie>"
  remarks: "Due cookie sono considerati uguali se i valori delle loro <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, e <xref:System.Net.Cookie.Path%2A>proprietà sono identiche.</xref:System.Net.Cookie.Path%2A> </xref:System.Net.Cookie.Domain%2A> </xref:System.Net.Cookie.Name%2A> Se questi tre tipi di informazioni sono uguali, il metodo tenta di aggiornare il cookie. I confronti di nome e il dominio non sono tra maiuscole e minuscole, ma il percorso di confronto viene fatta distinzione tra maiuscole e minuscole."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "Oggetto <xref:System.Net.Cookie>per la risposta.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il cookie è già presente nella raccolta e non può essere sostituito."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il codice di stato HTTP da restituire al client."
  remarks: "Client di utilizzano il codice di stato restituito dal server per decidere come procedere. Il valore <xref:System.Net.HttpStatusCode>indica che il server di richiesta del client elaborata correttamente e incluso la risorsa richiesta nel corpo della risposta.</xref:System.Net.HttpStatusCode> Altri codici di stato comuni includono <xref:System.Net.HttpStatusCode>, che indica che la risorsa richiesta non è stata trovata nel server, e <xref:System.Net.HttpStatusCode>, che indica che non era necessario restituire la risorsa richiesta nel corpo della risposta perché il client della copia memorizzata nella cache della risorsa è aggiornata.</xref:System.Net.HttpStatusCode> </xref:System.Net.HttpStatusCode>       Per un elenco completo dei codici di stato possibili, vedere il <xref:System.Net.HttpStatusCode>enumerazione.</xref:System.Net.HttpStatusCode>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il codice di stato HTTP per la risorsa richiesta.</xref:System.Int32> Il valore predefinito è <xref:System.Net.HttpStatusCode>, che indica che il server correttamente elaborato la richiesta del client e incluso la risorsa richiesta nel corpo della risposta.</xref:System.Net.HttpStatusCode>"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è chiuso."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Il valore specificato per un&quot;operazione di impostazione non è valido. I valori validi sono compresi tra 100 e 999 inclusi."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta una descrizione del codice di stato HTTP restituito al client."
  remarks: "La descrizione dello stato in genere fornisce informazioni dettagliate che illustrano il <xref:System.Net.HttpListenerResponse.StatusCode%2A>valore.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "La descrizione del codice di stato HTTP restituito al client. Il valore predefinito è la descrizione di RFC 2616 per il <xref:System.Net.HttpListenerResponse.StatusCode*>valore della proprietà o una stringa vuota (&quot;&quot;) se non esiste una descrizione di RFC 2616.</xref:System.Net.HttpListenerResponse.StatusCode*>"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato per un&quot;operazione set contiene caratteri non stampabili."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>."
  remarks: "Utilizzare il <xref:System.Net.HttpListenerResponse.Close%2A>metodo per inviare la risposta e rilasciare le risorse utilizzate da un <xref:System.Net.HttpListenerResponse>.</xref:System.Net.HttpListenerResponse> </xref:System.Net.HttpListenerResponse.Close%2A> Per eliminare la risposta e rilasciare le risorse usate da questa istanza, utilizzare il <xref:System.Net.HttpListenerResponse.Abort%2A>metodo.</xref:System.Net.HttpListenerResponse.Abort%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
