### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.DataObject
  id: DataObject
  children:
  - System.Security.Cryptography.Xml.DataObject.#ctor
  - System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.Data
  - System.Security.Cryptography.Xml.DataObject.Encoding
  - System.Security.Cryptography.Xml.DataObject.GetXml
  - System.Security.Cryptography.Xml.DataObject.Id
  - System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.MimeType
  langs:
  - csharp
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
  type: Class
  summary: "Rappresenta l&quot;elemento oggetto di una firma XML che contiene i dati da firmare."
  remarks: "Utilizzare la classe DataObject per archiviare informazioni o metadati direttamente in una firma XML.  Ad esempio, è possibile archiviare la firma data di generazione o l&quot;identità del firmatario.  La classe DataObject può o non può essere interessata dalla firma XML.       La classe corrisponde al `<Object>` elemento la specifica World Wide Web Consortium (W3C) per le firme di XML. Per ulteriori informazioni sulla specifica W3C, vedere [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/)."
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/t-system.security.crypto_69_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/t-system.security.crypto_69_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/t-system.security.crypto_69_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/t-system.security.crypto_69_2.cpp)]"
  syntax:
    content: public class DataObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> classe."
  remarks: "La <xref:System.Security.Cryptography.Xml.DataObject>classe viene utilizzata con le firme XML.</xref:System.Security.Cryptography.Xml.DataObject> Dopo aver inizializzato la <xref:System.Security.Cryptography.Xml.DataObject>, è possibile assegnare il <xref:System.Security.Cryptography.Xml.DataObject.Data%2A>e <xref:System.Security.Cryptography.Xml.DataObject.Id%2A>proprietà.</xref:System.Security.Cryptography.Xml.DataObject.Id%2A> </xref:System.Security.Cryptography.Xml.DataObject.Data%2A> </xref:System.Security.Cryptography.Xml.DataObject>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/m-system.security.crypto_95_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/m-system.security.crypto_95_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/m-system.security.crypto_95_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/m-system.security.crypto_95_2.cpp)]"
  syntax:
    content: public DataObject ();
    parameters: []
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> classe con l&quot;ID specificato, MIME tipo, la codifica e dati."
  remarks: "La <xref:System.Security.Cryptography.Xml.DataObject>classe viene utilizzata con le firme XML.</xref:System.Security.Cryptography.Xml.DataObject> Il `id` parametro fa riferimento al nome dell&quot;elemento che contiene i dati da utilizzare. Il `data` parametro fa riferimento all&quot;elenco di nodi XML che contiene il `id` elemento del parametro."
  syntax:
    content: public DataObject (string id, string mimeType, string encoding, System.Xml.XmlElement data);
    parameters:
    - id: id
      type: System.String
      description: "L&quot;identificazione per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> con."
    - id: mimeType
      type: System.String
      description: "Il tipo MIME dei dati utilizzati per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
    - id: encoding
      type: System.String
      description: "La codifica dei dati utilizzati per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
    - id: data
      type: System.Xml.XmlElement
      description: "I dati per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> con."
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>data</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Data
  id: Data
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta il valore di dati dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  remarks: "Questa proprietà è l&quot;elenco dei nodi XML che contiene gli elementi descritti nella <xref:System.Security.Cryptography.Xml.DataObject.Id%2A>proprietà.</xref:System.Security.Cryptography.Xml.DataObject.Id%2A>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_100_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_100_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_100_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_100_2.cpp)]"
  syntax:
    content: public System.Xml.XmlNodeList Data { get; set; }
    return:
      type: System.Xml.XmlNodeList
      description: "I dati dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.DataObject.Data*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore utilizzato per impostare la proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta la codifica corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  remarks: "Il valore predefinito di questa proprietà è `null`, che indica che non è presenta alcuna codifica."
  syntax:
    content: public string Encoding { get; set; }
    return:
      type: System.String
      description: "Il tipo di codifica dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.DataObject.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Restituisce la rappresentazione XML del <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  remarks: "Utilizzare questo metodo al codice XML di output per un <xref:System.Security.Cryptography.Xml.DataObject>.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Rappresentazione XML di <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.DataObject.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Id
  id: Id
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta l&quot;identificazione dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  remarks: "Identificazione utilizzata per fare riferimento il <xref:System.Security.Cryptography.Xml.DataObject>da un altro percorso.</xref:System.Security.Cryptography.Xml.DataObject> Il valore predefinito di questa proprietà è `null`, che implica che è presente alcuna identificazione. Questa proprietà è comune a cui fa riferimento il <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>proprietà.</xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_82_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_82_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_82_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_82_2.cpp)]"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;elemento che contiene i dati da utilizzare."
  overload: System.Security.Cryptography.Xml.DataObject.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carica un <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> stato da un elemento XML."
  remarks: "Questo metodo può essere utilizzato per aggiungere elementi XML aggiuntivi un <xref:System.Security.Cryptography.Xml.DataObject>oggetto.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "L&quot;elemento XML da cui caricare il <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> dello stato da."
  overload: System.Security.Cryptography.Xml.DataObject.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore dall&quot;elemento XML è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta il tipo MIME dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto."
  remarks: "Il tipo MIME descrive i dati all&quot;interno di <xref:System.Security.Cryptography.Xml.DataObject>.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public string MimeType { get; set; }
    return:
      type: System.String
      description: "Il tipo MIME dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.DataObject.MimeType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.DataObject.Data
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
- uid: System.Security.Cryptography.Xml.DataObject.Id
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
- uid: System.Security.Cryptography.Xml.DataObject.#ctor*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject
  nameWithType: DataObject.DataObject
- uid: System.Security.Cryptography.Xml.DataObject.Data*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
- uid: System.Security.Cryptography.Xml.DataObject.Encoding*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml
  nameWithType: DataObject.GetXml
- uid: System.Security.Cryptography.Xml.DataObject.Id*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml
  nameWithType: DataObject.LoadXml
- uid: System.Security.Cryptography.Xml.DataObject.MimeType*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
