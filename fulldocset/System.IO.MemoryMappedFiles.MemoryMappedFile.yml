### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  id: MemoryMappedFile
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  langs:
  - csharp
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
  type: Class
  summary: "Rappresenta un file mappato alla memoria."
  remarks: "Un file mappato alla memoria esegue il mapping allo spazio degli indirizzi logico di un&quot;applicazione il contenuto di un file. File mappati alla memoria consentono ai programmatori di lavorare con file grandi perché la memoria può essere gestita simultaneamente e consentono l&quot;accesso completo e casuale a un file senza la necessità di ricerca. File mappato alla memoria, inoltre, possono essere condivisi tra più processi.       Il <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>metodi creano un file mappato alla memoria da un percorso specificato o un <xref:System.IO.FileStream>di un file esistente sul disco.</xref:System.IO.FileStream> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> Le modifiche vengono propagate automaticamente su disco quando il file non è mappato.       Il <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>metodi creano un file mappato alla memoria non è mappato a un file esistente sul disco; e sono adatti per la creazione di memoria condivisa per la comunicazione interprocesso (IPC).</xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>       Un file mappato alla memoria è associato a un nome.       È possibile creare visualizzazioni multiple del file mappato alla memoria, incluse le viste di parti del file. È possibile mappare la stessa parte di un file a più di un indirizzo per creare memoria simultanea. Per le due viste rimangano simultanee, devono essere creati dallo stesso file mappato alla memoria. Creazione di due mapping dello stesso file con due visualizzazioni non fornisce la concorrenza."
  example:
  - "The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/t-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/t-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: 'public class MemoryMappedFile : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  id: CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria da un file su disco."
  remarks: ''
  example:
  - "The following example uses the CreateFromFile method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/m-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso di file da mappare."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Un file mappato alla memoria."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>è una stringa vuota, contiene solo spazi vuoti o contiene uno o più caratteri non validi, come definito dal &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metodo.       - oppure - <code>path</code> fa riferimento a un dispositivo non valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>supera la lunghezza massima definita dal sistema operativo. In Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono contenere meno di 260 caratteri."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie per il file."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  id: CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la modalità di accesso specificato da un file su disco."
  remarks: "La `mode` parametro relativo al file di origine sul disco. È possibile utilizzare solo il <xref:System.IO.FileMode>il valore di enumerazione per creare il file mappato alla memoria dal file di origine sul disco.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso di file da mappare."
    - id: mode
      type: System.IO.FileMode
      description: "Modalità di accesso. must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Un file mappato alla memoria con la modalità di accesso specificato."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>è una stringa vuota, contiene solo spazi vuoti o contiene uno o più caratteri non validi, come definito dal &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metodo.       - oppure - <code>path</code> fa riferimento a un dispositivo non valido.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - oppure - <code>mode</code> è <xref href=&quot;System.IO.FileMode&quot;> </xref> e il file su disco non esiste.       - oppure - i/o di un errore."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>supera la lunghezza massima definita dal sistema operativo. In Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono contenere meno di 260 caratteri."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie per il file."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con il nome e la modalità di accesso specificato da un file su disco."
  remarks: "La `mode` parametro relativo al file di origine sul disco. È possibile utilizzare solo il <xref:System.IO.FileMode>il valore di enumerazione per creare il file mappato alla memoria dal file di origine sul disco.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file da mappare."
    - id: mode
      type: System.IO.FileMode
      description: "Modalità di accesso. must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Un file mappato alla memoria con la modalità di accesso e al nome specificata."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>è una stringa vuota, contiene solo spazi vuoti o contiene uno o più caratteri non validi, come definito dal &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metodo.       - oppure - <code>path</code> fa riferimento a un dispositivo non valido.       - oppure - <code>mapName</code> è una stringa vuota.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - oppure - <code>mode</code> è <xref href=&quot;System.IO.FileMode&quot;> </xref> e il file su disco non esiste.       - oppure - i/o di un errore."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>supera la lunghezza massima definita dal sistema operativo. In Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono contenere meno di 260 caratteri."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie per il file."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la modalità di accesso specificato, nome e la capacità da un file su disco."
  remarks: "La `mode` parametro relativo al file di origine sul disco.       Se `capacity` è maggiore di quanto le dimensioni del file su disco, il file su disco viene aumentata per corrispondere la capacità specificata, anche se non vengono scritti dati al file mappato alla memoria. Per evitare questo problema, specificare 0 (zero) per la capacità predefinita, che verrà impostata internamente `capacity` alla dimensione del file su disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file da mappare."
    - id: mode
      type: System.IO.FileMode
      description: "Modalità di accesso. può essere uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori di enumerazione, ad eccezione <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria. Specificare 0 per impostare la capacità per le dimensioni del file su disco."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>è una stringa vuota, contiene solo spazi vuoti o contiene uno o più caratteri non validi, come definito dal &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metodo.       - oppure - <code>path</code> fa riferimento a un dispositivo non valido.       - oppure - <code>mapName</code> è una stringa vuota.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore di zero.       - oppure - <code>capacity</code> è minore di (le dimensioni del file ma non zero).       - oppure - <code>capacity</code> è zero e anche la dimensione del file su disco è zero."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>supera la lunghezza massima definita dal sistema operativo. In Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono contenere meno di 260 caratteri."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie per il file."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la modalità di accesso specificato, nome, capacità e il tipo di accesso da un file su disco."
  remarks: "La `mode` parametro relativo al file di origine sul disco.       Se `capacity` è maggiore di quanto le dimensioni del file su disco, il file su disco viene aumentata per corrispondere la capacità specificata, anche se non vengono scritti dati al file mappato alla memoria. Per evitare questo problema, specificare 0 (zero) per la capacità predefinita, che verrà impostata internamente `capacity` alla dimensione del file su disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file da mappare."
    - id: mode
      type: System.IO.FileMode
      description: "Modalità di accesso. può essere uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori di enumerazione, ad eccezione <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria. Specificare 0 per impostare la capacità per le dimensioni del file su disco."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> non è un valore consentito.       - oppure - <code>path</code> specifica un file vuoto.       - oppure - <code>access</code> è specificato come <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> e la capacità è maggiore della dimensione del file indicato da <code>path</code>.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore di zero.       - oppure - <code>capacity</code> è minore di (le dimensioni del file ma non zero).       - oppure - <code>capacity</code> è zero e anche la dimensione del file su disco è zero.       - oppure - <code>access</code> non è definita un&quot; <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore.       Le dimensioni del file indicato da - oppure - <code>path</code> è maggiore di <code>capacity</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "- oppure - i/o di un errore."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>supera la lunghezza massima definita dal sistema operativo. In Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono contenere meno di 260 caratteri."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie per il file."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria da un file esistente con la modalità di accesso specificato, nome, l&quot;ereditabilità e capacità."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "Il flusso di file del file esistente."
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria. Specificare 0 per impostare la capacità sulla dimensione di `filestream`."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria.       Questo parametro non può essere impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "Valore che indica se chiudere il file di origine del flusso quando il <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> è stato eliminato."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota.       - oppure - <code>capacity</code> e la lunghezza del file sono uguali a zero.       - oppure - <code>access</code> è impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione, non è consentito.       - oppure - <code>access</code> è impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> e <code>capacity</code> è maggiore della lunghezza di <xref uid=&quot;langword_csharp_filestream&quot; name=&quot;filestream&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore di zero.       - oppure - <code>capacity</code> è inferiore alle dimensioni del file.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con il nome specificato, la capacità, il tipo di accesso, le autorizzazioni di sicurezza, ereditabilità e requisito di eliminazione da un file su disco."
  remarks: "Se `capacity` è maggiore di quanto le dimensioni del file su disco, il file su disco viene aumentata per corrispondere la capacità specificata, anche se non vengono scritti dati al file mappato alla memoria. Per evitare questo problema, specificare 0 (zero) per la capacità predefinita, che verrà impostata internamente `capacity` alla dimensione del file su disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "La `fileStream` file da mappare."
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria. Specificare 0 per impostare la capacità per le dimensioni del file su disco."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria.       Questo parametro non può essere impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Le autorizzazioni che è possibile concedere per l&quot;accesso ai file e le operazioni sui file mappati alla memoria.       Questo parametro può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>non eliminare `fileStream` dopo il <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> è chiusa. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to dispose `fileStream`."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>capacity</code> e la lunghezza del file sono uguali a zero.       - oppure - <code>access</code> è impostato sul <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione, non è consentito."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>or <code>mapname</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore di zero.       - oppure - <code>capacity</code> è inferiore alle dimensioni del file.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>fileStream</code>è stata chiusa."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>is set to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;></xref> when <code>fileStream</code>&quot;s access is set to <xref href=&quot;System.IO.FileAccess&quot;></xref> or <xref href=&quot;System.IO.FileAccess&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mapName</code>esiste già."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  id: CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la capacità specificata nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  example:
  - "The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file. The following sequence of actions occur:  \n  \n1.  Process A creates the memory-mapped file and writes a value to it.  \n  \n2.  Process B opens the memory-mapped file and writes a value to it.  \n  \n3.  Process C opens the memory-mapped file and writes a value to it.  \n  \n4.  Process A reads and displays the values from the memory-mapped file.  \n  \n5.  After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.  \n  \n To run this example, do the following:  \n  \n1.  Compile the applications and open three Command windows.  \n  \n2.  In the first Command window, run Process A.  \n  \n3.  In the second Command window, run Process B.  \n  \n4.  Return to Process A and press ENTER.  \n  \n5.  In the third Command window, run Process C.  \n  \n6.  Return to Process A and press ENTER.  \n  \n The output of Process A is as follows:  \n  \n```  \nStart Process B and press ENTER to continue.  \nStart Process C and press ENTER to continue.  \nProcess A says: True  \nProcess B says: False  \nProcess C says: True  \n```  \n  \n **Process A**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_1.cs)]  \n  \n **Process B**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_2.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_2.cs)]  \n  \n **Process C**  \n  \n [!code-cs[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_3.cs)]\n [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_3.vb)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con il nome specificato e la capacità."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore o uguale a zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la capacità specificata e il tipo di accesso nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con il nome specificato, capacità, il tipo di accesso, opzioni di allocazione della memoria ed ereditabilità."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Combinazione bit per bit dei valori di enumerazione che specifica le opzioni di allocazione di memoria per il file mappato alla memoria."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Un valore che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un file mappato alla memoria con la capacità specificata, il tipo di accesso, l&quot;allocazione della memoria, le autorizzazioni di sicurezza ed ereditabilità nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Combinazione bit per bit dei valori di enumerazione che specifica le opzioni di allocazione di memoria per il file mappato alla memoria."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Le autorizzazioni che è possibile concedere per l&quot;accesso ai file e le operazioni sui file mappati alla memoria.       Questo parametro può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  id: CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea o apre un file mappato alla memoria con la capacità specificata nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare o aprire un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con il nome e la dimensione."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore o uguale a zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea o apre un file mappato alla memoria con la capacità specificata e il tipo di accesso nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare o aprire un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Il sistema operativo è negato l&quot;accesso specificato al file. ad esempio, l&quot;accesso è impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ma il file o la directory è di sola lettura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un nuovo file con mapping di memoria vuoto o apre un file mappato alla memoria esistente se ne esiste uno con lo stesso nome. Se l&quot;apertura di un file esistente, è possibile che gli argomenti di capacità e le opzioni di memoria verranno ignorati."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Combinazione bit per bit di valori che indicano le opzioni di allocazione di memoria da applicare al file."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Un valore che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Il sistema operativo è negato l&quot;accesso specificato al file. ad esempio, l&quot;accesso è impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ma il file o la directory è di sola lettura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea o apre un file mappato alla memoria con la capacità specificata, il tipo di accesso, l&quot;allocazione della memoria, le autorizzazioni di sicurezza ed ereditabilità nella memoria di sistema."
  remarks: "Utilizzare questo metodo per creare o aprire un file mappato alla memoria non è persistente (ovvero, non associata a un file su disco), che è possibile utilizzare per condividere dati tra processi."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nome da assegnare al file mappato alla memoria."
    - id: capacity
      type: System.Int64
      description: "La dimensione massima, in byte, da allocare per il file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Combinazione bit per bit dei valori di enumerazione che specifica le opzioni di allocazione di memoria per il file mappato alla memoria."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Le autorizzazioni che è possibile concedere per l&quot;accesso ai file e le operazioni sui file mappati alla memoria.       Questo parametro può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota.       - oppure - <code>access</code> è impostata su sola scrittura con la <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>è maggiore della dimensione dello spazio degli indirizzi logico.       - oppure - <code>capacity</code> è minore o uguale a zero.       - oppure - <code>access</code> non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Il sistema operativo negato specificato <code> access </code> al file, ad esempio, <code> access </code> è impostato su <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ma il file o la directory è di sola lettura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  id: CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> che esegue il mapping a una visualizzazione del file mappato alla memoria."
  remarks: "È possibile utilizzare la vista restituita da questo metodo per l&quot;accesso casuale in un file mappato alla memoria."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Blocco di memoria ad accesso casuale."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso al file mappato alla memoria non è autorizzato."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  id: CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> che esegue il mapping a una visualizzazione del file mappato alla memoria e con l&quot;offset specificato e la dimensione."
  remarks: "È possibile utilizzare la vista restituita da questo metodo per l&quot;accesso casuale in un file mappato alla memoria.       Per creare una visualizzazione completa del file mappato alla memoria, specificare 0 (zero) per la `size` parametro. In questo caso, le dimensioni della vista potrebbero essere minore o maggiore della dimensione del file di origine sul disco. In questo modo sono disponibili le viste in unità di sistema pagine e le dimensioni della visualizzazione viene arrotondata per eccesso la dimensione di pagina successiva del sistema."
  example:
  - "The following example creates a view of a memory-mapped file and edits it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/visualbasic/eabd93aa-7563-4639-a698-_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/csharp/eabd93aa-7563-4639-a698-_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte in corrispondenza del quale avviare la vista."
    - id: size
      type: System.Int64
      description: "Le dimensioni della visualizzazione. Specificare 0 (zero) per creare una visualizzazione che inizia in corrispondenza `offset` e termina approssimativamente alla fine del file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Blocco di memoria ad accesso casuale."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>o <code>size</code> è un valore negativo.       - oppure - <code>size</code> è maggiore dello spazio di indirizzo logico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso al file mappato alla memoria non è autorizzato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> che esegue il mapping a una visualizzazione del file mappato alla memoria e che è stato specificato offset, la dimensione e le restrizioni di accesso."
  remarks: "È possibile utilizzare la vista restituita da questo metodo per l&quot;accesso casuale in un file mappato alla memoria.       Per creare una visualizzazione completa del file mappato alla memoria, specificare 0 (zero) per la `size` parametro. In questo caso, le dimensioni della vista potrebbero essere minore o maggiore della dimensione del file di origine sul disco. In questo modo sono disponibili le viste in unità di sistema pagine e le dimensioni della visualizzazione viene arrotondata per eccesso la dimensione di pagina successiva del sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte in corrispondenza del quale avviare la vista."
    - id: size
      type: System.Int64
      description: "Le dimensioni della visualizzazione. Specificare 0 (zero) per creare una visualizzazione che inizia in corrispondenza `offset` e termina approssimativamente alla fine del file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Blocco di memoria ad accesso casuale."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>o <code>size</code> è un valore negativo.       - oppure - <code>size</code> è maggiore dello spazio di indirizzo logico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>non è valido per il file mappato alla memoria."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  id: CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un flusso mappato a una visualizzazione del file mappato alla memoria."
  remarks: "È possibile utilizzare il flusso restituito da questo metodo per l&quot;accesso sequenziale in un file mappato alla memoria, ad esempio per le comunicazioni tra processi."
  example:
  - "The following example creates a stream and writes a value to it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/visualbasic/m-system.io.memorymapped_1_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/csharp/m-system.io.memorymapped_1_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Un flusso di memoria."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso al file mappato alla memoria non è autorizzato."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  id: CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un flusso mappato a una visualizzazione del file mappato alla memoria e con l&quot;offset specificato e la dimensione."
  remarks: "È possibile utilizzare il flusso restituito da questo metodo per l&quot;accesso sequenziale in un file mappato alla memoria, ad esempio per le comunicazioni tra processi.       Per creare una visualizzazione completa del file mappato alla memoria, specificare 0 (zero) per la `size` parametro. In questo caso, le dimensioni della vista potrebbero essere minore o maggiore della dimensione del file di origine sul disco. In questo modo sono disponibili le viste in unità di sistema pagine e le dimensioni della visualizzazione viene arrotondata per eccesso la dimensione di pagina successiva del sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte in corrispondenza del quale avviare la vista."
    - id: size
      type: System.Int64
      description: "Le dimensioni della visualizzazione. Specificare 0 (zero) per creare una visualizzazione che inizia in corrispondenza `offset` e termina approssimativamente alla fine del file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Un flusso di memoria con l&quot;offset specificato e la dimensione."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>o <code>size</code> è un valore negativo.       - oppure - <code>size</code> è maggiore dello spazio di indirizzo logico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso al file mappato alla memoria non è autorizzato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>è maggiore della memoria virtuale totale."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Crea un flusso mappato a una visualizzazione del file mappato alla memoria e che contiene l&quot;offset specificato, dimensioni e tipo di accesso."
  remarks: "È possibile utilizzare il flusso restituito da questo metodo per l&quot;accesso sequenziale in un file mappato alla memoria, ad esempio per le comunicazioni tra processi.       Per creare una visualizzazione completa del file mappato alla memoria, specificare 0 (zero) per la `size` parametro. In questo caso, le dimensioni della vista potrebbero essere minore o maggiore della dimensione del file di origine sul disco. In questo modo sono disponibili le viste in unità di sistema pagine e le dimensioni della visualizzazione viene arrotondata per eccesso la dimensione di pagina successiva del sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte in corrispondenza del quale avviare la vista."
    - id: size
      type: System.Int64
      description: "Le dimensioni della visualizzazione. Specificare 0 (zero) per creare una visualizzazione che inizia in corrispondenza `offset` e termina approssimativamente alla fine del file mappato alla memoria."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Uno dei valori di enumerazione che specifica il tipo di accesso consentito al file mappato alla memoria. Il valore predefinito è <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Un flusso di memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>o <code>size</code> è un valore negativo.       - oppure - <code>size</code> è maggiore dello spazio di indirizzo logico.       - oppure - <code>access </code>non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valore di enumerazione."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>non è valido per il file mappato alla memoria."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>è maggiore della memoria virtuale totale.       - oppure - <code>access</code> non è valido per il file mappato alla memoria."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  id: Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  id: GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Ottiene il controllo di accesso alla risorsa del file mappato alla memoria."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Le autorizzazioni che è possibile concedere per l&quot;accesso ai file e le operazioni sui file mappati alla memoria."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il file mappato alla memoria viene chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma corrente è Windows 98 o versioni precedenti."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita.       - oppure - è stato aperto il file mappato alla memoria come <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> solo."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Apre un file mappato alla memoria esistente con il nome specificato nella memoria di sistema."
  remarks: "Il file mappato alla memoria può essere entrambi un persistente file mappato alla memoria (associato a un file su disco) o non persistente."
  example:
  - "**Opening a Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).  \n  \n [!code-cs[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/csharp/m-system.io.memorymapped_2_1.cs)]\n [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_2_1.vb)]  \n  \n **Opening a Non-Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file used for inter-process communication. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);
    parameters:
    - id: mapName
      type: System.String
      description: "Il nome del file mappato alla memoria da aprire."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con il nome specificato."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file specificato per <code> mapName </code> non esiste."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Apre un file mappato alla memoria esistente che dispone dei diritti di accesso e al nome specificati nella memoria di sistema."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);
    parameters:
    - id: mapName
      type: System.String
      description: "Il nome del file mappato alla memoria da aprire."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Uno dei valori di enumerazione che specifica i diritti di accesso da applicare al file mappato alla memoria."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> valore di enumerazione."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file specificato per <code> mapName </code> non esiste."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Apre un file mappato alla memoria esistente con il nome specificato, diritti di accesso e l&quot;ereditabilità nella memoria di sistema."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Il nome del file mappato alla memoria da aprire."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Uno dei valori di enumerazione che specifica i diritti di accesso da applicare al file mappato alla memoria."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che specifica se un handle al file mappato alla memoria può essere ereditato da un processo figlio. Il valore predefinito è <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "File mappato alla memoria con le caratteristiche specificate."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>non è un valido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> valore di enumerazione.       - oppure - <code>inheritability</code> non è un valido <xref:System.IO.HandleInheritability> valore di enumerazione."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso richiesto non è valido per il file mappato alla memoria."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file specificato per <code> mapName </code> non esiste."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  id: SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Ottiene l&quot;handle di file di un file mappato alla memoria."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
      description: "Handle al file mappato alla memoria."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  id: SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Imposta il controllo di accesso alla risorsa del file mappato alla memoria."
  syntax:
    content: public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);
    parameters:
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Le autorizzazioni che è possibile concedere per l&quot;accesso ai file e le operazioni sui file mappati alla memoria."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>memoryMappedFileSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileAccess
  nameWithType: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileSecurity
  nameWithType: MemoryMappedFileSecurity
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileOptions
  nameWithType: MemoryMappedFileOptions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileRights
  nameWithType: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: SafeMemoryMappedFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile
  nameWithType: MemoryMappedFile.CreateFromFile
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew
  nameWithType: MemoryMappedFile.CreateNew
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen
  nameWithType: MemoryMappedFile.CreateOrOpen
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor
  nameWithType: MemoryMappedFile.CreateViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream
  nameWithType: MemoryMappedFile.CreateViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedFile.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl
  nameWithType: MemoryMappedFile.GetAccessControl
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting
  nameWithType: MemoryMappedFile.OpenExisting
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl
  nameWithType: MemoryMappedFile.SetAccessControl
