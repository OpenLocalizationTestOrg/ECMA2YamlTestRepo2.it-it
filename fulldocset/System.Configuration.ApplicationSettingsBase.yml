### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Funge da classe base per la derivazione di classi wrapper concrete per implementare la funzionalità Impostazioni applicazione nelle applicazioni Windows Form."
  remarks: "ApplicationSettingsBase aggiunge le funzionalità seguenti per il <xref:System.Configuration.SettingsBase>(classe), che viene utilizzata dalle applicazioni basate sul Web:-la possibilità di rilevare gli attributi in una classe derivata,. wrapper di impostazioni</xref:System.Configuration.SettingsBase> ApplicationSettingsBase supporta il modello dichiarativo utilizzato per la proprietà della classe wrapper, come descritto più avanti.      -Livello più alto <xref:System.Configuration.ApplicationSettingsBase.Save%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metodi.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      -Eventi di convalida aggiuntivi che è possibile gestire per garantire la correttezza delle singole impostazioni.       Nell&quot;architettura Impostazioni applicazione, per accedere a un gruppo di proprietà delle impostazioni è necessario derivare una classe wrapper concreta ApplicationSettingsBase. La classe wrapper Personalizza ApplicationSettingsBase nei modi seguenti: - per ogni proprietà delle impostazioni a cui accedere, un corrispondente fortemente tipizzate pubblica proprietà viene aggiunta alla classe wrapper. Questa proprietà ha `get` e `set` funzioni di accesso per le impostazioni dell&quot;applicazione di lettura/scrittura, ma solo un `get` funzione di accesso per le impostazioni di sola lettura.      -È necessario applicare gli attributi appropriati per la proprietà pubblica della classe wrapper per indicare le caratteristiche della proprietà di impostazione, ad esempio l&quot;ambito dell&quot;impostazione (applicazione o utente), se l&quot;impostazione deve supportare il roaming, il valore predefinito per l&quot;impostazione, il provider di impostazioni da utilizzare e così via. Ogni proprietà sono necessaria specificare l&quot;ambito, utilizzando uno <xref:System.Configuration.ApplicationScopedSettingAttribute>o <xref:System.Configuration.UserScopedSettingAttribute>.</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Le impostazioni con ambito di applicazione sono di sola lettura se il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider>viene utilizzato.</xref:System.Configuration.LocalFileSettingsProvider>       La classe ApplicationSettingsBase utilizza la reflection per rilevare questi attributi in fase di esecuzione. La maggior parte delle informazioni viene passato al livello di provider di impostazioni, è responsabile dell&quot;archiviazione, un formato di persistenza e così via.       Quando un&quot;applicazione dispone di più classi wrapper di impostazioni, ogni classe definisce un *gruppo di impostazioni*. Ogni gruppo presenta le caratteristiche seguenti:-un gruppo può contenere qualsiasi numero o un tipo di impostazioni delle proprietà.      -Se il nome del gruppo non è impostato in modo esplicito mediante la classe wrapper con la decorazione un <xref:System.Configuration.SettingsGroupNameAttribute>, quindi viene automaticamente generato un nome.</xref:System.Configuration.SettingsGroupNameAttribute>       Per impostazione predefinita, tutte le applicazioni basate su client utilizzano il <xref:System.Configuration.LocalFileSettingsProvider>per fornire l&quot;archiviazione.</xref:System.Configuration.LocalFileSettingsProvider> Se si desidera usare un provider di impostazioni alternativo, quindi la classe wrapper o una proprietà deve essere decorata con un corrispondente <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Per ulteriori informazioni sull&quot;utilizzo delle impostazioni dell&quot;applicazione, vedere [impostazioni applicazione per Windows Form](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza un&quot;istanza di <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe allo stato predefinito."
  remarks: "Il costruttore predefinito è stato progettato per funzionare con il presupposto che nessun componente associato alla classe wrapper impostazioni corrente, che deriva da <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>       Quando viene creata un&quot;istanza di una classe wrapper, ereditato del codice verrà eseguita automaticamente le azioni seguenti: 1.  La reflection della classe.      2.  Per ogni proprietà del wrapper contrassegnata con `[UserScopedSettingAttribute]` o `[ApplicationScopedSettingAttribute]`, un corrispondente <xref:System.Configuration.SettingsProperty>viene creato.</xref:System.Configuration.SettingsProperty>      3.  Ogni <xref:System.Configuration.SettingsProperty>presenta alcuni dei relativi set di proprietà basate su altri attributi che possono essere presenti nelle proprietà del wrapper, ad esempio il valore predefinito o il provider di impostazioni.</xref:System.Configuration.SettingsProperty>      4.  Tutti gli altri attributi sono semplicemente inseriti in un elenco di attributi, la <xref:System.Configuration.SettingsProperty.Attributes%2A>proprietà di <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  Tutti <xref:System.Configuration.SettingsProperty>gli oggetti vengono aggiunti a un <xref:System.Configuration.SettingsPropertyCollection>rappresentato dalla <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>proprietà di <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> Questa raccolta viene quindi passata al <xref:System.Configuration.SettingsBase.Initialize%2A>metodo.</xref:System.Configuration.SettingsBase.Initialize%2A>       Come suggerito dal passaggio 3 riportato in precedenza, <xref:System.Configuration.ApplicationSettingsBase>funziona in modo nativo con diversi attributi della proprietà, in particolare i seguenti: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>e <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> Tutte le altre impostazioni degli attributi vengono semplicemente passate al provider sottostante appropriato."
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza un&quot;istanza di <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe utilizzando il componente proprietario specificato."
  remarks: "Questo costruttore equivale esattamente al <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>mediante la chiamata del costruttore: `ApplicationSettingsBase(owner, String.Empty)` per informazioni sull&quot;utilizzo di reflection durante la creazione dell&quot;istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor>costruttore.</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Il componente che verrà utilizzato come il proprietario dell&quot;oggetto delle impostazioni dell&quot;applicazione."
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza un&quot;istanza di <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe utilizzando la chiave di impostazioni fornite."
  remarks: "Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>il valore di proprietà di `settingsKey` parametro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper delle impostazioni nello stesso dominio applicazione.       Per informazioni sull&quot;utilizzo di reflection durante la creazione dell&quot;istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor>costruttore.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "Un <xref:System.String>che identifica in istanze separate di classe del wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza un&quot;istanza di <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> classe utilizzando il componente proprietario specificato e la chiave di impostazioni."
  remarks: "Il <xref:System.ComponentModel.IComponent>specificato dall&quot;oggetto di `owner` parametro funge da proprietario dell&quot;istanza corrente di questa classe. le impostazioni di applicazioni</xref:System.ComponentModel.IComponent> Durante l&quot;inizializzazione della classe wrapper delle impostazioni è derivata da <xref:System.Configuration.ApplicationSettingsBase>, viene eseguita una query nel sito del proprietario per un <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ApplicationSettingsBase> Se è presente, viene utilizzato nel provider di impostazioni nativo per tutte le proprietà della classe wrapper, come specificato da <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>il valore di proprietà di `settingsKey` parametro.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper nello stesso dominio applicazione.       Per informazioni sull&quot;utilizzo di reflection durante la creazione dell&quot;istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor>costruttore.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Il componente che verrà utilizzato come il proprietario dell&quot;oggetto delle impostazioni dell&quot;applicazione."
    - id: settingsKey
      type: System.String
      description: "Un <xref:System.String>che identifica in istanze separate di classe del wrapper.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene il contesto di impostazioni dell&quot;applicazione associato al gruppo di impostazioni."
  remarks: "Ogni classe wrapper di impostazioni è derivata da <xref:System.Configuration.ApplicationSettingsBase>un contesto associato.</xref:System.Configuration.ApplicationSettingsBase> Il contesto viene passato al provider di impostazioni per ogni proprietà per identificare come utilizzare la proprietà. Il contesto funge pertanto da un suggerimento per determinare il modo migliore per rendere persistenti i valori delle impostazioni applicazione associata al provider di impostazioni.       Al contrario, la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>proprietà consente al provider di impostazioni evitare ambiguità tra più istanze della stessa classe wrapper.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> associata al gruppo di impostazioni."
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Restituisce il valore della proprietà di impostazione denominata per la versione precedente della stessa applicazione."
  remarks: "Il metodo GetPreviousVersion viene spesso utilizzato in combinazione con il <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>metodo durante la migrazione delle impostazioni dell&quot;applicazione durante l&quot;installazione di una nuova versione di un&quot;applicazione.</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Oggetto <xref:System.String>contenente il nome della proprietà di impostazione, il cui valore è da restituire.</xref:System.String>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>contenente il valore dell&quot;oggetto specificato <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "La proprietà non esiste. Il numero di proprietà è zero o la proprietà non viene trovata nell&quot;archivio dati."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene o imposta il valore della proprietà di impostazione dell&quot;applicazione specificato."
  remarks: "La proprietà Item, noto anche come indicizzatore, viene utilizzata regolarmente nella classe wrapper delle impostazioni derivata da <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Elemento associa la proprietà pubblica della classe wrapper per la proprietà delle impostazioni corrispondenti.       Elemento genera vari eventi a seconda dell&quot;operazione in corso: - la prima volta che viene recuperata una proprietà, il <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>viene generato l&quot;evento.</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      -Quando una proprietà è impostata, il <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>viene generato l&quot;evento.</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> Se il gestore non annullare l&quot;evento, quindi il valore della proprietà viene impostato e <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>viene generato l&quot;evento.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Oggetto <xref:System.String>contenente il nome della proprietà a cui accedere.</xref:System.String>"
    return:
      type: System.Object
      description: "Se presente, il valore della proprietà impostazioni denominata. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Nessuna proprietà associata al wrapper corrente o la proprietà specificata non è stata trovata."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "È stato effettuato un tentativo di impostare una proprietà di sola lettura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Il valore fornito è di tipo non compatibile con la proprietà, le impostazioni durante un&quot;operazione set."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Impossibile analizzare il file di configurazione."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genera il <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnPropertyChanged consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "Oggetto <xref:System.ComponentModel.PropertyChangedEventArgs>che contiene i dati dell&quot;evento.</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genera il <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnSettingChanging consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "Oggetto <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genera il <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnSettingsLoaded consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genera il <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnSettingsSaving consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "L&quot;origine dell&quot;evento."
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Oggetto <xref:System.ComponentModel.CancelEventArgs>che contiene i dati dell&quot;evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene la raccolta di proprietà delle impostazioni del wrapper."
  remarks: "Il `get` funzione di accesso della proprietà proprietà riflette su tutti i metadati della classe wrapper delle impostazioni, derivata da <xref:System.Configuration.ApplicationSettingsBase>, determinare in modo dinamico il set di proprietà delle impostazioni dell&quot;applicazione disponibili.</xref:System.Configuration.ApplicationSettingsBase>       La <xref:System.Configuration.ApplicationSettingsBase>classe in modo nativo riconosce determinate caratteristiche di un&quot;impostazione dell&quot;applicazione, ad esempio il nome, tipo di proprietà, provider di impostazioni, il valore predefinito, leggere solo lo stato e una preferenza di serializzazione.</xref:System.Configuration.ApplicationSettingsBase> Queste caratteristiche sono configurati in mirroring come proprietà nella <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> Tutti gli altri attributi della proprietà di impostazione vengono semplicemente passati al provider di impostazioni associate."
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> contenente tutti i <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> oggetti utilizzati nel wrapper corrente."
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Non è stato possibile trovare il provider di impostazioni associate o non è riuscita la creazione di un&quot;istanza."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Si verifica quando viene modificato il valore di una proprietà delle impostazioni dell&quot;applicazione."
  remarks: "L&quot;evento PropertyChanged viene generato quando viene modificata una proprietà di impostazioni tramite la `set` funzione di accesso del <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metodo, o per tutte le proprietà che viene ripristinata quando viene eseguita una chiamata per il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>metodi.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       Non è corrispondente `PropertyChanging` evento per questa classe, invece, vedere il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>evento.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene una raccolta di valori di proprietà."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> dei valori delle proprietà."
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene la raccolta di provider di impostazioni applicazione utilizzati dal wrapper."
  remarks: "Il <xref:System.Configuration.SettingsProviderAttribute>determina il provider di impostazioni utilizzato da una classe wrapper di impostazioni o di una proprietà di singola impostazione.</xref:System.Configuration.SettingsProviderAttribute> Se questo attributo non è specificato, un&quot;applicazione client utilizzerà la <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> contenente tutti i <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> oggetti utilizzati per le proprietà delle impostazioni di wrapper di impostazioni corrente."
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Aggiorna i valori delle proprietà delle impostazioni dell&quot;applicazione dall&quot;archivio permanente."
  remarks: "Il metodo Reload Cancella i valori delle proprietà attualmente memorizzati nella cache, causando un ricaricamento dei valori seguenti dall&quot;archivio permanente quando vi si accede successivamente. Questo metodo esegue le azioni seguenti:-cancella le proprietà memorizzate nella cache cancellando la raccolta rappresentata dal <xref:System.Configuration.SettingsBase.PropertyValues%2A>proprietà.</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -Genera il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>evento per ogni membro del <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>insieme.</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       Ricaricare contrasta con <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>in quanto il primo caricherà l&quot;ultimo set di valori delle impostazioni dell&quot;applicazione salvati, mentre il secondo caricherà i valori predefiniti salvati.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ripristina i valori delle impostazioni applicazione persistenti corrispondenti proprietà predefinite."
  remarks: "Il metodo di ripristino sovrascrive le proprietà delle impostazioni con ambito di utente ripristinando i valori attualmente permanenti di ogni impostazione dell&quot;applicazione. Questo metodo esegue le azioni seguenti:-chiama il <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>metodo su ogni provider di impostazioni che supporta questo metodo facoltativo.</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      -Chiama il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metodo per forzare un aggiornamento dei valori di proprietà delle impostazioni.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>è in contrasto con la reimpostazione in quanto il primo caricherà l&quot;ultimo set di valori delle impostazioni dell&quot;applicazione salvati, mentre il secondo caricherà i valori predefiniti salvati.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Impossibile analizzare il file di configurazione."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Archivia i valori correnti delle proprietà delle impostazioni di applicazione."
  remarks: "Il metodo Save scrive il valore corrente di ogni proprietà delle impostazioni nell&quot;archivio dati associato. Per ogni proprietà, questo metodo chiama il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>(metodo) nel provider di impostazioni associate.</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       Questo metodo è diverso dall&quot;implementazione della classe base, in quanto genera il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>evento prima che i valori vengono scritti.</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       Se le uniche impostazioni definite con ambito di applicazione, impostazioni di salvataggio verrà non hanno alcun effetto e non restituiscono alcun errore se viene chiamato con il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider> <xref:System.Configuration.LocalFileSettingsProvider>Salva solo le impostazioni con ambito di utente.</xref:System.Configuration.LocalFileSettingsProvider>      > [!IMPORTANT] > Non vi è alcun metodo carico corrispondente perché i valori delle impostazioni dell&quot;applicazione vengono caricati automaticamente durante l&quot;inizializzazione della classe wrapper. Questi valori non vengono invece salvati automaticamente al termine di un&quot;applicazione. Pertanto, è necessario chiamare in modo esplicito il metodo Save per mantenere i valori correnti delle impostazioni dell&quot;applicazione. Questa operazione viene in genere eseguita nel <xref:System.Windows.Forms.Form.Closing>gestore dell&quot;evento del database primario o contenenti <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closing>"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Si verifica prima che venga modificato il valore di una proprietà delle impostazioni dell&quot;applicazione."
  remarks: "L&quot;evento SettingChanging viene generato prima che venga modificata una proprietà di valore di impostazione dell&quot;applicazione tramite il <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metodo.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Questo evento non viene generato quando il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>metodi vengono chiamati.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> SettingChanging può essere annullata tramite la <xref:System.Configuration.SettingChangingEventArgs>classe di evento dati.</xref:System.Configuration.SettingChangingEventArgs>       È in genere possibile utilizzare l&quot;evento SettingChanging per gestire la convalida immediata di una proprietà di singole impostazioni. Per ulteriori informazioni sulla convalida, vedere [procedura: convalidare le impostazioni dell&quot;applicazione](~/add/includes/ajax-current-ext-md.md).       Non è corrispondente `SettingChanged` evento per questa classe, invece, vedere il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>evento.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene o imposta la chiave di impostazioni per il gruppo di impostazioni dell&quot;applicazione."
  remarks: "La proprietà SettingsKey viene fornita per consentire al codice client e in particolare, il provider di impostazioni, per evitare ambiguità tra più istanze della classe delle impostazioni dell&quot;applicazione stessa.       A meno che la classe wrapper di impostazioni viene progettata con il modello singleton, possono esserci più istanze della stessa classe di impostazioni dell&quot;applicazione in una singola applicazione. Il valore di SettingsKey deve essere impostato in base a come i valori delle proprietà sono destinati a essere condivise.      -Se le proprietà delle impostazioni del wrapper sono destinate a essere condiviso tra tutte le istanze del wrapper nella stessa applicazione, SettingsKey deve avere lo stesso valore in tutte le istanze. Questo è il comportamento predefinito della <xref:System.Configuration.ApplicationSettingsBase>classe.</xref:System.Configuration.ApplicationSettingsBase>      -Se le proprietà delle impostazioni del wrapper sono destinate a essere per ogni istanza, quindi SettingsKey deve avere un valore univoco per ogni istanza. Il <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>versione del costruttore consente di inizializzare SettingsKey a una stringa univoca.</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       Al contrario, il <xref:System.Configuration.ApplicationSettingsBase.Context%2A>proprietà vengono forniti alcuni suggerimenti per il provider di impostazioni per abilitare la funzionalità di mantenere i valori in modo efficace e corretto.</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       La <xref:System.Configuration.SettingChangingEventArgs>classe contiene un simile <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>proprietà che consentono di identificare l&quot;origine del <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>evento.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente la chiave di impostazioni per il gruppo di impostazioni corrente.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Si verifica dopo che le impostazioni dell&quot;applicazione vengono recuperate dall&quot;archivio."
  remarks: "Si verifica l&quot;evento SettingsLoaded solo dopo l&quot;iniziale `get` accesso della proprietà di configurazione prima utilizzata, in genere tramite il <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metodo.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Gli accessi successivi utilizzano i valori della proprietà delle impostazioni che vengono memorizzati nella cache locale. Il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metodi verranno cancellati tutti memorizzati nella cache i valori, questo evento verrà generato nuovamente al successivo accesso della proprietà.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Si verifica prima che i valori vengono salvati nell&quot;archivio dati."
  remarks: "L&quot;evento SettingsSaving viene generato dal <xref:System.Configuration.ApplicationSettingsBase.Save%2A>metodo prima di memorizzare le proprietà delle impostazioni dell&quot;applicazione al relativo archivio dati associato.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> Il gestore eventi associato può annullare questo evento."
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Aggiorna le impostazioni dell&quot;applicazione per riflettere un&quot;installazione più recente dell&quot;applicazione."
  remarks: "Il metodo di aggiornamento vengono eseguite due azioni per garantire una transizione a una nuova versione di un&quot;applicazione:-notifica a tutti i provider di impostazioni corrispondenti dell&quot;esistenza dell&quot;applicazione aggiornata tramite una chiamata a loro <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>(metodo), presupponendo che sia stata implementata la <xref:System.Configuration.IApplicationSettingsProvider>interfaccia.</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> Questa azione non viene eseguita se la classe wrapper di impostazioni è contrassegnata con <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>      -Ricarica i valori per tutte le impostazioni dell&quot;applicazione.       È possibile eseguire l&quot;override del comportamento predefinito di aggiornamento per implementare l&quot;aggiornamento o di unione di comportamento personalizzato. Utilizzare il <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>metodo per recuperare i singoli valori per un&quot;impostazione per la versione precedente dell&quot;applicazione.</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Esempi di comportamento di aggiornamento personalizzato:-utilizzando le impostazioni predefinite precedenti o nuovi valori predefiniti di criteri che eseguono l&quot;override di uno o più valori specificati dall&quot;utente.      -Speciale conversione dei valori precedenti per essere compatibile con più recente degli intervalli, un gruppo di impostazioni diverse proprietà e così via."
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Impossibile analizzare il file di configurazione."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
