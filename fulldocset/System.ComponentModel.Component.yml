### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Component
  id: Component
  children:
  - System.ComponentModel.Component.#ctor
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.Finalize
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  langs:
  - csharp
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
  type: Class
  summary: "Fornisce l&quot;implementazione di base per il <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> oggetto di interfaccia e consente la condivisione tra le applicazioni."
  remarks: "Componente è la classe base per tutti i componenti di common language runtime che il marshalling per riferimento. Componente utilizzabile in remoto e deriva dalla <xref:System.MarshalByRefObject>classe.</xref:System.MarshalByRefObject> Componente fornisce un&quot;implementazione del <xref:System.ComponentModel.IComponent>interfaccia.</xref:System.ComponentModel.IComponent> Il <xref:System.ComponentModel.MarshalByValueComponent>fornisce un&quot;implementazione di <xref:System.ComponentModel.IComponent>che esegue il marshalling per valore.</xref:System.ComponentModel.IComponent> </xref:System.ComponentModel.MarshalByValueComponent>       È possibile ospitare un componente in qualsiasi oggetto che implementa il <xref:System.ComponentModel.IContainer>interfaccia ed è possibile eseguire una query e ottenere servizi dal contenitore.</xref:System.ComponentModel.IContainer> Il contenitore viene creato un <xref:System.ComponentModel.ISite>per ogni componente che contiene.</xref:System.ComponentModel.ISite> Il contenitore utilizza il sito per gestire il componente e viene utilizzato dal componente per comunicare con il relativo contenitore.       Un componente deve rilasciare le risorse in modo esplicito mediante chiamate al relativo <xref:System.ComponentModel.Component.Dispose%2A>metodo, senza attendere la gestione automatica della memoria tramite una chiamata implicita al <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> Quando un <xref:System.ComponentModel.Container>viene eliminato, tutti i componenti all&quot;interno di <xref:System.ComponentModel.Container>vengono anche eliminati.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container>"
  syntax:
    content: >-
      [System.ComponentModel.DesignerCategory("Component")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Component : MarshalByRefObject, IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Component.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Component&quot;> </xref> classe."
  syntax:
    content: public Component ();
    parameters: []
  overload: System.ComponentModel.Component.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se il componente può generare un evento."
  remarks: "L&quot;implementazione predefinita di questa proprietà restituisce sempre `true`. Le classi che ereditano dalla <xref:System.ComponentModel.Component>classe deve eseguire l&quot;override di questa proprietà per fornire la possibilità di disabilitare la generazione di eventi.</xref:System.ComponentModel.Component> Ad esempio, nel <xref:System.Windows.Forms.Control>classe, se è ospitato il controllo come controllo ActiveX di <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>restituisce proprietà `false` se il controllo ActiveX gli eventi è bloccati.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Control>"
  syntax:
    content: protected virtual bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il componente può generare eventi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Container
  id: Container
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> che contiene il <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "I componenti in un contenitore vengono tenuta traccia in un first-in First-Out elenco, che definisce anche l&quot;ordine dei componenti all&quot;interno del contenitore. L&quot;ultimo componente aggiunto è l&quot;ultimo componente nell&quot;elenco."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "Il <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> che contiene il <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se presente, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> non è incapsulato in un <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.DesignMode
  id: DesignMode
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> è attualmente in modalità progettazione."
  remarks: "Indicatore della modalità di progettazione viene archiviato nel <xref:System.ComponentModel.ISite>; pertanto, se il <xref:System.ComponentModel.Component>non esiste un <xref:System.ComponentModel.ISite>associato, il valore di questa proprietà è `false`.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> è in modalità progettazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose
  id: Dispose
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> Il metodo Dispose lascia il <xref:System.ComponentModel.Component>in uno stato inutilizzabile.</xref:System.ComponentModel.Component> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Component>in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Component>occupata.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ComponentModel.Component>dell&quot;oggetto `Finalize` metodo.</xref:System.ComponentModel.Component>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.ComponentModel.Component&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.ComponentModel.Component.Dispose%2A>metodo e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Component>riferimenti.</xref:System.ComponentModel.Component> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Disposed
  id: Disposed
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Si verifica quando il componente viene eliminato da una chiamata al <xref:System.ComponentModel.Component.Dispose*>metodo.</xref:System.ComponentModel.Component.Dispose*>"
  remarks: 'Quando si crea un delegato è stato eliminato, si identifica il metodo che gestisce l&quot;evento. Per associare l&quot;evento al gestore eventi, aggiungere un&quot;istanza del delegato all&quot;evento. Il gestore eventi viene chiamato ogni volta che si verifica l&quot;evento, a meno che non venga rimosso il delegato. Per ulteriori informazioni sui delegati del gestore eventi, vedere [NIB: eventi e delegati](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Events
  id: Events
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;elenco di gestori di eventi associati a questo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "Un <xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> che fornisce i delegati per questo componente."
  overload: System.ComponentModel.Component.Events*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Finalize
  id: Finalize
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> venga recuperata tramite garbage collection."
  remarks: "Questo metodo esegue l&quot;override <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Il codice dell&quot;applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l&quot;operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A>metodo.</xref:System.GC.SuppressFinalize%2A>       Per ulteriori informazioni, vedere [metodi Finalize e distruttori](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md), e [si esegue l&quot;override del metodo Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~Component ();
    parameters: []
  overload: System.ComponentModel.Component.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un oggetto che rappresenta un servizio fornito dal <xref href=&quot;System.ComponentModel.Component&quot;> </xref> o dal relativo <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Questo metodo può essere sottoposto a override da una classe derivata."
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Un servizio fornito dal <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta un servizio fornito dal <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> non fornisce il servizio specificato.</xref:System.Object>"
  overload: System.ComponentModel.Component.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Site
  id: Site
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta il <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> del <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Un <xref:System.ComponentModel.Component>avrà un <xref:System.ComponentModel.ISite>se è stato aggiunto a un <xref:System.ComponentModel.IContainer>e <xref:System.ComponentModel.IContainer>Assegna un <xref:System.ComponentModel.ISite>piace</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.IContainer>È responsabile dell&quot;assegnazione <xref:System.ComponentModel.ISite>a <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> Modifica del valore del componente <xref:System.ComponentModel.ISite>non necessariamente modifica il nome del sito di <xref:System.ComponentModel.Component>viene assegnato a.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> La proprietà del sito deve essere impostata solo mediante un <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>       Il valore della proprietà `null` se <xref:System.ComponentModel.Component>viene rimosso dal relativo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> L&quot;assegnazione di `null` a questa proprietà non implica necessariamente la rimozione <xref:System.ComponentModel.Component>da <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component>       Oggetto <xref:System.ComponentModel.Component>potrebbe oppure potrebbe non disporre di un nome.</xref:System.ComponentModel.Component> Se un <xref:System.ComponentModel.Component>viene assegnato un nome, il nome deve essere univoco tra gli altri <xref:System.ComponentModel.Component>oggetti all&quot;interno di relativo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite>Archivia il nome del <xref:System.ComponentModel.Component>pertanto, è possibile assegnare solo un <xref:System.ComponentModel.Component>se dispone di un oggetto <xref:System.ComponentModel.ISite>associato.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: public virtual System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "Il <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> associato il <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> non è incapsulato in un <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>, il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> non dispone un <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> associati, o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> viene rimosso dal relativo <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Site*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.ToString
  id: ToString
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un <xref:System.String>contenente il nome del <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se presente.</xref:System.String> Questo metodo non deve essere sostituito."
  remarks: "Oggetto <xref:System.ComponentModel.Component>può o non può avere un nome.</xref:System.ComponentModel.Component> Se un <xref:System.ComponentModel.Component>viene assegnato un nome, il nome è univoco tra gli altri <xref:System.ComponentModel.Component>oggetti all&quot;interno di relativo <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component>       <xref:System.ComponentModel.ISite>Archivia il nome dell&quot;elemento <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> Un <xref:System.ComponentModel.Component>può avere solo un <xref:System.ComponentModel.ISite>se è stato aggiunto a un <xref:System.ComponentModel.IContainer>e <xref:System.ComponentModel.IContainer>Assegna un <xref:System.ComponentModel.ISite>piace</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente il nome del <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, se presente, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.ComponentModel.Component&quot;> </xref> è senza nome.</xref:System.String>"
  overload: System.ComponentModel.Component.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Component.#ctor
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.Component.Finalize
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Component.#ctor*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component
  nameWithType: Component.Component
- uid: System.ComponentModel.Component.CanRaiseEvents*
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
- uid: System.ComponentModel.Component.DesignMode*
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose
  nameWithType: Component.Dispose
- uid: System.ComponentModel.Component.Events*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
- uid: System.ComponentModel.Component.Finalize*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize
  nameWithType: Component.Finalize
- uid: System.ComponentModel.Component.GetService*
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService
  nameWithType: Component.GetService
- uid: System.ComponentModel.Component.Site*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
- uid: System.ComponentModel.Component.ToString*
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString
  nameWithType: Component.ToString
