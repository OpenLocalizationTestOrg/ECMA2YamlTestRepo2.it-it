### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Rappresenta un oggetto OracleBFile gestito progettato per funzionare con Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> tipo di dati. Questa classe non può essere ereditata."
  remarks: "Oracle `BFILE` è di tipo di dati Oracle `LOB` tipo di dati che contiene un riferimento a dati binari con dimensioni massime di 4 GB. Oracle `BFILE` altri Oracle si differenzia da `LOB` tipi di dati, in quanto i dati sono memorizzati in un file fisico nel sistema operativo anziché sul server. Si noti che il `BFILE` tipo di dati fornisce l&quot;accesso di sola lettura ai dati. Di conseguenza, i metodi orientati alla scrittura ereditata la <xref:System.IO.Stream>classe non sono supportati.</xref:System.IO.Stream>       Altre caratteristiche di un `BFILE` tipo di dati che differenziano da un `LOB` il tipo di dati:-contiene dati non strutturati.      -Supporta il chunking sul lato server.      -Usa la semantica di copia di riferimenti. Ad esempio, se si esegue un&quot;operazione di copia su un `BFILE`, solo il `BFILE` locator (ovvero un riferimento al file) viene copiato. I dati nel file non viene copiati.       Il `BFILE` tipo di dati deve essere utilizzato per fare riferimento a `LOB`s di grandi dimensioni e quindi poco pratici da archiviare nel database. Overhead di comunicazioni, server e client per l&quot;utilizzo di un `BFILE` tipo di dati rispetto al `LOB` tipo di dati. È più efficiente per accedere a un `BFILE` se è necessario ottenere una piccola quantità di dati. È più efficiente per l&quot;accesso residenti nel database `LOB`s se è necessario ottenere l&quot;intero oggetto.       Ogni oggetto non NULL OracleBFile è associata a due entità che definiscono il percorso del file fisico sottostante:-oggetto di una DIRECTORY Oracle, che è un alias di database per una directory nel file system e - il nome del file del file fisico sottostante, che si trova nella directory associata all&quot;oggetto DIRECTORY.       Dopo un `BFILE` viene creato, è possibile recuperare l&quot;indicatore di posizione sotto forma di un oggetto OracleBFile utilizzando il <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>o <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>metodi.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Per ottenere un oggetto OracleBFile, chiamare il <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>metodo.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       È necessario che il file fisico che è associato un oggetto OracleBFile presente finché non si tenta di accedervi. Un&quot;applicazione può associare un OracleBFile a un file inesistente, creare il file fisico nel percorso previsto e quindi chiamare <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Qualsiasi tentativo di accedere a un oggetto chiuso OracleBFile con il <xref:System.Data.OracleClient.OracleBFile.Read%2A>o <xref:System.Data.OracleClient.OracleBFile.Seek%2A>riaperto automaticamente un flusso OracleBFile.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       Nell&quot;esempio c# seguente viene illustrato come creare un `BFILE` in Oracle tabella e quindi come recuperarlo sotto forma di un oggetto OracleBFile. Nell&quot;esempio viene illustrato l&quot;utilizzo del <xref:System.Data.OracleClient.OracleDataReader>oggetto e il OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> e <xref:System.Data.OracleClient.OracleBFile.Read%2A>metodi.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] per ulteriori informazioni sulla creazione e utilizzo di Oracle `BFILE`, vedere l&quot;argomento appropriato nella documentazione di Oracle.      > [!NOTE] > Il `BeginWrite`, `EndWrite`, e `WriteByte` metodi, che vengono ereditati dal `System.IO.Stream` classe, non sono supportate perché il `BFILE` tipo di dati è di sola lettura."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> flusso può essere letto."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se un <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> è chiuso o eliminato; in caso contrario <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se la funzione di ricerca diretta e le operazioni con le versioni precedenti di ricerca possono essere eseguite."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se un <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> è chiuso o eliminato; in caso contrario <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se l&quot;oggetto supporta la scrittura."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> perché Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> tipo di dati è di sola lettura."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Crea una copia di questo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto associato allo stesso file fisico originale."
  remarks: "Le proprietà del nuovo <xref:System.Data.OracleClient.OracleBFile>oggetto inizialmente sono associati gli stessi valori dell&quot;oggetto originale.</xref:System.Data.OracleClient.OracleBFile> Tuttavia, al termine il Clone, ogni <xref:System.Data.OracleClient.OracleBFile>oggetto è indipendente da altro.</xref:System.Data.OracleClient.OracleBFile> Ad esempio, la modifica del valore del <xref:System.Data.OracleClient.OracleBFile.Position%2A>proprietà originale <xref:System.Data.OracleClient.OracleBFile>non modifica il valore di <xref:System.Data.OracleClient.OracleBFile.Position%2A>sulla copia.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto associato allo stesso file fisico originale <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> utilizzato da questa istanza del <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "La connessione a un&quot;origine dati. Il valore predefinito è un valore null."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Copia l&quot;intero contenuto di questo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> all&quot;inizio di una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "I tipi di dati sottostante dell&quot;origine <xref:System.Data.OracleClient.OracleBFile>e la destinazione <xref:System.Data.OracleClient.OracleLob>devono essere compatibili.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Ad esempio, è possibile copiare i dati binari a una destinazione <xref:System.Data.OracleClient.OracleLob>che ha un tipo di dati carattere.</xref:System.Data.OracleClient.OracleLob>       È necessario l&quot;accesso in scrittura alla destinazione <xref:System.Data.OracleClient.OracleLob>eseguire correttamente l&quot;operazione CopyTo.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "La destinazione<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "Il numero di byte copiati."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La destinazione <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> è un riferimento di oggetto null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La destinazione è un valore null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       La connessione a cui questa - oppure - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associata viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Copia l&quot;intero contenuto di questo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> a una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> in corrispondenza dell&quot;offset specificato."
  remarks: "I tipi di dati sottostante dell&quot;origine <xref:System.Data.OracleClient.OracleBFile>e la destinazione <xref:System.Data.OracleClient.OracleLob>devono essere compatibili.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Ad esempio, è possibile copiare i dati binari a una destinazione <xref:System.Data.OracleClient.OracleLob>che ha un tipo di dati carattere.</xref:System.Data.OracleClient.OracleLob>       È necessario l&quot;accesso in scrittura alla destinazione <xref:System.Data.OracleClient.OracleLob>per il <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>operazione venga eseguita correttamente.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "La destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Offset da cui copiare."
    return:
      type: System.Int64
      description: "Il numero di byte copiati."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La destinazione <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> è un riferimento di oggetto null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La destinazione è un valore null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       La connessione a cui questa - oppure - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associata viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Consente di copiare da questo <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> a una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> con la quantità di dati, l&quot;offset di origine e l&quot;offset di destinazione specificata."
  remarks: "I tipi di dati sottostante dell&quot;origine <xref:System.Data.OracleClient.OracleBFile>e la destinazione <xref:System.Data.OracleClient.OracleLob>devono essere compatibili.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Ad esempio, è possibile copiare i dati binari a una destinazione <xref:System.Data.OracleClient.OracleLob>che ha un tipo di dati carattere.</xref:System.Data.OracleClient.OracleLob>       È necessario l&quot;accesso in scrittura alla destinazione <xref:System.Data.OracleClient.OracleLob>per il <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>operazione venga eseguita correttamente.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Offset da cui copiare."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "La destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Offset da cui copiare."
    - id: amount
      type: System.Int64
      description: "La quantità di dati, in byte da copiare."
    return:
      type: System.Int64
      description: "Il numero di byte copiati."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore del parametro quantità è minore di zero o maggiore di 4 GB."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La destinazione <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> è un riferimento di oggetto null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La destinazione è un valore null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       La connessione a cui questa - oppure - <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associata viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome dell&quot;oggetto DIRECTORY, con cui un <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto è associato."
  remarks: "Ogni valore non NULL <xref:System.Data.OracleClient.OracleBFile>oggetto è associato a due entità che definiscono il percorso del file fisico sottostante:-oggetto di una DIRECTORY Oracle, che è un alias di database per una directory nel file system e - il nome del file del file fisico sottostante, che si trova nella directory associata all&quot;oggetto DIRECTORY.</xref:System.Data.OracleClient.OracleBFile>       La proprietà nomedirectory restituisce il nome dell&quot;oggetto DIRECTORY dal database Oracle.       Per ulteriori informazioni sulla creazione e utilizzo di Oracle `BFILE`, vedere l&quot;argomento appropriato nella documentazione di Oracle."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;oggetto DIRECTORY."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Tentativo di chiamare <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> su un oggetto chiuso o eliminato <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> oggetto."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se un file fisico contenente <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> dati presente nel sistema operativo."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un file fisico contenente <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> dati esistono; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto è stato chiuso o eliminato."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione con il quale un <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associata viene chiusa."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome del <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> senza il percorso."
  remarks: "Per <xref:System.Data.OracleClient.OracleBFile.Null>, viene restituita una stringa vuota.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "Il nome del BFILE."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Non è attualmente supportato."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> è un <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> flusso."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che restituisce la lunghezza in byte del file fisico con il quale il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto è associato."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Valore long che rappresenta la lunghezza del file fisico in byte."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Sono stati chiamati dei metodi dopo il flusso è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rappresenta un valore null <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto non associato a un file fisico."
  remarks: "Null può essere utile quando si desidera eseguire un&quot;operazione di confronto in un <xref:System.Data.OracleClient.OracleBFile>per determinare l&quot;ammissione di valori null.</xref:System.Data.OracleClient.OracleBFile>       Qualsiasi tentativo di eseguire un&quot;operazione di lettura su un oggetto Null ha esito positivo, ma non ha restituito dati. Qualsiasi tentativo di eseguire un&quot;operazione di scrittura su un oggetto Null genera un&quot;eccezione. Selezionando un `BFILE` colonna che contiene un valore null restituisce Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene la posizione di lettura corrente il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> flusso."
  remarks: "Non è supportata la ricerca in qualsiasi posizione oltre la lunghezza del flusso.       Il `Position` proprietà non tiene traccia del numero di byte del flusso che sono stati usati, ignorato, o entrambi."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "La posizione corrente all&quot;interno di <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> flusso."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Si è tentato di impostare una posizione con un valore negativo o maggiore della lunghezza del flusso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Sono stati chiamati dei metodi dopo il flusso è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Legge una sequenza di byte dall&quot;oggetto corrente <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> flusso e avanza la posizione all&quot;interno del flusso per il numero di byte letti."
  remarks: "Il metodo Read leggono un massimo di `count` flusso di byte dall&quot;oggetto corrente e archiviarli in `buffer` a partire da `offset`. La posizione corrente all&quot;interno del flusso viene anticipata per il numero di byte letti. Tuttavia, se si verifica un&quot;eccezione, la posizione corrente all&quot;interno del flusso non subisce modifiche. Lettura restituisce il numero di byte letti. Il valore restituito è zero solo se la posizione si trova alla fine del flusso. Lettura verrà bloccata finché non è possibile leggere almeno un byte di dati, nel caso in cui non sono disponibili dati. Sola lettura restituisce 0 se è stata raggiunta la fine del file. Lettura è gratuito restituire un numero di byte rispetto a quello richiesto, anche se non è stata raggiunta la fine del flusso.       Qualsiasi tentativo di accedere a un oggetto chiuso <xref:System.Data.OracleClient.OracleBFile>mediante la lettura o <xref:System.Data.OracleClient.OracleBFile.Seek%2A>riaperto un <xref:System.Data.OracleClient.OracleBFile>flusso automaticamente.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       Nell&quot;esempio c# seguente lo schema in una tabella Oracle: ```   (col1 number, col2 BFILE)   ``` viene illustrato l&quot;utilizzo di lettura e <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metodi per accedere a un <xref:System.Data.OracleClient.OracleBFile>oggetto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Matrice di byte. Quando questo metodo viene restituito, il buffer contiene la matrice di byte specificata con i valori compresi tra `offset` e (`offset` + `count`) sostituiti dai byte letti dall&quot;origine corrente."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero in `buffer` da cui iniziare l&quot;archiviazione dei dati letti dal flusso corrente."
    - id: count
      type: System.Int32
      description: "Il numero massimo di byte da leggere dal flusso corrente."
    return:
      type: System.Int32
      description: "Il numero totale di byte letti nel buffer. Questo può essere inferiore al numero di byte richiesti se tale numero di byte non è attualmente disponibili, o zero se è stata raggiunta la fine del file."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La somma di <code> offset </code> e <code> count </code> è maggiore della lunghezza del buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>o <code>count</code> è negativo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione con il quale un <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associata viene chiusa."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Sono stati chiamati dei metodi dopo il flusso è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Imposta la posizione nella corrente <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> flusso."
  remarks: "Se `offset` è negativo, la nuova posizione deve precedere quella specificata da `origin` per il numero di byte specificato da `offset`. Se `offset` è zero, la nuova posizione è richiesto da una posizione specificata da `origin`. Se `offset` è positivo, la nuova posizione è necessaria seguire la posizione specificata da `origin` per il numero di byte specificato da `offset`.       Non è supportata la ricerca in qualsiasi posizione oltre la lunghezza del flusso.       Qualsiasi tentativo di accedere a un oggetto chiuso <xref:System.Data.OracleClient.OracleBFile>utilizzando il <xref:System.Data.OracleClient.OracleBFile.Read%2A>o ricerca riaperto un <xref:System.Data.OracleClient.OracleBFile>flusso automaticamente.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       Nell&quot;esempio c# seguente lo schema in una tabella Oracle: ```   (col1 number, col2 BFILE)   ``` viene illustrato l&quot;utilizzo di <xref:System.Data.OracleClient.OracleBFile.Read%2A>e cercare i metodi per accedere a un <xref:System.Data.OracleClient.OracleBFile>oggetto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Offset di byte di origine. Se `offset` è negativo, la nuova posizione precederà la posizione specificata da `origin` per il numero di byte specificato da `offset`. Se `offset` è zero, la nuova posizione sarà quella specificata da `origin`. Se `offset` è positivo, la nuova posizione seguirà la posizione specificata da `origin` per il numero di byte specificato da `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Un valore di tipo <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> che indica il punto di riferimento usato per ottenere la nuova posizione."
    return:
      type: System.Int64
      description: "Nuova posizione all&quot;interno del flusso corrente."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Si è tentato di impostare una posizione con un valore negativo o maggiore della lunghezza del flusso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Sono stati chiamati dei metodi dopo il flusso è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Associa il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto in un file diverso nel sistema operativo."
  remarks: "L&quot;operazione SetFileName deve essere all&quot;interno di una transazione abbia esito positivo. Semplicemente la chiamata SetFileName su un `BFILE` associa il <xref:System.Data.OracleClient.OracleBFile>oggetto con un altro file, ma non viene aggiornata la tabella Oracle.</xref:System.Data.OracleClient.OracleBFile> Per aggiornare la tabella Oracle dopo la chiamata SetFileName, è necessario chiamare il `Update` metodo il <xref:System.Data.OracleClient.OracleDataAdapter>e quindi eseguire il commit della transazione.</xref:System.Data.OracleClient.OracleDataAdapter>       Dopo aver recuperato il <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>o <xref:System.Data.OracleClient.OracleBFile.FileName%2A>proprietà, essi vengono memorizzati nella cache il <xref:System.Data.OracleClient.OracleBFile>dell&quot;oggetto e non sono interessati da qualsiasi clonato <xref:System.Data.OracleClient.OracleBFile>chiamate degli oggetti per SetFileName o le modifiche al `BFILE` nel database.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> In altre parole, potrebbero non rappresentare i valori effettivi del `BFILE` oggetto nel server.       Inoltre, il recupero delle proprietà (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> o <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) fa sì che entrambi i valori delle proprietà da recuperare dal server e memorizzato nella cache il <xref:System.Data.OracleClient.OracleBFile>oggetto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       Nell&quot;esempio c# seguente lo schema in una tabella Oracle: ```   (col1 number, col2 BFILE)   ``` viene illustrato l&quot;utilizzo SetFileName, <xref:System.Data.OracleClient.OracleBFile.Read%2A>e <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metodi per accedere a un <xref:System.Data.OracleClient.OracleBFile>oggetto.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "L&quot;alias dell&quot;oggetto directory che contiene un file fisico."
    - id: file
      type: System.String
      description: "Il nome del file nel sistema operativo."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione deve essere all&quot;interno di una transazione."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Non è attualmente supportato."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Non è attualmente supportato."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Eccezione generata quando un metodo richiamato non è supportato oppure quando viene eseguito un tentativo di leggere, cercare o scrivere in un flusso che non supporta la funzionalità richiamata."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un <xref:System.Array>di tipo <xref:System.Byte>che contiene il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dati.</xref:System.Byte> </xref:System.Array>"
  remarks: "La proprietà Value legge l&quot;intero `BFILE` in una sola volta.      > [!NOTE] > Un vantaggio dell&quot;utilizzo `BFILE`s è la possibilità di recuperare grandi quantità di dati in blocchi client. Tuttavia, quando si usa valore, ottenere tutti i dati per la colonna BFILE come blocco contiguo, condizione che aumenta notevolmente il sovraccarico dell&quot;applicazione."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "Un <xref:System.Array>di tipo <xref:System.Byte>che contiene il <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dati.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Non è attualmente supportato."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Non è attualmente supportato."
    - id: offset
      type: System.Int32
      description: "Non è attualmente supportato."
    - id: count
      type: System.Int32
      description: "Non è attualmente supportato."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Eccezione generata quando un metodo richiamato non è supportato oppure quando viene eseguito un tentativo di leggere, cercare o scrivere in un flusso che non supporta la funzionalità richiamata."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
