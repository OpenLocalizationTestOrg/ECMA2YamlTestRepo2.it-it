### YamlMime:ManagedReference
items:
- uid: System.Activities.Argument
  id: Argument
  children:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Expression
  - System.Activities.Argument.Get(System.Activities.ActivityContext)
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  langs:
  - csharp
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
  type: Class
  summary: "La classe base astratta che rappresenta un terminale dell&quot;associazione che supporta il flusso di dati dentro e fuori da un&quot;attività."
  syntax:
    content: public abstract class Argument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Argument.ArgumentType
  id: ArgumentType
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene il tipo di dati per i dati associati a questo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  syntax:
    content: public Type ArgumentType { get; }
    return:
      type: System.Type
      description: "Il tipo di dati per i dati associati a questo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  overload: System.Activities.Argument.ArgumentType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  id: Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizializza e restituisce un nuovo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  syntax:
    content: public static System.Activities.Argument Create (Type type, System.Activities.ArgumentDirection direction);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di dati di <xref href=&quot;System.Activities.Argument&quot;> </xref>."
    - id: direction
      type: System.Activities.ArgumentDirection
      description: "Uno dei valori di enumerazione che specifica la direzione del flusso di dati tramite il <xref href=&quot;System.Activities.Argument&quot;> </xref>."
    return:
      type: System.Activities.Argument
      description: "Argomento appena creato."
  overload: System.Activities.Argument.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  id: CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea un nuovo argomento che fa riferimento all&quot;argomento di destinazione specificato utilizzando il nome dell&quot;argomento di riferimento specificato."
  syntax:
    content: public static System.Activities.Argument CreateReference (System.Activities.Argument argumentToReference, string referencedArgumentName);
    parameters:
    - id: argumentToReference
      type: System.Activities.Argument
      description: "Per fare riferimento all&quot;argomento di destinazione."
    - id: referencedArgumentName
      type: System.String
      description: "Il nome dell&quot;argomento di riferimento."
    return:
      type: System.Activities.Argument
      description: "Nuovo argomento che fa riferimento all&quot;argomento di destinazione specificato."
  overload: System.Activities.Argument.CreateReference*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Direction
  id: Direction
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene un <xref href=&quot;System.Activities.ArgumentDirection&quot;> </xref> che specifica se il <xref href=&quot;System.Activities.Argument&quot;> </xref> rappresenta il flusso di dati in un&quot;attività, all&quot;esterno di un&quot;attività o dentro e fuori da un&quot;attività."
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: "Uno dei valori di enumerazione che specifica la direzione del flusso di dati tramite il <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  overload: System.Activities.Argument.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.EvaluationOrder
  id: EvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta un valore in base zero che specifica l&quot;ordine in cui viene valutato l&quot;argomento."
  remarks: "Per impostazione predefinita, non è specificato l&quot;ordine di valutazione dell&quot;argomento ed è uguale al <xref:System.Activities.Argument.UnspecifiedEvaluationOrder>valore.</xref:System.Activities.Argument.UnspecifiedEvaluationOrder> Impostare EvaluationOrder su un valore maggiore o uguale a zero per specificare un ordine di valutazione per questo argomento. [!INCLUDE[wf2](~/add/includes/wf2-md.md)]valuta gli argomenti con un ordine di valutazione specificato crescente. Si noti che gli argomenti con un ordine di valutazione non specificato vengono valutati prima di quelli aventi un ordine di valutazione specificato."
  syntax:
    content: public int EvaluationOrder { get; set; }
    return:
      type: System.Int32
      description: "Un valore in base zero che specifica l&quot;ordine in cui viene valutato l&quot;argomento."
  overload: System.Activities.Argument.EvaluationOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore è minore di zero e non è uguale a <xref href=&quot;System.Activities.Argument.UnspecifiedEvaluationOrder&quot;> </xref>."
  platform:
  - net462
- uid: System.Activities.Argument.Expression
  id: Expression
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta un <xref href=&quot;System.Activities.ActivityWithResult&quot;> </xref> che rappresenta il valore dei dati associati a questo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  syntax:
    content: public System.Activities.ActivityWithResult Expression { get; set; }
    return:
      type: System.Activities.ActivityWithResult
      description: "Il valore dei dati associati a questo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  overload: System.Activities.Argument.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene il valore dell&quot;argomento utilizzando il contesto dell&quot;attività specificato."
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Contesto dell&quot;attività corrente."
    return:
      type: System.Object
      description: "Il valore dell&quot;argomento."
  overload: System.Activities.Argument.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  id: Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T Get<T> (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Activities.Argument.Get<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the <xref href=&quot;System.Activities.Location&quot;></xref> for this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Contesto dell&quot;attività dell&quot;attività in esecuzione."
    return:
      type: System.Activities.Location
      description: "Il percorso per questo <xref href=&quot;System.Activities.Argument&quot;> </xref>."
  overload: System.Activities.Argument.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.ResultValue
  id: ResultValue
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rappresenta il valore di &quot;Risultato&quot;, che corrisponde al nome di costante di <xref:System.Activities.ActivityWithResult.Result*>proprietà di tipo <xref href=&quot;System.Activities.OutArgument&quot;> </xref> nella classe base espressione <xref href=&quot;System.Activities.ActivityWithResult&quot;> </xref>.</xref:System.Activities.ActivityWithResult.Result*>"
  remarks: "Utilizzare questa costante per fare riferimento al risultato di un&quot;attività di espressione, quando si utilizza l&quot;associazione tardiva."
  syntax:
    content: public const string ResultValue;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  id: Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Imposta il valore dell&quot;argomento utilizzando il contesto dell&quot;attività specificato."
  syntax:
    content: public void Set (System.Activities.ActivityContext context, object value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Contesto dell&quot;attività corrente."
    - id: value
      type: System.Object
      description: "Il valore dell&quot;argomento."
  overload: System.Activities.Argument.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  id: UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rappresenta il valore della <xref:System.Activities.Argument.EvaluationOrder*>proprietà per un argomento con un ordine di valutazione non specificato.</xref:System.Activities.Argument.EvaluationOrder*> Questo valore è di sola lettura."
  syntax:
    content: public static readonly int UnspecifiedEvaluationOrder;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Activities.Argument.ArgumentType
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  isExternal: false
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Argument.Direction
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Argument.Expression
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
- uid: System.Activities.ActivityWithResult
  parent: System.Activities
  isExternal: false
  name: ActivityWithResult
  nameWithType: ActivityWithResult
  fullName: System.Activities.ActivityWithResult
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.Argument.ResultValue
  parent: System.Activities.Argument
  isExternal: false
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  isExternal: false
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
- uid: System.Activities.Argument.ArgumentType*
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
- uid: System.Activities.Argument.Create*
  parent: System.Activities.Argument
  isExternal: false
  name: Create
  nameWithType: Argument.Create
- uid: System.Activities.Argument.CreateReference*
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference
  nameWithType: Argument.CreateReference
- uid: System.Activities.Argument.Direction*
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder*
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
- uid: System.Activities.Argument.Expression*
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
- uid: System.Activities.Argument.Get*
  parent: System.Activities.Argument
  isExternal: false
  name: Get
  nameWithType: Argument.Get
- uid: System.Activities.Argument.Get<T>*
  parent: System.Activities.Argument
  isExternal: false
  name: Get<T>
  nameWithType: Argument.Get<T>
- uid: System.Activities.Argument.GetLocation*
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation
  nameWithType: Argument.GetLocation
- uid: System.Activities.Argument.Set*
  parent: System.Activities.Argument
  isExternal: false
  name: Set
  nameWithType: Argument.Set
