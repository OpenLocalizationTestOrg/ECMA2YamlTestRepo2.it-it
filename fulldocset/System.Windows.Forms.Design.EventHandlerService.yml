### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Design.EventHandlerService
  id: EventHandlerService
  children:
  - System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  - System.Windows.Forms.Design.EventHandlerService.FocusWindow
  - System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  - System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  - System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  langs:
  - csharp
  name: EventHandlerService
  nameWithType: EventHandlerService
  fullName: System.Windows.Forms.Design.EventHandlerService
  type: Class
  summary: "Fornisce un modo sistematico per gestire i gestori eventi per il documento corrente."
  remarks: "Gli sviluppatori potrebbero essere in grado di scrivere codice in un&quot;unica posizione che gestisce gli eventi di un determinato tipo.       Inoltre, gli sviluppatori potrebbe essere necessario modificare a livello globale il comportamento dei gestori di eventi specifici o tipi di eventi che possono essere distribuiti tra i componenti della finestra di progettazione.       Le finestre di progettazione di un progetto tipico sono molti oggetti diversi, pertanto può essere utile elencare e memorizzare un riferimento a questi eventi da un punto comune.       Il servizio implementa un &quot;evento stack&quot; che contiene il set corrente di gestori eventi. Lo stack potrebbe includere un&quot;ampia gamma di tipi diversi di gestori nello stack.       Ad esempio, una finestra di progettazione potrebbe push, aggiungere o un gestore della tastiera e un gestore del mouse nello stack. Quando una finestra di progettazione richiede un gestore dell&quot;evento, il servizio troverà il gestore più in alto nello stack che corrisponde alla classe richiesta.       In questo modo il servizio può essere esteso a qualsiasi schema di eventi e consente inoltre di tipi specifici di gestori di eventi da sostituire. Ad esempio, è possibile sostituire i gestori eventi del mouse senza influenzare i gestori di eventi di menu o i gestori eventi della tastiera."
  syntax:
    content: public sealed class EventHandlerService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.Design.EventHandlerService&quot;> </xref> classe."
  syntax:
    content: public EventHandlerService (System.Windows.Forms.Control focusWnd);
    parameters:
    - id: focusWnd
      type: System.Windows.Forms.Control
      description: "Il <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> in fase di progettazione."
  overload: System.Windows.Forms.Design.EventHandlerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  id: EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Viene generato un evento OnEventHandlerChanged."
  syntax:
    content: public event EventHandler EventHandlerChanged;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  id: FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Ottiene il controllo per l&quot;evento gestori associati."
  syntax:
    content: public System.Windows.Forms.Control FocusWindow { get; }
    return:
      type: System.Windows.Forms.Control
      description: "Il <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> che è stato associato tramite il costruttore."
  overload: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  id: GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Ottiene il gestore dell&quot;evento attualmente attivo del tipo specificato."
  remarks: "È mai necessario memorizzare nella cache questo valore perché altri componenti sono disponibili per modificarlo. Questa chiamata è abbastanza veloce, tuttavia, in particolare nei casi in cui si richiedono sempre lo stesso tipo di gestore."
  syntax:
    content: public object GetHandler (Type handlerType);
    parameters:
    - id: handlerType
      type: System.Type
      description: "Il tipo del gestore da ottenere."
    return:
      type: System.Object
      description: "Un&quot;istanza del gestore, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nessun gestore del tipo richiesto."
  overload: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  id: PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Estrae il gestore specificato dallo stack."
  remarks: "Se il gestore non è il componente più in alto nello stack, verranno rimossi tutti i gestori fino a e gestore inclusi."
  syntax:
    content: public void PopHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "Gestore da rimuovere dallo stack."
  overload: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  id: PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Inserisce un nuovo gestore eventi nello stack."
  remarks: "Questo gestore verrà utilizzato da tutti i componenti che richiedono un tipo di gestore compatibile. Se questo gestore non supporta il tipo richiesto, verrà utilizzato il gestore successivo nello stack."
  syntax:
    content: public void PushHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "Gestore da aggiungere allo stack."
  overload: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService
  nameWithType: EventHandlerService.EventHandlerService
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler
  nameWithType: EventHandlerService.GetHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler
  nameWithType: EventHandlerService.PopHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler
  nameWithType: EventHandlerService.PushHandler
