### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.TcpTransportElement
  id: TcpTransportElement
  children:
  - System.ServiceModel.Configuration.TcpTransportElement.#ctor
  - System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.TcpTransportElement.BindingElementType
  - System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings
  - System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement
  - System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy
  - System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog
  - System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled
  - System.ServiceModel.Configuration.TcpTransportElement.Properties
  - System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled
  langs:
  - csharp
  name: TcpTransportElement
  nameWithType: TcpTransportElement
  fullName: System.ServiceModel.Configuration.TcpTransportElement
  type: Class
  summary: "Specifica un elemento di configurazione che induce un canale a trasferire messaggi al trasporto TCP quando è incluso in un&quot;associazione personalizzata. Questa classe non può essere ereditata."
  remarks: "Questo elemento di configurazione consente di creare un&quot;associazione personalizzata che implementa il protocollo di trasporto TCP."
  syntax:
    content: 'public sealed class TcpTransportElement : System.ServiceModel.Configuration.ConnectionOrientedTransportElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  - System.ServiceModel.Configuration.TransportElement
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxBufferSize
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections
  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.TransferMode
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.ServiceModel.Configuration.TransportElement.CreateBindingElement
  - System.ServiceModel.Configuration.TransportElement.ManualAddressing
  - System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: TcpTransportElement()
  nameWithType: TcpTransportElement.TcpTransportElement()
  fullName: System.ServiceModel.Configuration.TcpTransportElement.TcpTransportElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Configuration.TcpTransportElement&quot;> </xref> classe."
  syntax:
    content: public TcpTransportElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.TcpTransportElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: TcpTransportElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Applica le impostazioni dell&quot;oggetto specificato <xref:System.ServiceModel.Channels.BindingElement>per questo elemento di configurazione.</xref:System.ServiceModel.Channels.BindingElement>"
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Il <xref:System.ServiceModel.Channels.BindingElement>le cui impostazioni devono essere applicate a questo elemento di configurazione.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: TcpTransportElement.BindingElementType
  fullName: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene il <xref:System.Type>oggetto che rappresenta l&quot;elemento di associazione personalizzato.</xref:System.Type>"
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto che rappresenta l&quot;elemento di associazione personalizzato.</xref:System.Type>"
  overload: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings
  id: ConnectionPoolSettings
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: ConnectionPoolSettings
  nameWithType: TcpTransportElement.ConnectionPoolSettings
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un elemento di configurazione che specifica le impostazioni di connessione aggiuntive."
  syntax:
    content: public System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement ConnectionPoolSettings { get; set; }
    return:
      type: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement
      description: "Un elemento di configurazione che specifica le impostazioni di connessione aggiuntive."
  overload: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copia le impostazioni dall&quot;elemento di configurazione specificato a questo elemento di configurazione."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "L&quot;elemento di configurazione le cui impostazioni devono essere copiati in questa sezione di elemento di configurazione."
  overload: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement
  id: CreateDefaultBindingElement
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: CreateDefaultBindingElement()
  nameWithType: TcpTransportElement.CreateDefaultBindingElement()
  fullName: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.TransportBindingElement CreateDefaultBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.TransportBindingElement
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportElement.ExtendedProtectionPolicy
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un <xref href=&quot;System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement&quot;> </xref> istanza che contiene le impostazioni di configurazione da utilizzare per la protezione estesa per una sessione."
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement ExtendedProtectionPolicy { get; }
    return:
      type: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement
      description: "Le impostazioni di configurazione da utilizzare per la protezione estesa per una sessione."
  overload: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: TcpTransportElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog
  id: ListenBacklog
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: ListenBacklog
  nameWithType: TcpTransportElement.ListenBacklog
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta il numero massimo di canali che possono attendere nel listener di essere accettati."
  remarks: "Le connessioni che superano il limite vengono messe in coda fino a quando non è disponibile uno spazio inferiore al limite. Il <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A>proprietà limita il tempo in cui il client deve attendere prima che venga generata un&quot;eccezione di connessione.</xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A>"
  syntax:
    content: public int ListenBacklog { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di canali che possono attendere nel listener di essere accettati. Il valore predefinito è 10."
  overload: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled
  id: PortSharingEnabled
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: PortSharingEnabled
  nameWithType: TcpTransportElement.PortSharingEnabled
  fullName: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un valore che specifica se la condivisione delle porte TCP è abilitata per questa connessione."
  remarks: "Questa impostazione è pertinente solo per i servizi. I client non sono stati interessati.       Utilizzo di questa impostazione richiede l&quot;abilitazione di [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] servizio di condivisione porte TCP modificando il tipo di avvio su manuale o automatico.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]il Listener TCP e su come avviarlo, vedere <xref:System.Net.Sockets.TcpListener>.</xref:System.Net.Sockets.TcpListener>"
  syntax:
    content: public bool PortSharingEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitata la condivisione delle porte TCP. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se ogni associazione utilizza la propria porta esclusiva. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: Properties
  nameWithType: TcpTransportElement.Properties
  fullName: System.ServiceModel.Configuration.TcpTransportElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.TcpTransportElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled
  id: TeredoEnabled
  parent: System.ServiceModel.Configuration.TcpTransportElement
  langs:
  - csharp
  name: TeredoEnabled
  nameWithType: TcpTransportElement.TeredoEnabled
  fullName: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un valore che specifica se Teredo (una tecnologia per l&quot;indirizzamento dei client dietro a firewall) è abilitato."
  remarks: "Questa proprietà Abilita Teredo per il socket TCP sottostante. Per ulteriori informazioni, vedere [Panoramica di Teredo](http://go.microsoft.com/fwlink/?LinkId=96651).       Questa proprietà è applicabile solo su [!INCLUDE[wxpsp2](~/add/includes/ajax-current-ext-md.md)] e [!INCLUDE[ws2003](~/add/includes/ws2003-md.md)]. [!INCLUDE[wv](~/add/includes/wv-md.md)]ha un&quot;opzione di configurazione a livello di computer per Teredo, pertanto quando viene eseguito [!INCLUDE[wv](~/add/includes/wv-md.md)], questa proprietà viene ignorata. Teredo richiede che i computer client e il servizio stack IPv6 di Microsoft installato e configurato correttamente per l&quot;uso di Teredo. Per ulteriori informazioni sulla configurazione di Teredo, vedere [Panoramica di Teredo](http://go.microsoft.com/fwlink/?LinkId=96651). Per ulteriori informazioni, vedere [Technology Center di Windows Server 2003](http://go.microsoft.com/fwlink/?LinkId=96652)."
  syntax:
    content: public bool TeredoEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Teredo è abilitata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement
  isExternal: false
  name: System.ServiceModel.Configuration.ConnectionOrientedTransportElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: TcpTransportElement()
  nameWithType: TcpTransportElement.TcpTransportElement()
  fullName: System.ServiceModel.Configuration.TcpTransportElement.TcpTransportElement()
- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: TcpTransportElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: BindingElementType
  nameWithType: TcpTransportElement.BindingElementType
  fullName: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ConnectionPoolSettings
  nameWithType: TcpTransportElement.ConnectionPoolSettings
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings
- uid: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: TcpConnectionPoolSettingsElement
  nameWithType: TcpConnectionPoolSettingsElement
  fullName: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: CreateDefaultBindingElement()
  nameWithType: TcpTransportElement.CreateDefaultBindingElement()
  fullName: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement()
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportElement.ExtendedProtectionPolicy
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement
  parent: System.Security.Authentication.ExtendedProtection.Configuration
  isExternal: false
  name: ExtendedProtectionPolicyElement
  nameWithType: ExtendedProtectionPolicyElement
  fullName: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: TcpTransportElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ListenBacklog
  nameWithType: TcpTransportElement.ListenBacklog
  fullName: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: PortSharingEnabled
  nameWithType: TcpTransportElement.PortSharingEnabled
  fullName: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: Properties
  nameWithType: TcpTransportElement.Properties
  fullName: System.ServiceModel.Configuration.TcpTransportElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: TeredoEnabled
  nameWithType: TcpTransportElement.TeredoEnabled
  fullName: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled
- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: TcpTransportElement
  nameWithType: TcpTransportElement.TcpTransportElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: TcpTransportElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: BindingElementType
  nameWithType: TcpTransportElement.BindingElementType
- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ConnectionPoolSettings
  nameWithType: TcpTransportElement.ConnectionPoolSettings
- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: CopyFrom
  nameWithType: TcpTransportElement.CopyFrom
- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: CreateDefaultBindingElement
  nameWithType: TcpTransportElement.CreateDefaultBindingElement
- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportElement.ExtendedProtectionPolicy
- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: InitializeFrom
  nameWithType: TcpTransportElement.InitializeFrom
- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: ListenBacklog
  nameWithType: TcpTransportElement.ListenBacklog
- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: PortSharingEnabled
  nameWithType: TcpTransportElement.PortSharingEnabled
- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: Properties
  nameWithType: TcpTransportElement.Properties
- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled*
  parent: System.ServiceModel.Configuration.TcpTransportElement
  isExternal: false
  name: TeredoEnabled
  nameWithType: TcpTransportElement.TeredoEnabled
