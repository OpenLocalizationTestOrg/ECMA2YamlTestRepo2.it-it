### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty
  id: CallbackContextMessageProperty
  children:
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  - System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  - System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  - System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  langs:
  - csharp
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty
  type: Class
  summary: "Rappresenta il contenuto del <xref uid=&quot;langword_csharp_wsc:CallbackContext&quot; name=&quot;wsc:CallbackContext&quot; href=&quot;&quot;> </xref> intestazione del messaggio quando si utilizza un canale che supporta il protocollo di scambio di contesto."
  remarks: "Il protocollo di scambio di contesto consente comunicazione duplex tra servizi durevoli."
  syntax:
    content: 'public class CallbackContextMessageProperty : System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe con il contesto specificato."
  syntax:
    content: public CallbackContextMessageProperty (System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informazioni contenute nel messaggio identificabili dal client e l&quot;istanza del servizio tra i quali la comunicazione si sta verificando."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(EndpointAddress)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe con specificata <xref:System.ServiceModel.EndpointAddress>.</xref:System.ServiceModel.EndpointAddress>"
  remarks: "L&quot;indirizzo di callback Ã¨ l&quot;indirizzo dell&quot;endpoint che il servizio utilizza per richiamare il client."
  syntax:
    content: public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress callbackAddress);
    parameters:
    - id: callbackAddress
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo di callback."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe con l&quot;oggetto specificato <xref:System.ServiceModel.EndpointAddress>e un &lt;xref:System.Collections.Generic.IDictionary%602&gt; che contiene informazioni sul contesto.</xref:System.ServiceModel.EndpointAddress>"
  remarks: "Le informazioni di contesto possono includere informazioni istanza e il traffico del client."
  syntax:
    content: public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dell&quot;endpoint client in ascolto."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informazioni contenute nel messaggio identificabili dal client e l&quot;istanza del servizio tra i quali la comunicazione si sta verificando."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(String,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> informazioni di contesto e l&quot;indirizzo di ascolto di classe con l&quot;oggetto specificato."
  syntax:
    content: public CallbackContextMessageProperty (string listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.String
      description: "L&quot;indirizzo dell&quot;endpoint client in ascolto."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informazioni contenute nel messaggio identificabili dal client e l&quot;istanza del servizio tra i quali la comunicazione si sta verificando."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> informazioni di contesto e l&quot;indirizzo di ascolto di classe con l&quot;oggetto specificato."
  syntax:
    content: public CallbackContextMessageProperty (Uri listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.Uri
      description: "L&quot;indirizzo dell&quot;endpoint client in ascolto."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informazioni contenute nel messaggio identificabili dal client e l&quot;istanza del servizio tra i quali la comunicazione si sta verificando."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  id: AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: AddOrReplaceInMessage(Message)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Aggiunge o sostituisce corrente <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza all&quot;interno del messaggio specificato."
  syntax:
    content: public void AddOrReplaceInMessage (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Messaggio da aggiungere o sostituire le proprietÃ  di messaggio di contesto di callback."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  id: AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: AddOrReplaceInMessageProperties(MessageProperties)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Aggiunge o sostituisce corrente <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza all&quot;interno della raccolta di proprietÃ  del messaggio specificato."
  syntax:
    content: public void AddOrReplaceInMessageProperties (System.ServiceModel.Channels.MessageProperties properties);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "Raccolta di proprietÃ  di messaggio per aggiungere la proprietÃ  messaggio di contesto callback."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  id: CallbackAddress
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene l&quot;indirizzo di callback."
  remarks: "L&quot;indirizzo di callback Ã¨ l&quot;indirizzo dell&quot;endpoint utilizzate dal server per chiamare il client."
  syntax:
    content: public System.ServiceModel.EndpointAddress CallbackAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Un <xref:System.ServiceModel.EndpointAddress>che contiene l&quot;indirizzo di callback.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  id: Context
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene il contesto associato con il <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Il contesto."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.Context*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  id: CreateCallbackAddress(System.Uri)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CreateCallbackAddress(Uri)
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Unisce il client <code> listenAddress </code> e il relativo contesto in un unico indirizzo di callback che viene inviato al servizio."
  syntax:
    content: public System.ServiceModel.EndpointAddress CreateCallbackAddress (Uri listenAddress);
    parameters:
    - id: listenAddress
      type: System.Uri
      description: "L&quot;URI di ascolto"
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Oggetto <xref:System.ServiceModel.EndpointAddress>istanza.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CallbackContextMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Crea una copia del <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza."
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "Una copia del <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  id: GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene i dati di contesto e l&quot;indirizzo di ascolto dal <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza."
  syntax:
    content: public void GetListenAddressAndContext (out System.ServiceModel.EndpointAddress listenAddress, out System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.ServiceModel.EndpointAddress
      description: "Riferimento per archiviare l&quot;indirizzo di ascolto."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informazioni contenute nel messaggio identificabili dal client e l&quot;istanza del servizio tra i quali la comunicazione si sta verificando."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  id: Name
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene il nome di proprietÃ  per il <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe."
  syntax:
    content: public static string Name { get; }
    return:
      type: System.String
      description: "Il nome della proprietÃ ."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: TryGet(Message,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Tenta di ottenere un <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza dal messaggio specificato."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Il messaggio per ottenere la proprietÃ  di messaggio di contesto di callback da."
    - id: contextMessageProperty
      type: System.ServiceModel.Channels.CallbackContextMessageProperty
      description: "Riferimento per archiviare l&quot;istanza di proprietÃ  messaggio di contesto di callback."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il contesto di callback di proprietÃ  del messaggio viene recuperato correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: TryGet(MessageProperties,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Tenta di ottenere un <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> istanza dalle proprietÃ  del messaggio specificato."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "Raccolta di proprietÃ  di messaggio per ottenere la proprietÃ  di messaggio di contesto di callback da."
    - id: contextMessageProperty
      type: System.ServiceModel.Channels.CallbackContextMessageProperty
      description: "Riferimento per archiviare l&quot;istanza di proprietÃ  messaggio di contesto di callback."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il contesto di callback di proprietÃ  del messaggio viene recuperato correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(EndpointAddress)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(String,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessage(Message)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessageProperties(MessageProperties)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCallbackAddress(Uri)
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(Uri)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: CallbackContextMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet(Message,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet(MessageProperties,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessage
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessageProperties
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCallbackAddress
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: CallbackContextMessageProperty.CreateCopy
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: GetListenAddressAndContext
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet
  nameWithType: CallbackContextMessageProperty.TryGet
