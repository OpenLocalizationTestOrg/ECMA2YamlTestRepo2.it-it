### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.ScriptObject
  id: ScriptObject
  children:
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  langs:
  - csharp
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: Microsoft.JScript.ScriptObject
  type: Class
  summary: "Supporta tutte le classi JScript. Questa è la principale classe base di tutte le classi di JScript. Questa classe appartiene alla categoria di oggetti e funzioni."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class ScriptObject : System.Reflection.IReflect
  inheritance:
  - System.Object
  implements:
  - System.Reflection.IReflect
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.engine
  id: engine
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: engine
  nameWithType: ScriptObject.engine
  fullName: Microsoft.JScript.ScriptObject.engine
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Archivia un riferimento al motore di script."
  syntax:
    content: public Microsoft.JScript.Vsa.VsaEngine engine;
    return:
      type: Microsoft.JScript.Vsa.VsaEngine
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: ScriptObject.GetField(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene un campo che contiene il nome specificato."
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del campo da ottenere."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.FieldInfo
      description: "Un campo che è stato specificato <code> name </code>, oppure null se l&quot;oggetto script non contiene il campo."
  overload: Microsoft.JScript.ScriptObject.GetField*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: ScriptObject.GetFields(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetFields(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene una matrice di <xref:System.Reflection.FieldInfo>oggetti che corrispondono a tutti i campi dell&quot;oggetto script corrente.</xref:System.Reflection.FieldInfo>"
  syntax:
    content: public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.FieldInfo[]
      description: "Una matrice di oggetti che contiene tutti i campi dell&quot;oggetto script corrente."
  overload: Microsoft.JScript.ScriptObject.GetFields*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: ScriptObject.GetMember(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Quando sottoposto a override in una classe derivata, ottiene una matrice di <xref:System.Reflection.MemberInfo>oggetti che corrispondono a tutti i membri che corrispondono a un nome specificato.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro da cercare."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Matrice di oggetti che soddisfano la <code> name </code> argomento."
  overload: Microsoft.JScript.ScriptObject.GetMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: ScriptObject.GetMembers(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Quando sottoposto a override in una classe derivata, ottiene una matrice di <xref:System.Reflection.MemberInfo>oggetti che corrispondono a tutti i membri dell&quot;oggetto script corrente.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Una matrice di oggetti che contiene tutti i membri dell&quot;oggetto script corrente."
  overload: Microsoft.JScript.ScriptObject.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: ScriptObject.GetMethod(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene un metodo che presenta il nome specificato."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del metodo da ottenere."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.MethodInfo
      description: "Un metodo che è stato specificato <code> name </code>, oppure null se l&quot;oggetto script non contiene il metodo."
  overload: Microsoft.JScript.ScriptObject.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene un metodo che presenta il nome specificato usando i criteri di selezione specificati."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del metodo da cercare."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    - id: binder
      type: System.Reflection.Binder
      description: "Oggetto che esegue la conversione di tipo dal tipo di argomento effettivo per il tipo di argomento formale."
    - id: types
      type: System.Type[]
      description: "Tipi di parametro che vengono utilizzati per individuare un metodo corrispondente."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Matrice di modificatori di parametro che consentono l&quot;associazione lavorare con le firme del parametro in cui sono stati modificati i tipi."
    return:
      type: System.Reflection.MethodInfo
      description: "Un metodo che è stato specificato <code> name </code>, oppure null se l&quot;oggetto script non contiene il metodo."
  overload: Microsoft.JScript.ScriptObject.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: ScriptObject.GetMethods(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene una matrice di <xref:System.Reflection.MethodInfo>oggetti che corrispondono a tutti i metodi dell&quot;oggetto script corrente.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Una matrice di oggetti che contiene tutti i metodi dell&quot;oggetto script corrente."
  overload: Microsoft.JScript.ScriptObject.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetParent
  id: GetParent
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetParent()
  nameWithType: ScriptObject.GetParent()
  fullName: Microsoft.JScript.ScriptObject.GetParent()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene un riferimento all&quot;oggetto padre."
  remarks: "L&quot;elemento padre è l&quot;oggetto a cui l&quot;oggetto script delega le richieste per le proprietà o metodi che non implementa stesso. Ad esempio, quando si crea un <xref:Microsoft.JScript.NumberObject>utilizzando un oggetto <xref:Microsoft.JScript.NumberConstructor>l&quot;elemento padre è un <xref:Microsoft.JScript.NumberPrototype>.</xref:Microsoft.JScript.NumberPrototype> </xref:Microsoft.JScript.NumberConstructor> </xref:Microsoft.JScript.NumberObject>"
  syntax:
    content: public Microsoft.JScript.ScriptObject GetParent ();
    parameters: []
    return:
      type: Microsoft.JScript.ScriptObject
      description: "Un riferimento all&quot;oggetto padre."
  overload: Microsoft.JScript.ScriptObject.GetParent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: ScriptObject.GetProperties(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene una matrice di <xref:System.Reflection.PropertyInfo>oggetti che corrispondono a tutte le proprietà dell&quot;oggetto script corrente.</xref:System.Reflection.PropertyInfo>"
  syntax:
    content: public virtual System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Una matrice di oggetti che contiene tutte le proprietà dell&quot;oggetto script corrente."
  overload: Microsoft.JScript.ScriptObject.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: ScriptObject.GetProperty(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene una proprietà con il nome specificato."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà da ottenere."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    return:
      type: System.Reflection.PropertyInfo
      description: "Una proprietà che è stato specificato <code> name </code>, oppure null se l&quot;oggetto script non contiene la proprietà."
  overload: Microsoft.JScript.ScriptObject.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene una proprietà con il nome specificato usando i criteri di selezione specificati."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà da cercare."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    - id: binder
      type: System.Reflection.Binder
      description: "Oggetto che esegue la conversione di tipo dal tipo di argomento effettivo per il tipo di argomento formale."
    - id: returnType
      type: System.Type
      description: "Il tipo del valore restituito che deve avere la proprietà."
    - id: types
      type: System.Type[]
      description: "I tipi di indice della proprietà da ricercare. Utilizzato per le proprietà di indice, ad esempio l&quot;indicizzatore per una classe."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Matrice di modificatori di parametro che consentono l&quot;associazione lavorare con le firme del parametro in cui sono stati modificati i tipi."
    return:
      type: System.Reflection.PropertyInfo
      description: "Una proprietà che è stato specificato <code> name </code>, oppure null se l&quot;oggetto script non contiene la proprietà."
  overload: Microsoft.JScript.ScriptObject.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Richiama il membro specificato."
  syntax:
    content: public virtual object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro da richiamare."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit dei valori di enumerazione che specifica come la ricerca di membri viene effettuata mediante reflection."
    - id: binder
      type: System.Reflection.Binder
      description: "Oggetto che esegue la conversione di tipo dal tipo di argomento effettivo per il tipo di argomento formale."
    - id: target
      type: System.Object
      description: "Oggetto su cui richiamare il membro. Deve essere l&quot;oggetto script corrente."
    - id: args
      type: System.Object[]
      description: "Una matrice di oggetti che contiene il numero, ordine e tipo dei parametri del membro da richiamare. Si tratta di una matrice vuota se non sono presenti parametri."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Una matrice con la stessa lunghezza del parametro args. Rappresenta gli attributi degli argomenti del membro richiamato nei metadati."
    - id: locale
      type: System.Globalization.CultureInfo
      description: "Vengono fornite informazioni specifiche o impostazioni locali. Utilizzato per formattare correttamente i numeri, date e stringhe."
    - id: namedParameters
      type: System.String[]
      description: "Matrice di parametri."
    return:
      type: System.Object
      description: "Il valore restituito della chiamata al membro."
  overload: Microsoft.JScript.ScriptObject.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Double)
  id: Item(System.Double)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Double)
  nameWithType: ScriptObject.Item(Double)
  fullName: Microsoft.JScript.ScriptObject.Item(Double)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene o imposta l&quot;oggetto che rappresenta un membro dello script definito dall&quot;oggetto specificato <xref:System.Double>valore di indice.</xref:System.Double>"
  syntax:
    content: public object this[double index] { get; set; }
    parameters:
    - id: index
      type: System.Double
      description: "L&quot;indice del membro."
    return:
      type: System.Object
      description: "Il valore del membro che si trova <code> index </code>."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ScriptObject.Item(Int32)
  fullName: Microsoft.JScript.ScriptObject.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene o imposta l&quot;oggetto che rappresenta un membro dello script definito dall&quot;oggetto specificato <xref:System.Int32>valore di indice.</xref:System.Int32>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice del membro."
    return:
      type: System.Object
      description: "Il valore del membro che si trova <code> index </code>."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Object[])
  id: Item(System.Object[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Object[])
  nameWithType: ScriptObject.Item(Object[])
  fullName: Microsoft.JScript.ScriptObject.Item(Object[])
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene o imposta un membro dell&quot;oggetto script designato dal nome specificato, <xref:System.Double>valore di indice o <xref:System.Int32>valore di indice.</xref:System.Int32> </xref:System.Double>"
  remarks: "Se il `pars` matrice ha più di un elemento, l&quot;ultimo elemento è l&quot;argomento di questa proprietà."
  syntax:
    content: public object this[object[] pars] { get; set; }
    parameters:
    - id: pars
      type: System.Object[]
      description: "Il nome o l&quot;indice del membro."
    return:
      type: System.Object
      description: "Il valore del membro specificato in <code> pars </code>."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(String)
  nameWithType: ScriptObject.Item(String)
  fullName: Microsoft.JScript.ScriptObject.Item(String)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene o imposta un membro dell&quot;oggetto script designato dal nome specificato."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro."
    return:
      type: System.Object
      description: "Il valore del membro denominato <code> name </code>."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.parent
  id: parent
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: parent
  nameWithType: ScriptObject.parent
  fullName: Microsoft.JScript.ScriptObject.parent
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Archivia un riferimento all&quot;oggetto padre."
  remarks: "L&quot;elemento padre è l&quot;oggetto a cui l&quot;oggetto script delega le richieste per le proprietà o metodi che non implementa stesso. Ad esempio, quando si crea un <xref:Microsoft.JScript.NumberObject>utilizzando un oggetto <xref:Microsoft.JScript.NumberConstructor>l&quot;elemento padre è un <xref:Microsoft.JScript.NumberPrototype>.</xref:Microsoft.JScript.NumberPrototype> </xref:Microsoft.JScript.NumberConstructor> </xref:Microsoft.JScript.NumberObject>"
  syntax:
    content: protected Microsoft.JScript.ScriptObject parent;
    return:
      type: Microsoft.JScript.ScriptObject
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
  fullName: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene il tipo dell&quot;oggetto script."
  syntax:
    content: public virtual Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "Il tipo dell&quot;oggetto script."
  overload: Microsoft.JScript.ScriptObject.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  id: WrapMembers(System.Reflection.MemberInfo,System.Object)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo,Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo,Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Crea un oggetto sottoposto a wrapping che contiene il membro specificato con l&quot;oggetto specificato."
  remarks: "Questo metodo consente ad altri oggetti che non contengono il membro per archiviarlo e restituirne il valore come se fosse il proprio."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo member, object obj);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "Il membro per eseguire il wrapping."
    - id: obj
      type: System.Object
      description: "L&quot;oggetto che `member` è definito in."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Una matrice a un elemento che dispone di un oggetto sottoposto a wrapping contenente le informazioni sui membri e <code> obj </code>."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  id: WrapMembers(System.Reflection.MemberInfo[],System.Object)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo[],Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Crea una matrice di oggetti wrapper che contengono i membri specificati con l&quot;oggetto specificato."
  remarks: "Questo metodo consente ad altri oggetti che non contengono questi membri per archiviarli e quindi restituiscono i valori come se fossero i propri."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj);
    parameters:
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "I membri per eseguire il wrapping."
    - id: obj
      type: System.Object
      description: "L&quot;oggetto che `members` sono definiti in."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Una matrice di oggetti di cui effettua il wrapping, ognuno dei quali contiene informazioni sui membri e una copia di <code> obj </code>."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  id: WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo[],Object,SimpleHashtable)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Crea una matrice di oggetti wrapper che contengono i membri specificati con l&quot;oggetto specificato, la memorizzazione nella cache i risultati nell&quot;archivio dati specificato."
  remarks: "Questo metodo consente ad altri oggetti che non contengono questi membri per archiviarli e quindi restituiscono i valori come se fossero i propri."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj, Microsoft.JScript.SimpleHashtable cache);
    parameters:
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "I membri per eseguire il wrapping."
    - id: obj
      type: System.Object
      description: "L&quot;oggetto che `members` sono definiti in."
    - id: cache
      type: Microsoft.JScript.SimpleHashtable
      description: "Archiviazione di dati temporanei per gli oggetti di cui effettua il wrapping."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Una matrice di oggetti di cui effettua il wrapping, ognuno dei quali contiene informazioni sui membri e una copia di <code> obj </code>."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.JScript.ScriptObject.engine
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: engine
  nameWithType: ScriptObject.engine
  fullName: Microsoft.JScript.ScriptObject.engine
- uid: Microsoft.JScript.Vsa.VsaEngine
  parent: Microsoft.JScript.Vsa
  isExternal: false
  name: VsaEngine
  nameWithType: VsaEngine
  fullName: Microsoft.JScript.Vsa.VsaEngine
- uid: Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: ScriptObject.GetField(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: ScriptObject.GetFields(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: ScriptObject.GetMember(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: ScriptObject.GetMembers(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMembers(BindingFlags)
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: ScriptObject.GetMethod(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: ScriptObject.GetMethods(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetParent
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetParent()
  nameWithType: ScriptObject.GetParent()
  fullName: Microsoft.JScript.ScriptObject.GetParent()
- uid: Microsoft.JScript.ScriptObject
  parent: Microsoft.JScript
  isExternal: false
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: Microsoft.JScript.ScriptObject
- uid: Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: ScriptObject.GetProperties(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: ScriptObject.GetProperty(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.Item(System.Double)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Double)
  nameWithType: ScriptObject.Item(Double)
  fullName: Microsoft.JScript.ScriptObject.Item(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.ScriptObject.Item(System.Int32)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Int32)
  nameWithType: ScriptObject.Item(Int32)
  fullName: Microsoft.JScript.ScriptObject.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.JScript.ScriptObject.Item(System.Object[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Object[])
  nameWithType: ScriptObject.Item(Object[])
  fullName: Microsoft.JScript.ScriptObject.Item(Object[])
- uid: Microsoft.JScript.ScriptObject.Item(System.String)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(String)
  nameWithType: ScriptObject.Item(String)
  fullName: Microsoft.JScript.ScriptObject.Item(String)
- uid: Microsoft.JScript.ScriptObject.parent
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: parent
  nameWithType: ScriptObject.parent
  fullName: Microsoft.JScript.ScriptObject.parent
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
  fullName: Microsoft.JScript.ScriptObject.UnderlyingSystemType
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo,Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo,Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo,Object)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo[],Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object)
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo[],Object,SimpleHashtable)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
- uid: Microsoft.JScript.SimpleHashtable
  parent: Microsoft.JScript
  isExternal: false
  name: SimpleHashtable
  nameWithType: SimpleHashtable
  fullName: Microsoft.JScript.SimpleHashtable
- uid: Microsoft.JScript.ScriptObject.GetField*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetField
  nameWithType: ScriptObject.GetField
- uid: Microsoft.JScript.ScriptObject.GetFields*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetFields
  nameWithType: ScriptObject.GetFields
- uid: Microsoft.JScript.ScriptObject.GetMember*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMember
  nameWithType: ScriptObject.GetMember
- uid: Microsoft.JScript.ScriptObject.GetMembers*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMembers
  nameWithType: ScriptObject.GetMembers
- uid: Microsoft.JScript.ScriptObject.GetMethod*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod
  nameWithType: ScriptObject.GetMethod
- uid: Microsoft.JScript.ScriptObject.GetMethods*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethods
  nameWithType: ScriptObject.GetMethods
- uid: Microsoft.JScript.ScriptObject.GetParent*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetParent
  nameWithType: ScriptObject.GetParent
- uid: Microsoft.JScript.ScriptObject.GetProperties*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperties
  nameWithType: ScriptObject.GetProperties
- uid: Microsoft.JScript.ScriptObject.GetProperty*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty
  nameWithType: ScriptObject.GetProperty
- uid: Microsoft.JScript.ScriptObject.InvokeMember*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: InvokeMember
  nameWithType: ScriptObject.InvokeMember
- uid: Microsoft.JScript.ScriptObject.Item*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item
  nameWithType: ScriptObject.Item
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
- uid: Microsoft.JScript.ScriptObject.WrapMembers*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers
  nameWithType: ScriptObject.WrapMembers
