### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.AppSettingsExpressionEditor
  id: AppSettingsExpressionEditor
  children:
  - System.Web.UI.Design.AppSettingsExpressionEditor.#ctor
  - System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: AppSettingsExpressionEditor
  nameWithType: AppSettingsExpressionEditor
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor
  type: Class
  summary: "Fornisce proprietà e metodi per la valutazione e la modifica di un&quot;espressione di impostazione dell&quot;applicazione in un file di configurazione in fase di progettazione."
  remarks: "La classe AppSettingsExpressionEditor è derivata dalla <xref:System.Web.UI.Design.ExpressionEditor>classe e fornisce un&quot;implementazione per la valutazione e l&quot;associazione di un riferimento all&quot;impostazione dell&quot;applicazione con una proprietà del controllo in fase di progettazione.</xref:System.Web.UI.Design.ExpressionEditor> Ad esempio, è possibile associare il valore della proprietà di un controllo all&quot;espressione di impostazione dell&quot;applicazione `AppSettings:mySettingKeyName`, a indicare che il valore della proprietà controllo è impostato tramite il `mySettingKeyName` valore il `appSettings` sezione del file di configurazione Web.       Host di una finestra di progettazione, ad esempio [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], utilizza la classe AppSettingsExpressionEditor per selezionare un&quot;impostazione dell&quot;applicazione dal `appSettings` sezione di configurazione, quindi valuta l&quot;espressione selezionata per il rendering in fase di progettazione.       Quando si visualizza il <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>proprietà per un controllo nella griglia delle proprietà in fase di progettazione, la finestra di progettazione visiva consente di visualizzare una finestra di dialogo per impostare le espressioni che forniscono il valore in fase di esecuzione per una proprietà del controllo.</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> È possibile selezionare il tipo dell&quot;espressione in base a un elenco di prefissi di espressione. Quando si seleziona il **AppSettings** prefisso di espressione dall&quot;elenco, l&quot;host di progettazione visiva utilizza l&quot;oggetto associato <xref:System.Web.UI.Design.ExpressionEditorSheet>oggetto per fornire funzionalità di modifica in fase di progettazione del `appSettings` espressioni e utilizza i metodi AppSettingsExpressionEditor per valutare e convertire la stringa di espressione in base alla sintassi di un&quot;espressione di impostazione dell&quot;applicazione.</xref:System.Web.UI.Design.ExpressionEditorSheet> L&quot;host di progettazione visiva utilizza il risultato dell&quot;espressione valutata per assegnare i valori delle proprietà vengono visualizzati nell&quot;area di progettazione del controllo.       Il <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>proprietà per un oggetto AppSettingsExpressionEditor restituisce la stringa `AppSettings`.</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> La <xref:System.Web.Compilation.AppSettingsExpressionBuilder>classe è associato al prefisso di espressione `AppSettings` e l&quot;implementazione di AppSettingsExpressionEditor.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Il <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A>metodo restituisce una stringa di espressione di impostazione dell&quot;applicazione di input.</xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> Il <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>metodo restituisce il <xref:System.Web.UI.Design.ExpressionEditorSheet>implementazione che viene utilizzata per immettere e modificare le espressioni di impostazione dell&quot;applicazione.</xref:System.Web.UI.Design.ExpressionEditorSheet> </xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>"
  example:
  - "The following code example demonstrates how to bind the <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.HyperLink> control to an application setting expression using the AppSettingsExpressionEditor object.  \n  \n1.  In a Web Forms project, add `MyHyperLinkSetting` to the `<appSettings>` section of the web.config file.  \n  \n     [!code-xml[ControlsUsingExpressions#5](~/add/codesnippet/xml/t-system.web.ui.design.a_1.xml)]  \n  \n2.  On a Web Forms page, add a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n3.  For the `Hyperlink` control, in Properties, click **Expressions**, and then click the ellipsis button (**...**).  \n  \n     The `<Hyperlinkname>`**Expression** dialog box appears.  \n  \n4.  Under **Bindable properties**, click **NavigateUrl**, in the **Expression type** list, click **AppSettings**, and then under **Expression properties**, in the **AppSetting** box, type **MyHyperLinkSetting**.  \n  \n The visual designer uses the AppSettingsExpressionEditor to assign the expression for the `NavigateUrl` property.  \n  \n The following aspx source shows an example of a property value set using an application setting expression.  \n  \n [!code-vb[ControlsUsingExpressions#2](~/add/codesnippet/visualbasic/t-system.web.ui.design.a_2.aspx)]\n [!code-cs[ControlsUsingExpressions#2](~/add/codesnippet/csharp/t-system.web.ui.design.a_2.aspx)]\n [!code-xml[ControlsUsingExpressions#2](~/add/codesnippet/xml/t-system.web.ui.design.a_2.xml)]"
  syntax:
    content: 'public class AppSettingsExpressionEditor : System.Web.UI.Design.ExpressionEditor'
  inheritance:
  - System.Object
  - System.Web.UI.Design.ExpressionEditor
  implements: []
  inheritedMembers:
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  platform:
  - net462
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  langs:
  - csharp
  name: AppSettingsExpressionEditor()
  nameWithType: AppSettingsExpressionEditor.AppSettingsExpressionEditor()
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.AppSettingsExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.Design.AppSettingsExpressionEditor&quot;> </xref> classe."
  remarks: "Un&quot;istanza di <xref:System.Web.UI.Design.AppSettingsExpressionEditor>classe è configurata per la classe base con il <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>proprietà impostata su `AppSettings`.</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> </xref:System.Web.UI.Design.AppSettingsExpressionEditor>"
  syntax:
    content: public AppSettingsExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.AppSettingsExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: AppSettingsExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Restituisce una stringa di espressione di impostazione dell&quot;applicazione e fornisce il valore in fase di progettazione per una proprietà del controllo."
  remarks: "Il metodo EvaluateExpression Cerca l&quot;impostazione dell&quot;applicazione specificato da `expression`e quindi restituisce il valore dell&quot;impostazione dell&quot;applicazione.       Finestra di progettazione visiva Usa il metodo EvaluateExpression per valutare un&quot;espressione di impostazione dell&quot;applicazione e fornire il valore in fase di progettazione per una proprietà del controllo associato. Finestra di progettazione chiama il metodo EvaluateExpression con la stringa di espressione e utilizza il risultato dell&quot;espressione valutata per assegnare i valori delle proprietà vengono visualizzati nell&quot;area di progettazione del controllo.       In fase di esecuzione, il parser di pagina utilizza il <xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A>e <xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression%2A>metodi dell&quot;oggetto corrispondente <xref:System.Web.Compilation.AppSettingsExpressionBuilder>implementazione per valutare un&quot;espressione e fornire il valore in fase di esecuzione per una proprietà del controllo associato.</xref:System.Web.Compilation.AppSettingsExpressionBuilder> </xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression%2A> </xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A>"
  syntax:
    content: public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "Una stringa di espressione di impostazione dell&quot;applicazione da valutare. `expression`non include il <xref uid=&quot;langword_csharp_AppSettings&quot; name=&quot;AppSettings&quot; href=&quot;&quot;> </xref> prefisso dell&quot;espressione."
    - id: parseTimeData
      type: System.Object
      description: "Oggetto che contiene ulteriori informazioni di analisi per la valutazione `expression`."
    - id: propertyType
      type: System.Type
      description: "Il tipo di proprietà del controllo."
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Un&quot;implementazione del provider del servizio fornita dall&quot;host di progettazione, utilizzata per ottenere altri servizi in fase di progettazione."
    return:
      type: System.Object
      description: "L&quot;oggetto a cui fa riferimento <code> expression </code>, se la valutazione dell&quot;espressione ha avuto esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: AppSettingsExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Restituisce un editor di espressioni per un&quot;espressione di impostazione dell&quot;applicazione."
  remarks: "Il metodo GetExpressionEditorSheet restituisce un semplice editor di implementazione della pagina, che utilizza una singola stringa di input per formare l&quot;espressione."
  syntax:
    content: public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "La stringa di espressione impostata per una proprietà del controllo, utilizzata per inizializzare l&quot;editor di espressioni. `expression`non include il <xref uid=&quot;langword_csharp_AppSettings&quot; name=&quot;AppSettings&quot; href=&quot;&quot;> </xref> prefisso dell&quot;espressione."
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Un&quot;implementazione del provider del servizio fornita dall&quot;host di progettazione, utilizzata per ottenere altri servizi in fase di progettazione."
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "Un <xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref> implementazione che definisce le proprietà di espressione di impostazione dell&quot;applicazione."
  overload: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.#ctor
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: AppSettingsExpressionEditor()
  nameWithType: AppSettingsExpressionEditor.AppSettingsExpressionEditor()
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.AppSettingsExpressionEditor()
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: AppSettingsExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: AppSettingsExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.#ctor*
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: AppSettingsExpressionEditor
  nameWithType: AppSettingsExpressionEditor.AppSettingsExpressionEditor
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: AppSettingsExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.AppSettingsExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: AppSettingsExpressionEditor.GetExpressionEditorSheet
