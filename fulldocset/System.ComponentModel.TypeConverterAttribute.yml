### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverterAttribute
  id: TypeConverterAttribute
  children:
  - System.ComponentModel.TypeConverterAttribute.#ctor
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  - System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  - System.ComponentModel.TypeConverterAttribute.Default
  - System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  - System.ComponentModel.TypeConverterAttribute.GetHashCode
  langs:
  - csharp
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
  type: Class
  summary: "Specifica il tipo da utilizzare come convertitore per l&quot;oggetto di questo attributo è associato."
  remarks: "La classe utilizzata per la conversione deve ereditare da <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Utilizzare il <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>proprietà per ottenere il nome della classe che fornisce la conversione dei dati per l&quot;oggetto di questo attributo è associata a.</xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>       Per ulteriori informazioni sugli attributi, vedere [attributi](~/add/includes/ajax-current-ext-md.md). Per ulteriori informazioni sui convertitori di tipi, vedere la <xref:System.ComponentModel.TypeConverter>classe di base e [procedura: implementare un convertitore di tipi](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>       Per stabilire un convertitore di tipi in una classe personalizzata che fornisce il comportamento di conversione di tipi per XAML, si applica l&quot;attributo TypeConverterAttribute al tipo. L&quot;argomento dell&quot;attributo fa riferimento all&quot;implementazione del convertitore. Il convertitore di tipi deve essere in grado di accettare i valori da una stringa che viene utilizzato per gli attributi o il testo di inizializzazione nel markup XAML e convertire tale stringa nel tipo di destinazione desiderato. Per ulteriori informazioni, vedere[TypeConverters and XAML](~/add/includes/ajax-current-ext-md.md).       Anziché applicare a tutti i valori di un tipo, un comportamento del convertitore di tipi per XAML può essere stabilito anche in una proprietà specifica. In questo caso, applicare l&quot;attributo TypeConverterAttribute alla definizione della proprietà (la definizione esterna, non la specifica `get` e `set` definizioni).       Può essere assegnato un comportamento del convertitore di tipi per l&quot;utilizzo XAML di un membro associabile personalizzato tramite l&quot;applicazione di TypeConverterAttribute per il `get` funzione di accesso di metodo che supporta l&quot;utilizzo di XAML. Per ulteriori informazioni, vedere [collegato Cenni preliminari sulle proprietà](~/add/includes/ajax-current-ext-md.md).       Per i casi di serializzazione di XAML complessi che richiedono uno stato aggiuntivo dal runtime dell&quot;oggetto, si consiglia di definire un serializzatore di valori oltre a un convertitore di tipi e un attributo entrambe le classi di supporto ai tipi personalizzati o membri personalizzati. Per ulteriori informazioni, vedere <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  example:
  - "The following example declares `MyClass` to use the type converter called `MyClassConverter`. This example assumes that `MyClassConverter` has been implemented elsewhere. The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._140_1.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._140_1.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._140_1.cs)]  \n  \n The next example creates an instance of `MyClass`. Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._140_2.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._140_2.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._140_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class TypeConverterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> classe con il convertitore di tipi predefinito, ovvero una stringa vuota (&quot;&quot;)."
  remarks: "La classe che fornisce la conversione dei dati deve ereditare da <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute ();
    parameters: []
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> classe, utilizzando il nome del tipo specificato come convertitore di dati per l&quot;oggetto a cui è associato questo attributo."
  remarks: "La classe che fornisce la conversione dei dati deve ereditare da <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome completo della classe da utilizzare per la conversione dei dati per l&quot;oggetto a cui è associato questo attributo."
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> classe, utilizzando il tipo specificato come convertitore di dati per l&quot;oggetto a cui è associato questo attributo."
  remarks: "La classe che fornisce la conversione dei dati deve ereditare da <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo della classe del convertitore da utilizzare per la conversione dei dati per l&quot;oggetto a cui è associato questo attributo.</xref:System.Type>"
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  id: ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome del tipo completo di <xref:System.Type>da utilizzare come convertitore per l&quot;oggetto a cui è associato questo attributo.</xref:System.Type>"
  syntax:
    content: public string ConverterTypeName { get; }
    return:
      type: System.String
      description: "Il nome del tipo completo di <xref:System.Type>da utilizzare come convertitore per l&quot;oggetto a cui è associato questo attributo o una stringa vuota (&quot;&quot;) se non esiste.</xref:System.Type> Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Default
  id: Default
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica il tipo da utilizzare come convertitore per l&quot;oggetto che a cui è associato questo attributo."
  syntax:
    content: public static readonly System.ComponentModel.TypeConverterAttribute Default;
    return:
      type: System.ComponentModel.TypeConverterAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se il valore dell&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da testare l&quot;uguaglianza di valore."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore dell&quot;oggetto specificato è uguale a quello dell&quot;oggetto corrente <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Default
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
- uid: System.ComponentModel.TypeConverterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.TypeConverterAttribute.#ctor*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Equals*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals
  nameWithType: TypeConverterAttribute.Equals
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: TypeConverterAttribute.GetHashCode
