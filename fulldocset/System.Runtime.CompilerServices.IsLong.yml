### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.IsLong
  id: IsLong
  children: []
  langs:
  - csharp
  name: IsLong
  nameWithType: IsLong
  fullName: System.Runtime.CompilerServices.IsLong
  type: Class
  summary: "Indica che un valore integer modificato è uno standard C++ <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> valore. Questa classe non può essere ereditata."
  remarks: "Lo standard C++ indica che un `long` e un valore integer sono tipi distinti.  Tuttavia, sono entrambi rappresentati utilizzando `ELEMENT_TYPE_I4` in un assembly.  Per distinguere un `long` da un valore integer in C++, il compilatore Microsoft C++ aggiunge il modificatore IsLong in qualsiasi istanza di un `long` caso di generazione dell&quot;istanza.  Questo processo è molto importante per mantenere l&quot;indipendenza dai tipi a livello di linguaggio.       I compilatori creano modificatori personalizzati all&quot;interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce valori quando il comportamento predefinito non è appropriato.  Quando il compilatore JIT rileva un modificatore personalizzato, gestisce il valore in modo che specifica il modificatore.  Compilatori possono applicare modificatori personalizzati a metodi, parametri e valori restituiti.  Il compilatore JIT deve rispondere ai modificatori obbligatori, ma possa ignorare i modificatori facoltativi.       È possibile creare i modificatori personalizzati nei metadati tramite una delle tecniche seguenti:-utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder>classe, ad esempio <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder>      -La generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene chiamate a `modopt` e `modreq`e l&quot;assemblaggio del file con il [Ilasm.exe (Assembler IL)](~/add/includes/ajax-current-ext-md.md).      -Usando l&quot;API di reflection non gestita."
  example:
  - "The following example demonstrates how to emit an IsLong object into an assembly using reflection.  \n  \n [!code-cpp[Runtime.CompilerServices.IsLong#1](~/add/codesnippet/cpp/t-system.runtime.compile_11_1.cpp)]"
  syntax:
    content: public static class IsLong
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
