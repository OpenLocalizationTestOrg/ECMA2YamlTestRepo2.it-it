### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerTimeoutManager
  id: HttpListenerTimeoutManager
  children:
  - System.Net.HttpListenerTimeoutManager.DrainEntityBody
  - System.Net.HttpListenerTimeoutManager.EntityBody
  - System.Net.HttpListenerTimeoutManager.HeaderWait
  - System.Net.HttpListenerTimeoutManager.IdleConnection
  - System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  - System.Net.HttpListenerTimeoutManager.RequestQueue
  langs:
  - csharp
  name: HttpListenerTimeoutManager
  nameWithType: HttpListenerTimeoutManager
  fullName: System.Net.HttpListenerTimeoutManager
  type: Class
  summary: "Il gestore di timeout da utilizzare per un <xref href=&quot;System.Net.HttpListener&quot;> </xref> oggetto."
  remarks: "Il gestore di timeout definisce i limiti di timeout di connessione per un <xref:System.Net.HttpListener>istanza.</xref:System.Net.HttpListener>"
  syntax:
    content: public class HttpListenerTimeoutManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  id: DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tempo, espresso in secondi, consentiti per il <xref href=&quot;System.Net.HttpListener&quot;> </xref> per svuotare il corpo dell&quot;entità in una connessione Keep-Alive."
  remarks: "Il valore predefinito per questa proprietà è 2 minuti.       In una connessione Keep-Alive, dopo che l&quot;app ha inviato una risposta per una richiesta e prima che la richiesta è arrivato completamente corpo dell&quot;entità, il <xref:System.Net.HttpListener>Inizia svuotamento il resto del corpo dell&quot;entità per raggiungere un altro potenzialmente le pipeline richiesta dal client.</xref:System.Net.HttpListener> Se il tempo per svuotare il corpo dell&quot;entità rimanenti supera il periodo consentito la connessione è scaduta."
  syntax:
    content: public TimeSpan DrainEntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "Restituisce <xref:System.TimeSpan>.</xref:System.TimeSpan>       Il tempo, espresso in secondi, consentito per il <xref href=&quot;System.Net.HttpListener&quot;> </xref> per svuotare il corpo dell&quot;entità in una connessione Keep-Alive."
  overload: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  id: EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tempo, espresso in secondi, consentiti per il corpo di entità di richiesta in arrivo."
  remarks: "Il valore predefinito per questa proprietà è 2 minuti.       Il <xref:System.Net.HttpListener>Attiva il timer quando la richiesta ha un corpo entità.</xref:System.Net.HttpListener> La scadenza del timer è inizialmente impostata per il valore configurato. Quando il <xref:System.Net.HttpListener>riceve indicazioni dati aggiuntivi nella richiesta, reimposta il timer per consentire la connessione di un altro intervallo.</xref:System.Net.HttpListener>"
  syntax:
    content: public TimeSpan EntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "Restituisce <xref:System.TimeSpan>.</xref:System.TimeSpan>       Tempo, espresso in secondi, consentito per il corpo di entità di richiesta in arrivo."
  overload: System.Net.HttpListenerTimeoutManager.EntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  id: HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tempo, espresso in secondi, consentiti per il <xref href=&quot;System.Net.HttpListener&quot;> </xref> per analizzare l&quot;intestazione della richiesta."
  remarks: "Il valore predefinito per questa proprietà è 2 minuti.       Questo timeout viene applicato solo dopo la prima richiesta per la connessione viene indirizzata a <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener>       Impossibile determinare la coda di richiesta o il gruppo URL associato alla richiesta fino a quando non sono state analizzate le intestazioni. Pertanto, il <xref:System.Net.HttpListener>impone il timer HeaderWait predefinito per la prima richiesta su una connessione.</xref:System.Net.HttpListener> Le successive richieste su una connessione Keep-Alive utilizzerà il valore impostato per questa proprietà."
  syntax:
    content: public TimeSpan HeaderWait { get; set; }
    return:
      type: System.TimeSpan
      description: "Restituisce <xref:System.TimeSpan>.</xref:System.TimeSpan>       Il tempo, espresso in secondi, consentito per il <xref href=&quot;System.Net.HttpListener&quot;> </xref> per analizzare l&quot;intestazione della richiesta."
  overload: System.Net.HttpListenerTimeoutManager.HeaderWait*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  id: IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tempo, espresso in secondi, consentiti per una connessione inattiva."
  remarks: "Il valore predefinito per questa proprietà è 2 minuti.       Questo timeout viene applicato solo dopo la prima richiesta per la connessione viene indirizzata a <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener>       Impossibile determinare la coda di richiesta o il gruppo URL associato alla richiesta fino a quando non sono state analizzate le intestazioni. Pertanto, il <xref:System.Net.HttpListener>impone il timer IdleConnection predefinito per la prima richiesta su una connessione.</xref:System.Net.HttpListener> Le successive richieste su una connessione Keep-Alive utilizzerà il valore impostato per questa proprietà."
  syntax:
    content: public TimeSpan IdleConnection { get; set; }
    return:
      type: System.TimeSpan
      description: "Restituisce <xref:System.TimeSpan>.</xref:System.TimeSpan>       Tempo, espresso in secondi, consentito per una connessione inattiva."
  overload: System.Net.HttpListenerTimeoutManager.IdleConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  id: MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la velocità di invio minimo, in byte al secondo, per la risposta."
  remarks: "La velocità di invio risposta predefinita è 150 byte al secondo.       Per disabilitare questo timer, impostare MinSendBytesPerSecond su MAXULONG."
  syntax:
    content: public long MinSendBytesPerSecond { get; set; }
    return:
      type: System.Int64
      description: "Restituisce <xref:System.Int64>.</xref:System.Int64>       La velocità di invio minimo, in byte al secondo, per la risposta."
  overload: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  id: RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il tempo, espresso in secondi, consentiti per la richiesta deve rimanere nella coda di richieste prima di <xref href=&quot;System.Net.HttpListener&quot;> </xref> viene prelevato."
  remarks: "Il valore predefinito per questa proprietà è 2 minuti."
  syntax:
    content: public TimeSpan RequestQueue { get; set; }
    return:
      type: System.TimeSpan
      description: "Restituisce <xref:System.TimeSpan>.</xref:System.TimeSpan>       Il tempo, espresso in secondi, consentito per la richiesta deve rimanere nella coda di richieste prima di <xref href=&quot;System.Net.HttpListener&quot;> </xref> viene prelevato."
  overload: System.Net.HttpListenerTimeoutManager.RequestQueue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
- uid: System.Net.HttpListenerTimeoutManager.EntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
