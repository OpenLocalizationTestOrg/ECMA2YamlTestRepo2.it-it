### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  id: TtsEngineSsml
  children:
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  langs:
  - csharp
  name: TtsEngineSsml
  nameWithType: TtsEngineSsml
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  type: Class
  summary: "Classe base astratta per essere implementata da tutti i motori di sintesi di sintesi vocale."
  remarks: "Per creare un modulo personalizzato sintesi vocale, un&quot;applicazione deve sempre implementare una classe derivata dalla classe base astratta TtsEngineSsml.       È quindi utilizzabile un&quot;implementazione di TtsEngineSsml correttamente registrata come un `Synthesizer``Voice` da <xref:System.Speech.Synthesis>applicazioni basate sullo spazio dei nomi.</xref:System.Speech.Synthesis>       Gli oggetti che ereditano da TtsEngineSsml deve eseguire l&quot;override dei membri seguenti: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>e <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>       Il membro più importante della classe TtsEngineSsml da implementare è il <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>metodo.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>       Il <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>metodo viene chiamato dal parser testo infrastrutture ricezione: 1.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  Un riferimento di <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>interfaccia, che fornisce l&quot;accesso ai servizi di sistema, ad esempio anche l&quot;accodamento dei messaggi e la scrittura dell&quot;output audio.</xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>      2.  Matrice di <xref:System.Speech.Synthesis.TtsEngine.TextFragment>istanza generato da un input vocale sintesi Markup Language (SSML).</xref:System.Speech.Synthesis.TtsEngine.TextFragment> Oltre a testo da sottoporre a rendering come riconoscimento vocale, l&quot;analisi dell&quot;elemento SSML archivia informazioni sugli attributi richiesti del contenuto vocale in un <xref:System.Speech.Synthesis.TtsEngine.FragmentState>istanza associata a ogni ingresso <xref:System.Speech.Synthesis.TtsEngine.TextFragment>oggetto.</xref:System.Speech.Synthesis.TtsEngine.TextFragment> </xref:System.Speech.Synthesis.TtsEngine.FragmentState>       Un&quot;applicazione di sintetizzatore vocale può facoltativamente effettuare richieste per un formato di output specificato mediante l&quot;implementazione <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>chiamata dalla piattaforma durante il tentativo di fornire output audio corretto.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>       Un responsabile dell&quot;implementazione può anche fornire il supporto per la gestione di definizioni esterne di pronunce o dizionari, loro implementazione di <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>e <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>"
  syntax:
    content: public abstract class TtsEngineSsml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: TtsEngineSsml(String)
  nameWithType: TtsEngineSsml.TtsEngineSsml(String)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.TtsEngineSsml(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Costruisce una nuova istanza della <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> in base a una chiave del Registro di sistema vocale Token appropriata."
  remarks: "Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a `Synthesizer``Voice` to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.  \n  \n A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens."
  syntax:
    content: protected TtsEngineSsml (string registryKey);
    parameters:
    - id: registryKey
      type: System.String
      description: "Nome completo della chiave del Registro di sistema per il Token vocale associati il <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> implementazione. motore."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: AddLexicon(Uri,String,ITtsEngineSite)
  nameWithType: TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Aggiunge un dizionario per la <xref uid=&quot;langword_csharp_Synthesizer&quot; name=&quot;Synthesizer&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Voice&quot; name=&quot;Voice&quot; href=&quot;&quot;> </xref> implementate dall&quot;oggetto corrente <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> istanza."
  remarks: "Un dizionario di pronuncia è una raccolta di parole o frasi con le pronunce specificati utilizzando un alfabeto pronuncia appropriato.       Questo metodo viene in genere chiamato dall&quot;infrastruttura della piattaforma in risposta a un <xref:System.Speech.Synthesis>applicazioni chiamando AddLexicon e utilizzando il `Synthesizer``Voice` implementate dall&quot;oggetto corrente <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>istanza.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> </xref:System.Speech.Synthesis>       Il valore di `mediaType` è in genere una specifica MIME, la specifica SSML utilizza MIME per le specifiche dei supporti."
  example:
  - "The implementation of AddLexicon uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource. It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.  \n  \n```  \npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \n  \n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n  \n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}  \n  \n```"
  syntax:
    content: public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: uri
      type: System.Uri
      description: "Un&quot;istanza valida di <xref uid=&quot;langword_csharp_System.Uri&quot; name=&quot;System.Uri&quot; href=&quot;&quot;> </xref> che indica la posizione delle informazioni di lessico."
    - id: mediaType
      type: System.String
      description: "Stringa contenente il tipo di supporto di lessico. Tipi di supporto sono tra maiuscole e minuscole."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Un riferimento a un <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interfaccia utilizzata per interagire con l&quot;infrastruttura della piattaforma."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  id: GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: GetOutputFormat(SpeakOutputFormat,IntPtr)
  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Restituisce la migliore corrispondenza output audio supportati da una risposta di motore synthesize specificato a una richiesta al motore di sintetizzatore per il supporto di un determinato formato di output."
  remarks: "La struttura utilizzata come `targetWaveFormat` e restituito dalla deve compatibile con il metodo di `WAVEFORMATEX` disponibile in SAPI, e il valore restituito deve essere allocato utilizzando `CoTaskMemAlloc`.       Il `struct` deve fornire funzionalità equivalente a:```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```"
  example:
  - "The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.  \n  \n```  \npublic IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  \n    WaveFormat waveFormat = new WaveFormat();  \n    WaveFormat rq=new WaveFormat();  \n    Marshal.PtrToStructure(targetWaveFormat,rq);  \n  \n    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  \n    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  \n    waveFormat.BlockAlign = 2;  \n    waveFormat.Channels = 1;  \n    waveFormat.FormatTag = 1;  \n    waveFormat.SamplesPerSec = 16000;  \n    waveFormat.Size = 0;  \n  \n    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  \n    Marshal.StructureToPtr(waveFormat, wfx, false);  \n  \n    //Console.WriteLine (\"GetOutputFormat called\");  \n    return wfx;  \n}  \ninternal struct WaveFormat {  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}  \n```"
  syntax:
    content: public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);
    parameters:
    - id: speakOutputFormat
      type: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
      description: "Un membro valido del <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeakOutputFormat&quot;> </xref> enumerazione che indica il tipo di formato di output audio richiesto."
    - id: targetWaveFormat
      type: System.IntPtr
      description: "Un puntatore a un <xref uid=&quot;langword_csharp_struct&quot; name=&quot;struct&quot; href=&quot;&quot;> </xref> contenente l&quot;impostazione di dettagli per il tipo di formato audio richiesto dal `speakOutputFormat` argomento."
    return:
      type: System.IntPtr
      description: "Restituisce un oggetto valido <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> istanza che fa riferimento a un <xref uid=&quot;langword_csharp_struct&quot; name=&quot;struct&quot; href=&quot;&quot;> </xref> che contiene informazioni dettagliate sul formato di output."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: RemoveLexicon(Uri,ITtsEngineSite)
  nameWithType: TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Rimuove un lessico attualmente caricato dal <xref uid=&quot;langword_csharp_Synthesizer&quot; name=&quot;Synthesizer&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Voice&quot; name=&quot;Voice&quot; href=&quot;&quot;> </xref> implementate dall&quot;oggetto corrente <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> istanza."
  remarks: "Un dizionario di pronuncia è una raccolta di parole o frasi con le pronunce specificati utilizzando un alfabeto pronuncia appropriato.       Questo metodo viene chiamato in genere in risposta a un <xref:System.Speech.Synthesis>basato su applicazioni che chiamano <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>e l&quot;utilizzo di `Synthesizer``Voice` implementate dall&quot;oggetto corrente <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>istanza.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> </xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> </xref:System.Speech.Synthesis>"
  example:
  - "The implementation of RemoveLexicon uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.  \n  \n```  \npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \n  \n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n  \n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}  \n```"
  syntax:
    content: public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: uri
      type: System.Uri
      description: "Un&quot;istanza valida di <xref uid=&quot;langword_csharp_System.Uri&quot; name=&quot;System.Uri&quot; href=&quot;&quot;> </xref> che indica la posizione delle informazioni di lessico."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Un riferimento a un <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interfaccia passato in base all&quot;infrastruttura della piattaforma per consentire l&quot;accesso alle risorse di infrastruttura."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: Speak(TextFragment[],IntPtr,ITtsEngineSite)
  nameWithType: TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Esegue il rendering specificato <xref href=&quot;System.Speech.Synthesis.TtsEngine.TextFragment&quot;> </xref> matrice nel formato di output specificato."
  remarks: "La struttura utilizzata come `waveHeader` e restituito dalla deve compatibile con il metodo di `WAVEFORMATEX` disponibile in SAPI.       Il `struct` deve fornire funzionalità equivalente a:```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of Speak  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n    _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: fragment
      type: System.Speech.Synthesis.TtsEngine.TextFragment[]
      description: "Matrice di <xref href=&quot;System.Speech.Synthesis.TtsEngine.TextFragment&quot;> </xref> istanze che contiene il testo da sottoporre a rendering nel riconoscimento vocale."
    - id: waveHeader
      type: System.IntPtr
      description: "Un <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> che punta a una struttura contenente il formato di output audio."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Un riferimento a un <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interfaccia passato in base all&quot;infrastruttura della piattaforma per consentire l&quot;accesso alle risorse di infrastruttura."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: TtsEngineSsml(String)
  nameWithType: TtsEngineSsml.TtsEngineSsml(String)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.TtsEngineSsml(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: AddLexicon(Uri,String,ITtsEngineSite)
  nameWithType: TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: ITtsEngineSite
  nameWithType: ITtsEngineSite
  fullName: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: GetOutputFormat(SpeakOutputFormat,IntPtr)
  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: SpeakOutputFormat
  nameWithType: SpeakOutputFormat
  fullName: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: RemoveLexicon(Uri,ITtsEngineSite)
  nameWithType: TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: Speak(TextFragment[],IntPtr,ITtsEngineSite)
  nameWithType: TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
- uid: System.Speech.Synthesis.TtsEngine.TextFragment[]
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: TextFragment
  nameWithType: TextFragment
  fullName: System.Speech.Synthesis.TtsEngine.TextFragment[]
  spec.csharp:
  - uid: System.Speech.Synthesis.TtsEngine.TextFragment
    name: TextFragment
    nameWithType: TextFragment
    fullName: TextFragment[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: TtsEngineSsml
  nameWithType: TtsEngineSsml.TtsEngineSsml
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: AddLexicon
  nameWithType: TtsEngineSsml.AddLexicon
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: GetOutputFormat
  nameWithType: TtsEngineSsml.GetOutputFormat
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: RemoveLexicon
  nameWithType: TtsEngineSsml.RemoveLexicon
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: Speak
  nameWithType: TtsEngineSsml.Speak
