### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "Fornisce informazioni su un&quot;espressione regolare che viene utilizzata per compilare un&quot;espressione regolare in un assembly autonomo."
  remarks: "Una matrice di oggetti RegexCompilationInfo viene passata per il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>metodo per fornire informazioni su ogni espressione regolare da includere nell&quot;assembly.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Ogni espressione regolare compilata inclusa nell&quot;assembly è rappresentato come una classe derivata da <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> Le proprietà del tipo RegexCompilationInfo definiscono il nome di classe dell&quot;espressione regolare, il nome completo (ovvero, lo spazio dei nomi e il nome del tipo), il criterio di espressione regolare, eventuali opzioni aggiuntive (ad esempio, se l&quot;espressione regolare è tra maiuscole e minuscole) e un intervallo di timeout che specifica quanto tempo il motore delle espressioni regolari deve cercare una corrispondenza.       È possibile creare un&quot;istanza di un oggetto RegexCompilationInfo chiamando il costruttore di classe di overload."
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> classe che contiene informazioni su un&quot;espressione regolare da includere in un assembly."
  remarks: "Ogni parametro del costruttore RegexCompilationInfo corrisponde direttamente a una proprietà di <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe.</xref:System.Text.RegularExpressions.RegexCompilationInfo> Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.       Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>metodo genera un assembly che contiene le espressioni regolari compilate.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions>come uno dei valori di `options`.</xref:System.Text.RegularExpressions.RegexOptions>       Se `ispublic` è `true`, la classe di espressione regolare compilata viene fornita l&quot;accessibilità pubblica. Ovvero, può essere implementato dal codice eseguito in qualsiasi assembly. Se `ispublic` è `false`, alla classe di espressione regolare compilata viene fornita `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Ovvero, può essere implementato solo da codice che viene eseguita nello stesso assembly come classe di espressione regolare."
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "L&quot;espressione regolare per la compilazione."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "Le opzioni di espressione regolare da utilizzare per compilare l&quot;espressione regolare."
    - id: name
      type: System.String
      description: "Il nome del tipo che rappresenta l&quot;espressione regolare compilata."
    - id: fullnamespace
      type: System.String
      description: "Lo spazio dei nomi a cui appartiene il nuovo tipo."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per rendere visibile pubblicamente; l&quot;espressione regolare compilata in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>è &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> classe che contiene informazioni su un&quot;espressione regolare con un valore di timeout specificato da includere in un assembly."
  remarks: "Ogni parametro del <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>costruttore direttamente corrisponde a una proprietà di <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe.</xref:System.Text.RegularExpressions.RegexCompilationInfo> </xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.       Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>metodo genera un assembly che contiene le espressioni regolari compilate.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions>come uno dei valori di `options`.</xref:System.Text.RegularExpressions.RegexOptions>       Se `ispublic` è `true`, la classe di espressione regolare compilata viene fornita l&quot;accessibilità pubblica. Ovvero, può essere implementato dal codice eseguito in qualsiasi assembly. Se `ispublic` è `false`, alla classe di espressione regolare compilata viene fornita `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Ovvero, può essere implementato solo da codice che viene eseguita nello stesso assembly come classe di espressione regolare.       Il `matchTimeout` parametro definisce l&quot;intervallo di timeout predefinito per l&quot;espressione regolare compilata. Questo valore rappresenta la quantità approssimativa di tempo che un oggetto di espressione regolare compilata eseguirà una singola operazione di corrispondenza prima di timeout dell&quot;operazione e il motore delle espressioni regolari genera un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>eccezione durante il controllo di intervallo successivo.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Per ulteriori informazioni sui valori di timeout, vedere il <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>proprietà.</xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>      > [!IMPORTANT] > È consigliabile impostare sempre un valore di timeout predefinito per un&quot;espressione regolare compilata. I consumer della libreria di espressioni regolari possono eseguire l&quot;override di tale valore di timeout passando un <xref:System.TimeSpan>valore che rappresenta il nuovo intervallo di timeout per l&quot;overload del costruttore.</xref:System.TimeSpan>"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "L&quot;espressione regolare per la compilazione."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "Le opzioni di espressione regolare da utilizzare per compilare l&quot;espressione regolare."
    - id: name
      type: System.String
      description: "Il nome del tipo che rappresenta l&quot;espressione regolare compilata."
    - id: fullnamespace
      type: System.String
      description: "Lo spazio dei nomi a cui appartiene il nuovo tipo."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per rendere visibile pubblicamente; l&quot;espressione regolare compilata in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: matchTimeout
      type: System.TimeSpan
      description: "L&quot;intervallo di timeout predefinito per l&quot;espressione regolare."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>è &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code>è negativo, zero o maggiore di circa 24 giorni."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta un valore che indica se l&quot;espressione regolare compilata ha visibilità pubblica."
  remarks: "Se la proprietà IsPublic `false`, la classe di espressione regolare definita dall&quot;istanza corrente è possibile creare istanze solo da codice che è in esecuzione nell&quot;assembly che contiene la classe. Tuttavia, poiché il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>metodo genera un assembly che contiene solo le espressioni regolari compilate e non consente di aggiungere altro codice, non è in genere per assegnare un valore di questa proprietà `false`.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;espressione regolare ha visibilità pubblica. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta l&quot;intervallo di timeout predefinito delle espressioni regolari."
  remarks: "La proprietà MatchTimeout definisce l&quot;intervallo di timeout predefinito per l&quot;espressione regolare compilata. Questo valore rappresenta la quantità approssimativa di tempo in cui un&quot;espressione regolare compilata verrà eseguita una singola operazione di corrispondenza prima di timeout dell&quot;operazione e il motore delle espressioni regolari genera un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>eccezione durante il controllo di intervallo successivo.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>      > [!IMPORTANT] > È consigliabile impostare sempre un valore di timeout predefinito per un&quot;espressione regolare compilata. I consumer della libreria di espressioni regolari possono eseguire l&quot;override di tale valore di timeout passando un <xref:System.TimeSpan>valore che rappresenta il nuovo intervallo di timeout per il costruttore di classe dell&quot;espressione regolare compilata.</xref:System.TimeSpan>       È possibile assegnare un valore di timeout predefinito per un <xref:System.Text.RegularExpressions.RegexCompilationInfo>oggetto in uno dei modi seguenti: - chiamando il <xref:System.AppDomain.SetData%2A?displayProperty=fullName>metodo e fornire la rappresentazione di stringa di un <xref:System.TimeSpan>valore per la proprietà &quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;.</xref:System.TimeSpan> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexCompilationInfo>      -Chiamando il <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>costruttore e fornendo un valore per il `matchTimeout` parametro.</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>      -Impostando il valore di questa proprietà.       Per impostare un intervallo di tempo ragionevole, considerare i fattori seguenti:-la lunghezza e complessità del modello di espressione regolare. Le espressioni regolari più lunga e più complesse richiedono più tempo rispetto a quelli più breve e semplice.      -Il carico di lavoro previsto. L&quot;elaborazione richiede più tempo nei sistemi con un utilizzo elevato della CPU e memoria."
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "L&quot;intervallo di tempo massimo predefinito che può trascorrere in un&quot;operazione di corrispondenza prima che un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>viene generata o &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; se i timeout sono disabilitati.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta il nome del tipo che rappresenta l&quot;espressione regolare compilata."
  remarks: "L&quot; <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe viene utilizzata per definire un&quot;espressione regolare compilata, rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> </xref:System.Text.RegularExpressions.RegexCompilationInfo> La proprietà Name definisce il nome della classe del tipo di espressione regolare e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>e le proprietà del nome definiscono il nome completo.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome del nuovo tipo."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di questa proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore di questa proprietà è una stringa vuota."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta lo spazio dei nomi a cui appartiene il nuovo tipo."
  remarks: "L&quot; <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe viene utilizzata per definire un&quot;espressione regolare compilata, rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> </xref:System.Text.RegularExpressions.RegexCompilationInfo> La proprietà Namespace definisce lo spazio dei nomi che contiene il tipo di espressione regolare compilata e il Namespace e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>insieme definiscono il nome completo.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Lo spazio dei nomi del nuovo tipo."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di questa proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta le opzioni da utilizzare quando si compila l&quot;espressione regolare."
  remarks: "Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>metodo genera un assembly che contiene le espressioni regolari compilate.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions>come uno dei valori di questa proprietà.</xref:System.Text.RegularExpressions.RegexOptions> Se è presente, il <xref:System.Text.RegularExpressions.RegexOptions>opzione viene ignorata.</xref:System.Text.RegularExpressions.RegexOptions>"
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "Combinazione bit per bit dei valori di enumerazione."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Ottiene o imposta l&quot;espressione regolare per la compilazione."
  remarks: "La proprietà di modello può contenere qualsiasi espressione regolare valida. Se il valore della proprietà Pattern non è un modello di espressione regolare sintatticamente corretto, la chiamata al <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>metodo genera un <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>"
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "L&quot;espressione regolare per la compilazione."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di questa proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
