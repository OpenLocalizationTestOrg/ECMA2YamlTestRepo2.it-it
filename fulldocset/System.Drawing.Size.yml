### YamlMime:ManagedReference
items:
- uid: System.Drawing.Size
  id: Size
  children:
  - System.Drawing.Size.#ctor(System.Drawing.Point)
  - System.Drawing.Size.#ctor(System.Int32,System.Int32)
  - System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  - System.Drawing.Size.Empty
  - System.Drawing.Size.Equals(System.Object)
  - System.Drawing.Size.GetHashCode
  - System.Drawing.Size.Height
  - System.Drawing.Size.IsEmpty
  - System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  - System.Drawing.Size.op_Implicit(System.Drawing.Size)
  - System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.Round(System.Drawing.SizeF)
  - System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.ToString
  - System.Drawing.Size.Truncate(System.Drawing.SizeF)
  - System.Drawing.Size.Width
  langs:
  - csharp
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
  type: Struct
  summary: "Archivia una coppia ordinata di interi, specificare un <> </> *> e <> </> *>."
  remarks: "La classe di dimensione viene utilizzata per specificare un&quot;altezza e larghezza tramite la <xref:System.Drawing.Rectangle.Size%2A>proprietà <xref:System.Drawing.Rectangle>, <xref:System.Drawing.RectangleF>, <xref:System.Drawing.Image>, <xref:System.Drawing.Icon>e altre classi di grafica.</xref:System.Drawing.Icon> </xref:System.Drawing.Image> </xref:System.Drawing.RectangleF> </xref:System.Drawing.Rectangle> </xref:System.Drawing.Rectangle.Size%2A> È possibile eseguire operazioni su una dimensione tramite gli operatori di overload, ad esempio <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>e <xref:System.Drawing.Size.op_Equality%2A>.</xref:System.Drawing.Size.op_Equality%2A> </xref:System.Drawing.Size.op_Subtraction%2A> </xref:System.Drawing.Size.op_Addition%2A> L&quot;unità per il <xref:System.Drawing.Size.Height%2A>e <xref:System.Drawing.Size.Width%2A>delle dimensioni della struttura dipendono le <xref:System.Drawing.Graphics.PageUnit%2A>e <xref:System.Drawing.Graphics.PageScale%2A>le impostazioni per il <xref:System.Drawing.Graphics>oggetto utilizzato per disegnare.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Size.Width%2A> </xref:System.Drawing.Size.Height%2A>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Size
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Size.#ctor(System.Drawing.Point)
  id: '#ctor(System.Drawing.Point)'
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Size(Point)
  nameWithType: Size.Size(Point)
  fullName: System.Drawing.Size.Size(Point)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dall&quot;oggetto specificato <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura."
  syntax:
    content: public Size (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "La <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura dalla quale inizializzare questa <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  overload: System.Drawing.Size.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Size(Int32,Int32)
  nameWithType: Size.Size(Int32,Int32)
  fullName: System.Drawing.Size.Size(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dalle dimensioni specificate."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Point.%23ctor%2A?displayProperty=fullName> and Size constructors and the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> enumeration. To run this example, paste this code into a Windows Form that contains a label named `Label1` and call the `IntializeLabel1` method in the form's constructor.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#7](~/add/codesnippet/csharp/m-system.drawing.size.sh_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#7](~/add/codesnippet/cpp/m-system.drawing.size.sh_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#7](~/add/codesnippet/visualbasic/m-system.drawing.size.sh_1.vb)]"
  syntax:
    content: public Size (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "Il componente larghezza del nuovo <xref href=&quot;System.Drawing.Size&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "Il componente dell&quot;altezza del nuovo <xref href=&quot;System.Drawing.Size&quot;> </xref>."
  overload: System.Drawing.Size.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  id: Add(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Add(Size,Size)
  nameWithType: Size.Add(Size,Size)
  fullName: System.Drawing.Size.Add(Size,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiunge la larghezza e altezza di una <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura per la larghezza e l&quot;altezza di un altro <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Add method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `AddSizes` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#11](~/add/codesnippet/visualbasic/m-system.drawing.size.ad_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#11](~/add/codesnippet/csharp/m-system.drawing.size.ad_1.cs)]"
  syntax:
    content: public static System.Drawing.Size Add (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il primo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura da aggiungere."
    - id: sz2
      type: System.Drawing.Size
      description: "Il secondo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura da aggiungere."
    return:
      type: System.Drawing.Size
      description: "Oggetto <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura che rappresenta il risultato dell&quot;operazione di aggiunta."
  overload: System.Drawing.Size.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  id: Ceiling(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Ceiling(SizeF)
  nameWithType: Size.Ceiling(SizeF)
  fullName: System.Drawing.Size.Ceiling(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte l&quot;oggetto specificato <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura in un <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura, arrotondando i valori del <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura da valori integer immediatamente superiori."
  syntax:
    content: public static System.Drawing.Size Ceiling (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: "La <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura da convertire."
    return:
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura converte questo metodo."
  overload: System.Drawing.Size.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Empty
  id: Empty
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Drawing.Size.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura con un <> </> *> e <> </> *> valore pari a 0."
  syntax:
    content: public static readonly System.Drawing.Size Empty;
    return:
      type: System.Drawing.Size
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Drawing.Size.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Verifica se l&quot;oggetto specificato è un <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura con le stesse dimensioni di questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Da testare.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> è un <xref href=&quot;System.Drawing.Size&quot;> </xref> e ha la stessa larghezza e altezza di questa <xref href=&quot;System.Drawing.Size&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Size
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Drawing.Size.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Restituisce un codice hash per questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: "È consigliabile evitare a seconda di GetHashCode per i valori univoci, come due <xref:System.Drawing.Size>oggetti con gli stessi valori per i relativi <xref:System.Drawing.Size.Width%2A>e <xref:System.Drawing.Size.Height%2A>proprietà possono restituire lo stesso codice hash.</xref:System.Drawing.Size.Height%2A> </xref:System.Drawing.Size.Width%2A> </xref:System.Drawing.Size> Questo comportamento potrebbe cambiare nelle versioni future."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Valore intero che specifica un valore hash per questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  overload: System.Drawing.Size.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Height
  id: Height
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Height
  nameWithType: Size.Height
  fullName: System.Drawing.Size.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta il componente verticale di questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: "L&quot;unità per l&quot;altezza e <xref:System.Drawing.Size.Width%2A>del <xref:System.Drawing.Size>struttura dipendono le <xref:System.Drawing.Graphics.PageUnit%2A>e <xref:System.Drawing.Graphics.PageScale%2A>le impostazioni per il <xref:System.Drawing.Graphics>oggetto utilizzato per disegnare.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Width%2A>"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "Il componente verticale di questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura, in genere misurata in pixel."
  overload: System.Drawing.Size.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Size
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Drawing.Size.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Test se questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dispone di larghezza e altezza pari a 0."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dispone di larghezza e altezza pari a 0; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Size.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  id: op_Addition(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Addition(Size,Size)
  nameWithType: Size.op_Addition(Size,Size)
  fullName: System.Drawing.Size.op_Addition(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiunge la larghezza e altezza di una <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura per la larghezza e l&quot;altezza di un altro <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example demonstrates the Addition operator. The example is designed to be used with Windows Forms. To run this example, paste it into a form that contains a button named `addButton` and associate the `addButton_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#4](~/add/codesnippet/csharp/m-system.drawing.size.op_2_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#4](~/add/codesnippet/cpp/m-system.drawing.size.op_2_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#4](~/add/codesnippet/visualbasic/m-system.drawing.size.op_2_1.vb)]"
  syntax:
    content: public static System.Drawing.Size op_Addition (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il primo <xref href=&quot;System.Drawing.Size&quot;> </xref> da aggiungere."
    - id: sz2
      type: System.Drawing.Size
      description: "Il secondo <xref href=&quot;System.Drawing.Size&quot;> </xref> da aggiungere."
    return:
      type: System.Drawing.Size
      description: "Oggetto <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura che rappresenta il risultato dell&quot;operazione di aggiunta."
  overload: System.Drawing.Size.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  id: op_Equality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Drawing.Size.op_Equality(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Verifica se due <xref href=&quot;System.Drawing.Size&quot;> </xref> strutture sono uguali."
  remarks: ''
  example:
  - "The following code example creates points and sizes by using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/m-system.drawing.size.op_0_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/m-system.drawing.size.op_0_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/m-system.drawing.size.op_0_1.vb)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura sul lato sinistro dell&quot;operatore di uguaglianza."
    - id: sz2
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura a destra dell&quot;operatore di uguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> sz1 </code> e <code> sz2 </code> uguale larghezza e altezza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Size.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  id: op_Explicit(System.Drawing.Size to System.Drawing.Point)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Drawing.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.Point op_Explicit (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "Da aggiungere."
    return:
      type: System.Drawing.Point
      description: "Da aggiungere."
  overload: System.Drawing.Size.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)
  id: op_Implicit(System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Implicit(Size)
  nameWithType: Size.op_Implicit(Size)
  fullName: System.Drawing.Size.op_Implicit(Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.SizeF op_Implicit (System.Drawing.Size p);
    parameters:
    - id: p
      type: System.Drawing.Size
      description: "Da aggiungere."
    return:
      type: System.Drawing.SizeF
      description: "Da aggiungere."
  overload: System.Drawing.Size.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  id: op_Inequality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Drawing.Size.op_Inequality(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Verifica se due <xref href=&quot;System.Drawing.Size&quot;> </xref> strutture sono diverse."
  syntax:
    content: public static bool op_Inequality (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura a sinistra dell&quot;operatore di disuguaglianza."
    - id: sz2
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura a destra dell&quot;operatore di disuguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> sz1 </code> e <code> sz2 </code> differiscono per larghezza o altezza; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>sz1</code> and <code>sz2</code> are equal."
  overload: System.Drawing.Size.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  id: op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Subtraction(Size,Size)
  nameWithType: Size.op_Subtraction(Size,Size)
  fullName: System.Drawing.Size.op_Subtraction(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sottrae la larghezza e altezza di una <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dalla larghezza e altezza di un altro <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example demonstrates the Subtraction operator. The example is designed to be used with Windows Forms. To run the example, paste it into a form that contains a button named `subtractionButton` and associate the `subtractButton_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#2](~/add/codesnippet/csharp/m-system.drawing.size.op_1_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#2](~/add/codesnippet/cpp/m-system.drawing.size.op_1_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#2](~/add/codesnippet/visualbasic/m-system.drawing.size.op_1_1.vb)]"
  syntax:
    content: public static System.Drawing.Size op_Subtraction (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura sul lato sinistro dell&quot;operatore di sottrazione."
    - id: sz2
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura sul lato destro dell&quot;operatore di sottrazione."
    return:
      type: System.Drawing.Size
      description: "Oggetto <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura che rappresenta il risultato dell&quot;operazione di sottrazione."
  overload: System.Drawing.Size.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Round(System.Drawing.SizeF)
  id: Round(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Round(SizeF)
  nameWithType: Size.Round(SizeF)
  fullName: System.Drawing.Size.Round(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte l&quot;oggetto specificato <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura in un <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura, arrotondando i valori della <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura ai valori integer più vicino."
  remarks: ''
  example:
  - "The following code example demonstrates how to use static Round and <xref:System.Drawing.Size.Truncate%2A> methods to convert a <xref:System.Drawing.SizeF> to a <xref:System.Drawing.Size>. This example is designed to be used with Windows Forms. To run this example, paste it into a form that contains two <xref:System.Windows.Forms.Label> objects named `Label1` and `Label2`, and then call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#5](~/add/codesnippet/csharp/m-system.drawing.size.ro_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#5](~/add/codesnippet/cpp/m-system.drawing.size.ro_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#5](~/add/codesnippet/visualbasic/m-system.drawing.size.ro_1.vb)]"
  syntax:
    content: public static System.Drawing.Size Round (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: "La <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura da convertire."
    return:
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura converte questo metodo."
  overload: System.Drawing.Size.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  id: Subtract(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Subtract(Size,Size)
  nameWithType: Size.Subtract(Size,Size)
  fullName: System.Drawing.Size.Subtract(Size,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sottrae la larghezza e altezza di una <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura dalla larghezza e altezza di un altro <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Subtract method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `SubtractSizes` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#12](~/add/codesnippet/visualbasic/m-system.drawing.size.su_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#12](~/add/codesnippet/csharp/m-system.drawing.size.su_1.cs)]"
  syntax:
    content: public static System.Drawing.Size Subtract (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura sul lato sinistro dell&quot;operatore di sottrazione."
    - id: sz2
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura sul lato destro dell&quot;operatore di sottrazione."
    return:
      type: System.Drawing.Size
      description: "Oggetto <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura che è il risultato dell&quot;operazione di sottrazione."
  overload: System.Drawing.Size.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.ToString
  id: ToString
  parent: System.Drawing.Size
  langs:
  - csharp
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Drawing.Size.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea una stringa leggibile che rappresenta questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Una stringa che rappresenta questo <xref href=&quot;System.Drawing.Size&quot;> </xref>."
  overload: System.Drawing.Size.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)
  id: Truncate(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Truncate(SizeF)
  nameWithType: Size.Truncate(SizeF)
  fullName: System.Drawing.Size.Truncate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte l&quot;oggetto specificato <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura in un <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura troncando i valori del <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura ai valori integer inferiore successivi."
  remarks: ''
  example:
  - "The following code example demonstrates how to use static <xref:System.Drawing.Size.Round%2A> and Truncate methods to convert a <xref:System.Drawing.SizeF> to a <xref:System.Drawing.Size>. This example is designed to be used with Windows Forms. To run this example, paste it into a form that contains two <xref:System.Windows.Forms.Label> objects named `Label1` and `Label2`, and then call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#5](~/add/codesnippet/csharp/m-system.drawing.size.tr_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#5](~/add/codesnippet/cpp/m-system.drawing.size.tr_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#5](~/add/codesnippet/visualbasic/m-system.drawing.size.tr_1.vb)]"
  syntax:
    content: public static System.Drawing.Size Truncate (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: "La <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura da convertire."
    return:
      type: System.Drawing.Size
      description: "Il <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura converte questo metodo."
  overload: System.Drawing.Size.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Size.Width
  id: Width
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Width
  nameWithType: Size.Width
  fullName: System.Drawing.Size.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta il componente orizzontale di questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura."
  remarks: "L&quot;unità per il <xref:System.Drawing.Size.Height%2A>e alla larghezza del <xref:System.Drawing.Size>struttura dipendono le <xref:System.Drawing.Graphics.PageUnit%2A>e <xref:System.Drawing.Graphics.PageScale%2A>le impostazioni per il <xref:System.Drawing.Graphics>oggetto utilizzato per disegnare.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Height%2A>"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "Il componente orizzontale di questo <xref href=&quot;System.Drawing.Size&quot;> </xref> struttura, in genere misurata in pixel."
  overload: System.Drawing.Size.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Size.#ctor(System.Drawing.Point)
  parent: System.Drawing.Size
  isExternal: false
  name: Size(Point)
  nameWithType: Size.Size(Point)
  fullName: System.Drawing.Size.Size(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.Size
  isExternal: false
  name: Size(Int32,Int32)
  nameWithType: Size.Size(Int32,Int32)
  fullName: System.Drawing.Size.Size(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: Add(Size,Size)
  nameWithType: Size.Add(Size,Size)
  fullName: System.Drawing.Size.Add(Size,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Ceiling(SizeF)
  nameWithType: Size.Ceiling(SizeF)
  fullName: System.Drawing.Size.Ceiling(SizeF)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Size.Empty
  parent: System.Drawing.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Drawing.Size.Empty
- uid: System.Drawing.Size.Equals(System.Object)
  parent: System.Drawing.Size
  isExternal: false
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Drawing.Size.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Size.GetHashCode
  parent: System.Drawing.Size
  isExternal: false
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Drawing.Size.GetHashCode()
- uid: System.Drawing.Size.Height
  parent: System.Drawing.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
  fullName: System.Drawing.Size.Height
- uid: System.Drawing.Size.IsEmpty
  parent: System.Drawing.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Drawing.Size.IsEmpty
- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Addition(Size,Size)
  nameWithType: Size.op_Addition(Size,Size)
  fullName: System.Drawing.Size.op_Addition(Size,Size)
- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Drawing.Size.op_Equality(Size,Size)
- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Drawing.Size.op_Explicit(Size)
- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Implicit(Size)
  nameWithType: Size.op_Implicit(Size)
  fullName: System.Drawing.Size.op_Implicit(Size)
- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Drawing.Size.op_Inequality(Size,Size)
- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Subtraction(Size,Size)
  nameWithType: Size.op_Subtraction(Size,Size)
  fullName: System.Drawing.Size.op_Subtraction(Size,Size)
- uid: System.Drawing.Size.Round(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Round(SizeF)
  nameWithType: Size.Round(SizeF)
  fullName: System.Drawing.Size.Round(SizeF)
- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: Subtract(Size,Size)
  nameWithType: Size.Subtract(Size,Size)
  fullName: System.Drawing.Size.Subtract(Size,Size)
- uid: System.Drawing.Size.ToString
  parent: System.Drawing.Size
  isExternal: false
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Drawing.Size.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Truncate(SizeF)
  nameWithType: Size.Truncate(SizeF)
  fullName: System.Drawing.Size.Truncate(SizeF)
- uid: System.Drawing.Size.Width
  parent: System.Drawing.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
  fullName: System.Drawing.Size.Width
- uid: System.Drawing.Size.#ctor*
  parent: System.Drawing.Size
  isExternal: false
  name: Size
  nameWithType: Size.Size
- uid: System.Drawing.Size.Add*
  parent: System.Drawing.Size
  isExternal: false
  name: Add
  nameWithType: Size.Add
- uid: System.Drawing.Size.Ceiling*
  parent: System.Drawing.Size
  isExternal: false
  name: Ceiling
  nameWithType: Size.Ceiling
- uid: System.Drawing.Size.Equals*
  parent: System.Drawing.Size
  isExternal: false
  name: Equals
  nameWithType: Size.Equals
- uid: System.Drawing.Size.GetHashCode*
  parent: System.Drawing.Size
  isExternal: false
  name: GetHashCode
  nameWithType: Size.GetHashCode
- uid: System.Drawing.Size.Height*
  parent: System.Drawing.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
- uid: System.Drawing.Size.IsEmpty*
  parent: System.Drawing.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
- uid: System.Drawing.Size.op_Addition*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Addition
  nameWithType: Size.op_Addition
- uid: System.Drawing.Size.op_Equality*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Equality
  nameWithType: Size.op_Equality
- uid: System.Drawing.Size.op_Explicit*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Explicit
  nameWithType: Size.op_Explicit
- uid: System.Drawing.Size.op_Implicit*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Implicit
  nameWithType: Size.op_Implicit
- uid: System.Drawing.Size.op_Inequality*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Inequality
  nameWithType: Size.op_Inequality
- uid: System.Drawing.Size.op_Subtraction*
  parent: System.Drawing.Size
  isExternal: false
  name: op_Subtraction
  nameWithType: Size.op_Subtraction
- uid: System.Drawing.Size.Round*
  parent: System.Drawing.Size
  isExternal: false
  name: Round
  nameWithType: Size.Round
- uid: System.Drawing.Size.Subtract*
  parent: System.Drawing.Size
  isExternal: false
  name: Subtract
  nameWithType: Size.Subtract
- uid: System.Drawing.Size.ToString*
  parent: System.Drawing.Size
  isExternal: false
  name: ToString
  nameWithType: Size.ToString
- uid: System.Drawing.Size.Truncate*
  parent: System.Drawing.Size
  isExternal: false
  name: Truncate
  nameWithType: Size.Truncate
- uid: System.Drawing.Size.Width*
  parent: System.Drawing.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
