### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  id: MultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: MultiTargetingSupportService
  nameWithType: MultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  type: Class
  summary: "Rappresenta una classe astratta per la funzionalità di multitargeting supporta il servizio."
  syntax:
    content: 'public abstract class MultiTargetingSupportService : System.Activities.Presentation.Hosting.IMultiTargetingSupportService'
  inheritance:
  - System.Object
  implements:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: MultiTargetingSupportService()
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService()
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.MultiTargetingSupportService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.Presentation.Hosting.MultiTargetingSupportService&quot;> </xref> classe."
  syntax:
    content: protected MultiTargetingSupportService ();
    parameters: []
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Ottiene l&quot;assembly di reflection, dato un nome di assembly."
  syntax:
    content: public abstract System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "Il nome dell&quot;assembly di destinazione."
    return:
      type: System.Reflection.Assembly
      description: "L&quot;assembly di reflection, se è stato possibile risolto il nome di assembly di destinazione."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: MultiTargetingSupportService.GetReflectionType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Ottiene la consentono di tipo reflection un tipo di oggetto."
  syntax:
    content: public abstract Type GetReflectionType (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Il tipo di oggetto."
    return:
      type: System.Type
      description: "Il tipo di reflection."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: MultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Ottiene il tipo di runtime, dato un tipo di reflection."
  syntax:
    content: public abstract Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "Il tipo di reflection."
    return:
      type: System.Type
      description: "Il tipo di runtime associato al tipo di reflection."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: MultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Controlla se un determinato tipo è supportato da .NET framework di destinazione."
  syntax:
    content: public abstract bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo da controllare."
    return:
      type: System.Boolean
      description: "Il tipo specificato è supportato da .NET framework di destinazione."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: MultiTargetingSupportService()
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService()
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.MultiTargetingSupportService()
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: MultiTargetingSupportService.GetReflectionType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: MultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: MultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: MultiTargetingSupportService
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionType
  nameWithType: MultiTargetingSupportService.GetReflectionType
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: MultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: MultiTargetingSupportService.IsSupportedType
