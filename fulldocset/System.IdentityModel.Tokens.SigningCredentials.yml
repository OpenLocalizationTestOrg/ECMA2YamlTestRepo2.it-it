### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "Rappresenta la chiave e sicurezza gli algoritmi di crittografia che consentono di generare una firma digitale."
  remarks: "Utilizzare la classe SigningCredentials per specificare la chiave di firma dell&quot;identificatore di chiave di firma e gli algoritmi di sicurezza utilizzate da [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] per generare la firma digitale per un <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion> Per impostare i dettagli della firma digitale, impostare la <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>proprietà di <xref:System.IdentityModel.Tokens.SamlAssertion>classe.</xref:System.IdentityModel.Tokens.SamlAssertion> </xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> classe."
  remarks: "Utilizzare la <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe per specificare il `signatureAlgorithm` e `digestAlgorithm` parametri.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> La <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe contiene un set di stringhe statiche costanti che rappresentano algoritmi di crittografia.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> I membri che hanno un `Signature` suffisso può essere utilizzato per specificare il `signatureAlgoritm` parametro e i membri che hanno un `Digest` suffisso può essere utilizzato per specificare il `digestAlgorithm` parametro."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> che contiene la chiave di crittografia utilizzato per generare la firma digitale."
    - id: signatureAlgorithm
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per generare la firma digitale."
    - id: digestAlgorithm
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per calcolare il digest per la parte del messaggio SOAP che deve essere firmata digitalmente."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> classe."
  remarks: "Utilizzare la <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe per specificare il `signatureAlgorithm` e `digestAlgorithm` parametri.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> La <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe contiene un set di stringhe statiche costanti che rappresentano algoritmi di crittografia.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> I membri che hanno un `Signature` suffisso può essere utilizzato per specificare il `signatureAlgoritm` parametro e i membri che hanno un `Digest` suffisso può essere utilizzato per specificare il `digestAlgorithm` parametro."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> che contiene la chiave di crittografia utilizzato per generare la firma digitale."
    - id: signatureAlgorithm
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per generare la firma digitale."
    - id: digestAlgorithm
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per calcolare il digest per la parte del messaggio SOAP che deve essere firmata digitalmente."
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che specifica l&quot;identificatore che rappresenta la chiave utilizzata per creare una firma digitale."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene l&quot;algoritmo di crittografia utilizzato per calcolare il digest per la parte del messaggio SOAP che deve essere firmata digitalmente."
  remarks: "Per impostare la proprietà DigestAlgorithm, utilizzare uno dei costruttori che accettano un `digestAlgorithm` parametro."
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per calcolare il digest per la parte del messaggio SOAP che deve essere firmata digitalmente."
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene l&quot;algoritmo di crittografia utilizzato per generare la firma digitale."
  remarks: "Per impostare la proprietà SignatureAlgorithm, utilizzare uno dei costruttori che accettano un `signatureAlgorithm` parametro."
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "URI che rappresenta l&quot;algoritmo di crittografia utilizzato per generare la firma digitale."
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene la chiave di crittografia utilizzato per generare la firma digitale."
  remarks: "Per impostare la proprietà SigningKey, utilizzare un costruttore che accetta un `signingKey` parametro."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> che contiene la chiave di crittografia utilizzato per generare la firma digitale."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene l&quot;identificatore che rappresenta la chiave utilizzata per creare una firma digitale."
  remarks: "Per impostare la proprietà SigningKeyIdentifier, utilizzare il costruttore che accetta un `signingKeyIdentifier` parametro."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che specifica l&quot;identificatore che rappresenta la chiave utilizzata per creare una firma digitale."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
