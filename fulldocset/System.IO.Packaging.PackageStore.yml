### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageStore
  id: PackageStore
  children:
  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  langs:
  - csharp
  name: PackageStore
  nameWithType: PackageStore
  fullName: System.IO.Packaging.PackageStore
  type: Class
  summary: "Rappresenta una raccolta di specifiche dell&quot;applicazione <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> istanze utilizzate in combinazione con <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
  remarks: "Il PackageStore definisce un insiemi di riferimento del pacchetto aperto e attivo nell&quot;applicazione.  Aggiungere il PackageStore i pacchetti sono accessibili è il loro valore URI chiave.  La PackageStore supporta tre usi comuni: 1.  L&quot;accesso ai <xref:System.IO.Packaging.PackagePart>dati tramite <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart>      2.  L&quot;applicazione ottiene un&quot;istanza di un <xref:System.IO.Packaging.Package>base URI del pacchetto.</xref:System.IO.Packaging.Package>      3.  Accesso ai pacchetti che vengono creati e archiviati in un <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream>       Per migliorare le prestazioni e ridurre al minimo il sovraccarico di operazioni di apertura o chiusura di file ripetute, il PackageStore viene utilizzato per gestire le istanze dei pacchetti a cui accede <xref:System.IO.Packaging.PackWebRequest>e direttamente dall&quot;applicazione.</xref:System.IO.Packaging.PackWebRequest>  Quando l&quot;accesso ai dati in un pacchetto, la <xref:System.IO.Packaging.Package>indirizzo di un oggetto richiesto <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A>viene dapprima controllata per verificare se il pacchetto è già definito e aperto nel PackageStore.</xref:System.IO.Packaging.PackagePart.Uri%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  Se il pacchetto è definito come aperto nel PackageStore, parti richieste è possibile accedere direttamente senza più volte di apertura e chiusura del pacchetto per ogni richiesta.       Se l&quot;applicazione apre un pacchetto con <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A>può essere chiamato per aggiungere il pacchetto di PackageStore.</xref:System.IO.Packaging.PackageStore.AddPackage%2A> </xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>deve essere chiamato in un secondo momento per rimuovere il pacchetto di PackageStore prima di chiamare <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.</xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName></xref:System.IO.Packaging.PackageStore.RemovePackage%2A>       Pacchetti XPS aperti con un <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>costruttore vengono automaticamente aggiunti e rimossi dal PackageStore quando il documento viene creato o eliminato.</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>  (Non è necessario chiamare <xref:System.IO.Packaging.PackageStore.AddPackage%2A>o <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>separatamente per i pacchetti XPS aperti con <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>costruttori.)</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> </xref:System.IO.Packaging.PackageStore.RemovePackage%2A> </xref:System.IO.Packaging.PackageStore.AddPackage%2A>       Le autorizzazioni dei / o file di un pacchetto a cui si accede tramite il PackageStore rimane lo stesso come le autorizzazioni dei / o impostati nel pacchetto quando viene aperto.  Il PackageStore fornisce solo i riferimenti ai pacchetti che sono stati aggiunti nell&quot;archivio.  È compito dell&quot;applicazione per aprire, aggiornare e chiudere ciascun pacchetto correttamente.       Aggiungere il PackageStore pacchetti è possibile accedere in ambienti a thread multipli quando vengono utilizzati in combinazione con un [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser, ad esempio <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>  Quando si opera in un ambiente con multithreading, l&quot;applicazione deve bloccare il pacchetto prima dell&quot;accesso."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public static class PackageStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  id: AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Aggiunge un <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> nell&quot;archivio."
  remarks: "`packageUri`definisce la chiave del pacchetto URI che viene confrontato quando si chiama <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest>       Se la `packageUri` corrispondente <xref:System.IO.Packaging.PackagePart.Uri%2A>per una <xref:System.IO.Packaging.PackagePart>in una <xref:System.IO.Packaging.PackWebRequest>chiamata, il pacchetto definito in <xref:System.IO.Packaging.PackageStore>viene utilizzata per accedere la parte richiesta.</xref:System.IO.Packaging.PackageStore> </xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       Se il `packageUri` non corrisponde a <xref:System.IO.Packaging.PackagePart.Uri%2A>una <xref:System.IO.Packaging.PackagePart>in una <xref:System.IO.Packaging.PackWebRequest>chiamata, il pacchetto con l&quot;URI specificato viene utilizzato per accedere la parte richiesta.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       **Nota sulla sicurezza** questo metodo richiede <xref:System.Security.Permissions.EnvironmentPermission>personalizzato tutti <xref:System.IO.Packaging.Package>(non -<xref:System.IO.Packaging.ZipPackage>) tipi.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the AddPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]"
  syntax:
    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);
    parameters:
    - id: uri
      type: System.Uri
      description: "La chiave [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] del `package` da confrontare un <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
    - id: package
      type: System.IO.Packaging.Package
      description: "Il pacchetto da aggiungere all&quot;archivio."
  overload: System.IO.Packaging.PackageStore.AddPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>è un pacchetto non valido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Un pacchetto con l&quot;oggetto specificato <code> packageUri </code> è già presente nell&quot;archivio."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  id: GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Restituisce la <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> con un oggetto specificato [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] dall&quot;archivio."
  remarks: "`packageUri`viene confrontato con l&quot;URI specificato nella <xref:System.IO.Packaging.PackageStore.AddPackage%2A>chiamata al metodo.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Nota sulla sicurezza** questo metodo richiede <xref:System.Security.Permissions.EnvironmentPermission>personalizzato tutti <xref:System.IO.Packaging.Package>(non -<xref:System.IO.Packaging.ZipPackage>) tipi.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the GetPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]"
  syntax:
    content: public static System.IO.Packaging.Package GetPackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] del pacchetto da restituire."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto con un oggetto specificato <code> packageUri </code>; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se un pacchetto con l&quot;oggetto specificato <code> packageUri </code> non è presente nell&quot;archivio."
  overload: System.IO.Packaging.PackageStore.GetPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>è un pacchetto non valido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  id: RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Rimuove il <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> con un oggetto specificato [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] dall&quot;archivio."
  remarks: "`packageUri`viene confrontato con l&quot;URI specificato nella <xref:System.IO.Packaging.PackageStore.AddPackage%2A>chiamata al metodo.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Nota sulla sicurezza** questo metodo richiede <xref:System.Security.Permissions.EnvironmentPermission>personalizzato tutti <xref:System.IO.Packaging.Package>(non -<xref:System.IO.Packaging.ZipPackage>) tipi.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the RemovePackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]"
  syntax:
    content: public static void RemovePackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] del pacchetto da rimuovere."
  overload: System.IO.Packaging.PackageStore.RemovePackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>è un pacchetto non valido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
- uid: System.IO.Packaging.PackageStore.AddPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage
  nameWithType: PackageStore.AddPackage
- uid: System.IO.Packaging.PackageStore.GetPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage
  nameWithType: PackageStore.GetPackage
- uid: System.IO.Packaging.PackageStore.RemovePackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage
  nameWithType: PackageStore.RemovePackage
