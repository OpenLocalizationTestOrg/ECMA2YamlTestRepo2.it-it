### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.PropertyValueCollection
  id: PropertyValueCollection
  children:
  - System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  - System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  - System.DirectoryServices.PropertyValueCollection.OnClearComplete
  - System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.DirectoryServices.PropertyValueCollection.PropertyName
  - System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Value
  langs:
  - csharp
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
  type: Class
  summary: "Contiene i valori di un <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> proprietà."
  syntax:
    content: 'public class PropertyValueCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto alla raccolta."
  syntax:
    content: public int Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto da aggiungere alla raccolta."
    return:
      type: System.Int32
      description: "L&quot;indice in base zero di <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto che viene aggiunto a questa raccolta."
  overload: System.DirectoryServices.PropertyValueCollection.Add*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Si è verificato un errore durante la chiamata all&quot;interfaccia sottostante."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  id: AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Aggiunge il contenuto di <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto alla raccolta."
  syntax:
    content: public void AddRange (System.DirectoryServices.PropertyValueCollection value);
    parameters:
    - id: value
      type: System.DirectoryServices.PropertyValueCollection
      description: "Oggetto <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto che contiene gli oggetti da aggiungere a questa raccolta."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Accoda il contenuto dell&quot;oggetto specificato <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto alla raccolta."
  syntax:
    content: public void AddRange (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "Il <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> matrice che contiene gli oggetti da aggiungere a questa raccolta."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto è incluso nella raccolta."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto da cercare nella raccolta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà specificata appartiene alla raccolta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.PropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Copia tutti <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetti della raccolta nella matrice specificata, a partire dall&quot;indice specificato nella matrice di destinazione."
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: "Matrice di <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> gli oggetti che riceve gli elementi della raccolta."
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` in cui questo metodo avvia la copia di questa raccolta."
  overload: System.DirectoryServices.PropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Recupera l&quot;indice di un valore della proprietà specificata in questa raccolta."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore della proprietà da trovare."
    return:
      type: System.Int32
      description: "Indice in base zero del valore della proprietà specificato. Se l&quot;oggetto non viene trovato, il valore restituito è -1."
  overload: System.DirectoryServices.PropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inserisce un valore della proprietà in questa raccolta in corrispondenza dell&quot;indice specificato."
  syntax:
    content: public void Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero in corrispondenza del quale inserire il valore della proprietà."
    - id: value
      type: System.Object
      description: "Il valore della proprietà da inserire."
  overload: System.DirectoryServices.PropertyValueCollection.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Si è verificato un errore durante la chiamata all&quot;interfaccia sottostante."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice è minore di 0 (zero) o maggiore della dimensione della raccolta."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta il valore della proprietà che si trova in corrispondenza dell&quot;indice specificato della raccolta."
  remarks: "In c#, questa proprietà è l&quot;indicizzatore per la <xref:System.DirectoryServices.PropertyValueCollection>classe.</xref:System.DirectoryServices.PropertyValueCollection>       In JScript è possibile utilizzare le proprietà predefinite indicizzate definite da un tipo, ma non è possibile definire in modo esplicito la propria. Tuttavia, specificando che l&quot;attributo expando in una classe fornisce automaticamente una predefinita indicizzata proprietà il cui tipo di oggetto e il cui tipo di indice è <xref:System.String>.</xref:System.String>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero del valore della proprietà."
    return:
      type: System.Object
      description: "Il valore della proprietà in corrispondenza dell&quot;indice specificato."
  overload: System.DirectoryServices.PropertyValueCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice è minore di zero (0) o maggiore rispetto alla dimensione della raccolta."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  id: OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue l&quot;override di <xref:System.Collections.CollectionBase.OnClearComplete*>metodo.</xref:System.Collections.CollectionBase.OnClearComplete*>"
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue l&quot;override di <xref:System.Collections.CollectionBase.OnInsertComplete*>metodo.</xref:System.Collections.CollectionBase.OnInsertComplete*>"
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero in corrispondenza del quale inserire `value`."
    - id: value
      type: System.Object
      description: "Il nuovo valore dell&quot;elemento in `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue l&quot;override di <xref:System.Collections.CollectionBase.OnRemoveComplete*>metodo.</xref:System.Collections.CollectionBase.OnRemoveComplete*>"
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero in corrispondenza del quale è possibile trovare valore."
    - id: value
      type: System.Object
      description: "Il valore dell&quot;elemento da rimuovere da `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue l&quot;override di &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; metodo."
  syntax:
    content: protected override void OnSetComplete (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero in corrispondenza del quale `oldValue` sono disponibili."
    - id: oldValue
      type: System.Object
      description: "Il valore da sostituire con `newValue`."
    - id: newValue
      type: System.Object
      description: "Il nuovo valore dell&quot;elemento in `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  id: PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene il nome della proprietà per gli attributi dell&quot;insieme di valore."
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "Una stringa che contiene il nome della proprietà con i valori inclusi in questo <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> oggetto."
  overload: System.DirectoryServices.PropertyValueCollection.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Rimuove un valore della proprietà specificata da questa raccolta."
  remarks: "Quando si lavora con un valore di proprietà stringa multivalore, il metodo Remove rimuoverà correttamente l&quot;elemento corretto. Tuttavia, che identifica gli elementi corretti in base al nome è difficile con un valore della proprietà multivalore DNWithString (come la classe DNWithString COM, che viene utilizzata per archiviare gli elementi DNWithString, dispone di proprietà della stringa che rappresenta l&quot;elemento 2). Il modo per rimuovere tali elementi è individuare l&quot;oggetto nella raccolta (ciclo attraverso tutti gli elementi), quindi chiamare la funzione di eliminazione con il puntatore dell&quot;oggetto che è stato trovato.  Come illustrato nell&quot;esempio seguente."
  example:
  - "```c#  \n  \n// Bind to the AD object  \nDirectoryEntry myUser = new DirectoryEntry(\"LDAP://AdServer:389/CN=MyUsername,CN=Users,DC=contoso,DC=com\");  \n  \n// Get the attribute  \nPropertyValueCollection testAttribute = myUser.Properties[\"someAttribute\"];  \n  \n// Find the item in the collection that we want to delete  \nDNWithString dnwsItemToRemove = null;  \nforeach (DNWithString dnwsItem in testAttribute)  \n{  \n    if (dnwsItem.StringValue.Equals(\"SomeValue\"))  \n    {  \n        dnwsItemToRemove = dnwsItem;  \n        break;  \n    }  \n}  \n  \n// Delete it  \ntestAttribute.Remove(dnwsItemToRemove);  \n  \n// Store the data  \nmyUser.CommitChanges();  \n```"
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore della proprietà da rimuovere."
  overload: System.DirectoryServices.PropertyValueCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Si è verificato un errore durante la chiamata all&quot;interfaccia sottostante."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Value
  id: Value
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta i valori della raccolta."
  remarks: "Per aggiungere più valori, impostare questa proprietà su una matrice dei valori."
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "Se la raccolta è vuota, il valore della proprietà è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic). Se la raccolta contiene un valore, il valore della proprietà è tale valore. Se la raccolta contiene più valori, il valore della proprietà è uguale a una copia di una matrice di tali valori.       Se si imposta questa proprietà, vengono aggiunti uno o più valori per il <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref>. Impostando questa proprietà su un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>) Cancella la raccolta."
  overload: System.DirectoryServices.PropertyValueCollection.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
- uid: System.DirectoryServices.PropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Value
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
- uid: System.DirectoryServices.PropertyValueCollection.Add*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add
  nameWithType: PropertyValueCollection.Add
- uid: System.DirectoryServices.PropertyValueCollection.AddRange*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange
  nameWithType: PropertyValueCollection.AddRange
- uid: System.DirectoryServices.PropertyValueCollection.Contains*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyValueCollection.Contains
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyValueCollection.CopyTo
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyValueCollection.IndexOf
- uid: System.DirectoryServices.PropertyValueCollection.Insert*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyValueCollection.Insert
- uid: System.DirectoryServices.PropertyValueCollection.Item*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: PropertyValueCollection.Item
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: PropertyValueCollection.OnClearComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: PropertyValueCollection.OnInsertComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: PropertyValueCollection.OnRemoveComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete
  nameWithType: PropertyValueCollection.OnSetComplete
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
- uid: System.DirectoryServices.PropertyValueCollection.Remove*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyValueCollection.Remove
- uid: System.DirectoryServices.PropertyValueCollection.Value*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
