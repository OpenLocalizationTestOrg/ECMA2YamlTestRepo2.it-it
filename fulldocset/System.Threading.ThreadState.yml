### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "Specifica gli stati di esecuzione di un <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "L&quot;enumerazione ThreadState è di particolare interesse solo in alcuni scenari di debug. Il codice non deve mai usare lo stato del thread per sincronizzare le attività dei thread.       ThreadState definisce un set di tutti gli stati di esecuzione per i thread. Una volta creato un thread, è in almeno uno degli stati finché viene interrotto. Thread creati all&quot;interno di common language runtime sono inizialmente nel `Unstarted` stato, mentre i thread esterni che vengono immessi in fase di esecuzione sono già presenti nel `Running` dello stato. Un `Unstarted` thread viene modificato nel `Running` stato chiamando <xref:System.Threading.Thread.Start%2A>.</xref:System.Threading.Thread.Start%2A> Non tutte le combinazioni di `ThreadState` i valori sono validi; ad esempio, un thread non può essere sia di `Aborted` e `Unstarted` stati.      > [!IMPORTANT] > Esistono enumerazioni per lo stato di due thread, ThreadState e <xref:System.Diagnostics.ThreadState?displayProperty=fullName>.</xref:System.Diagnostics.ThreadState?displayProperty=fullName>       Nella tabella seguente sono riportate le azioni che causano una modifica dello stato.      | Azione | ThreadState |   |------------|-----------------|   | Viene creato un thread all&quot;interno di common language runtime. | Non ancora iniziate |   | Un altro thread chiama il <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>metodo nel nuovo thread e la chiamata restituisce.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName><br /><br /> Il <xref:System.Threading.Thread.Start%2A>metodo non restituisce fino all&quot;avvio del nuovo thread in esecuzione.</xref:System.Threading.Thread.Start%2A> Non è possibile sapere in quale punto verrà avviato il nuovo thread in esecuzione, durante la chiamata a <xref:System.Threading.Thread.Start%2A>. | Esecuzione |   | Il thread chiama <xref:System.Threading.Thread.Sleep%2A>| WaitSleepJoin |   | Il thread chiama <xref:System.Threading.Monitor.Wait%2A>su un altro oggetto. | WaitSleepJoin |   | Il thread chiama <xref:System.Threading.Thread.Join%2A>in un altro thread. | WaitSleepJoin |   | Un altro thread chiama <xref:System.Threading.Thread.Interrupt%2A>| Esecuzione |   | Un altro thread chiama <xref:System.Threading.Thread.Suspend%2A>| SuspendRequested |   | Il thread risponde a una richiesta di <xref:System.Threading.Thread.Suspend%2A>. | Sospeso |   | Un altro thread chiama <xref:System.Threading.Thread.Resume%2A>| Esecuzione |   | Un altro thread chiama <xref:System.Threading.Thread.Abort%2A>| AbortRequested |   | Il thread risponde a una richiesta di <xref:System.Threading.Thread.Abort%2A>. | Arrestato |   | Un thread viene interrotto. | Arrestato |       Oltre agli stati sopra riportati, è inoltre disponibile il `Background` stato che indica se il thread è in esecuzione in background o in primo piano.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Resume%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Interrupt%2A> </xref:System.Threading.Thread.Join%2A> </xref:System.Threading.Monitor.Wait%2A> </xref:System.Threading.Thread.Sleep%2A> </xref:System.Threading.Thread.Start%2A>       Un thread può essere più di uno stato in un determinato momento. Ad esempio, se un thread è bloccato in una chiamata a <xref:System.Threading.Monitor.Wait%2A>e un altro thread chiama <xref:System.Threading.Thread.Abort%2A>sul thread bloccato, sarà il thread bloccato in entrambe le `WaitSleepJoin` e `AbortRequested` stati nello stesso momento.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Monitor.Wait%2A> In questo caso, non appena il thread viene restituito dalla chiamata a <xref:System.Threading.Monitor.Wait%2A>o viene interrotta, verrà visualizzato il <xref:System.Threading.ThreadAbortException>per iniziare l&quot;interruzione.</xref:System.Threading.ThreadAbortException> </xref:System.Threading.Monitor.Wait%2A>       Il <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>proprietà di un thread fornisce lo stato corrente di un thread.</xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName> Applicazioni devono utilizzare una maschera di bit per determinare se un thread è in esecuzione. Poiché il valore di `Running` è zero (0), verificare se un thread è in esecuzione tramite codice c#, ad esempio `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` o Visual Basic (codice), ad esempio `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lo stato di thread include AbortRequested e il thread ora è inattivo, ma il relativo stato non è ancora stato modificato in arrestato."
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; metodo è stato richiamato sul thread, ma il thread non ha ancora ricevuto l&quot;in sospeso <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref> che tenterà di terminarla."
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il thread viene eseguito come un thread in background, anziché un thread in primo piano. Questo stato viene controllato impostando il &lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt; proprietà."
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il thread è stato avviato, non è bloccata ed è non in sospeso <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref>."
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il thread è stato arrestato."
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "È richiesta per arrestare il thread. Questo è solo per uso interno."
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il thread è stata sospesa."
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "È richiesta per sospendere il thread."
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; (metodo) non è stato richiamato sul thread."
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Il thread è bloccato. Potrebbe trattarsi del risultato della chiamata &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; o &lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;, della richiesta di un blocco, ad esempio, chiamando &lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt; o &lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; , o di attesa di un oggetto di sincronizzazione di thread, ad esempio <xref:System.Threading.ManualResetEvent>.</xref:System.Threading.ManualResetEvent>"
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
