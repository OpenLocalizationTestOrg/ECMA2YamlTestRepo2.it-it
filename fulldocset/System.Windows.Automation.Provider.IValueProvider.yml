### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IValueProvider
  id: IValueProvider
  children:
  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  - System.Windows.Automation.Provider.IValueProvider.Value
  langs:
  - csharp
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Windows.Automation.Provider.IValueProvider
  type: Interface
  summary: "Espone metodi e proprietà per supportare l&quot;accesso client di automazione interfaccia utente ai controlli che presentano un valore intrinseco che non si estende un intervallo e che può essere rappresentato come stringa."
  remarks: "Il valore del controllo può o non può essere modificato a seconda del controllo e le relative impostazioni.       Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.ValuePattern>pattern di controllo.</xref:System.Windows.Automation.ValuePattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IValueProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene un valore che specifica se il valore di un controllo è di sola lettura."
  remarks: "Un controllo deve essere relativo <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>impostato su `true` e il relativo <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty>impostato su `false` prima di consentire una chiamata a <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A> </xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> </xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be changed.  \n  \n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#isreadonly)]\n [!code-cs[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#isreadonly)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore è di sola lettura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se può essere modificato."
  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  id: SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Imposta il valore di un controllo."
  remarks: "Controlli di modifica a riga singola supportano l&quot;accesso a livello di codice in base al contenuto implementando <xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider> Tuttavia, i controlli di modifica multilinea non implementano <xref:System.Windows.Automation.Provider.IValueProvider>; invece forniscono l&quot;accesso ai contenuti implementando <xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider>       I controlli come <xref:System.Windows.Automation.ControlType.ListItem>e <xref:System.Windows.Automation.ControlType.TreeItem>deve implementare <xref:System.Windows.Automation.Provider.IValueProvider>Se il valore di uno qualsiasi degli elementi è modificabile, indipendentemente dal corrente modalità di modifica del controllo.</xref:System.Windows.Automation.Provider.IValueProvider> </xref:System.Windows.Automation.ControlType.TreeItem> </xref:System.Windows.Automation.ControlType.ListItem> Il controllo padre deve implementare anche <xref:System.Windows.Automation.Provider.IValueProvider>se gli elementi figlio sono modificabili.</xref:System.Windows.Automation.Provider.IValueProvider>       ![Elemento di elenco modificabile. ] (~/add/media/uia-valuepattern-editable-listitem.PNG &quot;Voce di elenco modificabile.&quot;)   Esempio di un elemento di elenco modificabile"
  example:
  - "The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \n  \n [!code-vb[UIAIValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#setvalue)]\n [!code-cs[UIAIValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#setvalue)]"
  syntax:
    content: public void SetValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "Il valore da impostare. Il provider è responsabile della conversione del valore per il tipo di dati appropriato."
  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Se le informazioni specifiche delle impostazioni locali viene passate a un controllo in un formato non corretto, ad esempio una data in formato non corretto."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se un nuovo valore non può essere convertito da una stringa in un formato riconosciuto dal controllo."
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "Quando viene effettuato un tentativo di modificare un controllo che non è abilitato."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore del controllo."
  remarks: "Controlli di modifica a riga singola supportano l&quot;accesso a livello di codice in base al contenuto implementando <xref:System.Windows.Automation.Provider.IValueProvider>(oltre a <xref:System.Windows.Automation.Provider.ITextProvider>).</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider> Tuttavia, i controlli di modifica su più righe non implementano <xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider>       Per recuperare il contenuto testuale di controlli di modifica multilinea, i controlli devono implementare <xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider> Tuttavia, <xref:System.Windows.Automation.Provider.ITextProvider>non supporta l&quot;impostazione del valore di un controllo.</xref:System.Windows.Automation.Provider.ITextProvider>       <xref:System.Windows.Automation.Provider.IValueProvider>non supporta il recupero di informazioni di formattazione o valori della sottostringa.</xref:System.Windows.Automation.Provider.IValueProvider> Implementare <xref:System.Windows.Automation.Provider.ITextProvider>in questi scenari.</xref:System.Windows.Automation.Provider.ITextProvider>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be retrieved.  \n  \n [!code-vb[UIAIValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#value)]\n [!code-cs[UIAIValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#value)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "Il valore del controllo sotto forma di stringa."
  overload: System.Windows.Automation.Provider.IValueProvider.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue
  nameWithType: IValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IValueProvider.Value*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
