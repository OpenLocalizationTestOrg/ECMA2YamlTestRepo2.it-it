### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "Contiene informazioni dettagliate generate dal riconoscimento vocale sull&quot;input riconosciuto."
  remarks: "Questa classe contiene informazioni dettagliate su parole e frasi elaborate durante le operazioni di riconoscimento vocale, inclusi i seguenti: - il <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>riferimenti alle proprietà di <xref:System.Speech.Recognition.Grammar>il riconoscimento viene utilizzato per identificare l&quot;input.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      -La <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>proprietà contiene il testo normalizzato per la frase.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      -La <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>le informazioni semantiche contenute nel risultato fa riferimento a proprietà.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Le informazioni semantiche sono un dizionario di dati semantici associati e i nomi delle chiavi.      -La <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>proprietà contiene una raccolta ordinata di <xref:System.Speech.Recognition.RecognizedWordUnit>riconosciuto di oggetti che rappresentano ogni parola nell&quot;input.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Ogni unità di word contiene formato di visualizzazione, il formato lessicale e informazioni di pronuncia per il termine corrispondente.      -La <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>proprietà contiene informazioni sulla sostituzione di word specializzato.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      -La <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>e <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>proprietà contengono informazioni sulle alternative di riconoscimento con la pronuncia identici o simile.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -Il valore di <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>proprietà indica il livello di certezza, assegnato dal riconoscimento vocale, che una frase riconosciuta corrisponde all&quot;input.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       Il riconoscimento vocale ha restituisce i risultati del riconoscimento in un <xref:System.Speech.Recognition.RecognitionResult>oggetto, che eredita da RecognizedPhrase.</xref:System.Speech.Recognition.RecognitionResult> Risultato del riconoscimento <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>proprietà contiene una raccolta ordinata di oggetti RecognizedPhrase, ognuno dei quali è una corrispondenza possibile per l&quot;input per il riconoscimento.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene un valore, assegnato dal riconoscimento, che rappresenta la probabilità che un <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> corrisponde a un input specificato."
  remarks: "Punteggi di confidenza indica la probabilità assoluta che è stata riconosciuta correttamente una frase. Al contrario, i punteggi di confidenza forniscono un meccanismo per il confronto tra la precisione relativa più alternative di riconoscimento per un input specificato. Ciò facilita la restituzione del risultato di riconoscimento più accurato. Ad esempio, se una frase riconosciuta ha un punteggio di confidenza pari a 0,8, ciò non significa che la frase è una probabilità 80% che la corrispondenza corretta per l&quot;input.  Significa che la frase è più probabile che sia la corrispondenza corretta per l&quot;input di altri risultati con confidenza punteggi minore 0,8.       Un punteggio di confidenza autonomamente non è significativo solo se si dispone di risultati alternativi per il confronto, la stessa operazione di riconoscimento o dal precedente riconoscimenti dell&quot;input stesso. I valori vengono utilizzati per classificare candidato alternativo frasi restituite dal <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>proprietà <xref:System.Speech.Recognition.RecognitionResult>oggetti.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       I valori di probabilità sono relativi e univoco per ogni motore di riconoscimento. I valori di confidenza restituiti da due motori di riconoscimento diversa non è possibile confrontare in modo significativo.       Un motore di riconoscimento vocale può assegnare un punteggio di confidenza basso input vocale per vari motivi, tra cui interferenze di sfondo, inarticulate vocale, o parole impreviste o le sequenze di word. Se l&quot;applicazione utilizza un <xref:System.Speech.Recognition.SpeechRecognitionEngine>istanza, è possibile modificare il livello di confidenza quali sintesi e riconoscimento vocale è è accettato o rifiutato con uno degli input di <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>metodi.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Le soglie di probabilità per il riconoscimento condiviso, gestito da <xref:System.Speech.Recognition.SpeechRecognizer>, sono associati a un profilo utente e archiviati nel Registro di sistema Windows.</xref:System.Speech.Recognition.SpeechRecognizer> Le applicazioni non scrivere le modifiche al Registro di sistema per le proprietà di riconoscimento condiviso.       Il <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>proprietà del <xref:System.Speech.Recognition.RecognitionResult>oggetto contiene una raccolta ordinata di <xref:System.Speech.Recognition.RecognizedPhrase>oggetti, ognuno dei quali è una corrispondenza possibile per l&quot;input per il riconoscimento.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> Alternative di vengono ordinate dal più alto al più basso confidenza."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "Una misura relativa della certezza del riconoscimento corretto di una frase. Il valore è compreso tra 0,0 e 1,0, per bassa a elevata attendibilità, rispettivamente."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Restituisce un documento di semantic markup language (SML) per le informazioni semantiche nel <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> oggetto."
  remarks: "Per informazioni sul linguaggio di markup semantico SML (), vedere il [riferimenti al linguaggio di Markup semantico](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "Restituisce una descrizione di SML la semantica del <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> come un [XPath](http://msdn.microsoft.com/library/ms256115.aspx) oggetto navigabile."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene il <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> che il riconoscimento vocale ha usato per restituire il <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "L&quot;oggetto grammatica che il riconoscimento vocale ha usato per identificare l&quot;input."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene l&quot;identificatore per il gruppo di omofoni per la frase."
  remarks: "Il riconoscimento vocale ha assegna un identificatore di gruppo per tutti le alternative di riconoscimento con la stessa pronuncia. Per ogni altro che ha una pronuncia univoca, il riconoscimento crea un gruppo di omofoni. Il riconoscimento vocale Genera nuovo gruppo di identificatori per ogni operazione di riconoscimento e gli identificatori non possono essere utilizzati per confrontare alternative da generati da operazioni di riconoscimento separato.       Per ottenere un risultato di riconoscimento che conteneva alternative di &quot;la tabella&quot;, &quot;tail&quot; e &quot;il ale&quot;, ad esempio, i primi due alternative potrebbero appartenere a un gruppo di omofoni e l&quot;ultima alternativa sarebbe il singolo membro di un secondo gruppo di omofoni."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "Identificatore per il gruppo di omofoni per la frase."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene una raccolta di alternative di riconoscimento con la stessa pronuncia della frase riconosciuta."
  remarks: "Questa proprietà restituisce tutte le altre alternative di riconoscimento con la stessa pronuncia della frase riconosciuta.       Ad esempio, per ottenere un risultato di riconoscimento che conteneva alternative di, &quot;la tabella&quot; e &quot;tail&quot;, l&quot;insieme di omofoni per la prima alternativa, &quot;la tabella&quot; contiene la seconda frase, &quot;tail&quot;. L&quot;insieme di omofoni per la seconda alternativa, &quot;tail&quot; contiene la frase &quot;la tabella&quot; primo."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "Raccolta di sola lettura delle alternative di riconoscimento che hanno la stessa pronuncia della frase riconosciuta."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene informazioni sul testo che il riconoscimento vocale ha modificato come parte del discorso-normalizzazione."
  remarks: "Come parte del processo di riconoscimento vocale, il riconoscimento vocale ha normalizzato l&quot;input riconosciuto in un formato di visualizzazione.       Ad esempio, l&quot;input vocale, &quot;25 dollari&quot;, genera un riconoscimento di risultati in cui il <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>proprietà contiene le parole &quot;20&quot;, &quot;5&quot; e &quot;dollari&quot; e <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>proprietà contiene la frase &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Per ulteriori informazioni sulla normalizzazione del testo, vedere la <xref:System.Speech.Recognition.ReplacementText>classe.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "Una raccolta di <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> gli oggetti che descrivono le sezioni di testo che il riconoscimento vocale ha sostituito quando ha normalizzato l&quot;input riconosciuto."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene le informazioni semantiche associata alla frase riconosciuta."
  remarks: "Una grammatica di riconoscimento vocale può includere informazioni di carattere semantico. Quando un riconoscimento vocale genera un risultato per questo tipo una grammatica, le informazioni semantiche potrebbero essere inclusi nel risultato del riconoscimento, secondo le regole della grammatica e l&quot;input per il riconoscimento. Per ulteriori informazioni sulla semantica, vedere [informazioni sui risultati di semantica](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) e <xref:System.Speech.Recognition.SemanticResultKey>e <xref:System.Speech.Recognition.SemanticResultValue>classi.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "Le informazioni semantiche associate alla frase riconosciuta."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene il testo normalizzato generato da un riconoscimento vocale dall&quot;input riconosciuto."
  remarks: "Come parte del processo di riconoscimento vocale, il riconoscimento vocale ha esegue la normalizzazione di riconoscimento vocale in testo di input riconosciuto in un formato di visualizzazione.       Ad esempio, l&quot;input vocale, &quot;25 dollari&quot;, genera un riconoscimento di risultati in cui il <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>proprietà contiene le parole &quot;20&quot;, &quot;5&quot; e &quot;dollari&quot; e la proprietà Text contiene la frase &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Per ulteriori informazioni sulla normalizzazione del testo, vedere <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "Il testo normalizzato generato da un riconoscimento vocale dall&quot;input riconosciuto."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene le parole generate da un riconoscimento vocale dall&quot;input riconosciuto."
  remarks: "Questa proprietà contiene le parole prodotte dall&quot;input dal riconoscimento vocale prima vocale-normalizzazione del riconoscimento del risultato.       Ad esempio, l&quot;input vocale, &quot;25 dollari&quot;, genera un riconoscimento di risultati in cui la proprietà parole contiene le parole &quot;20&quot;, &quot;5&quot; e &quot;dollari&quot;, e <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>proprietà contiene la frase &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> Per ulteriori informazioni sulla normalizzazione del testo, vedere <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "La raccolta di <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> oggetti generati da un riconoscimento vocale per l&quot;input riconosciuto."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
