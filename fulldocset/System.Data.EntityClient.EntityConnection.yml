### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnection
  id: EntityConnection
  children:
  - System.Data.EntityClient.EntityConnection.#ctor
  - System.Data.EntityClient.EntityConnection.#ctor(System.String)
  - System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  - System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.BeginTransaction
  - System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  - System.Data.EntityClient.EntityConnection.Close
  - System.Data.EntityClient.EntityConnection.ConnectionString
  - System.Data.EntityClient.EntityConnection.ConnectionTimeout
  - System.Data.EntityClient.EntityConnection.CreateCommand
  - System.Data.EntityClient.EntityConnection.CreateDbCommand
  - System.Data.EntityClient.EntityConnection.Database
  - System.Data.EntityClient.EntityConnection.DataSource
  - System.Data.EntityClient.EntityConnection.DbProviderFactory
  - System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  - System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  - System.Data.EntityClient.EntityConnection.Open
  - System.Data.EntityClient.EntityConnection.ServerVersion
  - System.Data.EntityClient.EntityConnection.State
  - System.Data.EntityClient.EntityConnection.StoreConnection
  langs:
  - csharp
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
  type: Class
  summary: "Contiene un riferimento a un modello concettuale e una connessione all&quot;origine dati. Questa classe non può essere ereditata."
  remarks: "Per evitare che oggetti quali <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, EntityConnection deve blocchi i propri metadati.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati:-l&quot;istanza di EntityConnection viene costruita mediante il costruttore predefinito oppure tramite il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>costruttore che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> In entrambi i casi, la stringa di connessione potrebbe essere modificata più volte prima dell&quot;apertura della connessione. La chiamata <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -L&quot;istanza di EntityConnection viene costruita mediante il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, EntityConnection verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.       Per esempi di codice, vedere [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: 'public sealed class EntityConnection : System.Data.Common.DbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> classe."
  remarks: "Per evitare che oggetti quali <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, <xref:System.Data.EntityClient.EntityConnection>blocchi i propri metadati.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati: - il <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore predefinito oppure tramite il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>costruttore che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> In entrambi i casi, la stringa di connessione potrebbe essere modificata più volte prima dell&quot;apertura della connessione. La chiamata <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -L&quot; <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, il <xref:System.Data.EntityClient.EntityConnection>verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.</xref:System.Data.EntityClient.EntityConnection>       Per esempi di codice, vedere [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> (classe), in base alla stringa di connessione."
  remarks: "Genera una stringa di connessione denominata che viene archiviata nel file di configurazione dell&quot;applicazione. Questa stringa di connessione denominata può essere fornita al posto di `connectionString` parametro quando si crea un&quot;istanza di <xref:System.Data.EntityClient.EntityConnection>classe.</xref:System.Data.EntityClient.EntityConnection>       Per evitare che oggetti <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, <xref:System.Data.EntityClient.EntityConnection>blocchi i propri metadati.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati: - il <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore predefinito oppure tramite il costruttore (EntityConnection), che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection> In entrambi i casi, la stringa di connessione potrebbe essere modificata più volte prima dell&quot;apertura della connessione. La chiamata <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -L&quot; <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, il <xref:System.Data.EntityClient.EntityConnection>verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.</xref:System.Data.EntityClient.EntityConnection>       Per esempi di codice, vedere [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "La stringa di connessione specifica del provider."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "È stata specificata una parola chiave della stringa di connessione non valido o non è stata specificata una parola chiave stringa di connessione necessarie."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> classe con un oggetto specificato <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> e <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Questo costruttore consente di creare un <xref:System.Data.EntityClient.EntityConnection>dai metadati non da un file su un disco o da una risorsa incorporata in un assembly.</xref:System.Data.EntityClient.EntityConnection>       Per evitare che oggetti quali <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, il <xref:System.Data.EntityClient.EntityConnection>blocchi i propri metadati.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati: - il <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore predefinito oppure tramite il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>costruttore che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> In entrambi i casi, la stringa di connessione potrebbe essere modificata più volte prima dell&quot;apertura della connessione. La chiamata <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -L&quot; <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> (EntityConnection),</xref:System.Data.EntityClient.EntityConnection> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, il <xref:System.Data.EntityClient.EntityConnection>verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);
    parameters:
    - id: workspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> da associare a questo <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connessione per questa origine dati sottostante <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> oggetto."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>workspace</code> or <code>connection</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il modello concettuale è mancano dall&quot;area di lavoro.       - oppure - mapping manca il file dall&quot;area di lavoro.       - oppure - il modello di archiviazione non è presente l&quot;area di lavoro.       - o - <code> connection </code> non è in uno stato chiuso."
  - type: System.Data.ProviderIncompatibleException
    commentId: T:System.Data.ProviderIncompatibleException
    description: "Il <code> connection </code> non proviene da un provider compatibile con ADO.NET Entity Framework."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Da aggiungere."
    return:
      type: System.Data.Common.DbTransaction
      description: "Da aggiungere."
  overload: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Avvia una transazione utilizzando il provider sottostante."
  remarks: "Il metodo BeginTransaction utilizza il <xref:System.Data.IsolationLevel>il livello di isolamento delle transazioni.</xref:System.Data.IsolationLevel> Per specificare un livello di isolamento diverso, chiamare <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Questo valore può essere interpretato in modo diverso da provider sottostanti differenti. Se si desidera che l&quot;applicazione per garantire la portabilità tra più provider, è necessario specificare in modo esplicito il livello di isolamento chiamando <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>       In un determinato momento può essere non più di una transazione attiva creata tramite BeginTransaction. Un tentativo di chiamare gli overload BeginTransaction un <xref:System.Data.EntityClient.EntityConnection>che già dispone di una transazione corrente restituirà un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. L&quot;oggetto restituito <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> istanza in un secondo momento può essere associata il <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> per eseguire il comando in tale transazione."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider sottostante non è noto.       - oppure - è stata effettuata la chiamata a BeginTransaction su un <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> che dispone già di una transazione corrente.       - oppure - lo stato del <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> non <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inizia una transazione con livello di isolamento specificato utilizzando il provider sottostante."
  remarks: "In un determinato momento può essere non più di una transazione attiva creata tramite <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Un tentativo di chiamare gli <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>overload <xref:System.Data.EntityClient.EntityConnection>che già dispone di una transazione corrente restituirà un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection> un</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Il livello di isolamento della transazione."
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. L&quot;oggetto restituito <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> istanza in un secondo momento può essere associata il <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> per eseguire il comando in tale transazione."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider sottostante non è noto.       - oppure - la chiamata a <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>è stata eseguita su un <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> che dispone già di una transazione corrente.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>       - oppure - lo stato del <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> non <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Non supportata."
  remarks: "Il metodo ChangeDatabase è obbligatorio quando si deriva da <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> Questo metodo non è supportato e genererà un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Non supportata."
  overload: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Quando viene chiamato il metodo."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Close
  id: Close
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Chiude la connessione al database."
  remarks: "Se il provider di dati sottostante non è noto, la chiamata a Close non esegue alcuna operazione."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si è verificato un errore durante la chiusura della connessione."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene o imposta il <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> stringa di connessione."
  remarks: "An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons. The equals sign (=) connects each keyword and its value. The following table lists the valid names for keyword values in the ConnectionString.  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|`Provider`|Required if the `Name` keyword is not specified. The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider. This value is constant.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required. This keyword is mutually exclusive with the `Name` keyword.|  \n|`Provider Connection String`|Optional. Specifies the provider-specific connection string that is passed to the underlying data source. This connection string is expressed by using valid keyword/value pairs for the data provider. An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.<br /><br /> The value of the `Provider Connection String` must be surrounded by quotes. The following is an example:<br /><br /> `Provider Connection String =\"Server=serverName; User ID = userID\";`<br /><br /> The following example is not going to work:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  \n|`Metadata`|Required if the `Name` keyword is not specified. A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information. The following is an example:<br /><br /> `Metadata=`<br /><br /> `c:\\model &#124; c:\\model\\sql\\mapping.msl;`<br /><br /> Blank spaces on each side of the pipe separator are ignored.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.|  \n|`Name`|The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values. In this case, you cannot supply them directly in the connection string. The `Name` keyword is not allowed in a configuration file.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.<br /><br /> This keyword is mutually exclusive with all the other connection string keywords.|  \n  \n The application can supply the keyword/values directly in the ConnectionString property, or it can specify a value for the `Name` keyword. If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:  \n  \n `Name=AdventureWorksEntities;`  \n  \n If the `Name` keyword is used in the ConnectionString property, other keywords are not allowed. The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example. The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The keyword/value pairs can also be supplied directly in the ConnectionString property, as shown in the following example. In this case, the `Name` keyword is not used.  \n  \n```  \n\"Provider=System.Data.SqlClient;  \nMetadata=c:\\metadata|c:\\Metadata\\Sql;  \nProvider Connection String= 'Data Source=localhost;  \n    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' \"  \n```  \n  \n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \n  \n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string. Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "La stringa di connessione necessaria per stabilire la connessione iniziale a un&quot;origine dati. Il valore predefinito è una stringa vuota. In una connessione chiusa, il valore viene restituito. Se non è stato impostato alcun valore, viene restituita una stringa vuota."
  overload: System.Data.EntityClient.EntityConnection.ConnectionString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si è verificato un tentativo di impostare la proprietà ConnectionString dopo il [EntityConnection](~/add/includes/ajax-current-ext-md.md)del <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> è stato inizializzato. Il [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) viene inizializzato quando il <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> istanza viene costruita mediante l&quot;overload che accetta un <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> come parametro, o quando il <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> istanza è stata aperta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "È stata specificata una parola chiave della stringa di connessione non valido o non è stata specificata una parola chiave stringa di connessione necessarie."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene il numero di secondi di attesa durante il tentativo di stabilire una connessione prima di terminare il tentativo e generare un errore."
  remarks: "Restituisce zero se il provider di dati sottostante non è noto."
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Il tempo (in secondi) di attesa per una connessione per aprirla. Il valore predefinito è timeout predefinito del provider di dati sottostante."
  overload: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore impostato è minore di 0."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Crea una nuova istanza di un <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref>, con la <xref:System.Data.EntityClient.EntityCommand.Connection*>impostato su <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>.</xref:System.Data.EntityClient.EntityCommand.Connection*>"
  syntax:
    content: public System.Data.EntityClient.EntityCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityCommand
      description: "Un <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> oggetto."
  overload: System.Data.EntityClient.EntityConnection.CreateCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il nome del provider di dati sottostante non è noto."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Da aggiungere."
  overload: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Database
  id: Database
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene il nome del database corrente o il database che verrà utilizzato dopo l&quot;apertura di una connessione."
  remarks: "Per il valore di una parola chiave specifica, ad esempio `Database`, che esegue il mapping alla proprietà del Database, vedere la documentazione per il provider di dati sottostante. Per [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] parole chiave equivalenti, vedere la documentazione per il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>proprietà.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Il valore di <xref uid=&quot;langword_csharp_Database&quot; name=&quot;Database&quot; href=&quot;&quot;> </xref> proprietà del provider di dati sottostante."
  overload: System.Data.EntityClient.EntityConnection.Database*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider di dati sottostante non è noto."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DataSource
  id: DataSource
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene il nome o indirizzo di rete dell&quot;origine dati a cui connettersi."
  remarks: "Per il valore di una parola chiave specifica, ad esempio `DataSource`, che esegue il mapping alla proprietà origine dati, vedere la documentazione per il provider di dati sottostante. Per [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] parole chiave equivalenti, vedere la documentazione per il <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>proprietà.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;origine dati. Il valore predefinito è una stringa vuota."
  overload: System.Data.EntityClient.EntityConnection.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider di dati sottostante non è noto."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Da aggiungere."
  overload: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.EntityClient.EntityConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inserisce <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> nella transazione specificata."
  remarks: "Questo metodo inoltra la chiamata alla connessione all&quot;origine dati per integrare in modo esplicito in passato <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction>"
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Oggetto transazione in cui inserire."
  overload: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Lo stato del <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> non <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  id: GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Restituisce il <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associato a questo <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  remarks: "Oggetto <xref:System.Data.Metadata.Edm.MetadataWorkspace>viene creata automaticamente quando la <xref:System.Data.EntityClient.EntityConnection>classe viene creata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> Il processo di creazione potrebbe generare eccezioni specifiche dei metadati. I metadati vengono caricati in memoria e vengono utilizzati da un&quot;applicazione Entity Data Model (EDM) per accedere alle informazioni sull&quot;origine dati sottostante. Per ulteriori informazioni, vedere [metadati ADO.NET](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).       Per evitare che oggetti quali <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, <xref:System.Data.EntityClient.EntityConnection>blocchi i propri metadati.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati: - il <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore predefinito oppure tramite il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>costruttore che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> In entrambi i casi, la stringa di connessione può essere modificata più volte prima dell&quot;apertura della connessione. <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A></xref:System.Data.EntityClient.EntityConnection.Open%2A>      -L&quot; <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, il <xref:System.Data.EntityClient.EntityConnection>verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associato a questo <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  exceptions:
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "La stringa di connessione inline contiene un oggetto non valido <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> valore (parola chiave)."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Open
  id: Open
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Stabilisce una connessione all&quot;origine dati chiamando il provider di dati sottostante<xref uid=&quot;langword_csharp_ Open&quot; name=&quot; Open&quot; href=&quot;&quot;> </xref> metodo."
  remarks: "Per evitare che oggetti quali <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>non sincronizzati con i relativi metadati, <xref:System.Data.EntityClient.EntityConnection>blocchi i propri metadati.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Dopo che i metadati vengono bloccati, non è consentita alcuna modifica alla stringa di connessione. Di seguito sono due scenari in cui i metadati vengono bloccati: - il <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il costruttore predefinito oppure tramite il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>costruttore che accetta una stringa di connessione.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> In entrambi i casi, la stringa di connessione potrebbe essere modificata più volte prima dell&quot;apertura della connessione. La chiamata <xref:System.Data.EntityClient.EntityConnection.Open%2A>o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>dei metadati.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -La <xref:System.Data.EntityClient.EntityConnection>istanza viene costruita mediante il <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>costruttore che accetta un <xref:System.Data.Metadata.Edm.MetadataWorkspace>e un <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> In questo caso, i metadati vengono bloccati in fase di costruzione. Nessuna modifica alla stringa di connessione è mai consentita.       Quando i metadati vengono caricati, il <xref:System.Data.EntityClient.EntityConnection>verifica che il modello concettuale, il modello di archiviazione e il file di mapping siano presenti.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando si apre la connessione o il nome del provider di dati sottostante non è noto, si verifica un errore."
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "La stringa di connessione inline contiene un oggetto non valido <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> valore (parola chiave)."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene una stringa che contiene la versione dell&quot;origine dati a cui è connesso il client."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "La versione dell&quot;origine dati che è contenuto nella stringa di connessione del provider."
  overload: System.Data.EntityClient.EntityConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.State
  id: State
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Ottiene il <xref href=&quot;System.Data.ConnectionState&quot;> </xref> proprietà del provider sottostante se la <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> è aperto. In caso contrario, restituisce <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "<xref href=&quot;System.Data.ConnectionState&quot;></xref>, se e solo se entrambi i <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>di stato interno e il provider sottostante <xref href=&quot;System.Data.ConnectionState&quot;> </xref> sono aperti. Se il <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>di stato è aperto, ma il provider <xref href=&quot;System.Data.ConnectionState&quot;> </xref> è chiuso, questa proprietà restituisce <xref href=&quot;System.Data.ConnectionState&quot;> </xref>. In caso contrario, restituisce <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  id: StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Fornisce l&quot;accesso alla connessione all&quot;origine dati sottostante che viene utilizzata il <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> oggetto."
  remarks: "Se il <xref:System.Data.EntityClient.EntityConnection>oggetto è chiuso, verrà chiusa la connessione all&quot;origine dati restituiti.</xref:System.Data.EntityClient.EntityConnection> Se è aperto, verrà restituita una connessione all&quot;origine dati aperta. Se le informazioni di connessione origine dati è state impostate, il valore restituito è sempre non null. Se non sono disponibili informazioni di connessione di origine dati (ad esempio, se è stato utilizzato il costruttore predefinito e nessuna stringa di connessione è stata impostata in un secondo momento), viene restituito un riferimento null.       La stessa connessione all&quot;origine dati utilizzata da Entity Framework può essere condivisa con altre parti di un&quot;applicazione. La connessione all&quot;origine dati viene restituita come un <xref:System.Data.Common.DbConnection>dall&quot;oggetto di <xref:System.Data.Objects.ObjectContext.Connection%2A>proprietà <xref:System.Data.Objects.ObjectContext>, o dalla proprietà StoreConnection <xref:System.Data.EntityClient.EntityConnection>.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.Connection%2A> </xref:System.Data.Common.DbConnection>"
  syntax:
    content: public System.Data.Common.DbConnection StoreConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "Il <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> per la connessione all&quot;origine dati."
  overload: System.Data.EntityClient.EntityConnection.StoreConnection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ProviderIncompatibleException
  parent: System.Data
  isExternal: false
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException
  fullName: System.Data.ProviderIncompatibleException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.MetadataException
  parent: System.Data
  isExternal: false
  name: MetadataException
  nameWithType: MetadataException
  fullName: System.Data.MetadataException
- uid: System.Data.EntityClient.EntityConnection.#ctor
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
- uid: System.Data.EntityClient.EntityTransaction
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityTransaction
  nameWithType: EntityTransaction
  fullName: System.Data.EntityClient.EntityTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
- uid: System.Data.EntityClient.EntityConnection.Close
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
- uid: System.Data.EntityClient.EntityCommand
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityCommand
  nameWithType: EntityCommand
  fullName: System.Data.EntityClient.EntityCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.EntityClient.EntityConnection.Database
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
- uid: System.Data.EntityClient.EntityConnection.Open
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
- uid: System.Data.EntityClient.EntityConnection.#ctor*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection.EntityConnection
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: EntityConnection.BeginDbTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: EntityConnection.BeginTransaction
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: EntityConnection.ChangeDatabase
- uid: System.Data.EntityClient.EntityConnection.Close*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close
  nameWithType: EntityConnection.Close
- uid: System.Data.EntityClient.EntityConnection.ConnectionString*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
- uid: System.Data.EntityClient.EntityConnection.CreateCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand
  nameWithType: EntityConnection.CreateCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: EntityConnection.CreateDbCommand
- uid: System.Data.EntityClient.EntityConnection.Database*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose
  nameWithType: EntityConnection.Dispose
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: EntityConnection.EnlistTransaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace
  nameWithType: EntityConnection.GetMetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.Open*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open
  nameWithType: EntityConnection.Open
- uid: System.Data.EntityClient.EntityConnection.ServerVersion*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
- uid: System.Data.EntityClient.EntityConnection.StoreConnection*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
