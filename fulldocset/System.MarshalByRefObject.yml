### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  summary: "Abilita accesso agli oggetti limiti del dominio applicazione nelle applicazioni che supportano servizi remoti."
  remarks: "Un dominio applicazione è una partizione in un processo del sistema operativo in cui risiedono una o più applicazioni. Gli oggetti nello stesso dominio applicazione possono comunicare direttamente. Gli oggetti in diversi domini applicazione di comunicare tramite il trasporto di copie degli oggetti tra i limiti del dominio applicazione o tramite un proxy per lo scambio di messaggi.       MarshalByRefObject è la classe base per gli oggetti che comunicano attraverso i limiti del dominio applicazione lo scambio di messaggi tramite un proxy. Gli oggetti che non ereditano da MarshalByRefObject sono implicitamente marshalling per valore. Quando un&quot;applicazione remota fa riferimento a un marshalling dall&quot;oggetto di valore, una copia dell&quot;oggetto viene passata attraverso i limiti del dominio applicazione.       Oggetti MarshalByRefObject sono accessibili direttamente all&quot;interno del dominio dell&quot;applicazione locale. La prima volta che un&quot;applicazione in un dominio applicazione remoto accede a una classe MarshalByRefObject, viene passato un proxy all&quot;applicazione remota. Vengono effettuato il marshalling di chiamate successive nel proxy all&quot;oggetto che si trovano nel dominio dell&quot;applicazione locale.       Tipi devono ereditare da MarshalByRefObject quando i limiti del dominio applicazione viene utilizzato il tipo e lo stato dell&quot;oggetto non deve essere copiato perché i membri dell&quot;oggetto non sono utilizzabili all&quot;esterno del dominio applicazione in cui sono stati creati.       Quando si deriva un oggetto da MarshalByRefObject per l&quot;utilizzo nei limiti del dominio applicazione, eseguire l&quot;override di uno qualsiasi dei relativi membri, né deve chiamarne i metodi direttamente. Il runtime rileva che è necessario effettuare il marshalling di classi derivate da MarshalByRefObject attraverso i limiti di dominio di applicazione."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits MarshalByRefObject, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_1.cpp)]\n [!code-cs[CreateInstanceAndUnwrap2#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_1.cs)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_1.vb)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from MarshalByRefObject that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_2.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_2.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.MarshalByRefObject&quot;> </xref> classe."
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Crea un oggetto che contiene le informazioni necessarie per generare un proxy utilizzato per comunicare con un oggetto remoto."
  remarks: "Metodo TheCreateObjRef viene chiamato da metodi di creazione di oggetti remoti, ad esempio <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName>e <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>.</xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> </xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> Nella maggior parte dei casi, non è necessario eseguire l&quot;override di questo metodo."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: "Il <xref:System.Type>dell&quot;oggetto che il nuovo <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> farà riferimento.</xref:System.Type>"
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Informazioni necessarie per generare un proxy."
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Questa istanza non è un oggetto remoto valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Recupera l&quot;oggetto servizio di durata corrente che controlla i criteri di durata per questa istanza."
  remarks: "Per ulteriori informazioni sui servizi di durata, vedere la <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>classe.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Un oggetto di tipo <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> consentono di controllare i criteri di durata per questa istanza."
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un oggetto servizio di durata per controllare i criteri di durata per questa istanza."
  remarks: "Per ulteriori informazioni sui servizi di durata, vedere la <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>classe.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/cpp/m-system.marshalbyrefobj_1.cpp)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/visualbasic/m-system.marshalbyrefobj_1.vb)]\n [!code-cs[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/csharp/m-system.marshalbyrefobj_1.cs)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Un oggetto di tipo <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> consentono di controllare i criteri di durata per questa istanza. Si tratta della durata corrente oggetto servizio per l&quot;istanza, se presente. in caso contrario, un oggetto servizio nuova durata inizializzati sul valore del &lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A?displayProperty=fullName&gt; proprietà."
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Crea una copia superficiale dell&quot;oggetto corrente <xref href=&quot;System.MarshalByRefObject&quot;> </xref> oggetto."
  remarks: "Il metodo MemberwiseClone crea una copia superficiale creando un nuovo <xref:System.MarshalByRefObject>dell&quot;oggetto e quindi copiando i campi non statici della classe corrente <xref:System.MarshalByRefObject>oggetto per il nuovo oggetto.</xref:System.MarshalByRefObject> </xref:System.MarshalByRefObject> Se un campo è un tipo di valore, viene eseguita una copia bit per bit del campo. Se un campo è un tipo riferimento, il riferimento viene copiato ma l&quot;oggetto cui viene fatto riferimento non; Pertanto, l&quot;oggetto originale e il suo clone fare riferimento allo stesso oggetto.       Si consideri ad esempio un oggetto <xref:System.MarshalByRefObject>denominato X che fa riferimento a oggetti A e B, a sua volta, oggetto references C. Una copia superficiale di X Crea nuovo oggetto X2 che fa riferimento a oggetti A e B. Invece una copia completa di X crea un nuovo oggetto X2 che fa riferimento a nuovi oggetti A2 e B2, che sono copie di A e B. B2, fa riferimento a sua volta, il nuovo oggetto C2, che è una copia di C. utilizzo di una classe che implementa il <xref:System.ICloneable>interfaccia per eseguire una copia completa o superficiale di un oggetto.</xref:System.ICloneable> </xref:System.MarshalByRefObject>       L&quot;identità di un <xref:System.MarshalByRefObject>oggetto viene definito come oggetto del server remoto che è la destinazione di una chiamata del client remoto.</xref:System.MarshalByRefObject> Per impostazione predefinita, il clone di un <xref:System.MarshalByRefObject>oggetto ha la stessa identità dell&quot;oggetto originale, che non è in genere il comportamento corretto per i cloni degli oggetti sul lato server che vengono effettuato il marshalling in un confine di comunicazione remota per il lato client.</xref:System.MarshalByRefObject> Specificare `false`, che è in genere appropriato, per eliminare l&quot;identità del clone e causare una nuova identità per poter essere assegnati quando il clone viene sottoposto a marshalling attraverso un limite remoto o `true` affinché il clone mantenere l&quot;identità dell&quot;originale <xref:System.MarshalByRefObject>oggetto.</xref:System.MarshalByRefObject> Il metodo MemberwiseClone è destinato a essere usate dagli sviluppatori implementano oggetti del server remoto."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Per eliminare l&quot;oggetto corrente <xref href=&quot;System.MarshalByRefObject&quot;> </xref> identità dell&quot;oggetto, che provoca l&quot;oggetto da assegnare una nuova identità quando si è sottoposto a marshalling attraverso un limite remoto. Il valore <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> è in genere appropriato. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per copiare corrente <xref href=&quot;System.MarshalByRefObject&quot;> </xref> identità dell&quot;oggetto per il clone, che può causare errori chiamate del client remoto essere indirizzato all&quot;oggetto server remoto."
    return:
      type: System.MarshalByRefObject
      description: "Una copia superficiale dell&quot;oggetto corrente <xref href=&quot;System.MarshalByRefObject&quot;> </xref> oggetto."
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
