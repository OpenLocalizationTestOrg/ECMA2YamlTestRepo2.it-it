### YamlMime:ManagedReference
items:
- uid: System.Data.IDbDataAdapter
  id: IDbDataAdapter
  children:
  - System.Data.IDbDataAdapter.DeleteCommand
  - System.Data.IDbDataAdapter.InsertCommand
  - System.Data.IDbDataAdapter.SelectCommand
  - System.Data.IDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: IDbDataAdapter
  nameWithType: IDbDataAdapter
  fullName: System.Data.IDbDataAdapter
  type: Interface
  summary: "Rappresenta un set di proprietà relative ai comandi utilizzati per compilare il <xref href=&quot;System.Data.DataSet&quot;> </xref> e aggiornare un&quot;origine dati e viene implementata dai provider di dati .NET Framework che accedono a database relazionali."
  remarks: "The IDbDataAdapter interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/add/includes/ajax-current-ext-md.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."
  example:
  - "The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.idbdataada_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.idbdataada_1.cs)]"
  syntax:
    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'
  implements:
  - System.Data.IDataAdapter
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta un&quot;istruzione SQL per l&quot;eliminazione di record dal set di dati."
  remarks: "Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, DeleteCommand può essere generato automaticamente se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando DeleteCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>non verrà duplicato.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> DeleteCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.IDbCommand>oggetto.</xref:System.Data.IDbCommand>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_2_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per eliminare i record nell&quot;origine dati per le righe eliminate nel set di dati.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta un&quot;istruzione SQL utilizzata per inserire nuovi record nell&quot;origine dati."
  remarks: "Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, InsertCommand può essere generata automaticamente se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando InsertCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>non verrà duplicato.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> InsertCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.IDbCommand>oggetto.</xref:System.Data.IDbCommand>      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, è possibile aggiungere queste righe per il <xref:System.Data.DataSet>a seconda della modalità di impostazione di <xref:System.Data.IDbCommand.UpdatedRowSource%2A>proprietà del <xref:System.Data.IDbCommand>oggetto.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_3_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per inserire i record nell&quot;origine dati per le nuove righe nel set di dati.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta un&quot;istruzione SQL utilizzata per selezionare i record nell&quot;origine dati."
  remarks: "Quando SelectCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>non verrà duplicato.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> La proprietà SelectCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.IDbCommand>oggetto.</xref:System.Data.IDbCommand>       Se la proprietà SelectCommand non restituisce alcuna riga, verrà aggiunta alcuna tabella per la <xref:System.Data.DataSet>, e viene generata alcuna eccezione.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_0_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzata durante l&quot;utilizzo <xref:System.Data.Common.DbDataAdapter.Update*>per selezionare i record dall&quot;origine dati per la selezione nel set di dati.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta un&quot;istruzione SQL utilizzata per aggiornare i record nell&quot;origine dati."
  remarks: "Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, UpdateCommand può essere generata automaticamente se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da CommandBuilder. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando UpdateCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>non verrà duplicato.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> La proprietà UpdateCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.IDbCommand>oggetto.</xref:System.Data.IDbCommand>      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, queste righe vengono aggiunte al <xref:System.Data.DataSet>.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_1_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per aggiornare i record nell&quot;origine dati per le righe modificate nel set di dati.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbDataAdapter.DeleteCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbDataAdapter.InsertCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.IDbDataAdapter.DeleteCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbDataAdapter.InsertCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
