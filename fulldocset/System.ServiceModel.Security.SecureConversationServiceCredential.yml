### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Fornisce le impostazioni delle credenziali per un servizio di conversazione protetta."
  remarks: "Le conversazioni protette comportano lo scambio di più messaggi e utilizzano una sicurezza contesto Token SCT () per garantire la sicurezza. Il protocollo SCT è condiviso fra le parti della comunicazione per la durata di una sessione di comunicazione. Un servizio può rilasciare due tipi diversi di SCT:-il primo è un token SCT basato sulla sessione che contiene un id univoco. I messaggi contengono solo l&quot;id e il servizio mantiene una cache di mapping di stato che esegue il mapping tra gli ID di token SCT e un contenuto (ad esempio attestazioni, chiavi di sicurezza e così via). Un client si comporta correttamente deve inviare un annullamento SCT per ottimizzare le risorse della cache del servizio. Se si crea un&quot;istanza di questa classe chiamando <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>con il `requireCancellation` uguale al parametro `true`, il SCT viene rilasciato in questo modo.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -Il secondo è un SCT autonomo che risiede in un cookie sul client. Questo SCT contiene informazioni di stato complete, pertanto non richiede la gestione dello stato del servizio né annullamento dal client. In alcuni casi si tratta di un token SCT &quot;modalità cookie&quot;. Poiché il SCT contiene le informazioni sullo stato intero, le dimensioni sono maggiori di nel caso basato sulla sessione. Con token SCT basato sulla sessione, il servizio memorizza gran parte delle informazioni sullo stato. Tuttavia, poiché è indipendente, può essere utilizzato in durata del servizio e persiste tra riavvio e arresto del servizio."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una raccolta del <xref:System.Type>attestazioni per la serializzazione del cookie.</xref:System.Type>"
  remarks: "Per serializzare le attestazioni in cookie SCT, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] utilizza <xref:System.Runtime.Serialization.DataContractSerializer>come impostazione predefinita.</xref:System.Runtime.Serialization.DataContractSerializer> Perché la risorsa di attestazione è estensibile, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] consente di fornire un elenco di tipi di risorse conosciuti. Ciò è utile il <xref:System.Runtime.Serialization.DataContractSerializer>durante la deserializzazione delle attestazioni nel cookie in modo che possa restituire gli oggetti fortemente tipizzati originali.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Una raccolta del <xref:System.Type>attestazioni per la serializzazione del cookie.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene o imposta un oggetto personalizzato <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> per la codifica e decodifica di serializzazione del cookie."
  remarks: "In &quot;modalità cookie&quot;, un servizio invia al client un token del contesto di sicurezza (SCT) sotto forma di un cookie al client in modo che non dispone di mantenere uno stato di sicurezza. Il client invia il cookie nuovamente nel messaggio di richiesta in modo che il servizio sia in grado di rimuovere la protezione e verificare il messaggio di richiesta. Poiché il SCT viene spesso trasmesso su una rete non protetta, deve essere protetta.       Per impostazione predefinita, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] utilizza la <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>classe per proteggere il cookie mediante l&quot;API di protezione dati (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Per la DPAPI funzioni in un ambiente Web farm, è necessario eseguire tutti i servizi back-end con lo stesso account utente di dominio. In altre parole, se il servizio è ospitato sul Web, il processo di lavoro di Internet Information Services (IIS) deve essere configurato per l&quot;esecuzione come utente di dominio.       Questa proprietà consente di utilizzare un oggetto personalizzato <xref:System.ServiceModel.Security.SecurityStateEncoder>per crittografare e decrittografare i cookie e non dipendono da DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "Oggetto <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> oggetto, ovvero una personalizzazione di <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
