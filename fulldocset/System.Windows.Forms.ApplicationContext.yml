### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ApplicationContext
  id: ApplicationContext
  children:
  - System.Windows.Forms.ApplicationContext.#ctor
  - System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  - System.Windows.Forms.ApplicationContext.Dispose
  - System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  - System.Windows.Forms.ApplicationContext.ExitThread
  - System.Windows.Forms.ApplicationContext.ExitThreadCore
  - System.Windows.Forms.ApplicationContext.Finalize
  - System.Windows.Forms.ApplicationContext.MainForm
  - System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  - System.Windows.Forms.ApplicationContext.Tag
  - System.Windows.Forms.ApplicationContext.ThreadExit
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
  type: Class
  summary: "Specifica le informazioni contestuali su un thread dell&quot;applicazione."
  remarks: "È possibile utilizzare la classe ApplicationContext per ridefinire le circostanze che determinano un ciclo di messaggi uscire dall&quot;installazione. Per impostazione predefinita, il ApplicationContext è in ascolto il <xref:System.Windows.Forms.Form.Closed>principale dell&quot;evento nell&quot;applicazione <xref:System.Windows.Forms.Form>, quindi termina il ciclo di messaggi del thread.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closed>"
  example:
  - "The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates how to use an ApplicationContext, along with the `Application.Run(context)` method, to display multiple forms when the application starts.  \n  \n The class `MyApplicationContext` inherits from ApplicationContext and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.  \n  \n The `Main` method calls `Application.Run(context)` to start the application, given the ApplicationContext.  \n  \n [!code-vb[Application#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_3_1.vb)]\n [!code-cpp[Application#1](~/add/codesnippet/cpp/t-system.windows.forms.a_3_1.cpp)]\n [!code-cs[Application#1](~/add/codesnippet/csharp/t-system.windows.forms.a_3_1.cs)]"
  syntax:
    content: 'public class ApplicationContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> classe senza contesto."
  syntax:
    content: public ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  id: '#ctor(System.Windows.Forms.Form)'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>."
  remarks: "Se <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>non è sottoposto a override, il ciclo di messaggi del thread termina quando <xref:System.Windows.Forms.ApplicationContext.MainForm%2A>viene chiuso.</xref:System.Windows.Forms.ApplicationContext.MainForm%2A> </xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: public ApplicationContext (System.Windows.Forms.Form mainForm);
    parameters:
    - id: mainForm
      type: System.Windows.Forms.Form
      description: "Il principale <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> dell&quot;applicazione da utilizzare per il contesto."
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose
  id: Dispose
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref>."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Windows.Forms.ApplicationContext>.</xref:System.Windows.Forms.ApplicationContext> Il metodo Dispose lascia il <xref:System.Windows.Forms.ApplicationContext>in uno stato inutilizzabile.</xref:System.Windows.Forms.ApplicationContext> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.Windows.Forms.ApplicationContext>in modo che il garbage collector può recuperare la memoria che di <xref:System.Windows.Forms.ApplicationContext>occupata.</xref:System.Windows.Forms.ApplicationContext> </xref:System.Windows.Forms.ApplicationContext> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.Windows.Forms.ApplicationContext>.</xref:System.Windows.Forms.ApplicationContext> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Windows.Forms.ApplicationContext>dell&quot;oggetto `Finalize` metodo.</xref:System.Windows.Forms.ApplicationContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo Dispose protetto con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Windows.Forms.ApplicationContext>riferimenti.</xref:System.Windows.Forms.ApplicationContext> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  id: ExitThread
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Termina il ciclo di messaggi del thread."
  remarks: "Questo metodo chiama <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>      > [!NOTE] > ExitThread e <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>eseguire non è effettivamente il thread venga terminato.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> Questi metodi generano il <xref:System.Windows.Forms.Application.ThreadExit>evento a cui il <xref:System.Windows.Forms.Application>resta in attesa dell&quot;oggetto.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.ThreadExit> Il <xref:System.Windows.Forms.Application>oggetto quindi termina il thread.</xref:System.Windows.Forms.Application>"
  example:
  - "The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview. This example keeps track of open forms and exits the current thread when all forms are closed. The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event. When the number of open forms is equal to 0, then current thread is exited by calling the ExitThread method. The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.  \n  \n Some code is not shown for the purpose of brevity. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \n  \n [!code-vb[Application#3](~/add/codesnippet/visualbasic/m-system.windows.forms.a_8_1.vb)]\n [!code-cpp[Application#3](~/add/codesnippet/cpp/m-system.windows.forms.a_8_1.cpp)]\n [!code-cs[Application#3](~/add/codesnippet/csharp/m-system.windows.forms.a_8_1.cs)]"
  syntax:
    content: public void ExitThread ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThread*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  id: ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Termina il ciclo di messaggi del thread."
  remarks: "Questo metodo viene chiamato da <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>      > [!NOTE] > <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>ed ExitThreadCore non determina effettivamente il thread venga terminato.</xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> Questi metodi generano il <xref:System.Windows.Forms.Application.ThreadExit>evento a cui il <xref:System.Windows.Forms.Application>resta in attesa dell&quot;oggetto.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.ThreadExit> Il <xref:System.Windows.Forms.Application>oggetto quindi termina il thread.</xref:System.Windows.Forms.Application>"
  syntax:
    content: protected virtual void ExitThreadCore ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Finalize
  id: Finalize
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che il contesto dell&quot;applicazione venga recuperato da garbage collection."
  remarks: "Questo metodo esegue l&quot;override <xref:System.Object.Finalize%2A?displayProperty=fullName>e pulisce le risorse chiamando `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Eseguire l&quot;override `Dispose(Boolean)` per personalizzare la pulizia.       Il codice dell&quot;applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l&quot;operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>metodo.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Per ulteriori informazioni, vedere [metodi Finalize e distruttori](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md), e [si esegue l&quot;override del metodo Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.MainForm
  id: MainForm
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> da utilizzare come contesto."
  remarks: "Questa proprietà determina il principale <xref:System.Windows.Forms.Form>per questo contesto.</xref:System.Windows.Forms.Form> Questa proprietà è possibile modificare in qualsiasi momento. Se <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>non è sottoposto a override, il ciclo di messaggi del thread termina quando il `mainForm` viene chiuso.</xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: public System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "Il <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> da utilizzare come contesto."
  overload: System.Windows.Forms.ApplicationContext.MainForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  id: OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Chiamate <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore*>, che genera il <xref href=&quot;System.Windows.Forms.ApplicationContext.ThreadExit&quot;> </xref> evento.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore*>"
  remarks: "L&quot;implementazione predefinita di questo metodo chiama <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>"
  syntax:
    content: protected virtual void OnMainFormClosed (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Oggetto che ha generato l&quot;evento."
    - id: e
      type: System.EventArgs
      description: "Il <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Tag
  id: Tag
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un oggetto che contiene dati relativi al controllo."
  remarks: "Qualsiasi tipo derivato dalla <xref:System.Object>classe può essere assegnata a questa proprietà.</xref:System.Object> Se la proprietà Tag è impostata tramite la finestra di progettazione Windows Form, è possibile assegnare solo testo.       Un utilizzo comune per la proprietà Tag consiste nell&quot;archiviare i dati che sono strettamente associati al controllo. Ad esempio, se si dispone di un controllo che visualizza le informazioni relative a un cliente, è possibile archiviare un <xref:System.Data.DataSet>accedere rapidamente ai dati, che contiene la cronologia degli ordini del cliente nella proprietà Tag del controllo.</xref:System.Data.DataSet>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene dati relativi al controllo.</xref:System.Object> Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.ApplicationContext.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  id: ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Si verifica quando il ciclo di messaggi del thread deve essere terminato, chiamando <xref:System.Windows.Forms.ApplicationContext.ExitThread*>.</xref:System.Windows.Forms.ApplicationContext.ExitThread*>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ThreadExit event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`. Then ensure that the event handler is associated with the ThreadExit event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#75](~/add/codesnippet/csharp/e-system.windows.forms.a_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#75](~/add/codesnippet/visualbasic/e-system.windows.forms.a_5_1.vb)]"
  syntax:
    content: public event EventHandler ThreadExit;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ApplicationContext.#ctor
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.ApplicationContext.Dispose
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
- uid: System.Windows.Forms.ApplicationContext.Finalize
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
- uid: System.Windows.Forms.ApplicationContext.MainForm
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ApplicationContext.Tag
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ApplicationContext.#ctor*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext.Dispose*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose
  nameWithType: ApplicationContext.Dispose
- uid: System.Windows.Forms.ApplicationContext.ExitThread*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread
  nameWithType: ApplicationContext.ExitThread
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore
  nameWithType: ApplicationContext.ExitThreadCore
- uid: System.Windows.Forms.ApplicationContext.Finalize*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize
  nameWithType: ApplicationContext.Finalize
- uid: System.Windows.Forms.ApplicationContext.MainForm*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed
  nameWithType: ApplicationContext.OnMainFormClosed
- uid: System.Windows.Forms.ApplicationContext.Tag*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
