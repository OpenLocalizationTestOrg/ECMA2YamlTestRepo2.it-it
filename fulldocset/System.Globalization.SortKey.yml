### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortKey
  id: SortKey
  children:
  - System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  - System.Globalization.SortKey.Equals(System.Object)
  - System.Globalization.SortKey.GetHashCode
  - System.Globalization.SortKey.KeyData
  - System.Globalization.SortKey.OriginalString
  - System.Globalization.SortKey.ToString
  langs:
  - csharp
  name: SortKey
  nameWithType: SortKey
  fullName: System.Globalization.SortKey
  type: Class
  summary: "Rappresenta il risultato del mapping di una stringa alla chiave di ordinamento."
  remarks: "Un confronto con distinzione delle impostazioni cultura di due stringhe dipende da ogni carattere con diverse categorie di ordinamenti, script, caratteri alfabetici, inclusi le stringhe di maiuscole e minuscole e segni diacritici. Una chiave di ordinamento funge da repository di questi fattori per una determinata stringa.       Il <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName>metodo restituisce un&quot;istanza della classe di chiave di ordinamento che riflette il mapping delle impostazioni cultura di caratteri in una stringa specificata.</xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> Il valore di un oggetto chiave di ordinamento è relativi dati della chiave, che viene restituiti di <xref:System.Globalization.SortKey.KeyData%2A>proprietà.</xref:System.Globalization.SortKey.KeyData%2A> Dati di questa chiave è costituito da una serie di byte che codificano la stringa, le regole di ordinamento specifiche delle impostazioni cultura e opzioni di confronto specificato dall&quot;utente. Un confronto usando le chiavi di ordinamento è costituito da un confronto bit per bit di dati della chiave corrispondenti in ogni chiave di ordinamento.  Ad esempio, se si crea una chiave di ordinamento chiamando il <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>metodo con un valore di <xref:System.Globalization.CompareOptions?displayProperty=fullName>, un&quot;operazione di confronto di stringhe che usa la chiave di ordinamento è tra maiuscole e minuscole.</xref:System.Globalization.CompareOptions?displayProperty=fullName> </xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>       Dopo aver creato una chiave di ordinamento per una stringa, confrontare le chiavi di ordinamento chiamando il metodo statico <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName>metodo.</xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> Questo metodo esegue un semplice confronto byte per byte, pertanto è molto più veloce la <xref:System.String.Compare%2A?displayProperty=fullName>o <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metodo.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> </xref:System.String.Compare%2A?displayProperty=fullName>      ## Considerazioni sulle prestazioni quando si esegue un confronto tra stringhe, il <xref:System.Globalization.SortKey.Compare%2A>e <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metodi restituiscono gli stessi risultati, ma destinati a scenari diversi.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> </xref:System.Globalization.SortKey.Compare%2A>       In generale, il <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metodo genera la chiave di ordinamento per ogni stringa, esegue il confronto e quindi elimina la chiave di ordinamento e restituisce il risultato del confronto.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> Tuttavia, il <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metodo effettivamente non genera un&quot;intera chiave di ordinamento per eseguire il confronto.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> Al contrario, il metodo genera dati della chiave per ogni elemento di testo (ovvero, carattere di base, coppia di surrogati o sequenza di caratteri di combinazione) in ciascuna stringa. Il metodo confronta i dati della chiave per gli elementi di testo corrispondente. L&quot;operazione viene interrotta, non appena viene determinato il risultato del confronto. Informazioni sulla chiave di ordinamento viene calcolate, ma viene creato alcun oggetto chiave di ordinamento. Questa strategia è conveniente in termini di prestazioni se entrambe le stringhe vengono confrontate con una sola volta, ma diventa costosa se le stesse stringhe vengono confrontate più volte.       Il <xref:System.Globalization.SortKey.Compare%2A>metodo richiede la generazione di un oggetto chiave di ordinamento per ogni stringa prima di eseguire il confronto.</xref:System.Globalization.SortKey.Compare%2A> Questa strategia è dispendiosa in termini di prestazioni per il primo confronto a causa di memoria utilizzati per generare il chiave di ordinamento oggetti e dei tempi. Tuttavia, risulta vantaggioso se le stesse chiavi di ordinamento vengono confrontate più volte.       Si supponga, ad esempio, che si scrive un&quot;applicazione che cerca una tabella di database per la riga in cui la colonna di indice basato su stringa corrisponde a una stringa di ricerca specificati. La tabella contiene migliaia di righe e il confronto della stringa di ricerca nell&quot;indice in ogni riga richiederà molto tempo. Pertanto, quando l&quot;applicazione archivia una riga e la relativa colonna di indice, inoltre genera e archivia la chiave di ordinamento per l&quot;indice in una colonna utilizzata per migliorare le prestazioni di ricerca. Quando l&quot;applicazione per la ricerca di una riga di destinazione, confronta la chiave di ordinamento per la stringa di ricerca per la chiave di ordinamento per la stringa di indice, anziché confrontare la stringa di ricerca alla stringa di indice.      ## Considerazioni sulla sicurezza di <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metodo restituisce un oggetto chiave di ordinamento con il valore in base a una stringa specificata e <xref:System.Globalization.CompareOptions>valore e la lingua associata all&quot;oggetto sottostante <xref:System.Globalization.CompareInfo>oggetto.</xref:System.Globalization.CompareInfo> </xref:System.Globalization.CompareOptions> </xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> Se una decisione relativa alla sicurezza dipende da un confronto tra stringhe o la modifica di maiuscole, è necessario utilizzare il <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metodo delle impostazioni cultura invarianti per assicurarsi che il comportamento dell&quot;operazione sia coerenza indipendentemente dalle impostazioni cultura del sistema operativo.</xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>       Utilizzare la procedura seguente per ottenere una chiave di ordinamento: 1.  Recuperare la lingua inglese dal <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName>proprietà.</xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName>      2.  Recuperare un <xref:System.Globalization.CompareInfo>oggetto per la lingua inglese dal <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName>proprietà.</xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> </xref:System.Globalization.CompareInfo>      3.  Chiamare il <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metodo.</xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>       Utilizzo del valore di una chiave di ordinamento è equivalente alla chiamata di Windows `LCMapString` metodo con il valore LCMAP_SORTKEY specificato. Tuttavia, per l&quot;oggetto chiave di ordinamento, le chiavi di ordinamento per i caratteri in lingua inglese precedono le chiavi di ordinamento per i caratteri coreani.       Gli oggetti chiave di ordinamento possono essere serializzato, ma solo in modo che possano incrociare <xref:System.AppDomain>oggetti.</xref:System.AppDomain> Se un&quot;applicazione serializza un oggetto chiave di ordinamento, l&quot;applicazione deve rigenerare tutte le chiavi di ordinamento quando c&quot;è una nuova versione di .NET Framework.       Per ulteriori informazioni sulle chiavi di ordinamento, vedere lo Standard Unicode n. 10, &quot;Algoritmo di confronto Unicode&quot; sui [sito Web Unicode Consortium](http://go.microsoft.com/fwlink/?linkid=37123)."
  example:
  - "The following example compares the string \"llama\" using the \"en-US\" and \"es-ES\" cultures, and the \"en-US\" and \"es-ES\" traditional cultures.  \n  \n [!code-cpp[System.Globalization.SortKey.Compare#1](~/add/codesnippet/cpp/t-system.globalization.s_1_1.cpp)]\n [!code-cs[System.Globalization.SortKey.Compare#1](~/add/codesnippet/csharp/t-system.globalization.s_1_1.cs)]\n [!code-vb[System.Globalization.SortKey.Compare#1](~/add/codesnippet/visualbasic/t-system.globalization.s_1_1.vb)]  \n  \n The following example shows how you can use the SortKey class to improve performance in an application that relies extensively on sorting and searching a large array. The example creates an unordered array of names, which in this case has 13 elements. It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=fullName> method. The result is a sorted array. The example then searches the array for three strings. For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=fullName> method to retrieve the index of that sort key in the array of sort keys. Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.  \n  \n [!code-vb[System.Globalization.SortKey.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.s_1_2.vb)]\n [!code-cs[System.Globalization.SortKey.Class#1](~/add/codesnippet/csharp/t-system.globalization.s_1_2.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SortKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  id: Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: Compare(SortKey,SortKey)
  nameWithType: SortKey.Compare(SortKey,SortKey)
  fullName: System.Globalization.SortKey.Compare(SortKey,SortKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Confronta due chiavi di ordinamento."
  remarks: "Il metodo di confronto confronta la <xref:System.Globalization.SortKey.KeyData%2A>proprietà del `sortkey1` e `sortkey2` parametri.</xref:System.Globalization.SortKey.KeyData%2A> Il metodo restituisce gli stessi risultati di <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metodo.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>       Per ulteriori informazioni sul metodo di confronto e il confronto delle chiavi di ordinamento, vedere il <xref:System.Globalization.SortKey>argomento relativo alla classe.</xref:System.Globalization.SortKey>"
  example:
  - "The following code example compares two strings using the Compare method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.  \n  \n [!code-cs[sys.glob.sortkey.compare#1](~/add/codesnippet/csharp/4647647d-ce80-4fb7-82b7-_1.cs)]\n [!code-vb[sys.glob.sortkey.compare#1](~/add/codesnippet/visualbasic/4647647d-ce80-4fb7-82b7-_1.vb)]"
  syntax:
    content: public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);
    parameters:
    - id: sortkey1
      type: System.Globalization.SortKey
      description: "La prima chiave di ordinamento da confrontare."
    - id: sortkey2
      type: System.Globalization.SortKey
      description: "La seconda chiave di ordinamento da confrontare."
    return:
      type: System.Int32
      description: "Intero con segno che indica la relazione tra <code> sortkey1 </code> e <code> sortkey2 </code>.       <table><thead><tr><th> Valore       </th><th> Condizione       </th></tr></thead><tbody><tr><td> Minore di zero       </td><td><code>sortkey1</code>is less than <code>sortkey2</code>.       </td></tr><tr><td> Zero       </td><td><code>sortkey1</code>is equal to <code>sortkey2</code>.       </td></tr><tr><td> Maggiore di zero       </td><td><code>sortkey1</code>è maggiore di <code> sortkey2 </code>.       </td></tr></tbody></table>"
  overload: System.Globalization.SortKey.Compare*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sortkey1</code>or <code>sortkey2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.SortKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortKey.Equals(Object)
  fullName: System.Globalization.SortKey.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se l&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  remarks: "Due <xref:System.Globalization.SortKey>gli oggetti sono considerati uguali se i relativi <xref:System.Globalization.SortKey.KeyData%2A>le proprietà sono uguali.</xref:System.Globalization.SortKey.KeyData%2A> </xref:System.Globalization.SortKey>       Questo metodo esegue l&quot;override <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the results of Equals when compared with different <xref:System.Globalization.SortKey> objects.  \n  \n [!code-vb[System.Globalization.SortKey.Equals#1](~/add/codesnippet/visualbasic/m-system.globalization.s_0_1.vb)]\n [!code-cpp[System.Globalization.SortKey.Equals#1](~/add/codesnippet/cpp/m-system.globalization.s_0_1.cpp)]\n [!code-cs[System.Globalization.SortKey.Equals#1](~/add/codesnippet/csharp/m-system.globalization.s_0_1.cs)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> value </code> parametro è uguale all&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortKey.Equals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.SortKey.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortKey.GetHashCode()
  fullName: System.Globalization.SortKey.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Funge da funzione hash per l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto adatto per algoritmi hash e dati strutture, ad esempio una tabella hash."
  remarks: "Questo metodo genera lo stesso codice hash per due oggetti uguali in base al <xref:System.Globalization.SortKey.Equals%2A>metodo.</xref:System.Globalization.SortKey.Equals%2A>       Questo metodo esegue l&quot;override di <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  overload: System.Globalization.SortKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.KeyData
  id: KeyData
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: KeyData
  nameWithType: SortKey.KeyData
  fullName: System.Globalization.SortKey.KeyData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la matrice di byte che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  remarks: "Per ulteriori informazioni sull&quot;utilizzo dei dati restituiti dalla proprietà KeyData nel confronto di stringhe, vedere il <xref:System.Globalization.SortKey>argomento relativo alla classe.</xref:System.Globalization.SortKey>"
  example:
  - "The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/p-system.globalization.s_0_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/p-system.globalization.s_0_1.cs)]"
  syntax:
    content: public virtual byte[] KeyData { get; }
    return:
      type: System.Byte[]
      description: "Una matrice di byte che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  overload: System.Globalization.SortKey.KeyData*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.OriginalString
  id: OriginalString
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: OriginalString
  nameWithType: SortKey.OriginalString
  fullName: System.Globalization.SortKey.OriginalString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la stringa originale utilizzata per creare l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  remarks: ''
  example:
  - "The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/p-system.globalization.s_1_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/p-system.globalization.s_1_1.cs)]"
  syntax:
    content: public virtual string OriginalString { get; }
    return:
      type: System.String
      description: "La stringa originale utilizzata per creare l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  overload: System.Globalization.SortKey.OriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.ToString
  id: ToString
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SortKey.ToString()
  fullName: System.Globalization.SortKey.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  remarks: "Il valore restituito è la concatenazione della stringa &quot;Chiave di ordinamento -&quot;, l&quot;identificatore delle impostazioni cultura e le opzioni di confronto dell&quot;oggetto corrente <xref:System.Globalization.SortKey>oggetto e il valore di <xref:System.Globalization.SortKey.OriginalString%2A>proprietà.</xref:System.Globalization.SortKey.OriginalString%2A> </xref:System.Globalization.SortKey>       Questo metodo esegue l&quot;override <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>"
  example:
  - "The following code example displays an original string, the strings yielded by the ToString method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/m-system.globalization.s_1_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/m-system.globalization.s_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Globalization.SortKey&quot;> </xref> oggetto."
  overload: System.Globalization.SortKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  parent: System.Globalization.SortKey
  isExternal: false
  name: Compare(SortKey,SortKey)
  nameWithType: SortKey.Compare(SortKey,SortKey)
  fullName: System.Globalization.SortKey.Compare(SortKey,SortKey)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.SortKey
  parent: System.Globalization
  isExternal: false
  name: SortKey
  nameWithType: SortKey
  fullName: System.Globalization.SortKey
- uid: System.Globalization.SortKey.Equals(System.Object)
  parent: System.Globalization.SortKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SortKey.Equals(Object)
  fullName: System.Globalization.SortKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortKey.GetHashCode
  parent: System.Globalization.SortKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SortKey.GetHashCode()
  fullName: System.Globalization.SortKey.GetHashCode()
- uid: System.Globalization.SortKey.KeyData
  parent: System.Globalization.SortKey
  isExternal: false
  name: KeyData
  nameWithType: SortKey.KeyData
  fullName: System.Globalization.SortKey.KeyData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.SortKey.OriginalString
  parent: System.Globalization.SortKey
  isExternal: false
  name: OriginalString
  nameWithType: SortKey.OriginalString
  fullName: System.Globalization.SortKey.OriginalString
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.SortKey.ToString
  parent: System.Globalization.SortKey
  isExternal: false
  name: ToString()
  nameWithType: SortKey.ToString()
  fullName: System.Globalization.SortKey.ToString()
- uid: System.Globalization.SortKey.Compare*
  parent: System.Globalization.SortKey
  isExternal: false
  name: Compare
  nameWithType: SortKey.Compare
- uid: System.Globalization.SortKey.Equals*
  parent: System.Globalization.SortKey
  isExternal: false
  name: Equals
  nameWithType: SortKey.Equals
- uid: System.Globalization.SortKey.GetHashCode*
  parent: System.Globalization.SortKey
  isExternal: false
  name: GetHashCode
  nameWithType: SortKey.GetHashCode
- uid: System.Globalization.SortKey.KeyData*
  parent: System.Globalization.SortKey
  isExternal: false
  name: KeyData
  nameWithType: SortKey.KeyData
- uid: System.Globalization.SortKey.OriginalString*
  parent: System.Globalization.SortKey
  isExternal: false
  name: OriginalString
  nameWithType: SortKey.OriginalString
- uid: System.Globalization.SortKey.ToString*
  parent: System.Globalization.SortKey
  isExternal: false
  name: ToString
  nameWithType: SortKey.ToString
