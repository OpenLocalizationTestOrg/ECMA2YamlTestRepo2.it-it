### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  id: CriticalHandleZeroOrMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  type: Class
  summary: "Fornisce una classe di base per le implementazioni di handle critici Win32 in cui il valore di 0 o -1 indica un handle non valido."
  remarks: "Questa classe deriva dalla <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName>classe.</xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName> Descrive il formato di un handle non valido. Ad esempio, alcuni handle utilizzano -1 come valore di handle non valido, mentre altri utilizzano 0. Ulteriori derivazioni di questa classe, ad esempio, file o del Registro di sistema handle, possano specializzare ulteriormente questo concetto.       Utilizzare la classe CriticalHandleZeroOrMinusOneIsInvalid quando è necessario eseguire il wrapping di una risorsa non gestita che non dispone di un wrapper gestito esistente.       Questo tipo implementa il <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A>metodo in un `try` / `catch` blocco.</xref:System.IDisposable.Dispose%2A> Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio `using` (in c#) o `Using` (in Visual Basic). Per ulteriori informazioni, vedere la sezione &quot;Utilizzo di oggetti che implementano IDisposable&quot; nel <xref:System.IDisposable>argomento relativo all&quot;interfaccia.</xref:System.IDisposable>      > [!NOTE] > Vedere il <xref:System.Runtime.InteropServices.CriticalHandle>classe per informazioni importanti sulla sicurezza di sicurezza e thread handle critical.</xref:System.Runtime.InteropServices.CriticalHandle>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class CriticalHandleZeroOrMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle
  inheritance:
  - System.Runtime.InteropServices.CriticalHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid&quot;> </xref> classe."
  syntax:
    content: protected CriticalHandleZeroOrMinusOneIsInvalid ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Ottiene un valore che indica se l&quot;handle è valido."
  remarks: "Common language runtime utilizza questa proprietà per determinare se è necessaria la finalizzazione critica."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;handle non è valido. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: System.Runtime.InteropServices.CriticalHandle
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
