### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  id: WorkflowCommitWorkBatchService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)
  langs:
  - csharp
  name: WorkflowCommitWorkBatchService
  nameWithType: WorkflowCommitWorkBatchService
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  type: Class
  summary: "Consente la logica personalizzata per il commit di batch di lavoro."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Quando un batch di lavoro viene eseguito il runtime chiama il WorkflowCommitWorkBatchService e fornisce un delegato da chiamare per eseguire l&quot;effettivo processo di commit del batch di lavoro. Il runtime è ancora il principale responsabile dell&quot;esecuzione del commit del batch di lavoro ma consente WorkflowCommitWorkBatchService di inserirsi nel processo per personalizzare il processo di commit.       In questo modo la logica di gestione degli errori personalizzata. Se il WorkflowCommitWorkBatchService possiede la transazione, come avviene quando il <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName>restituisce proprietà `null` rendendo la necessità di creare una nuova transazione di ambiente, è possibile chiamare il delegato più di una volta, creando una nuova transazione per ogni chiamata.</xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> Il caso più comune per questo è ad esempio per gestire i problemi di rete intermittenti o failover del cluster SQL. Se la chiamata al <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback>genera un&quot;eccezione WorkflowCommitWorkBatchService può rilevare questa eccezione, avviare una nuova transazione e chiamare nuovamente il delegato.</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> In questo modo un livello di resilienza per l&quot;esecuzione dell&quot;istanza del flusso di lavoro che in caso contrario impedirebbe flussi di lavoro da terminare."
  example:
  - "The following example demonstrates a class that inherits from WorkflowCommitWorkBatchService.  \n  \n [!code-cs[WF_Samples#0](~/add/codesnippet/csharp/wf_snippets/snippets.cs#0)]\n [!code-vb[WF_Samples#0](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#0)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowCommitWorkBatchService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  langs:
  - csharp
  name: WorkflowCommitWorkBatchService()
  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&quot;> </xref> classe."
  syntax:
    content: protected WorkflowCommitWorkBatchService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)
  id: CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  langs:
  - csharp
  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  syntax:
    content: protected virtual void CommitWorkBatch (System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback commitWorkBatchCallback);
    parameters:
    - id: commitWorkBatchCallback
      type: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback
      description: "Da aggiungere."
  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  isExternal: false
  name: WorkflowCommitWorkBatchService()
  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  isExternal: false
  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowCommitWorkBatchService+CommitWorkBatchCallback
  nameWithType: WorkflowCommitWorkBatchService+CommitWorkBatchCallback
  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService+CommitWorkBatchCallback
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  isExternal: false
  name: WorkflowCommitWorkBatchService
  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService
- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*
  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService
  isExternal: false
  name: CommitWorkBatch
  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch
