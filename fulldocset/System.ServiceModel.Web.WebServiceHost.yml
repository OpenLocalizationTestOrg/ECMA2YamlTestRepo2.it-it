### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Web.WebServiceHost
  id: WebServiceHost
  children:
  - System.ServiceModel.Web.WebServiceHost.#ctor
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.OnOpening
  langs:
  - csharp
  name: WebServiceHost
  nameWithType: WebServiceHost
  fullName: System.ServiceModel.Web.WebServiceHost
  type: Class
  summary: "Oggetto <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> classe derivata che integra il [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] modello di programmazione REST."
  remarks: "Se WebServiceHost non trova endpoint nella descrizione del servizio, crea automaticamente un endpoint predefinito all&quot;indirizzo di base del servizio per gli indirizzi di base HTTP e HTTPS. Non crea un endpoint automaticamente se l&quot;utente è configurato in modo esplicito un endpoint all&quot;indirizzo di base. WebServiceHost configura automaticamente l&quot;associazione dell&quot;endpoint per lavorare con le impostazioni di sicurezza Internet Information Services (IIS) associato utilizzato in una directory virtuale protetta.       Quando si crea un endpoint HTTP predefinito, il WebServiceHost disabilita anche la pagina della Guida HTTP e la funzionalità di servizi Web (WSDL, Web Services Description Language) GET in modo che l&quot;endpoint dei metadati non interferiscono con l&quot;endpoint HTTP predefinito.       Inoltre, la classe WebServiceHost aggiunge <xref:System.ServiceModel.Description.WebHttpBehavior>a tutti gli endpoint che non è ancora hanno il comportamento e che hanno un <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</xref:System.ServiceModel.Configuration.WebMessageEncodingElement> </xref:System.ServiceModel.Description.WebHttpBehavior> Se tutte le operazioni nel servizio hanno HTTP vuoti corpi della richiesta o gestiscono il corpo della richiesta HTTP come un flusso, quindi il WebServiceHost configura automaticamente il mapper del tipo di contenuto appropriato per l&quot;associazione."
  example:
  - "The following example shows how to use the WebServiceHost class to host a service that makes use of the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] REST programming model.  \n  \n [!code-cs[WebServiceHost#0](~/add/codesnippet/csharp/t-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: 'public class WebServiceHost : System.ServiceModel.ServiceHost'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.ServiceHost
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> classe."
  syntax:
    content: public WebServiceHost ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> classe con l&quot;indirizzo di base e l&quot;istanza del server singleton specificato."
  remarks: "Il `baseAddresses` parametro può essere costituito da uno o più indirizzi di base."
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.we_1_1.cs)]\n [!code-vb[WebServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.we_1_1.vb)]"
  syntax:
    content: public WebServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "Un&quot;istanza del servizio da utilizzare come l&quot;istanza singleton."
    - id: baseAddresses
      type: System.Uri[]
      description: "L&quot;indirizzo di base del servizio."
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> classe con l&quot;indirizzo di base e tipo di servizio specificato."
  remarks: "Il `baseAddresses` parametro può essere costituito da uno o più indirizzi di base."
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#2](~/add/codesnippet/csharp/m-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#2](~/add/codesnippet/visualbasic/m-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: public WebServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio."
    - id: baseAddresses
      type: System.Uri[]
      description: "L&quot;indirizzo di base del servizio."
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "Chiamato quando il <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> istanza viene visualizzata."
  remarks: "Quando viene chiamato questo metodo, si verifica quanto segue: 1.  Se <xref:System.ServiceModel.Web.WebServiceHost>non trova endpoint nella descrizione del servizio, crea un endpoint predefinito all&quot;indirizzo di base del servizio.</xref:System.ServiceModel.Web.WebServiceHost> <xref:System.ServiceModel.Web.WebServiceHost>Disattiva automaticamente la pagina della Guida HTTP e la funzionalità WSDL GET in modo che l&quot;endpoint dei metadati non interferisce con l&quot;endpoint HTTP predefinito.</xref:System.ServiceModel.Web.WebServiceHost>      2.  <xref:System.ServiceModel.Web.WebServiceHost>Controlla tutti gli endpoint che utilizzano <xref:System.ServiceModel.WebHttpBinding>per vedere se hanno richiesto <xref:System.ServiceModel.Description.WebHttpBehavior>.</xref:System.ServiceModel.Description.WebHttpBehavior> </xref:System.ServiceModel.WebHttpBinding></xref:System.ServiceModel.Web.WebServiceHost> Se non è presente, <xref:System.ServiceModel.Web.WebServiceHost>aggiunge il <xref:System.ServiceModel.Description.WebHttpBehavior>per l&quot;endpoint.</xref:System.ServiceModel.Description.WebHttpBehavior> </xref:System.ServiceModel.Web.WebServiceHost>      3.  <xref:System.ServiceModel.Web.WebServiceHost>Configura l&quot;associazione dell&quot;endpoint per lavorare con le impostazioni di sicurezza IIS associate utilizzato in una directory virtuale protetta.</xref:System.ServiceModel.Web.WebServiceHost>"
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.OnOpening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHost
  isExternal: false
  name: System.ServiceModel.ServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost
  nameWithType: WebServiceHost.WebServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening
  nameWithType: WebServiceHost.OnOpening
