### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermission
  id: SiteIdentityPermission
  children:
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.SiteIdentityPermission.Copy
  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.Site
  - System.Security.Permissions.SiteIdentityPermission.ToXml
  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission
  fullName: System.Security.Permissions.SiteIdentityPermission
  type: Class
  summary: "Definisce l&quot;autorizzazione di identità per il sito Web da cui ha origine il codice. Questa classe non può essere ereditata."
  remarks: "Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Lo stato senza restrizioni di <xref:System.Security.Permissions.SiteIdentityPermission>corrisponde ad alcun sito.</xref:System.Security.Permissions.SiteIdentityPermission> Questo costruttore è incluso per coerenza con la progettazione di altre autorizzazioni, ma non è utile in pratica.      > [!NOTE] > Versioni in .NET Framework 1.0 e 1.1, le autorizzazioni di identità non possono avere un <xref:System.Security.Permissions.PermissionState>valore dello stato di autorizzazione.</xref:System.Security.Permissions.PermissionState> A partire da .NET Framework versione 2.0, le autorizzazioni di identità possono avere qualsiasi valore di stato di autorizzazione. Ciò significa che nelle versioni 2.0 e versioni successive, le autorizzazioni di identità hanno lo stesso comportamento delle autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission>interfaccia.</xref:System.Security.Permissions.IUnrestrictedPermission> Vale a dire, una richiesta per un&quot;identità sempre ha esito positivo, indipendentemente dall&quot;identità dell&quot;assembly, se l&quot;assembly è stata concessa l&quot;attendibilità totale.       Nelle versioni di .NET Framework 1.0 e 1.1, le richieste per le autorizzazioni di identità sono valide, anche quando l&quot;assembly chiamante sia completamente attendibile. Vale a dire, anche se l&quot;assembly chiamante dispone di attendibilità, una richiesta per un&quot;autorizzazione di identità ha esito negativo se l&quot;assembly non soddisfa i criteri richiesti. A partire da .NET Framework versione 2.0, le richieste di autorizzazioni di identità sono effettive se l&quot;assembly chiamante dispone di attendibilità totale. Ciò assicura la coerenza per tutte le autorizzazioni, eliminando il trattamento delle autorizzazioni di identità come un caso speciale."
  syntax:
    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno del <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valori."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> state </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> classe per rappresentare l&quot;identità del sito specificato."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public SiteIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "L&quot;espressione di nome o carattere jolly del sito."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> site </code> parametro non è una stringa valida o non corrispondono a un nome di sito valido con carattere jolly."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia dell&quot;autorizzazione rappresenta lo stesso accesso alle risorse o la stessa identità del sito dell&quot;autorizzazione originale."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.SiteIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> esd </code> parametro non è un elemento di autorizzazione valido.       - o - <code> esd </code> il numero di versione del parametro non è valido."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive i siti che descrivono entrambe in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione. Ad esempio, l&quot;intersezione di un&quot;autorizzazione che rappresenta l&quot;accesso a www.fourthcoffee.com e uno che rappresenta l&quot;accesso a *. fourthcoffee.com è un&quot;autorizzazione che rappresenta l&quot;accesso a www.fourthcoffee.com.       L&quot;intersezione delle due autorizzazioni di identità di sito identico è la stessa autorizzazione. L&quot;intersezione di due diversi (non jolly) espressioni è un&quot;autorizzazione vuota. L&quot;intersezione di un&quot;espressione con caratteri jolly e di un sito è il sito. È più lungo, l&quot;intersezione di due espressioni con caratteri jolly che corrisponde più specifici delle due espressioni."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. La nuova autorizzazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intersezione è vuota."
  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "Se l&quot;autorizzazione corrente specifichi un sito che è interamente contenuto l&quot;autorizzazione specificata, l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata.       Nella tabella seguente mostra il valore di IsSubsetOf per un intervallo di valori di autorizzazione corrente e l&quot;autorizzazione specificata.      | Autorizzazione corrente | Autorizzazioni specificate | IsSubsetOf |   |------------------------|--------------------------|----------------|   | www.fourthcoffee.com | www.fourthcoffee.com | `true`|   | www.fourthcoffee.com | www.tailspintoys.com | `false`|   | www.fourthcoffee.com | *. fourthcoffee.com| `true`|   | www.fourthcoffee.com | *.com| `true`|   | *. www.fourthcoffee.com fourthcoffee.com| | `false`|   | *. fourthcoffee.com| *. fourthcoffee.com| `true`|   | *. fourthcoffee.com| *.com| `true`|   | Anything except `None`|*|`true`|   | `None`| Qualsiasi elemento |`true`|"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta il sito corrente."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "Il sito corrente."
  overload: System.Security.Permissions.SiteIdentityPermission.Site*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile recuperare l&quot;identità del sito perché contiene un&quot;identità ambigua."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "The result of a call to Union is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to \\*.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.SiteIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente.       - oppure - le autorizzazioni non sono uguali e uno non è un subset di altra."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission.SiteIdentityPermission
- uid: System.Security.Permissions.SiteIdentityPermission.Copy*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: SiteIdentityPermission.Copy
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: SiteIdentityPermission.FromXml
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: SiteIdentityPermission.Intersect
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SiteIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.SiteIdentityPermission.Site*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: SiteIdentityPermission.ToXml
- uid: System.Security.Permissions.SiteIdentityPermission.Union*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union
  nameWithType: SiteIdentityPermission.Union
