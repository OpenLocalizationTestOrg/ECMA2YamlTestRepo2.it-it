### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  id: PeerCollaborationPermission
  children:
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml
  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PeerCollaborationPermission
  nameWithType: PeerCollaborationPermission
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  type: Class
  summary: "Specifica i valori che definiscono o utilizzati in <xref href=&quot;System.Net.PeerToPeer.Collaboration&quot;> </xref> autorizzazioni per gli oggetti."
  remarks: "Il valore predefinito <xref:System.Security.Permissions>consentire tutte le applicazioni dell&quot;area Intranet di accedere ai servizi di collaborazione e locale e viene concessa alcuna autorizzazione per le applicazioni dell&quot;area Internet.</xref:System.Security.Permissions> In altre parole, se le autorizzazioni predefinite non sono modificate, tutti i link-local e locale a sito applicazioni dispongono dell&quot;accesso ai servizi di collaborazione Peer-To-Peer, ma applicazioni globali non hanno accesso.       Questa classe non è derivabile."
  syntax:
    content: 'public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: PeerCollaborationPermission(PermissionState)
  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref>. Iniziale <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> per questa istanza viene passata quando viene chiamato il costruttore."
  remarks: "Istanze di questo tipo non hanno accesso alle risorse protette dall&quot;autorizzazione o hanno accesso completo senza restrizioni a tali risorse.       Se è stato <xref:System.Security.Permissions.PermissionState>, <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>istanza passa tutte le richieste.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> </xref:System.Security.Permissions.PermissionState> Se lo stato contiene qualsiasi altro valore, il <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>istanza ha esito negativo di tutte le richieste.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>"
  syntax:
    content: public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno dei valori di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> enumerazione."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy
  id: Copy
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PeerCollaborationPermission.Copy()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Crea e restituisce una copia dell&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref>."
  remarks: "Una copia di un <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>istanza concede lo stesso accesso alle risorse dell&quot;autorizzazione originale.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Oggetto <xref:System.Object>che contiene una copia dell&quot;istanza corrente di <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PeerCollaborationPermission.FromXml(SecurityElement)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Rappresenta il modello a oggetti XML per la codifica degli oggetti di sicurezza."
  remarks: "Questa classe è destinata a un&quot;implementazione semplice di un modello a oggetti XML semplice da utilizzare all&quot;interno del sistema di sicurezza e non per l&quot;utilizzo come modello generale di un oggetto XML.       Questa classe non può essere ereditata."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-   Il parametro non è un elemento di autorizzazione valido.      -Il parametro non contiene una classe o un tipo valido.      -Il numero del parametro versione non è supportato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il parametro è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PeerCollaborationPermission.Intersect(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> e il valore specificato <code> target </code> autorizzazione."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive il set di operazioni che hanno in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione.       Le istruzioni seguenti devono essere `true` per tutte le implementazioni del metodo Intersect. X e Y rappresentano <xref:System.Security.IPermission>riferimenti agli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).</xref:System.Security.IPermission>      -Intersect (x) restituisce un valore uguale a X.      -Intersect restituisce lo stesso valore Intersect.      -Restituisce X.Intersect(a `null` reference) un `null` riferimento."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da Intersect con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> e il valore specificato <code> target </code> autorizzazione. La nuova autorizzazione è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) se l&quot;intersezione è vuota."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il parametro di destinazione non è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) e non è un&quot;istanza della stessa classe dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PeerCollaborationPermission.IsSubsetOf(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Determina se l&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> è un subset dell&quot;oggetto specificato <code> target </code> autorizzazione."
  remarks: "The current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to \"*C:\\example.txt*\" is a subset of a permission that represents access to \"*C:\\\\*\". If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \n  \n The following statements are required to be `true` for all implementations of the IsSubsetOf method. X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).  \n  \n-   X.IsSubsetOf(X) returns `true`.  \n  \n-   X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.  \n  \n-   If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.  \n  \n If X represents an empty [IPermission](http://go.microsoft.com/fwlink?LinkID=98303) object with a permission state of None and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`. If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> of two empty permissions is an empty permission."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se l&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> è un subset di quella specificata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il parametro è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: PeerCollaborationPermission.IsUnrestricted()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Restituisce un valore che specifica se l&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> è senza restrizioni."
  remarks: "Un&quot;autorizzazione senza restrizioni rappresenta l&quot;accesso a tutte le risorse protette dall&quot;autorizzazione."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è senza restrizioni. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml
  id: ToXml
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PeerCollaborationPermission.ToXml()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Crea una codifica XML del <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> e lo stato corrente."
  remarks: "In generale, metodi della classe dell&quot;autorizzazione vengono utilizzati dall&quot;infrastruttura e non devono essere utilizzati nelle applicazioni."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PeerCollaborationPermission.Union(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione di corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> e il valore specificato <code> target </code> autorizzazione."
  remarks: "Il risultato di una chiamata a un&quot;unione è un&quot;autorizzazione che rappresenta tutte le operazioni rappresentate dall&quot;oggetto corrente sia <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>e l&quot;autorizzazione specificata.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> Qualsiasi richiesta che passa l&quot;autorizzazione passa l&quot;unione.       Le istruzioni seguenti devono essere `true` per tutte le implementazioni del metodo Union. X e Y rappresentano <xref:System.Security.IPermission>gli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).</xref:System.Security.IPermission>      -Union (x) restituisce un oggetto che ha lo stesso valore di X.      -X.Union(Y) restituisce un oggetto che ha lo stesso valore dell&quot;oggetto restituito da Union (x).      -X.Union(a `null` reference (`Nothing` in Visual Basic)) restituisce un oggetto che ha lo stesso valore di X."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;oggetto corrente <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot;> </xref> e l&quot;autorizzazione specificata."
  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il parametro è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: PeerCollaborationPermission(PermissionState)
  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Copy()
  nameWithType: PeerCollaborationPermission.Copy()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PeerCollaborationPermission.FromXml(SecurityElement)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PeerCollaborationPermission.Intersect(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(IPermission)
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PeerCollaborationPermission.IsSubsetOf(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: PeerCollaborationPermission.IsUnrestricted()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted()
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: ToXml()
  nameWithType: PeerCollaborationPermission.ToXml()
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml()
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PeerCollaborationPermission.Union(IPermission)
  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(IPermission)
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: PeerCollaborationPermission
  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Copy
  nameWithType: PeerCollaborationPermission.Copy
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: FromXml
  nameWithType: PeerCollaborationPermission.FromXml
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Intersect
  nameWithType: PeerCollaborationPermission.Intersect
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PeerCollaborationPermission.IsSubsetOf
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: PeerCollaborationPermission.IsUnrestricted
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: ToXml
  nameWithType: PeerCollaborationPermission.ToXml
- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union*
  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission
  isExternal: false
  name: Union
  nameWithType: PeerCollaborationPermission.Union
