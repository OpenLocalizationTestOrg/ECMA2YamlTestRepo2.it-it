### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Json.NET](http://www.newtonsoft.com/json) deve essere usato per la serializzazione e deserializzazione. Fornisce funzionalità di serializzazione e deserializzazione per le applicazioni compatibili con AJAX.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe che non dispone di alcun resolver di tipi."
  remarks: "Un&quot;istanza di <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe senza un resolver di tipi non include le proprietà dei metadati di tipo (denominate Type&quot;) nella stringa JSON serializzata.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Una proprietà di metadati del tipo viene utilizzata il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>e <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>metodi per determinare gestita appropriata tipo in cui verrà convertita la stringa JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Per informazioni sui resolver, vedere la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>classe.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe che ha un resolver di tipi personalizzato."
  remarks: "Quando si serializza un oggetto, la <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe Usa il `resolver` parametro per determinare il valore appropriato da includere nella stringa JSON serializzata per la proprietà dei metadati del tipo ( Type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> Analogamente, quando la <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe deserializza una stringa JSON, risolve il valore di proprietà di tipo dei metadati per il tipo gestito appropriato tramite l&quot;istanza del resolver.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       È possibile impostare il `resolver` parametro `null`, che equivale alla chiamata di <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>costruttore.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       L&quot;istanza di <xref:System.Web.Script.Serialization.JavaScriptSerializer>che viene usato dal livello di comunicazione asincrona per richiamare i servizi Web da script client utilizza un resolver di tipi speciali.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Il resolver di tipi che limita i tipi che possono essere deserializzati a quelli definiti nella firma del metodo del servizio Web o quelle che hanno il <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>applicato.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> È possibile modificare questo resolver predefiniti a livello di codice.      > [!IMPORTANT] > Utilizzando un&quot;istanza di questo oggetto inizializzato con un resolver di tipi personalizzato può presentare un rischio per la sicurezza. Questo oggetto può essere utilizzato solo con dati attendibili. Per ulteriori informazioni, vedere [rischi di protezione dati non attendibili](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "Oggetto resolver di tipi personalizzato."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte l&quot;oggetto specificato nel tipo specificato."
  remarks: "Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer>istanza serializza un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa in formato JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metodo può generare eccezioni anche se l&quot;oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter>hanno causato la ricorsione del convertitore.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da convertire."
    - id: targetType
      type: System.Type
      description: "Tipo da convertire l&quot;oggetto."
    return:
      type: System.Object
      description: "Stringa JSON serializzata."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La stringa di formato JSON risultante supera il valore di <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - oppure - <code> obj </code> contiene un riferimento circolare. Un riferimento circolare si verifica quando un oggetto figlio è un riferimento a un oggetto padre e l&quot;oggetto padre è un riferimento all&quot;oggetto figlio."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il limite di ricorsione definito da <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>è stato superato.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte una stringa in formato JSON in un oggetto del tipo specificato."
  remarks: "Questo metodo di deserializzazione non tenta di eseguire il cast di radice dell&quot;oggetto grafico da un tipo specifico, la modalità che il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metodo.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "La stringa JSON da deserializzare."
    - id: targetType
      type: System.Type
      description: "Il tipo dell&quot;oggetto risultante."
    return:
      type: System.Object
      description: "Oggetto deserializzato."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La lunghezza di <code> input </code> supera il valore di <> </> *>.       Il limite di ricorsione definito dal - oppure - <> </> *> è stato superato.       - oppure - <code> input </code> contiene una sequenza di caratteri imprevista.       - oppure - <code> input </code> è un tipo di dizionario ed è stato rilevato un valore di chiave non di tipo stringa.       - oppure - <code> input </code> include le definizioni dei membri che non sono disponibili nel tipo di destinazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>contiene una proprietà Type&quot;che indica un tipo personalizzato, ma il resolver di tipi che è attualmente associato al serializzatore non è possibile trovare un tipo gestito corrispondente.       - oppure - <code>input</code> contiene una proprietà Type&quot;che indica un tipo personalizzato, ma il risultato della deserializzazione della stringa JSON corrispondente non può essere assegnato al tipo di destinazione previsto.       - oppure - <code>input</code> contiene una proprietà Type&quot;che indica <xref:System.Object> o un tipo non istanziabile (ad esempio, un tipo astratto o un&quot;interfaccia).       oppure si è verificato un tentativo di convertire una matrice JSON in un tipo gestito di tipo matrice che non è supportato per l&quot;utilizzo come destinazione della deserializzazione JSON.       - oppure - non è possibile eseguire la conversione <code>input</code> al tipo di destinazione."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte la stringa JSON specificata in un oggetto grafico."
  remarks: "Questo metodo di deserializzazione non tenta di eseguire il cast di radice dell&quot;oggetto grafico da un tipo specifico, come con la <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metodo.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "La stringa JSON da deserializzare."
    return:
      type: System.Object
      description: "Oggetto deserializzato."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> input </code> lunghezza supera il valore di <> </> *>.       Il limite di ricorsione definito dal - oppure - <> </> *> è stato superato.       - oppure - <code> input </code> contiene una sequenza di caratteri imprevista.       - oppure - <code> input </code> è un tipo di dizionario ed è stato rilevato un valore di chiave non di tipo stringa.       - oppure - <code> input </code> include le definizioni dei membri che non sono disponibili nel tipo di destinazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>contiene una proprietà Type&quot;che indica un tipo personalizzato, ma il resolver di tipi che è attualmente associato al serializzatore non è possibile trovare un tipo gestito corrispondente.       - oppure - <code>input</code> contiene una proprietà Type&quot;che indica un tipo personalizzato, ma il risultato della deserializzazione della stringa JSON corrispondente non può essere assegnato al tipo di destinazione previsto.       - oppure - <code>input</code> contiene una proprietà Type&quot;che indica <xref:System.Object> o un tipo non istanziabile (ad esempio, un tipo astratto o un&quot;interfaccia).       oppure si è verificato un tentativo di convertire una matrice JSON in un tipo gestito di tipo matrice che non è supportato per l&quot;utilizzo come destinazione della deserializzazione JSON.       - oppure - non è possibile eseguire la conversione <code>input</code> al tipo di destinazione."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Ottiene o imposta la lunghezza massima delle stringhe JSON accettate dal <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> classe."
  remarks: 'Il valore della proprietà MaxJsonLength si applica solo quando si crea in modo esplicito un&quot;istanza della <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Utilizzare il `jsonSerialization` elemento del file di configurazione per impostare la lunghezza massima per l&quot;istanza del serializzatore interno utilizzato dal livello di comunicazione asincrona. Per ulteriori informazioni sugli elementi di configurazione per la serializzazione, vedere [procedura: configurare i servizi ASP.NET AJAX Microsoft](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "La lunghezza massima delle stringhe JSON. Il valore predefinito è 2097152 caratteri, che equivale a 4 MB di dati stringa Unicode."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà è impostata su un valore che è minore di&1;."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Ottiene o imposta il limite per vincolare il numero di livelli dell&quot;oggetto da elaborare."
  remarks: "La proprietà RecursionLimit fa riferimento al numero di livelli nella gerarchia di oggetti che <xref:System.Web.Script.Serialization.JavaScriptSerializer>elaborerà nei casi seguenti:: se la <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe deserializza una stringa JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      -Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe si verifica un oggetto grafico durante la serializzazione.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Il valore di RecursionLimit si applica solo quando si crea in modo esplicito un&quot;istanza della <xref:System.Web.Script.Serialization.JavaScriptSerializer>classe.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Utilizzare il `jsonSerialization` elemento del file di configurazione per impostare il numero di livelli dell&quot;oggetto da elaborare per l&quot;istanza del serializzatore interno utilizzato dal livello di comunicazione asincrona. Per ulteriori informazioni sugli elementi di configurazione per la serializzazione, vedere [procedura: configurare i servizi ASP.NET AJAX Microsoft](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero di livelli dell&quot;oggetto. Il valore predefinito è 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà è impostata su un valore che è minore di&1;."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Registra un convertitore personalizzato con il <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> istanza."
  remarks: "È possibile registrare uno o più convertitori personalizzati con un <xref:System.Web.Script.Serialization.JavaScriptSerializer>istanza utilizzando il metodo RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Quando vengono registrati i convertitori personalizzati, <xref:System.Web.Script.Serialization.JavaScriptSerializer>utilizza i convertitori di tipi per serializzare i tipi gestiti e deserializzare stringhe JSON in tipi gestiti.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Più convertitori possono essere registrati con lo stesso <xref:System.Web.Script.Serialization.JavaScriptSerializer>istanza e i convertitori di tipi possono indicare il supporto per lo stesso tipo.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Di conseguenza, l&quot;ultimo convertitore registrato per un tipo specifico è quello che verrà usato da <xref:System.Web.Script.Serialization.JavaScriptSerializer>per serializzare il tipo.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Per ulteriori informazioni sui convertitori personalizzati, vedere la <xref:System.Web.Script.Serialization.JavaScriptConverter>classe.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "Matrice che contiene i convertitori personalizzati da registrare."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converte un oggetto in una stringa JSON."
  remarks: "Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer>istanza serializza un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Il metodo Serialize può inoltre generare eccezioni se l&quot;oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter>hanno causato la ricorsione del convertitore.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da serializzare."
    return:
      type: System.String
      description: "Stringa JSON serializzata."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La stringa JSON risultante supera il valore di <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - oppure - <code> obj </code> contiene un riferimento circolare. Un riferimento circolare si verifica quando un oggetto figlio è un riferimento a un oggetto padre e l&quot;oggetto padre è un riferimento all&quot;oggetto figlio."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il limite di ricorsione definito da <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>è stato superato.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Serializza un oggetto e scrive la stringa JSON risulta specificato <xref:System.Text.StringBuilder>oggetto.</xref:System.Text.StringBuilder>"
  remarks: "Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer>istanza serializza un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metodo può generare eccezioni anche se l&quot;oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter>hanno causato la ricorsione del convertitore.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da serializzare."
    - id: output
      type: System.Text.StringBuilder
      description: "Il <xref:System.Text.StringBuilder>oggetto utilizzato per scrivere la stringa JSON.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La stringa JSON risultante supera il valore di <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - oppure - <code> obj </code> contiene un riferimento circolare. Un riferimento circolare si verifica quando un oggetto figlio è un riferimento a un oggetto padre e l&quot;oggetto padre è un riferimento all&quot;oggetto figlio."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il limite di ricorsione definito da <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>è stato superato.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
