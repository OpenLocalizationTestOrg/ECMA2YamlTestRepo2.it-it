### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.AspLog
  id: AspLog
  children:
  - Microsoft.VisualBasic.Logging.AspLog.#ctor
  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  langs:
  - csharp
  name: AspLog
  nameWithType: AspLog
  fullName: Microsoft.VisualBasic.Logging.AspLog
  type: Class
  summary: "Fornisce una proprietà e metodi per la scrittura di eventi e informazioni sull&quot;eccezione ai listener di log dell&quot;applicazione."
  remarks: "Il `My.Application.Log` oggetto fornisce un punto di ingresso semplice da cui accedere il [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]di servizi di registrazione. Il `WriteEntry` e `WriteException` metodi scrivono i messaggi di listener di log dell&quot;applicazione. I listener possono essere configurati dal file di configurazione dell&quot;applicazione. Per ulteriori informazioni, vedere [procedura dettagliata: modifica di destinazione di scrittura delle informazioni con My](~/add/includes/ajax-current-ext-md.md) e [utilizzo dei log applicazione](~/add/includes/ajax-current-ext-md.md).       Il `My.Application.Log` l&quot;oggetto è disponibile solo per le applicazioni client. Per le applicazioni Web, utilizzare `My.Log`. Per ulteriori informazioni, vedere <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.</xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Application.Log` oggetto.      | Per | Vedere |   |--------|---------|   | Scrivere informazioni sugli eventi ai listener di log dell&quot;applicazione | [Procedura: scrivere messaggi di Log](~/add/includes/ajax-current-ext-md.md)|   | Scrive informazioni sull&quot;eccezione ai listener di log dell&quot;applicazione | [Procedura: registrare eccezioni](~/add/includes/ajax-current-ext-md.md)|   | Determinare dove `My.Application.Log` scrive informazioni |[ Procedura dettagliata: Individuazione di My in cui scrive le informazioni](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.Logging.Log
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> classe."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> classe."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> Il nome da assegnare al <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>oggetto property.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>"
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Crea un nuovo <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> e lo aggiunge al <xref:System.Diagnostics.TraceSource.Listeners*>insieme.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Questo metodo crea un nuovo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, imposta il nome nel `FileLog`e lo configura per registrare i messaggi con livello di gravità <xref:System.Diagnostics.SourceLevels>e versioni successive.</xref:System.Diagnostics.SourceLevels> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Il nuovo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>oggetto viene quindi aggiunto al <xref:System.Diagnostics.TraceSource.Listeners%2A>insieme.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Il <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>chiama il metodo se il <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>proprietà non è stata configurata.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> </xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> L&quot;origine di traccia può essere configurato nel file di configurazione dell&quot;applicazione."
  syntax:
    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Microsoft.VisualBasic.Logging.Log
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog
  nameWithType: AspLog.AspLog
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists
