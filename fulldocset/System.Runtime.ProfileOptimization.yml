### YamlMime:ManagedReference
items:
- uid: System.Runtime.ProfileOptimization
  id: ProfileOptimization
  children:
  - System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  - System.Runtime.ProfileOptimization.StartProfile(System.String)
  langs:
  - csharp
  name: ProfileOptimization
  nameWithType: ProfileOptimization
  fullName: System.Runtime.ProfileOptimization
  type: Class
  summary: "Migliora le prestazioni di avvio dei domini applicazione nelle applicazioni che richiedono il compilatore di just-in-time (JIT) eseguendo la compilazione in background dei metodi che si basano probabilmente da eseguire sui profili creati durante le compilazioni precedenti."
  remarks: "> [!IMPORTANT]> Ottimizzazioni guidate da profilo richiede un computer multicore. I metodi vengono ignorati in altri computer.       Ogni volta che si avvia l&quot;ottimizzazione del profilo in un dominio applicazione, viene letto il profilo che è stato creato durante l&quot;utilizzo precedente. Le informazioni nel profilo vengono utilizzate per la compilazione in background identificando i metodi che hanno maggiore probabili di essere eseguite durante l&quot;avvio. Nei computer multicore, ciò aumenta le probabilità che un metodo è già compilato al momento che è necessario affinché il thread principale dell&quot;applicazione è necessario chiamare il compilatore JIT.       Il file del profilo viene sovrascritto ogni utilizzo in modo che contenga sempre le informazioni più recenti sui metodi vengono usati durante l&quot;avvio.       I profili di ottimizzazione non sono limitati all&quot;avvio di dominio dell&quot;applicazione. Possono essere utilizzati per qualsiasi attività che richiedono un uso massiccio del compilatore JIT. È possibile gestire più profili per un dominio applicazione in modo che ogni tale attività ha un proprio profilo.       Per usare i profili di ottimizzazione in un dominio applicazione, è necessario chiamare il <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>(metodo) e specificare la cartella in cui sono archiviati i profili.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> La cartella deve esistere già. Per iniziare a utilizzare un profilo, chiamare il <xref:System.Runtime.ProfileOptimization.StartProfile%2A>(metodo) e specificare il nome del file del profilo.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se il file non è stato registrato in precedenza, viene creato al primo utilizzo. Non sono previsti tempi di benefit prima delle prestazioni viene creato un profilo.       Ottimizzazione del profilo non modifica l&quot;ordine in cui vengono eseguiti i metodi. Metodi non vengono eseguiti sul thread in background; Se un metodo viene compilato ma mai chiamato, viene semplicemente non utilizzato. Se un file del profilo è danneggiato o non possono essere scritti nella cartella specificata (ad esempio, perché la cartella non esiste), l&quot;esecuzione del programma continua senza analisi di ottimizzazione."
  syntax:
    content: public static class ProfileOptimization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  id: SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Abilita l&quot;ottimizzazione di profilatura per il dominio applicazione corrente e imposta la cartella in cui sono archiviati i file del profilo di ottimizzazione. In un computer singolo core, il metodo viene ignorato."
  remarks: "È necessario chiamare questo metodo prima di chiamare il <xref:System.Runtime.ProfileOptimization.StartProfile%2A>metodo per la prima volta nel dominio applicazione corrente.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se si chiama SetProfileRoot più volte nello stesso dominio applicazione, tutte le chiamate dopo la prima vengono ignorate.       La cartella specificata deve esistere. Se non esiste, questo metodo non viene creata e non si verifica.       Nei computer che non dispone di più core, questo metodo viene ignorato."
  syntax:
    content: public static void SetProfileRoot (string directoryPath);
    parameters:
    - id: directoryPath
      type: System.String
      description: "Il percorso completo alla cartella in cui sono archiviati i file del profilo per il dominio applicazione corrente."
  overload: System.Runtime.ProfileOptimization.SetProfileRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  id: StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Avvia la compilazione di just-in-time (JIT) dei metodi che sono stati registrati in precedenza nel file di profilo specificato in un thread in background. Avvia il processo di registrazione dei metodi usano corrente, che sovrascrive i file del profilo specificato in un secondo momento."
  remarks: "Se il profilo specificato sia presente nella cartella specificata per il <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>metodo, le informazioni contenute viene utilizzato per determinare l&quot;ordine in cui vengono compilati i metodi sul thread in background.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> Se non esiste già e avvia la registrazione dell&quot;utilizzo di metodo, il metodo StartProfile crea il profilo.       Vengono registrati solo i metodi che vengono chiamati in realtà, indipendentemente dal fatto che sono stati compilati sul thread in background o nel thread principale dell&quot;applicazione. Se è necessario chiamarlo prima che il thread in background ha compilato l&quot;applicazione, un metodo viene compilato nel thread principale dell&quot;applicazione.       Il codice che esegue la registrazione di tiene traccia della frequenza in cui vengono compilati i metodi, inclusi i metodi che vengono compilati in entrambi i thread in background e nel thread principale. Quando la frequenza scende sotto un livello predeterminato, registrazione viene arrestata. La registrazione si interrompe anche se la velocità di compilazione JIT supera un limite predeterminato.       Se il <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>(metodo) non è stato chiamato per il dominio applicazione corrente oppure se il computer non dispone di più core, il metodo StartProfile non ha alcun effetto.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>"
  syntax:
    content: public static void StartProfile (string profile);
    parameters:
    - id: profile
      type: System.String
      description: "Il nome file del profilo da utilizzare."
  overload: System.Runtime.ProfileOptimization.StartProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
- uid: System.Runtime.ProfileOptimization.SetProfileRoot*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot
  nameWithType: ProfileOptimization.SetProfileRoot
- uid: System.Runtime.ProfileOptimization.StartProfile*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile
  nameWithType: ProfileOptimization.StartProfile
