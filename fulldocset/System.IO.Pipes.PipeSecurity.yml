### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "Rappresenta il controllo di accesso e controllo di sicurezza per una pipe."
  remarks: "La classe PipeSecurity specifica i diritti di accesso per una pipe e come controllare i tentativi di accesso.  Questa classe rappresenta i diritti di accesso e controllo come un set di regole. Ogni regola di accesso è rappresentato da un <xref:System.IO.Pipes.PipeAccessRule>dell&quot;oggetto, mentre ogni regola è rappresentata da un <xref:System.IO.Pipes.PipeAuditRule>oggetto.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       La classe PipeSecurity è un&quot;astrazione del sistema di sicurezza file di Microsoft Windows sottostante. In questo sistema, ogni pipe dispone di un elenco di controllo di accesso discrezionale (DACL), che controlla l&quot;accesso alla pipe e un elenco di controllo di accesso di sistema (SACL), che specifica i tentativi di accesso da controllare.  Il <xref:System.IO.Pipes.PipeAccessRule>e <xref:System.IO.Pipes.PipeAuditRule>classi sono astrazioni delle voci di controllo di accesso (ACE) che comprendono DACL e SACL.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       La classe PipeSecurity nasconde molti dettagli degli elenchi DACL e SACL; non è necessario preoccuparsi ACE ordinamento o DACL null.       Utilizzare la classe PipeSecurity per recuperare, aggiungere o modificare le regole di accesso che rappresentano gli elenchi DACL e SACL di una pipe.       Per mantenere l&quot;accesso a nuova o modificata o le regole a una pipe di controllo, utilizzare il <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>metodo.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Per recuperare l&quot;accesso o controllare le regole da un file esistente, utilizzare il <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>metodo.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> classe."
  remarks: "Questo costruttore crea un oggetto vuoto <xref:System.IO.Pipes.PipeSecurity>oggetto che non si basa su una pipe esistente.</xref:System.IO.Pipes.PipeSecurity> È quindi possibile popolare l&quot;oggetto con informazioni sul controllo di accesso e applicarlo a una pipe.       È possibile aggiungere l&quot;accesso o regole di controllo di <xref:System.IO.Pipes.PipeSecurity>utilizzando il <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>metodo.</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> </xref:System.IO.Pipes.PipeSecurity> È possibile rimuovere l&quot;accesso o utilizzando le regole di controllo di <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>metodo.</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>       Per mantenere l&quot;accesso a nuova o modificata o le regole a una pipe di controllo, utilizzare il <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>metodo.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Per recuperare l&quot;accesso o controllare le regole da un file esistente, utilizzare il <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>metodo.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene il <xref:System.Type>dell&quot;oggetto a protezione diretta a cui è associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto.</xref:System.Type>"
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.ObjectSecurity>classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso.</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Il tipo dell&quot;oggetto a protezione diretta a cui è associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> classe con i valori specificati."
  remarks: "Il metodo consigliato per creare regole di controllo di accesso consiste nell&quot;utilizzare i costruttori di <xref:System.IO.Pipes.PipeAccessRule>classe.</xref:System.IO.Pipes.PipeAccessRule>"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "L&quot;identità che viene applicata la regola di accesso. Deve essere un oggetto che può essere eseguito il cast come un <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
    - id: accessMask
      type: System.Int32
      description: "La maschera di accesso di questa regola. La maschera di accesso è una raccolta a 32 bit di bit anonimi, il cui significato è definito dai singoli integratori"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa regola è ereditata da un contenitore padre. in caso contrario false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valori che specifica le proprietà di ereditarietà della regola di accesso."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valori che specifica se le regole di accesso ereditate vengono propagate automaticamente. I flag di propagazione sono ignorati se `inheritanceFlags` è impostato su <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Specifica il tipo di controllo di accesso valido."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Il <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> oggetto creato da questo metodo."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, o <code>type</code> specifica un valore non valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>accessMask</code> è zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>non è di tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> né di un tipo, ad esempio <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, che può essere convertito nel tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene il <xref:System.Type>dell&quot;oggetto che è associato alle regole di accesso corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto.</xref:System.Type>"
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.ObjectSecurity>classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso.</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Il tipo di oggetto associato alle regole di accesso corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Aggiunge una regola di accesso per l&quot;accesso controllo elenco discrezionale (DACL) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: 'Il metodo AddAccessRule aggiunge una nuova regola per l&quot;elenco di regole che contiene un oggetto <xref:System.IO.Pipes.PipeSecurity>. Se per la regola specificata esiste già un elenco di controllo di accesso (ACL), il metodo AddAccessRule aggiunge comunque la regola, con una sola eccezione: un <xref:System.IO.Pipes.PipeAccessRule>oggetto creato tramite il <xref:System.Security.AccessControl.AccessControlType>valore sostituisce un oggetto che viene creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.IO.Pipes.PipeSecurity>'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Regola di accesso da aggiungere."
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Aggiunge una regola di controllo per elenco SACL (System Access Control List) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il AddAuditRule metodo aggiunge una nuova regola di controllo all&quot;elenco di regole che un <xref:System.IO.Pipes.PipeSecurity>oggetto contiene.</xref:System.IO.Pipes.PipeSecurity>       Se per la regola specificata esiste già una regola di controllo, il metodo AddAuditRule sarà comunque in grado di aggiungere la regola."
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Regola di controllo da aggiungere."
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> classe con i valori specificati."
  remarks: "Il metodo consigliato per creare regole di controllo consiste nell&quot;utilizzare i costruttori di <xref:System.IO.Pipes.PipeAuditRule>classe.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "L&quot;identità che viene applicata la regola di accesso. Deve essere un oggetto che può essere eseguito il cast come un <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
    - id: accessMask
      type: System.Int32
      description: "La maschera di accesso di questa regola. La maschera di accesso è una raccolta a 32 bit di bit anonimi, il cui significato è definito dai singoli integratori"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa regola è ereditata da un contenitore padre. in caso contrario, false..."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valori che specifica le proprietà di ereditarietà della regola di accesso."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valori che specifica se le regole di accesso ereditate vengono propagate automaticamente. I flag di propagazione sono ignorati se `inheritanceFlags` è impostato su <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> tipo di controllo di valori che specifica l&quot;accesso valido."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Il <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> oggetto creato da questo metodo."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <code> accessMask </code> proprietà è zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> identityReference </code> è una proprietà non è di tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> né di un tipo, ad esempio <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, che può essere convertito nel tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene il <xref:System.Type>oggetto associato alle regole di controllo dell&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto.</xref:System.Type>"
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.ObjectSecurity>classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso.</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Il tipo di oggetto associato alle regole di controllo dell&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Salva le sezioni specificate del descrittore di sicurezza associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto in un archivio permanente."
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "L&quot;handle del tipo di entità a protezione diretta dell&quot;oggetto che corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> associato all&quot;oggetto."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Salva le sezioni specificate del descrittore di sicurezza associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto in un archivio permanente."
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del tipo di entità a protezione diretta dell&quot;oggetto che corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> associato all&quot;oggetto."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove una regola di accesso da di accesso controllo elenco discrezionale (DACL) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo RemoveAccessRule rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>le regole di accesso dall&quot;oggetto corrente <xref:System.IO.Pipes.PipeSecurity>oggetto.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType>regole di accesso per un utente passando un <xref:System.IO.Pipes.PipeAccessRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.IO.Pipes.PipeAccessRights>valore e un account utente.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> Il metodo RemoveAccessRule rimuove le regole di negazione che specificano il <xref:System.IO.Pipes.PipeAccessRights>valore o <xref:System.IO.Pipes.PipeAccessRights>valore.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "La regola di accesso da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione ha esito positivo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove la regola di accesso specificato da di accesso controllo elenco discrezionale (DACL) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>le regole di accesso dall&quot;oggetto corrente <xref:System.IO.Pipes.PipeSecurity>oggetto.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType>regole di accesso per un utente passando un <xref:System.IO.Pipes.PipeAccessRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.IO.Pipes.PipeAccessRights>valore e un account utente.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>metodo rimuove le regole di negazione che specificano il <xref:System.IO.Pipes.PipeAccessRights>valore o <xref:System.IO.Pipes.PipeAccessRights>valore.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "La regola di accesso da rimuovere."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove una regola di controllo dall&quot;elenco SACL (System Access Control List) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo RemoveAuditRule rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>regole di controllo o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>audit regole corrente <xref:System.IO.Pipes.PipeSecurity>oggetto.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType>controllare le regole per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.AuditFlags>valore e un account utente.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAuditRule rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags>valore o <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Regola di controllo da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la regola di controllo è stato rimosso. in caso contrario,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove tutte le regole di controllo che hanno lo stesso identificatore di sicurezza della regola di controllo specificato dall&quot;elenco SACL (System Access Control List) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo RemoveAuditRuleAll rimuove tutte le regole di controllo per l&quot;utente specificato.  Ignora tutti i valori di <xref:System.IO.Pipes.PipeAuditRule>oggetto tranne l&quot;account utente.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Regola di controllo da rimuovere."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove la regola di controllo specificato dall&quot;elenco SACL (System Access Control List) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo RemoveAuditRuleSpecific rimuove il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType>controllo regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType>regola di controllo dall&quot;oggetto corrente <xref:System.IO.Pipes.PipeSecurity>oggetto.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType>regola di controllo per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.AuditFlags>valore e un account utente.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAuditRuleSpecific rimuove solo una regola che specifica il <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags>  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Regola di controllo da rimuovere."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rimuove tutte le regole di accesso nell&quot;accesso controllo elenco discrezionale (DACL) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> dell&quot;oggetto e quindi aggiunge la regola di accesso specificato."
  remarks: "Il metodo ResetAccessRule aggiunge la regola di elenco (ACL) di controllo di accesso specificato o lo sovrascrive qualsiasi regola ACL identica corrispondente il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights>valore e il metodo ResetAccessRule individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Se il metodo ResetAccessRule consente di trovare una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica anche verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Regola di accesso da aggiungere."
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta una regola di accesso nell&quot;accesso controllo elenco discrezionale (DACL) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo SetAccessRule aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il <xref:System.IO.Pipes.PipeAccessRights>valore il `rule` parametro.</xref:System.IO.Pipes.PipeAccessRights>  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights>valore e il metodo SetAccessRule individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Se il metodo SetAccessRule consente di trovare una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica non verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "La regola da impostare."
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta una regola di controllo nell&quot;elenco SACL (System Access Control List) associato all&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto."
  remarks: "Il metodo di SetAuditRule aggiunge la regola di controllo specificata o sovrascrive qualsiasi regola di controllo identica corrispondente il <xref:System.IO.Pipes.PipeAccessRights>valore il `rule` parametro.</xref:System.IO.Pipes.PipeAccessRights>  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights>valore e il metodo SetAuditRule individua una regola di controllo identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Se il metodo SetAuditRule individua una regola di controllo identica che specifica il <xref:System.IO.Pipes.PipeAccessRights>valore, la regola identica non verrà sovrascritta.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "La regola da impostare."
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
