### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.DataAttribute
  id: DataAttribute
  children:
  - System.Data.Linq.Mapping.DataAttribute.#ctor
  - System.Data.Linq.Mapping.DataAttribute.Name
  - System.Data.Linq.Mapping.DataAttribute.Storage
  langs:
  - csharp
  name: DataAttribute
  nameWithType: DataAttribute
  fullName: System.Data.Linq.Mapping.DataAttribute
  type: Class
  summary: "Fornisce i membri per descrivere gli attributi dei dati nelle colonne."
  syntax:
    content: 'public abstract class DataAttribute : Attribute'
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: DataAttribute()
  nameWithType: DataAttribute.DataAttribute()
  fullName: System.Data.Linq.Mapping.DataAttribute.DataAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Linq.Mapping.DataAttribute&quot;> </xref> classe."
  syntax:
    content: protected DataAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.DataAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DataAttribute.Name
  fullName: System.Data.Linq.Mapping.DataAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene o imposta il nome di una colonna."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome."
  overload: System.Data.Linq.Mapping.DataAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.Storage
  id: Storage
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: Storage
  nameWithType: DataAttribute.Storage
  fullName: System.Data.Linq.Mapping.DataAttribute.Storage
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene o imposta un campo di archiviazione privato per contenere il valore da una colonna."
  remarks: "I valori delle proprietà di archiviazione sono tra maiuscole e minuscole. Ad esempio, assicurarsi che i valori utilizzati nell&quot;attributo per la proprietà di archiviazione le maiuscole per i nomi di proprietà corrispondente utilizzato in un&quot; posizione nel codice. Questo vale per tutti i linguaggi di programmazione .NET, anche quelli che non sono in genere tra maiuscole e minuscole, tra cui [!INCLUDE[vb_current_short](~/add/includes/vb-current-short-md.md)]."
  example:
  - "```vb#  \n<Column(Storage:=_CustomerID)> _  \nPublic CustomerID As String   \n```  \n  \n```c#  \n[Column(Storage=\"_CustomerID\")]  \npublic string CustomerID  \n{  \n}  \n```"
  syntax:
    content: public string Storage { get; set; }
    return:
      type: System.String
      description: "Il nome del campo di archiviazione."
  overload: System.Data.Linq.Mapping.DataAttribute.Storage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: DataAttribute()
  nameWithType: DataAttribute.DataAttribute()
  fullName: System.Data.Linq.Mapping.DataAttribute.DataAttribute()
- uid: System.Data.Linq.Mapping.DataAttribute.Name
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Name
  nameWithType: DataAttribute.Name
  fullName: System.Data.Linq.Mapping.DataAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.DataAttribute.Storage
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Storage
  nameWithType: DataAttribute.Storage
  fullName: System.Data.Linq.Mapping.DataAttribute.Storage
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: DataAttribute
  nameWithType: DataAttribute.DataAttribute
- uid: System.Data.Linq.Mapping.DataAttribute.Name*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Name
  nameWithType: DataAttribute.Name
- uid: System.Data.Linq.Mapping.DataAttribute.Storage*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Storage
  nameWithType: DataAttribute.Storage
