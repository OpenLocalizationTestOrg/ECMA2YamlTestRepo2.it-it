### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TableRowCollection
  id: TableRowCollection
  children:
  - System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  - System.Web.UI.WebControls.TableRowCollection.Clear
  - System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.Count
  - System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  - System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  - System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  - System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.SyncRoot
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TableRowCollection
  nameWithType: TableRowCollection
  fullName: System.Web.UI.WebControls.TableRowCollection
  type: Class
  summary: "Incapsula una raccolta di <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> gli oggetti che rappresentano una singola riga in un <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controllo. Questa classe non può essere ereditata."
  remarks: "Utilizzare questa classe per gestire a livello di codice un insieme di <xref:System.Web.UI.WebControls.TableRow>oggetti.</xref:System.Web.UI.WebControls.TableRow> Questa classe viene in genere utilizzata per aggiungere o rimuovere le righe da un <xref:System.Web.UI.WebControls.Table>controllo.</xref:System.Web.UI.WebControls.Table>      > [!NOTE] > A <xref:System.Web.UI.WebControls.Table>controllo contiene un <xref:System.Web.UI.WebControls.Table.Rows%2A>raccolta che rappresenta una raccolta di <xref:System.Web.UI.WebControls.TableRow>oggetti.</xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.Table> Ogni <xref:System.Web.UI.WebControls.TableRow>rappresenta una singola riga nella tabella e contiene un <xref:System.Web.UI.WebControls.TableRow.Cells%2A>raccolta che rappresenta una raccolta di <xref:System.Web.UI.WebControls.TableCell>oggetti.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> </xref:System.Web.UI.WebControls.TableRow> Questi <xref:System.Web.UI.WebControls.TableCell>oggetti rappresentano le singole celle nella tabella.</xref:System.Web.UI.WebControls.TableCell> Per ottenere una singola cella, è innanzitutto necessario ottenere un <xref:System.Web.UI.WebControls.TableRow>dal <xref:System.Web.UI.WebControls.Table.Rows%2A>raccolta di un <xref:System.Web.UI.WebControls.Table>controllo.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.TableRow> È quindi possibile ottenere una <xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.WebControls.TableRow.Cells%2A>raccolta di <xref:System.Web.UI.WebControls.TableRow>.</xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to programmatically add rows to a table by adding <xref:System.Web.UI.WebControls.TableRow> objects, which represent the rows of the table, to the <xref:System.Web.UI.WebControls.Table> control through the <xref:System.Web.UI.WebControls.Table.Rows%2A> property.  \n  \n [!code-cs[Classic TableRowCollection Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_314_1.aspx)]\n [!code-vb[Classic TableRowCollection Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_314_1.aspx)]\n [!code-xml[Classic TableRowCollection Example#1](~/add/codesnippet/xml/t-system.web.ui.webcontr_314_1.xml)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class TableRowCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  id: Add(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Add(TableRow)
  nameWithType: TableRowCollection.Add(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Add(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto alla fine del <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questo metodo per aggiungere un <xref:System.Web.UI.WebControls.TableRow>oggetto alla fine di un <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how use the Add method to add a <xref:System.Web.UI.WebControls.TableRow> object to a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.Add Example#1](~/add/codesnippet/visualbasic/fa03e778-5b68-4583-ab5c-_1.aspx)]\n [!code-cs[Classic TableRowCollection.Add Example#1](~/add/codesnippet/csharp/fa03e778-5b68-4583-ab5c-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da aggiungere al <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "L&quot;indice del <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: AddAt(Int32,TableRow)
  nameWithType: TableRowCollection.AddAt(Int32,TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.AddAt(Int32,TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dell&quot;oggetto per il <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Utilizzare questo metodo per inserire l&quot;oggetto specificato <xref:System.Web.UI.WebControls.TableRow>in un <xref:System.Web.UI.WebControls.TableRowCollection>in corrispondenza dell&quot;indice specificato.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to add a <xref:System.Web.UI.WebControls.TableRow> object to the middle of a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.AddAt Example#1](~/add/codesnippet/visualbasic/cd646d24-6208-41b2-9808-_1.aspx)]\n [!code-cs[Classic TableRowCollection.AddAt Example#1](~/add/codesnippet/csharp/cd646d24-6208-41b2-9808-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: index
      type: System.Int32
      description: "Il percorso nel <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> in cui aggiungere il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref>."
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da aggiungere al <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  id: AddRange(System.Web.UI.WebControls.TableRow[])
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: AddRange(TableRow[])
  nameWithType: TableRowCollection.AddRange(TableRow[])
  fullName: System.Web.UI.WebControls.TableRowCollection.AddRange(TableRow[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetti dalla matrice specificata alla fine della raccolta."
  remarks: "Utilizzare il metodo AddRange per accodare il <xref:System.Web.UI.WebControls.TableRow>oggetti dalla matrice specificata alla raccolta.</xref:System.Web.UI.WebControls.TableRow> Questo metodo viene in genere utilizzato quando si crea una tabella. Per creare una tabella, creare prima una matrice di <xref:System.Web.UI.WebControls.TableRow>oggetti per rappresentare le righe della tabella.</xref:System.Web.UI.WebControls.TableRow> Successivamente, utilizzare il metodo AddRange, passando una matrice come argomento, per aggiungere il <xref:System.Web.UI.WebControls.TableRow>oggetti alla raccolta.</xref:System.Web.UI.WebControls.TableRow>"
  syntax:
    content: public void AddRange (System.Web.UI.WebControls.TableRow[] rows);
    parameters:
    - id: rows
      type: System.Web.UI.WebControls.TableRow[]
      description: "La matrice che contiene il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetti da aggiungere alla raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di <code> rows </code> parametro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TableRowCollection.Clear()
  fullName: System.Web.UI.WebControls.TableRowCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove tutti <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dei controlli di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questo metodo per rimuovere tutti <xref:System.Web.UI.WebControls.TableRow>oggetti dal <xref:System.Web.UI.WebControls.TableRowCollection>e impostare il <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A>proprietà su 0.</xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> </xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the Clear method to remove all <xref:System.Web.UI.WebControls.TableRow> objects from the <xref:System.Web.UI.WebControls.TableRowCollection> of the table and replace them with new <xref:System.Web.UI.WebControls.TableRow> objects.  \n  \n [!code-cs[Classic TableRowCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_204_1.aspx)]\n [!code-vb[Classic TableRowCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_204_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TableRowCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TableRowCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia gli elementi dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> specificata &lt;xref:System.Array?displayProperty=fullName&gt;, a partire dall&quot;indice specificato di &lt;xref:System.Array?displayProperty=fullName&gt;."
  remarks: "Utilizzare questo metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.TableRowCollection>specificato <xref:System.Array?displayProperty=fullName>, a partire dall&quot;indice specificato.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableRowCollection>      > [!NOTE] > Il `array` parametro deve essere in base zero <xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the items from the <xref:System.Web.UI.WebControls.TableRowCollection> into the specified array.  \n  \n [!code-cs[Classic TableRowCollection.CopyTo Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[Classic TableRowCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "In base zero &lt;xref:System.Array?displayProperty=fullName&gt; che riceve gli elementi copiati dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "La prima posizione nell&quot;oggetto specificato &lt;xref:System.Array?displayProperty=fullName&gt; per ricevere il contenuto copiato."
  overload: System.Web.UI.WebControls.TableRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: TableRowCollection.Count
  fullName: System.Web.UI.WebControls.TableRowCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero di <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> gli oggetti di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questa proprietà per determinare il numero di righe in <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> La proprietà Count viene spesso utilizzata quando si scorre la raccolta per determinare il limite superiore."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of rows in the <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-cs[Classic TableRowCollection.Count Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1046_1.cs)]\n [!code-vb[Classic TableRowCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1046_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> gli oggetti di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>. Il valore predefinito è 0."
  overload: System.Web.UI.WebControls.TableRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TableRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implementato l&quot;oggetto che contiene tutti <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> gli oggetti all&quot;interno di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questo metodo per creare un <xref:System.Collections.IEnumerator?displayProperty=fullName>oggetto che può scorrere facilmente per ottenere ogni elemento nella <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> implementato</xref:System.Collections.IEnumerator?displayProperty=fullName>       Utilizzare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà per ottenere l&quot;elemento attualmente fa riferimento nella raccolta.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       Utilizzare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo per spostare l&quot;elemento successivo della raccolta.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       Utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>eseguire il metodo per spostare l&quot;enumeratore per la posizione iniziale.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo deve essere chiamato dopo la creazione di un <xref:System.Collections.IEnumerator?displayProperty=fullName>implementato oggetto o l&quot;utilizzo di <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>per spostare l&quot;enumeratore al primo elemento nella raccolta.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> In caso contrario, l&quot;elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà non è definita.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> implemented object that is iterated through to display the items in the table.  \n  \n [!code-vb[Classic TableRowCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_85_1.aspx)]\n [!code-cs[Classic TableRowCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_85_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Oggetto &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implementato l&quot;oggetto che contiene tutti <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> gli oggetti all&quot;interno di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  id: GetRowIndex(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: GetRowIndex(TableRow)
  nameWithType: TableRowCollection.GetRowIndex(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un valore che rappresenta l&quot;indice dell&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questo metodo per determinare l&quot;indice di specificato <xref:System.Web.UI.WebControls.TableRow>in <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow> Se l&quot;oggetto specificato <xref:System.Web.UI.WebControls.TableRow>non è viene trovato, viene restituito un indice di -1.</xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the GetRowIndex property to display the row index of the selected cell.  \n  \n [!code-cs[Classic TableRowCollection.GetRowIndex Example#1](~/add/codesnippet/csharp/5648ad88-ba1f-445d-9567-_1.aspx)]\n [!code-vb[Classic TableRowCollection.GetRowIndex Example#1](~/add/codesnippet/visualbasic/5648ad88-ba1f-445d-9567-_1.aspx)]"
  syntax:
    content: public int GetRowIndex (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da cercare nel <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "La posizione di indice ordinale dell&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> all&quot;interno della raccolta. Il valore predefinito è -1, che indica che l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> non è stato trovato."
  overload: System.Web.UI.WebControls.TableRowCollection.GetRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> è di sola lettura."
  remarks: "Questa proprietà restituisce sempre `false` per indicare che il <xref:System.Web.UI.WebControls.TableRowCollection>possono essere scritti in tutti i casi.</xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>per tutti i casi."
  overload: System.Web.UI.WebControls.TableRowCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se l&quot;accesso per il <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> è sincronizzato (thread-safe)."
  remarks: "Questa proprietà è derivata da <xref:System.Collections.ICollection?displayProperty=fullName>e viene eseguito l&quot;override per restituire sempre `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A>proprietà, vedere il <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>per tutti i casi."
  overload: System.Web.UI.WebControls.TableRowCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TableRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Utilizzare l&quot;indicizzatore per ottenere un singolo <xref:System.Web.UI.WebControls.TableRow>dal <xref:System.Web.UI.WebControls.TableRowCollection>in corrispondenza dell&quot;indice specificato utilizzando la notazione di matrice semplice.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the indexer to get a <xref:System.Web.UI.WebControls.TableRow> from a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-cs[Classic TableRowCollection.this Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1263_1.aspx)]\n [!code-vb[Classic TableRowCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1263_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Un valore di indice ordinale che specifica quali <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da restituire. Questo indice è in base zero."
    return:
      type: System.Web.UI.WebControls.TableRow
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> che rappresenta un elemento di <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  id: Remove(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Remove(TableRow)
  nameWithType: TableRowCollection.Remove(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Remove(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "Utilizzare questo metodo per rimuovere lo specificato <xref:System.Web.UI.WebControls.TableRow>da un <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the Remove method to remove a row from the table. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.Remove Example#1](~/add/codesnippet/visualbasic/61877c15-b732-4ebf-be54-_1.aspx)]\n [!code-cs[Classic TableRowCollection.Remove Example#1](~/add/codesnippet/csharp/61877c15-b732-4ebf-be54-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da rimuovere dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TableRowCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove un <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Utilizzare questo metodo per rimuovere un <xref:System.Web.UI.WebControls.TableRow>dal <xref:System.Web.UI.WebControls.TableRowCollection>in corrispondenza dell&quot;indice specificato.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to remove a row from the table. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class. Also note that the index of the <xref:System.Web.UI.WebControls.Table.Rows%2A> collection is zero-based.  \n  \n [!code-vb[Classic TableRowCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_201_1.aspx)]\n [!code-cs[Classic TableRowCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_201_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice del <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> oggetto da rimuovere dal <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;oggetto che può essere utilizzato per sincronizzare l&quot;accesso al <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>."
  remarks: "L&quot;oggetto restituito in questa implementazione è il <xref:System.Web.UI.WebControls.TableRowCollection>stesso.</xref:System.Web.UI.WebControls.TableRowCollection>       Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A>proprietà, vedere il <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge un oggetto alla raccolta."
  remarks: "In genere, è consigliabile utilizzare il <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=fullName>metodo per aggiungere un elemento a un <xref:System.Web.UI.WebControls.TableRowCollection>oggetto.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=fullName>       Il metodo IList è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: int IList.Add (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da aggiungere alla raccolta."
    return:
      type: System.Int32
      description: "Indice in corrispondenza del quale l&quot;oggetto viene aggiunto alla raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se l&quot;oggetto specificato è contenuto all&quot;interno della raccolta."
  remarks: "Il metodo IList.Contains è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: bool IList.Contains (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da individuare all&quot;interno della raccolta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto è incluso nella raccolta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cerca l&quot;oggetto specificato e restituisce l&quot;indice in base zero della prima occorrenza all&quot;interno della raccolta."
  remarks: "In genere, è consigliabile utilizzare il <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A>metodo per ottenere l&quot;indice di un elemento in un <xref:System.Web.UI.WebControls.TableRowCollection>oggetto.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A>       Il metodo IList.IndexOf è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: int IList.IndexOf (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da individuare all&quot;interno della raccolta."
    return:
      type: System.Int32
      description: "L&quot;indice in base zero della prima occorrenza dell&quot;oggetto nella raccolta. in caso contrario, -1 se l&quot;oggetto non è presente nella raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inserisce un oggetto nella raccolta in corrispondenza dell&quot;indice specificato."
  remarks: "In genere, è consigliabile utilizzare il <xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A>metodo per aggiungere un elemento a un <xref:System.Web.UI.WebControls.TableRowCollection>oggetto.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A>       Il metodo IList. Insert è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: void IList.Insert (int index, object o);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero all&quot;interno della raccolta in corrispondenza del quale inserire l&quot;oggetto."
    - id: o
      type: System.Object
      description: "Oggetto da inserire nella raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Collections.IList.IsFixedSize*>.</xref:System.Collections.IList.IsFixedSize*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza per il <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elenco ha dimensioni fisse. in caso contrario,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableRowCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Collections.IList.Item*>.</xref:System.Collections.IList.Item*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza per il <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero dell&quot;elemento da ottenere o impostare."
    return:
      type: System.Object
      description: "L&quot;elemento in corrispondenza dell&quot;indice specificato."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove un oggetto dalla raccolta."
  remarks: "In genere, è consigliabile utilizzare il <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=fullName>per rimuovere un elemento da un <xref:System.Web.UI.WebControls.TableRowCollection>oggetto.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=fullName>       Il metodo IList.Remove è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.TableRowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IList>interfaccia.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: void IList.Remove (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da rimuovere dalla raccolta."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Add(TableRow)
  nameWithType: TableRowCollection.Add(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Add(TableRow)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TableRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableRow
  nameWithType: TableRow
  fullName: System.Web.UI.WebControls.TableRow
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddAt(Int32,TableRow)
  nameWithType: TableRowCollection.AddAt(Int32,TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.AddAt(Int32,TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddRange(TableRow[])
  nameWithType: TableRowCollection.AddRange(TableRow[])
  fullName: System.Web.UI.WebControls.TableRowCollection.AddRange(TableRow[])
- uid: System.Web.UI.WebControls.TableRow[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableRow
  nameWithType: TableRow
  fullName: System.Web.UI.WebControls.TableRow[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TableRow
    name: TableRow
    nameWithType: TableRow
    fullName: TableRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TableRowCollection.Clear
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Clear()
  nameWithType: TableRowCollection.Clear()
  fullName: System.Web.UI.WebControls.TableRowCollection.Clear()
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TableRowCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TableRowCollection.Count
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Count
  nameWithType: TableRowCollection.Count
  fullName: System.Web.UI.WebControls.TableRowCollection.Count
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TableRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetRowIndex(TableRow)
  nameWithType: TableRowCollection.GetRowIndex(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TableRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Remove(TableRow)
  nameWithType: TableRowCollection.Remove(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Remove(TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TableRowCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableRowCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.Add*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Add
  nameWithType: TableRowCollection.Add
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddAt
  nameWithType: TableRowCollection.AddAt
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddRange
  nameWithType: TableRowCollection.AddRange
- uid: System.Web.UI.WebControls.TableRowCollection.Clear*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Clear
  nameWithType: TableRowCollection.Clear
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: TableRowCollection.CopyTo
- uid: System.Web.UI.WebControls.TableRowCollection.Count*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Count
  nameWithType: TableRowCollection.Count
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TableRowCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetRowIndex
  nameWithType: TableRowCollection.GetRowIndex
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableRowCollection.Item*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Item
  nameWithType: TableRowCollection.Item
- uid: System.Web.UI.WebControls.TableRowCollection.Remove*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Remove
  nameWithType: TableRowCollection.Remove
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TableRowCollection.RemoveAt
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TableRowCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TableRowCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TableRowCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TableRowCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TableRowCollection.System.Collections.IList.Remove
