### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Rfc2898DeriveBytes
  id: Rfc2898DeriveBytes
  children:
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  - System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  - System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  langs:
  - csharp
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes
  type: Class
  summary: "Implementa basato su password chiave di funzionalità di derivazione, PBKDF2, usando un generatore di numeri pseudo-casuale basato su <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>."
  remarks: "Rfc2898DeriveBytes accetta una password, un valore salt e un conteggio delle iterazioni e quindi genera chiavi tramite chiamate al <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>metodo.</xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La classe Rfc2898DeriveBytes può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri. In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile nel [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  example:
  - "The following code example uses the Rfc2898DeriveBytes class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/t-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/t-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/t-system.security.crypto_117_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes
  inheritance:
  - System.Object
  - System.Security.Cryptography.DeriveBytes
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DeriveBytes.Dispose
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe utilizzando una password e un salt per derivare la chiave."
  remarks: "La dimensione del salt deve essere di 8 byte o superiori.       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile nel [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/7aa0756c-8905-4e75-ae9a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/7aa0756c-8905-4e75-ae9a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/7aa0756c-8905-4e75-ae9a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt);
    parameters:
    - id: password
      type: System.String
      description: "La password utilizzata per derivare la chiave."
    - id: salt
      type: System.Byte[]
      description: "Salt della chiave utilizzato per derivare la chiave."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte o il conteggio delle iterazioni è inferiore a 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La password o un valore salt è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe utilizzando la password e la dimensione del salt per derivare la chiave."
  remarks: "La dimensione del salt deve essere di 8 byte o superiori.       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile nel [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize);
    parameters:
    - id: password
      type: System.String
      description: "La password utilizzata per derivare la chiave."
    - id: saltSize
      type: System.Int32
      description: "La dimensione del salt casuale che si desidera generare la classe."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La password o un valore salt è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe utilizzando una password, un valore salt e il numero di iterazioni per derivare la chiave."
  remarks: "La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero. Il numero minimo consigliato di iterazioni è 1000.       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile nel [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.Byte[]
      description: "La password utilizzata per derivare la chiave."
    - id: salt
      type: System.Byte[]
      description: "Salt della chiave utilizzato per derivare la chiave."
    - id: iterations
      type: System.Int32
      description: "Il numero di iterazioni per l&quot;operazione."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte o il conteggio delle iterazioni è inferiore a 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La password o un valore salt è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe utilizzando una password, un valore salt e il numero di iterazioni per derivare la chiave."
  remarks: "La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero. Il numero minimo consigliato di iterazioni è 1000.       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile nel [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/8b79aa42-3b6a-4a39-985a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/8b79aa42-3b6a-4a39-985a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/8b79aa42-3b6a-4a39-985a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "La password utilizzata per derivare la chiave."
    - id: salt
      type: System.Byte[]
      description: "Salt della chiave utilizzato per derivare la chiave."
    - id: iterations
      type: System.Int32
      description: "Il numero di iterazioni per l&quot;operazione."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte o il conteggio delle iterazioni è inferiore a 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La password o un valore salt è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe utilizzando una password, una dimensione del salt e il numero di iterazioni per derivare la chiave."
  remarks: "La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero. Il numero minimo consigliato di iterazioni è 1000.       RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt. PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare. La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.       Per ulteriori informazioni su PBKDF2, vedere RFC 2898, &quot;PKCS #5: basato su Password di crittografia specifica versione 2.0,&quot; disponibile di [richiesta per il sito Web di commenti](http://go.microsoft.com/fwlink/?LinkID=37119). Per informazioni dettagliate, vedere sezione 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Mai hardcoded una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly tramite la [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), utilizzando un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "La password utilizzata per derivare la chiave."
    - id: saltSize
      type: System.Int32
      description: "La dimensione del salt casuale che si desidera generare la classe."
    - id: iterations
      type: System.Int32
      description: "Il numero di iterazioni per l&quot;operazione."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte o il conteggio delle iterazioni è inferiore a 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La password o un valore salt è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>iterations </code>non compreso nell&quot;intervallo. Questo parametro è richiesto un numero non negativo."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  id: CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Deriva da una chiave di crittografia di <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> oggetto."
  remarks: "Questa funzione è un wrapper per la funzione CryptoAPI CryptDeriveKey () e verrà fornita interoperabilità con applicazioni tramite l&quot;API di crittografia.       Se il `keySize` parametro è impostato su 0 bit, viene utilizzata la dimensione della chiave predefinita per l&quot;algoritmo specificato."
  syntax:
    content: public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);
    parameters:
    - id: algname
      type: System.String
      description: "Il nome dell&quot;algoritmo per il quale derivare la chiave."
    - id: alghashname
      type: System.String
      description: "Il nome dell&quot;algoritmo hash da usare per derivare la chiave."
    - id: keySize
      type: System.Int32
      description: "Le dimensioni della chiave in bit da derivare."
    - id: rgbIV
      type: System.Byte[]
      description: "Il vettore di inizializzazione (IV) da usare per derivare la chiave."
    return:
      type: System.Byte[]
      description: "La chiave derivata."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <code> keySize </code> parametro non è corretto.       - oppure - non è possibile acquisire il provider del servizio di crittografia (CSP).       - o - <code> algname </code> parametro non è un nome di algoritmo valido.       - o - <code> alghashname </code> parametro non è un nome di algoritmo hash valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> classe e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e `Finalize` metodo. `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. `Finalize`richiama `Dispose` con `disposing` impostato su `false`.       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Security.Cryptography.Rfc2898DeriveBytes>riferimenti.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Restituisce la chiave pseudocasuale per questo oggetto."
  remarks: "L&quot; <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe implementa la funzionalità PBKDF2 usando un generatore di numeri pseudocasuali in base a <xref:System.Security.Cryptography.HMACSHA1>.</xref:System.Security.Cryptography.HMACSHA1> </xref:System.Security.Cryptography.Rfc2898DeriveBytes> La <xref:System.Security.Cryptography.Rfc2898DeriveBytes>classe accetta una password, un valore salt e un conteggio delle iterazioni e quindi genera chiavi tramite chiamate al metodo GetBytes.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Chiamate ripetute a questo metodo non genera la stessa chiave. In alternativa, aggiungendo due chiamate del metodo GetBytes con un `cb` valore del parametro di `20` equivale a chiamare il metodo GetBytes una volta con un `cb` valore del parametro di `40`."
  example:
  - "The following example shows how to use the GetBytes method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#2](~/add/codesnippet/csharp/m-system.security.crypto_127_1.cs)]\n [!code-vb[rfc28981#2](~/add/codesnippet/visualbasic/m-system.security.crypto_127_1.vb)]\n [!code-cpp[rfc28981#2](~/add/codesnippet/cpp/m-system.security.crypto_127_1.cpp)]"
  syntax:
    content: public override byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Il numero di byte chiave pseudo-casuali da generare."
    return:
      type: System.Byte[]
      description: "Matrice di byte riempita con byte chiave pseudo-casuali."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>cb </code>non compreso nell&quot;intervallo. Questo parametro è richiesto un numero non negativo."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  id: IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta il numero di iterazioni per l&quot;operazione."
  remarks: "Conteggio delle iterazioni è il numero di volte in cui che viene eseguita un&quot;operazione. Per questo metodo, il conteggio deve essere maggiore di zero. Il numero minimo consigliato di iterazioni è 1000."
  example:
  - "The following example shows how to use the IterationCount property to display the number of iterations used in the generation of the key. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#3](~/add/codesnippet/csharp/p-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#3](~/add/codesnippet/visualbasic/p-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#3](~/add/codesnippet/cpp/p-system.security.crypto_117_1.cpp)]"
  syntax:
    content: public int IterationCount { get; set; }
    return:
      type: System.Int32
      description: "Il numero di iterazioni per l&quot;operazione."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il numero di iterazioni è inferiore a 1."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reimposta lo stato dell&quot;operazione."
  remarks: "Questo metodo viene chiamato automaticamente se viene modificato il numero di salt o iterazione."
  example:
  - "The following example shows how to use the Reset method. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#5](~/add/codesnippet/csharp/m-system.security.crypto_26_1.cs)]\n [!code-vb[rfc28981#5](~/add/codesnippet/visualbasic/m-system.security.crypto_26_1.vb)]\n [!code-cpp[rfc28981#5](~/add/codesnippet/cpp/m-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  id: Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta il valore salt della chiave per l&quot;operazione."
  remarks: "Valore salt, un set casuale di byte, viene utilizzato per rendere la decrittografia non autorizzata di un messaggio più difficile. Un attacco con dizionario è un attacco in cui l&quot;utente malintenzionato tenta di decrittografare un messaggio crittografato confrontando il valore crittografato con valori crittografati calcolati in precedenza per le chiavi più probabile. Questo attacco è molto più difficile grazie all&quot;introduzione di salt, o byte casuali, alla fine della password prima della derivazione della chiave."
  syntax:
    content: public byte[] Salt { get; set; }
    return:
      type: System.Byte[]
      description: "Valore salt della chiave per l&quot;operazione."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La dimensione del salt specificata è minore di 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È il valore salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: System.Security.Cryptography.DeriveBytes
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: Rfc2898DeriveBytes.Dispose
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: Rfc2898DeriveBytes.GetBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: Rfc2898DeriveBytes.Reset
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
