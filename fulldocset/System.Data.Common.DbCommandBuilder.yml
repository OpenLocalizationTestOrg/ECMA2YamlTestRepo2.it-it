### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommandBuilder
  id: DbCommandBuilder
  children:
  - System.Data.Common.DbCommandBuilder.#ctor
  - System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.DataAdapter
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetInsertCommand
  - System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  - System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder
  fullName: System.Data.Common.DbCommandBuilder
  type: Class
  summary: "Genera automaticamente comandi per tabella singola per risolvere le modifiche apportate a un <xref href=&quot;System.Data.DataSet&quot;> </xref> con il database associato. Si tratta di una classe astratta che può solo essere ereditata."
  remarks: "La classe DbCommandBuilder viene fornita per praticità di writer di provider, la creazione di propri compilatori di comandi. Tramite l&quot;eredità da questa classe, gli sviluppatori possono implementare comportamento specifico del provider nel proprio codice.       Il <xref:System.Data.Common.DbDataAdapter>non genera automaticamente le istruzioni SQL necessarie per risolvere le modifiche apportate a un <xref:System.Data.DataSet>con l&quot;origine dati associata.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter> Tuttavia, è possibile creare un oggetto DbCommandBuilder per generare automaticamente le istruzioni SQL per gli aggiornamenti a tabella singola, se si imposta la <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>proprietà di <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> Quindi, le istruzioni SQL aggiuntive che non si imposta generate dal DbCommandBuilder.       Il DbCommandBuilder registra se stesso come un listener per <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>eventi ogni volta che si imposta la <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>proprietà.</xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> È possibile associare solo uno <xref:System.Data.Common.DbDataAdapter>o l&quot;oggetto DbCommandBuilder tra loro in una sola volta.</xref:System.Data.Common.DbDataAdapter>       Per generare istruzioni INSERT, UPDATE o DELETE, utilizza il DbCommandBuilder il <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>proprietà da recuperare automaticamente un set di metadati richiesto.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> Se si modifica il <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>dopo i metadati sono stati recuperati (ad esempio, dopo il primo aggiornamento), è necessario chiamare il <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>metodo per aggiornare i metadati.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>       Il `SelectCommand` deve anche restituire almeno una chiave primaria o una colonna univoca. In caso contrario, un <xref:System.InvalidOperationException>viene generata l&quot;eccezione e i comandi non vengono generati.</xref:System.InvalidOperationException>       Utilizza inoltre il DbCommandBuilder il <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>e <xref:System.Data.Common.DbCommand.Transaction%2A>proprietà a cui fa riferimento il <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand.Transaction%2A> </xref:System.Data.Common.DbCommand.CommandTimeout%2A> </xref:System.Data.Common.DbCommand.Connection%2A> L&quot;utente deve chiamare <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se una di queste proprietà vengono modificata o se il <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>stessa viene sostituita.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario il <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>mantengono i valori precedenti.</xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>       Se si chiama <xref:System.ComponentModel.Component.Dispose%2A>, il DbCommandBuilder viene annullata l&quot;associazione di <xref:System.Data.Common.DbDataAdapter>, e i comandi generati non vengono più utilizzati.</xref:System.Data.Common.DbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  syntax:
    content: 'public abstract class DbCommandBuilder : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di una classe che eredita il <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: protected DbCommandBuilder ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Consente l&quot;implementazione del provider di <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe per gestire le proprietà aggiuntive dei parametri."
  remarks: "Questo metodo consente a un&quot;implementazione del <xref:System.Data.Common.DbCommandBuilder>classe per gestire le proprietà dei parametri specifici del provider.</xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "Oggetto <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> a cui sono applicate le modifiche aggiuntive."
    - id: row
      type: System.Data.DataRow
      description: "Il <xref href=&quot;System.Data.DataRow&quot;> </xref> della tabella dello schema fornita da <xref:System.Data.Common.DbDataReader.GetSchemaTable*>.</xref:System.Data.Common.DbDataReader.GetSchemaTable*>"
    - id: statementType
      type: System.Data.StatementType
      description: "Il tipo di comando in corso la generazione; INSERIRE, aggiornare o eliminare."
    - id: whereClause
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il parametro fa parte di update o delete clausola WHERE, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se fa parte dei valori di inserimento o aggiornamento."
  overload: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta il <xref href=&quot;System.Data.Common.CatalogLocation&quot;> </xref> per un&quot;istanza di <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta una stringa utilizzata come separatore di catalogo per un&quot;istanza di <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public virtual string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "Stringa che indica il separatore di catalogo da utilizzare con un&quot;istanza di <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  overload: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  id: ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Specifica quale <xref href=&quot;System.Data.ConflictOption&quot;> </xref> deve essere utilizzato per il <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  syntax:
    content: public virtual System.Data.ConflictOption ConflictOption { get; set; }
    return:
      type: System.Data.ConflictOption
      description: "Restituisce uno del <xref href=&quot;System.Data.ConflictOption&quot;> </xref> valori che descrivono il comportamento di questo <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.ConflictOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta un <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> oggetto per cui Transact-SQL le istruzioni vengono generate automaticamente."
  remarks: "Il <xref:System.Data.Common.DbCommandBuilder>Registra se stesso come un listener per <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>gli eventi generati dal <xref:System.Data.Common.DbDataAdapter>specificato in questa proprietà.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.Common.DbCommandBuilder>       Quando si crea una nuova istanza della <xref:System.Data.Common.DbCommandBuilder>, qualsiasi esistente <xref:System.Data.Common.DbCommandBuilder>associato a questo <xref:System.Data.Common.DbDataAdapter>viene rilasciato.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: public System.Data.Common.DbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Common.DbDataAdapter
      description: "A <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>metodo e `Finalize` metodo.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>richiama il metodo Dispose protetto con il parametro disposing impostato su `true`.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> `Finalize`richiama `Dispose` con `disposing` impostato su `false`.       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Data.Common.DbCommandBuilder>riferimenti.</xref:System.Data.Common.DbCommandBuilder> Questo metodo richiama il <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>metodo di ciascun oggetto cui viene fatto riferimento.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Data.Common.DbCommandBuilder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire le operazioni di eliminazione dell&quot;origine dati."
  remarks: "Un&quot;applicazione può utilizzare il metodo GetDeleteCommand per scopi informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand>       È inoltre possibile utilizzare GetDeleteCommand come base di un comando modificato. Ad esempio, si potrebbe chiamare GetDeleteCommand e modificare il testo del comando e quindi impostare in modo esplicito per <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, il GetDeleteCommand continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto. Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> l&quot;oggetto richiesto per eseguire operazioni di eliminazione."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> l&quot;oggetto richiesto per eseguire operazioni di eliminazione nell&quot;origine dati, eventualmente utilizzando le colonne per i nomi dei parametri."
  remarks: "Un&quot;applicazione può utilizzare il <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       È inoltre possibile utilizzare <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>come base di un comando modificato.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> Ad esempio, è possibile chiamare <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>e modificare il testo del comando e quindi impostare in modo esplicito che in <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, il <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell&quot;usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder>generi i parametri in base ai nomi di colonna invece.</xref:System.Data.Common.DbCommandBuilder> Questo metodo ha esito positivo solo se vengono soddisfatte le condizioni seguenti: - il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>espressione regolare.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>specificato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generare nomi di parametro corrispondente di nomi di colonna, se possibile. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generare @p1, @p2e così via."
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> l&quot;oggetto richiesto per eseguire operazioni di eliminazione."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire le operazioni di inserimento nell&quot;origine dati."
  remarks: "Un&quot;applicazione può utilizzare il metodo metodi GetInsertCommand per scopi informativi o di risoluzione dei problemi in quanto restituisce il testo del <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand>       È inoltre possibile utilizzare metodi GetInsertCommand come base di un comando modificato. Ad esempio, si potrebbe chiamare metodi GetInsertCommand e modificare il testo del comando e quindi impostare in modo esplicito per <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, i metodi GetInsertCommand continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto. Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o metodi GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire le operazioni di inserimento."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire le operazioni di inserimento nell&quot;origine dati, eventualmente utilizzando le colonne per i nomi dei parametri."
  remarks: "Un&quot;applicazione può utilizzare il <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il testo del <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       È inoltre possibile utilizzare <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>come base di un comando modificato.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> Ad esempio, è possibile chiamare <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>e modificare il testo del comando e quindi impostare in modo esplicito che in <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, il <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell&quot;usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder>generi i parametri in base ai nomi di colonna invece.</xref:System.Data.Common.DbCommandBuilder> Generazione dei parametri in base ai nomi di colonna ha esito positivo solo se vengono soddisfatte le condizioni seguenti: - il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>espressione regolare.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>specificato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generare nomi di parametro corrispondente di nomi di colonna, se possibile. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generare @p1, @p2e così via."
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire le operazioni di inserimento."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce il nome del parametro specificato nel formato @p * # *. Utilizzare quando si crea un generatore di comandi personalizzati."
  syntax:
    content: protected abstract string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Il numero deve essere incluso come parte del nome del parametro..."
    return:
      type: System.String
      description: "Il nome del parametro con il numero specificato come parte del nome del parametro."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce il nome completo del parametro, in base al nome parziale."
  syntax:
    content: protected abstract string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "Il nome parziale del parametro."
    return:
      type: System.String
      description: "Il nome completo del parametro corrispondente al nome di parametro parziale richiesto."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce il segnaposto per il parametro nell&quot;istruzione SQL associata."
  remarks: "Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati."
  syntax:
    content: protected abstract string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Il numero deve essere incluso come parte del nome del parametro."
    return:
      type: System.String
      description: "Il nome del parametro con il numero specificato."
  overload: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce la tabella dello schema per il <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  remarks: "Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati."
  syntax:
    content: protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);
    parameters:
    - id: sourceCommand
      type: System.Data.Common.DbCommand
      description: "Il <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> per il quale recuperare la tabella dello schema corrispondente."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che rappresenta lo schema per la specifica <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire gli aggiornamenti nell&quot;origine dati."
  remarks: "Un&quot;applicazione può utilizzare il metodo GetUpdateCommand per scopi informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand>       È inoltre possibile utilizzare GetUpdateCommand come base di un comando modificato. Ad esempio, si potrebbe chiamare GetUpdateCommand e modificare il testo del comando e quindi impostare in modo esplicito per <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, il GetUpdateCommand continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto. Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire gli aggiornamenti."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire gli aggiornamenti nell&quot;origine dati, eventualmente utilizzando le colonne per i nomi dei parametri."
  remarks: "Un&quot;applicazione può utilizzare il <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.Common.DbCommand>oggetto da eseguire.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       È inoltre possibile utilizzare <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>come base di un comando modificato.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> Ad esempio, è possibile chiamare <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>e modificare testo del comando e quindi impostare in modo esplicito che in <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       Dopo aver generata l&quot;istruzione SQL, l&quot;applicazione deve chiamare in modo esplicito <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Se viene modificato l&quot;istruzione in alcun modo.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> In caso contrario, il <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>continuerà a utilizzare le informazioni dell&quot;istruzione precedente, che potrebbe non essere corretto.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> Le istruzioni SQL vengono prima generate quando l&quot;applicazione chiama <xref:System.Data.Common.DbDataAdapter.Update%2A>o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell&quot;usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder>generi i parametri in base ai nomi di colonna invece.</xref:System.Data.Common.DbCommandBuilder> Generazione dei parametri in base ai nomi di colonna ha esito positivo solo se vengono soddisfatte le condizioni seguenti: - il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>espressione regolare.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>specificato.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generare nomi di parametro corrispondente di nomi di colonna, se possibile. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generare @p1, @p2e così via."
    return:
      type: System.Data.Common.DbCommand
      description: "Generato automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto richiesto per eseguire gli aggiornamenti."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Resets the <>*>, <>*>, <xref:System.Data.Common.DbCommand.CommandType*>, and <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> properties on the <xref href=&quot;System.Data.Common.DbCommand&quot;></xref>.</xref:System.Data.Common.DbCommand.CommandType*>"
  remarks: "Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati."
  syntax:
    content: protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "Il <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> per essere utilizzato dal generatore di comandi per l&quot;inserimento corrispondente, aggiornamento o eliminazione di comando."
    return:
      type: System.Data.Common.DbCommand
      description: "Oggetto <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> istanza da utilizzare per ogni operazione di inserimento, aggiornamento o eliminazione. Il passaggio di un valore null consente il metodo InitializeCommand per creare un <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto in base al comando Select associato con il <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Dato un identificatore non racchiusi tra virgolette nel caso del catalogo, restituisce il corretto formato dell&quot;identificatore, inclusi eventuali virgolette incorporate nell&quot;identificatore di escape per virgolette."
  syntax:
    content: public virtual string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "L&quot;identificatore non racchiusi tra virgolette originale."
    return:
      type: System.String
      description: "Versione dell&quot;identificatore tra virgolette. Le virgolette incorporate all&quot;interno dell&quot;identificatore correttamente vengono sottoposti a escape."
  overload: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta il carattere iniziale o i caratteri da utilizzare per specificare gli oggetti di database (ad esempio, le tabelle o colonne) i cui nomi contengono caratteri quali spazi o token riservati."
  remarks: "Alcune origini dati siano presenti oggetti che possono contenere caratteri quali spazi, virgole e punti e virgola. Per questa funzionalità, utilizzare la proprietà QuotePrefix e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>proprietà per specificare i delimitatori, ad esempio una parentesi quadra aperta e una parentesi per racchiudere il nome dell&quot;oggetto.</xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>      > [!NOTE] > Anche se non è possibile modificare le proprietà QuotePrefix o <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>proprietà dopo che un&quot;istruzione insert, update o delete comando è stato generato, è possibile modificare le impostazioni dopo la chiamata di `Update` metodo di un <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>"
  syntax:
    content: public virtual string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "Il carattere iniziale o i caratteri da utilizzare. Il valore predefinito è una stringa vuota."
  overload: System.Data.Common.DbCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Impossibile modificare questa proprietà dopo è stata generata un&quot;istruzione insert, update o comando delete."
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta il carattere o i caratteri da utilizzare per specificare gli oggetti di database (ad esempio, le tabelle o colonne) i cui nomi contengono caratteri quali spazi o token riservati finale."
  remarks: "Alcune origini dati siano presenti oggetti che possono contenere caratteri quali spazi, virgole e punti e virgola. Per questa funzionalità, utilizzare il <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>e QuoteSuffix le proprietà per specificare i delimitatori, ad esempio una parentesi quadra aperta e una parentesi per racchiudere il nome dell&quot;oggetto.</xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>      > [!NOTE] > Anche se non è possibile modificare il <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>o proprietà QuoteSuffix dopo un inserimento, aggiornamento o eliminazione comando è stato generato, è possibile modificare le impostazioni dopo la chiamata di `Update` metodo di un <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>"
  syntax:
    content: public virtual string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "Il carattere o i caratteri finali da utilizzare. Il valore predefinito è una stringa vuota."
  overload: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  id: RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Elimina i comandi associati a questo <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  remarks: "Chiamata in modo efficace il metodo RefreshSchema rimuove tutti i <xref:System.Data.Common.DbCommand>oggetti a cui fa riferimento il <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>proprietà.</xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand>"
  syntax:
    content: public virtual void RefreshSchema ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  id: RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge un gestore eventi per il <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> evento."
  syntax:
    content: protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);
    parameters:
    - id: rowUpdatingEvent
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Oggetto <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> istanza che contiene informazioni sull&quot;evento."
  overload: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta il carattere da utilizzare per il separatore tra l&quot;identificatore dello schema e tutti gli identificatori."
  remarks: "In genere, i server di database indicano lo schema per un identificatore separando il nome dello schema dall&quot;identificatore con un carattere. Ad esempio, SQL Server utilizza i due punti, la creazione di identificatori completi, ad esempio **persona: NomeCliente**, dove &quot;Person&quot; è il nome dello schema e &quot;CustomerName&quot; è l&quot;identificatore. Impostazione di questa proprietà consente agli sviluppatori di modificare questo comportamento."
  syntax:
    content: public virtual string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "Carattere da utilizzare come separatore di schema."
  overload: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  id: SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Specifica se tutti i valori di colonna in un&quot;istruzione update sono inclusi o soli quelle modificate."
  remarks: "L&quot;istruzione UPDATE generata da un <xref:System.Data.Common.DbCommandBuilder>possono includere informazioni di aggiornamento su tutte le colonne o può includere solo sulle colonne i cui valori sono stati modificati.</xref:System.Data.Common.DbCommandBuilder> Imposta la proprietà SetAllValues `true` , l&quot;istruzione di aggiornamento generata includere tutte le colonne, se i relativi valori sono stati modificati o non."
  syntax:
    content: public bool SetAllValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istruzione UPDATE generato dal <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> include tutte le colonne; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se include solo le colonne modificate."
  overload: System.Data.Common.DbCommandBuilder.SetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Registra il <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> per gestire il <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> evento per un <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati. Quando un nuovo <xref:System.Data.Common.DbDataAdapter>viene aggiunto al <xref:System.Data.Common.DbCommandBuilder>, esso viene registrato per il DbDataAdapter **RowUpdating** evento.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter> Se questo metodo viene chiamato nuovamente con lo stesso <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder>viene annullata la registrazione per tale DbDataAdapter **RowUpdating** evento.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "Il <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> da utilizzare per l&quot;aggiornamento."
  overload: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Dato un identificatore tra virgolette, restituisce il formato corretto senza virgolette dell&quot;identificatore, inclusi correttamente sottoposte a escape eventuali virgolette incorporate nell&quot;identificatore."
  syntax:
    content: public virtual string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Identificatore da cui verranno rimosse le virgolette incorporate."
    return:
      type: System.String
      description: "Identificatore non racchiusi tra virgolette con virgolette incorporate correttamente sottoposti a escape."
  overload: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbCommandBuilder.#ctor
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
- uid: System.Data.ConflictOption
  parent: System.Data
  isExternal: false
  name: ConflictOption
  nameWithType: ConflictOption
  fullName: System.Data.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.#ctor*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder.DbCommandBuilder
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: DbCommandBuilder.ApplyParameterInfo
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
- uid: System.Data.Common.DbCommandBuilder.ConflictOption*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose
  nameWithType: DbCommandBuilder.Dispose
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: DbCommandBuilder.GetDeleteCommand
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: DbCommandBuilder.GetInsertCommand
- uid: System.Data.Common.DbCommandBuilder.GetParameterName*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: DbCommandBuilder.GetParameterName
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: DbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbCommandBuilder.GetSchemaTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: DbCommandBuilder.GetUpdateCommand
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: DbCommandBuilder.InitializeCommand
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: DbCommandBuilder.QuoteIdentifier
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema
  nameWithType: DbCommandBuilder.RefreshSchema
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler
  nameWithType: DbCommandBuilder.RowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: DbCommandBuilder.UnquoteIdentifier
