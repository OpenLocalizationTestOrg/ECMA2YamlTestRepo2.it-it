### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInProcess
  id: AddInProcess
  children:
  - System.AddIn.Hosting.AddInProcess.#ctor
  - System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  - System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  - System.AddIn.Hosting.AddInProcess.KeepAlive
  - System.AddIn.Hosting.AddInProcess.Platform
  - System.AddIn.Hosting.AddInProcess.ProcessId
  - System.AddIn.Hosting.AddInProcess.Shutdown
  - System.AddIn.Hosting.AddInProcess.ShuttingDown
  - System.AddIn.Hosting.AddInProcess.Start
  - System.AddIn.Hosting.AddInProcess.StartupTimeout
  langs:
  - csharp
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
  type: Class
  summary: "Fornisce un processo esterno per l&quot;esecuzione out-of-process aggiuntivi dall&quot;applicazione host."
  remarks: "Per attivare un componente aggiuntivo in un processo esterno, passare un oggetto di AddInProcess appropriati <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName>overload del metodo.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName>       Il file eseguibile che esegue il componente aggiuntivo viene ottenuto da uno dei due file installati con .NET Framework nella directory Windows. Per impostazione predefinita, viene utilizzato il file eseguibile che soddisfi il bit per parola dell&quot;applicazione host. Se l&quot;host è un processo a 64 bit, viene eseguito AddInProcess.exe; in caso contrario, viene eseguito AddInProcess32.exe. Per specificare il modo in cui è stato selezionato il file eseguibile, usare il <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>costruttore per creare l&quot;oggetto di AddInProcess.</xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>"
  example:
  - "The following example activates an add-in in an external process.  \n  \n [!code-vb[AddInP3Host#10](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#10)]\n [!code-cs[AddInP3Host#10](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#10)]"
  syntax:
    content: public sealed class AddInProcess
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  id: '#ctor'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess()
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> classe."
  remarks: "Questo costruttore ha lo stesso effetto dell&quot;utilizzo di <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>costruttore con la <xref:System.AddIn.Hosting.Platform?displayProperty=fullName>flag per specificare che il processo che esegue il componente aggiuntivo avrà la stessa bit per parola del processo host.</xref:System.AddIn.Hosting.Platform?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29>"
  syntax:
    content: public AddInProcess ();
    parameters: []
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  id: '#ctor(System.AddIn.Hosting.Platform)'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess(Platform)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> (classe), che specifica il bit per parola del processo in cui il componente aggiuntivo viene eseguito."
  remarks: "La tabella seguente mostra come `platform` interessa i bit per parola del processo in diversi sistemi operativi: | | sistema operativo a&32; bit | sistema operativo a&64; bit |   |-|------------------------------|------------------------------|   | Host |&32;-bit | Stesso come il processo host |   | AnyCPU |&32;-bit |&64;-bit |   | X86 |&32;-bit |&32;-bit |   | X64 | Viene generata un&quot;eccezione |&64;-bit |"
  syntax:
    content: public AddInProcess (System.AddIn.Hosting.Platform platform);
    parameters:
    - id: platform
      type: System.AddIn.Hosting.Platform
      description: "Un valore che specifica il bit per parola del processo che esegue il componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La voce del Registro di sistema per il percorso del file eseguibile (AddInProcess.exe o AddInProcess32.exe) è mancante.       - oppure - il file eseguibile è mancano."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  id: IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene un valore che indica se l&quot;oggetto corrente <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> oggetto rappresenta il processo dell&quot;applicazione host."
  remarks: "Se il valore di questa proprietà è `true`, il componente aggiuntivo viene eseguito in-process con l&quot;applicazione host. In tal caso, utilizzare <xref:System.AddIn.Hosting.AddInProcess.Start%2A>o <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A>il metodo genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> </xref:System.AddIn.Hosting.AddInProcess.Start%2A>      > [!NOTE] > Il <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName>proprietà restituisce un <xref:System.AddIn.Hosting.AddInProcess>oggetto che rappresenta il processo dell&quot;applicazione host, se il componente aggiuntivo viene eseguito in-process.</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName>"
  example:
  - "The following example activates an add-in in an external process and uses the IsCurrentProcess property to determine whether the add-in is in the same process as the host application process.  \n  \n [!code-vb[AddInP3Host#10](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#10)]\n [!code-cs[AddInP3Host#10](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#10)]"
  syntax:
    content: public bool IsCurrentProcess { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> oggetto corrisponde all&quot;oggetto processo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  id: KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: System.AddIn.Hosting.AddInProcess.KeepAlive
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene o imposta un valore che indica se mantenere attivo il processo esterno."
  remarks: "Impostare questa proprietà su `false` per imporre la chiusura del processo esterno dopo l&quot;ultimo componente aggiuntivo all&quot;interno del processo è stato arrestato."
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il processo esterno deve essere mantenuto attivo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Hosting.AddInProcess.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Platform
  id: Platform
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: System.AddIn.Hosting.AddInProcess.Platform
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene il bit per parola del processo in cui viene eseguito il componente aggiuntivo out-of-process."
  remarks: "Bit per parola viene impostata quando il <xref:System.AddIn.Hosting.AddInProcess>oggetto viene inizializzato e non può essere modificato.</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public System.AddIn.Hosting.Platform Platform { get; }
    return:
      type: System.AddIn.Hosting.Platform
      description: "Il bit per parola del processo che esegue il componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInProcess.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  id: ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: System.AddIn.Hosting.AddInProcess.ProcessId
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene l&quot;ID del processo del processo esterno."
  remarks: "Utilizzare questa proprietà per il debug."
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: "L&quot;ID del processo, oppure -1 se non è avviato il processo esterno."
  overload: System.AddIn.Hosting.AddInProcess.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: System.AddIn.Hosting.AddInProcess.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Arresta forzatamente il processo esterno."
  syntax:
    content: public bool Shutdown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il processo esterno era in esecuzione e viene chiuso correttamente. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se è presente non attiva processo è associato il <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref>."
  overload: System.AddIn.Hosting.AddInProcess.Shutdown*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il componente aggiuntivo viene eseguito in-process con l&quot;applicazione host. Avvio e arresto del processo è consentito solo per i processi esterni, non per il processo host."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  id: ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: System.AddIn.Hosting.AddInProcess.ShuttingDown
  type: Event
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Si verifica quando il processo è rappresentata la <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> oggetto sta per essere arrestato."
  syntax:
    content: public event EventHandler<System.ComponentModel.CancelEventArgs> ShuttingDown;
    return:
      type: System.EventHandler{System.ComponentModel.CancelEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.Start
  id: Start
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: System.AddIn.Hosting.AddInProcess.Start()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Avvia il processo esterno."
  syntax:
    content: public bool Start ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il processo è stato avviato correttamente. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il processo è già in esecuzione."
  overload: System.AddIn.Hosting.AddInProcess.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il componente aggiuntivo viene eseguito in-process con l&quot;applicazione host. Avvio e arresto del processo è consentito solo per i processi esterni, non per il processo host."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  id: StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: System.AddIn.Hosting.AddInProcess.StartupTimeout
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene o imposta il numero di secondi consentiti per l&quot;avvio del processo."
  remarks: "Il valore predefinito è 10 secondi. Questa proprietà viene in genere utilizzata durante il debug, per aumentare il tempo di avvio per il processo che esegue il componente aggiuntivo out-of-process."
  syntax:
    content: public TimeSpan StartupTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il numero di secondi consentiti per l&quot;avvio del processo."
  overload: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il processo è già in esecuzione."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore assegnato è minore di 0 (zero)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess()
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: System.AddIn.Hosting.AddInProcess.AddInProcess(Platform)
- uid: System.AddIn.Hosting.Platform
  parent: System.AddIn.Hosting
  isExternal: false
  name: Platform
  nameWithType: Platform
  fullName: System.AddIn.Hosting.Platform
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: System.AddIn.Hosting.AddInProcess.KeepAlive
- uid: System.AddIn.Hosting.AddInProcess.Platform
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: System.AddIn.Hosting.AddInProcess.Platform
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: System.AddIn.Hosting.AddInProcess.ProcessId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: System.AddIn.Hosting.AddInProcess.Shutdown()
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: System.AddIn.Hosting.AddInProcess.ShuttingDown
- uid: System.EventHandler{System.ComponentModel.CancelEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CancelEventArgs>
  nameWithType: EventHandler<CancelEventArgs>
  fullName: System.EventHandler<System.ComponentModel.CancelEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.CancelEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    nameWithType: CancelEventArgs
    fullName: CancelEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInProcess.Start
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: System.AddIn.Hosting.AddInProcess.Start()
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: System.AddIn.Hosting.AddInProcess.StartupTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AddIn.Hosting.AddInProcess.#ctor*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess.AddInProcess
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
- uid: System.AddIn.Hosting.AddInProcess.Platform*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
- uid: System.AddIn.Hosting.AddInProcess.ProcessId*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
- uid: System.AddIn.Hosting.AddInProcess.Shutdown*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown
  nameWithType: AddInProcess.Shutdown
- uid: System.AddIn.Hosting.AddInProcess.Start*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start
  nameWithType: AddInProcess.Start
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
