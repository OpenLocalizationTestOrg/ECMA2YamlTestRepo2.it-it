### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RoleManagerModule
  id: RoleManagerModule
  children:
  - System.Web.Security.RoleManagerModule.#ctor
  - System.Web.Security.RoleManagerModule.Dispose
  - System.Web.Security.RoleManagerModule.GetRoles
  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: RoleManagerModule
  nameWithType: RoleManagerModule
  fullName: System.Web.Security.RoleManagerModule
  type: Class
  summary: "Gestisce un <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> istanza per l&quot;utente corrente. Questa classe non può essere ereditata."
  remarks: "La classe RoleManagerModule viene utilizzata per assegnare una <xref:System.Web.Security.RolePrincipal> <xref:System.Web.HttpContext.User%2A>proprietà di <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal>       Quando viene completata una richiesta, RoleManagerModule aggiorna il cookie dei ruoli che contiene le informazioni sui ruoli memorizzati nella cache. Se il <xref:System.Web.HttpContext.User%2A>proprietà è di tipo <xref:System.Web.Security.RolePrincipal>e che <xref:System.Web.Security.RolePrincipal>indica che il relativo elenco di ruoli memorizzati nella cache è stato modificato impostando la <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>proprietà `true`, RoleManagerModule aggiornerà il cookie dei ruoli che contiene le informazioni sui ruoli memorizzati nella cache.</xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.HttpContext.User%2A>       Questa classe non deve essere utilizzato direttamente dal codice."
  syntax:
    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> classe."
  remarks: "La <xref:System.Web.Security.RoleManagerModule>classe viene utilizzata per inserire un <xref:System.Web.Security.RolePrincipal>nel <xref:System.Web.HttpContext.User%2A>proprietà del <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>e non deve essere utilizzato direttamente dal codice.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RoleManagerModule>"
  syntax:
    content: public RoleManagerModule ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Dispose
  id: Dispose
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Chiamato dal runtime HTTP per eliminare il modulo di gestione dei ruoli."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Web.Security.RoleManagerModule>.</xref:System.Web.Security.RoleManagerModule> Il metodo Dispose lascia il <xref:System.Web.Security.RoleManagerModule>in uno stato inutilizzabile.</xref:System.Web.Security.RoleManagerModule> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.Web.Security.RoleManagerModule>in modo che la memoria occupata può essere recuperata tramite garbage collection.</xref:System.Web.Security.RoleManagerModule>       Questo metodo non deve essere utilizzato direttamente dal codice."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.GetRoles
  id: GetRoles
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Un evento dell&quot;applicazione globale che viene generato quando il <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> è pronta per creare un <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> che rappresenta l&quot;utente corrente."
  remarks: "Viene generato l&quot;evento GetRoles prima <xref:System.Web.Security.RoleManagerModule>Crea un <xref:System.Web.Security.RolePrincipal>oggetto e assegnarlo alla <xref:System.Web.HttpContext.User%2A>proprietà <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RoleManagerModule> È possibile utilizzare questo evento per controllare quando vengono applicate le informazioni sui ruoli o per sostituire la creazione di un <xref:System.Web.Security.RolePrincipal>dal <xref:System.Web.Security.RoleManagerModule>con il proprio codice.</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.RolePrincipal>       È possibile annullare l&quot;applicazione di informazioni sui ruoli mediante i <xref:System.Web.Security.RoleManagerModule>impostando il <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>proprietà del <xref:System.Web.Security.RoleManagerEventArgs>per `true` nell&quot;evento GetRoles.</xref:System.Web.Security.RoleManagerEventArgs> </xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> </xref:System.Web.Security.RoleManagerModule>       Se si imposta <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>a `true` nel gestore eventi GetRoles, la <xref:System.Web.HttpContext.User%2A>proprietà corrente <xref:System.Web.HttpContext>non è impostato su un <xref:System.Web.Security.RolePrincipal>oggetto da <xref:System.Web.Security.RoleManagerModule>.</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>"
  example:
  - "The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \n  \n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]"
  syntax:
    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;
    return:
      type: System.Web.Security.RoleManagerEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Associa la gestione dei ruoli con l&quot;applicazione specificata."
  remarks: "Questo metodo sottoscrive il <xref:System.Web.HttpApplication.PostAuthorizeRequest>e <xref:System.Web.HttpApplication.EndRequest>metodi dell&quot;oggetto specificato <xref:System.Web.HttpApplication>allo scopo di gestire le informazioni sui ruoli e non deve essere utilizzato direttamente dal codice.</xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.PostAuthorizeRequest>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Il <xref href=&quot;System.Web.HttpApplication&quot;> </xref> per associare il <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> con."
  overload: System.Web.Security.RoleManagerModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.RoleManagerModule.#ctor
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
- uid: System.Web.Security.RoleManagerModule.Dispose
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
- uid: System.Web.Security.RoleManagerModule.GetRoles
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
- uid: System.Web.Security.RoleManagerEventHandler
  parent: System.Web.Security
  isExternal: false
  name: RoleManagerEventHandler
  nameWithType: RoleManagerEventHandler
  fullName: System.Web.Security.RoleManagerEventHandler
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.RoleManagerModule.#ctor*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule
  nameWithType: RoleManagerModule.RoleManagerModule
- uid: System.Web.Security.RoleManagerModule.Dispose*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose
  nameWithType: RoleManagerModule.Dispose
- uid: System.Web.Security.RoleManagerModule.Init*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init
  nameWithType: RoleManagerModule.Init
