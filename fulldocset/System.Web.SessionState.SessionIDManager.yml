### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionIDManager
  id: SessionIDManager
  children:
  - System.Web.SessionState.SessionIDManager.#ctor
  - System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Decode(System.String)
  - System.Web.SessionState.SessionIDManager.Encode(System.String)
  - System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Initialize
  - System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  - System.Web.SessionState.SessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: SessionIDManager
  nameWithType: SessionIDManager
  fullName: System.Web.SessionState.SessionIDManager
  type: Class
  summary: "Gestisce gli identificatori univoci per lo stato della sessione ASP.NET."
  remarks: "La classe SessionIDManager è un modulo HTTP che gestisce gli identificatori di sessione univoco per l&quot;utilizzo con lo stato della sessione ASP.NET. L&quot;identificatore univoco per una sessione ASP.NET è la <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>proprietà, accessibile dalla <xref:System.Web.HttpContext.Session%2A>proprietà dell&quot;oggetto corrente <xref:System.Web.HttpContext>o <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> L&quot;identificatore di sessione ASP.NET è un numero generato casualmente codificato in una stringa di 24 caratteri costituito da caratteri minuscoli da una a z e i numeri da 0 a 5.       Per impostazione predefinita, il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore viene inviato in un cookie con ogni richiesta all&quot;applicazione ASP.NET.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Il nome del cookie che contiene il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>ASP.NET SessionID è per impostazione predefinita.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> È possibile configurare un nome di cookie diverso impostando il `cookieName` attributo del [sessionState Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) per il nome del cookie desiderato.       Se si desidera disabilitare l&quot;uso dei cookie nell&quot;applicazione ASP.NET e comunque usare dello stato della sessione, è possibile configurare l&quot;applicazione per archiviare l&quot;identificatore di sessione nell&quot;URL anziché un cookie impostando il `cookieless` attributo del `sessionState` elemento `true` nel file Web. config dell&quot;applicazione. Per ulteriori informazioni, vedere il <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>proprietà.</xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>"
  syntax:
    content: 'public class SessionIDManager : System.Web.SessionState.ISessionIDManager'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionIDManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Crea un&quot;istanza di <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> classe."
  remarks: "Questo costruttore non è destinato a essere chiamato dal codice dell&quot;applicazione.       In ASP.NET viene chiamato questo costruttore per creare un&quot;istanza della <xref:System.Web.SessionState.SessionIDManager>classe.</xref:System.Web.SessionState.SessionIDManager> Dopo aver chiamato il costruttore, viene chiamato il <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>metodo per inizializzare la nuova <xref:System.Web.SessionState.SessionIDManager>oggetto.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.Initialize%2A>"
  syntax:
    content: public SessionIDManager ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Crea un identificatore di sessione univoco per la sessione."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Il metodo CreateSessionID restituisce un identificatore di sessione univoco che è un numero generato casualmente codificato in una stringa di 24 caratteri costituito da caratteri minuscoli da una a z e i numeri da 0 a 5."
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the CreateSessionID and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/e6d29e71-07f8-4130-8db5-_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/e6d29e71-07f8-4130-8db5-_1.vb)]  \n  \n To use the custom class demonstrated in this example, configure the sessionIDManagerType attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element, as shown in the following example.  \n  \n```  \n<sessionState  \n  Mode=\"InProc\"  \n  stateConnectionString=\"tcp=127.0.0.1:42424\"  \n  stateNetworkTimeout=\"10\"  \n  sqlConnectionString=\"data source=127.0.0.1;Integrated Security=SSPI\"  \n  sqlCommandTimeout=\"30\"  \n  customProvider=\"\"  \n  cookieless=\"false\"  \n  regenerateExpiredSessionId=\"false\"  \n  timeout=\"20\"  \n  sessionIDManagerType=\"Your.ID.Manager.Type,  \n    CustomAssemblyNameInBinFolder\"  \n/>  \n```"
  syntax:
    content: public virtual string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fa riferimento a oggetti server utilizzato per elaborare le richieste HTTP (ad esempio, il <> </> *> e <> </> *> proprietà)."
    return:
      type: System.String
      description: "Un identificatore di sessione univoco."
  overload: System.Web.SessionState.SessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  id: Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Decodifica un identificatore di sessione con codifica URL ottenuto da un cookie o URL."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Questo metodo viene utilizzato internamente dalla <xref:System.Web.SessionState.SessionIDManager>classe decodificare personalizzato <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valori creati dalle classi che ereditano la <xref:System.Web.SessionState.SessionIDManager>classe ed eseguire l&quot;override di <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>e <xref:System.Web.SessionState.SessionIDManager.Validate%2A>metodi.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Per garantire la fedeltà di un valore di identificatore di sessione personalizzato recuperato dalla richiesta HTTP tramite il <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>(metodo), il <xref:System.Web.SessionState.SessionIDManager>decodifica il valore personalizzato tramite la <xref:System.Web.HttpUtility.UrlDecode%2A>(metodo).</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  syntax:
    content: public virtual string Decode (string id);
    parameters:
    - id: id
      type: System.String
      description: "L&quot;identificatore di sessione da decodificare."
    return:
      type: System.String
      description: "Identificatore di sessione decodificato."
  overload: System.Web.SessionState.SessionIDManager.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  id: Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Codifica l&quot;identificatore di sessione per il salvataggio di un cookie o l&quot;URL."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Questo metodo viene utilizzato internamente dal <xref:System.Web.SessionState.SessionIDManager>per la codifica personalizzata <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valori creati dalle classi che ereditano la <xref:System.Web.SessionState.SessionIDManager>classe ed eseguire l&quot;override di <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>e <xref:System.Web.SessionState.SessionIDManager.Validate%2A>metodi.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Per garantire la fedeltà di un valore di identificatore di sessione personalizzato memorizzato nella risposta HTTP dal <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>(metodo), il <xref:System.Web.SessionState.SessionIDManager>codifica il valore personalizzato tramite la <xref:System.Web.HttpUtility.UrlEncode%2A>metodo.</xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>       Per un esempio di una classe che eredita la <xref:System.Web.SessionState.SessionIDManager>classe ed esegue l&quot;override di <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>e <xref:System.Web.SessionState.SessionIDManager.Validate%2A>metodi, vedere il <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>metodo.</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public virtual string Encode (string id);
    parameters:
    - id: id
      type: System.String
      description: "L&quot;identificatore di sessione da codificare."
    return:
      type: System.String
      description: "Identificatore di sessione codificato."
  overload: System.Web.SessionState.SessionIDManager.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene il valore dell&quot;identificatore di sessione dalla richiesta Web corrente."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       <xref:System.Web.SessionState.SessionStateModule>Chiama il metodo GetSessionID durante l&quot; <xref:System.Web.HttpApplication.AcquireRequestState>evento da recuperare <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>dall&quot;insieme corrente <xref:System.Web.HttpRequest>.</xref:System.Web.HttpRequest> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fa riferimento a oggetti server utilizzato per elaborare le richieste HTTP (ad esempio, il <> </> *> e <> </> *> proprietà)."
    return:
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>.</xref:System.Web.SessionState.HttpSessionState.SessionID*> Corrente"
  overload: System.Web.SessionState.SessionIDManager.GetSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "La lunghezza del valore dell&quot;identificatore di sessione recuperato dalla HTTP richiesta supera il <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>valore.</xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inizializza il <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> oggetto con le informazioni dai file di configurazione."
  remarks: "Il metodo Initialize legge i dati di configurazione di sessione di [sessionState Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento di configurazione dei file di configurazione."
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Esegue un&quot;inizializzazione di ogni richiesta di <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> oggetto."
  remarks: "Quando il `cookieless` attributo del `sessionState` è impostato su `AutoDetect`, <xref:System.Web.SessionState.SessionIDManager>oggetto reindirizzerà nello stesso percorso per determinare se il browser di connessione supporta i cookie.</xref:System.Web.SessionState.SessionIDManager> Se il `suppressAutoDetectRedirect` parametro `false`, il server non eseguirà il reindirizzamento.       Il `supportSessionIDReissue` parametro verrà restituito `false` se la richiesta utilizza i cookie per l&quot;identificazione della sessione."
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto che contiene informazioni sulla richiesta corrente."
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per reindirizzare per determinare il supporto di cookie. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per evitare il reindirizzamento automatico per determinare il supporto dei cookie."
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore booleano che indica se il <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> oggetto supporta la generazione di nuovi ID di sessione quando l&quot;ID originale non è aggiornato. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare il <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> oggetto ha effettuato un reindirizzamento per determinare il supporto dei cookie; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Elimina il cookie di un identificatore di sessione dalla risposta HTTP."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Il <xref:System.Web.SessionState.SessionStateModule>chiama il metodo RemoveSessionID durante il <xref:System.Web.HttpApplication.ReleaseRequestState>evento per l&quot;identificatore di sessione da rimuovere il <xref:System.Web.HttpResponse.Cookies%2A>insieme del <xref:System.Web.HttpResponse>Se una nuova sessione è stata creata ma non è stata utilizzata.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fa riferimento a oggetti server utilizzato per elaborare le richieste HTTP (ad esempio, il <> </> *> e <> </> *> proprietà)."
  overload: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Salva un identificatore di sessione appena creata per la risposta HTTP."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Viene chiamato il metodo SaveSessionID dal <xref:System.Web.SessionState.SessionStateModule>durante il <xref:System.Web.HttpApplication.AcquireRequestState>evento.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Il metodo SaveSessionID archivia l&quot;identificatore di sessione nell&quot;URL (quando viene utilizzato lo stato della sessione senza cookie) o in un cookie di sessione non scade.       Per impostazione predefinita, il <xref:System.Web.SessionState.SessionIDManager>inserisce un identificatore di sessione univoco in un cookie di sessione permanente e imposta il `cookieAdded` parametro `true`.</xref:System.Web.SessionState.SessionIDManager>       Per uno stato sessione senza cookie, il <xref:System.Web.SessionState.SessionIDManager>oggetto inserisce un identificatore di sessione univoco all&quot;URL corrente, il browser viene reindirizzato al nuovo URL che include l&quot;identificatore di sessione e quindi imposta il `redirected` parametro `true`.</xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fa riferimento a oggetti server utilizzato per elaborare le richieste HTTP (ad esempio, il <> </> *> e <> </> *> proprietà)."
    - id: id
      type: System.String
      description: "L&quot;identificatore di sessione."
    - id: redirected
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore booleano che è<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref> se la risposta viene reindirizzato all&quot;URL con l&quot;identificatore di sessione aggiunto all&quot;URL corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cookieAdded
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore booleano che è<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref> se un cookie è stato aggiunto alla risposta HTTP; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.SaveSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "La risposta è già stata inviata.       -- L&quot;ID di sessione passato o convalida questo metodo non è riuscito."
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  id: SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene la lunghezza massima di un identificatore di sessione valido."
  remarks: "La lunghezza massima di un identificatore di sessione è di 80 caratteri.       Mentre gli identificatori di sessione creati il <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>metodo sia di 24 caratteri, la lunghezza massima di un identificatore di sessione da cui è consentito il <xref:System.Web.SessionState.SessionIDManager>classe è di 80 caratteri.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> Ciò è particolarmente importante se si implementa un oggetto personalizzato <xref:System.Web.SessionState.SessionIDManager>.</xref:System.Web.SessionState.SessionIDManager> Il <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>(metodo), che recupera i valori dell&quot;identificatore di sessione da corrente <xref:System.Web.HttpRequest>, assicura che i valori non superino il valore SessionIDMaxLength e che l&quot;identificatore di sessione è una stringa di 24 caratteri contenente solo caratteri minuscoli un a z e i numeri da 0 a 5 chiamando il <xref:System.Web.SessionState.SessionIDManager.Validate%2A>metodo.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.HttpRequest> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> Se si implementa un oggetto personalizzato <xref:System.Web.SessionState.SessionIDManager>classe che eredita il <xref:System.Web.SessionState.SessionIDManager>classe ed esegue l&quot;override di <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>metodo ma non il <xref:System.Web.SessionState.SessionIDManager.Validate%2A>(metodo), i valori dell&quot;identificatore di sessione personalizzata devono soddisfare i vincoli sopra riportati.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager> Per un esempio di override di <xref:System.Web.SessionState.SessionIDManager>di classi e implementazione di questi metodi, vedere l&quot;esempio fornito per il <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>metodo.</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public static int SessionIDMaxLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza massima di un identificatore di sessione valido."
  overload: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se un identificatore di sessione è valido."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Il metodo di convalida verifica che l&quot;oggetto fornito `id` è una stringa di 24 caratteri costituito da caratteri minuscoli da una a z e i numeri da 0 a 5 e che la lunghezza massima della sessione ID superi gli 80 caratteri.       Il <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>metodo chiama il metodo di convalida durante il recupero di un identificatore di sessione da una richiesta HTTP, per garantire che l&quot;identificatore di sessione fornito sia formattato correttamente.</xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and Validate methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/m-system.web.sessionstat_5_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/m-system.web.sessionstat_5_1.vb)]  \n  \n To use the custom class demonstrated in this example, replace the `SessionID` HTTP module in your Web.config file with your custom class, as shown in the following example.  \n  \n```  \n<httpModules>  \n  <remove name=\"SessionID\" />  \n  <add name=\"SessionID\"  \n       type=\"Samples.AspNet.Session.GuidSessionIDManager\" />  \n</httpModules>  \n```"
  syntax:
    content: public virtual bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "Identificatore di sessione da convalidare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;identificatore di sessione è valido. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionIDManager.#ctor
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.Initialize
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
- uid: System.Web.SessionState.SessionIDManager.#ctor*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager
  nameWithType: SessionIDManager.SessionIDManager
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: SessionIDManager.CreateSessionID
- uid: System.Web.SessionState.SessionIDManager.Decode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode
  nameWithType: SessionIDManager.Decode
- uid: System.Web.SessionState.SessionIDManager.Encode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode
  nameWithType: SessionIDManager.Encode
- uid: System.Web.SessionState.SessionIDManager.GetSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: SessionIDManager.GetSessionID
- uid: System.Web.SessionState.SessionIDManager.Initialize*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: SessionIDManager.Initialize
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionIDManager.InitializeRequest
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: SessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: SessionIDManager.SaveSessionID
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
- uid: System.Web.SessionState.SessionIDManager.Validate*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate
  nameWithType: SessionIDManager.Validate
