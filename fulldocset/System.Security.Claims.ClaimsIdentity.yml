### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsIdentity
  id: ClaimsIdentity
  children:
  - System.Security.Claims.ClaimsIdentity.#ctor
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.AuthenticationType
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.Claims
  - System.Security.Claims.ClaimsIdentity.Clone
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.IsAuthenticated
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.Name
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
  summary: "Rappresenta un&quot;identità basata sulle attestazioni."
  remarks: "La classe ClaimsIdentity è un&quot;implementazione concreta di un&quot;identità basata sulle attestazioni. vale a dire un&quot;identità descritta da una raccolta di attestazioni. Un&quot;attestazione è un&quot;istruzione su un&quot;entità eseguita da un&quot;autorità di certificazione che descrive una proprietà, a destra, o alcuni altri qualità di tale entità. Tale entità viene definito l&quot;oggetto dell&quot;attestazione. Un&quot;attestazione è rappresentata dalla <xref:System.Security.Claims.Claim>classe.</xref:System.Security.Claims.Claim> Le attestazioni contenute in un oggetto ClaimsIdentity descrivono l&quot;entità che rappresenta l&quot;identità corrispondente, e può essere utilizzato per prendere decisioni di autorizzazione e autenticazione. Un modello di accesso basato sulle attestazioni presenta numerosi vantaggi rispetto i modelli di accesso più tradizionali che si basano esclusivamente sui ruoli. Ad esempio, le attestazioni possono fornire più informazioni sull&quot;identità rappresentano e possono essere valutate per l&quot;autenticazione o autorizzazione in modo molto più specifico.       A partire da .NET Framework 4.5, Windows Identity Foundation (WIF) e l&quot;identità basata sulle attestazioni sono state completamente integrate in .NET Framework. Ciò significa che derivano da ClaimsIdentity ora molte classi che rappresentano un&quot;identità in .NET Framework e vengono descritte le proprietà di una raccolta di attestazioni. Questo comportamento è diverso rispetto alle versioni precedenti di .NET Framework, in cui queste classi implementate il <xref:System.Security.Principal.IIdentity>interfaccia direttamente.</xref:System.Security.Principal.IIdentity> La raccolta di attestazioni che descrivono l&quot;identità è possibile accedere tramite il <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>proprietà.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> La classe ClaimsIdentity fornisce diversi metodi per la ricerca e modificando le attestazioni e supporta completamente language integrata query (LINQ). Nel codice dell&quot;applicazione sono in genere si accede agli oggetti ClaimsIdentity tramite <xref:System.Security.Claims.ClaimsPrincipal>oggetti; ad esempio, l&quot;entità restituita da <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsPrincipal>      > [!NOTE] > La <xref:System.Security.Claims.ClaimsPrincipal>classe dispone di un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>anche la proprietà.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> Nella maggior parte dei casi è consigliabile accedere attestazioni dell&quot;utente tramite il <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>raccolta anziché tramite il <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> È necessario accedere a richieste di una singola oggetto ClaimsIdentity solo nei casi in cui l&quot;entità contiene più di un oggetto ClaimsIdentity e si desidera valutare o modificare un&quot;identità specifica.      > [!IMPORTANT] > Per aggiungere o rimuovere le attestazioni dal <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme, un chiamante deve essere completamente attendibile.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>       Nel modello basato sulle attestazioni, il <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà e <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName>metodo vengono implementati valutando le attestazioni contenute da un&quot;identità.</xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> Le implementazioni di base del modello basato sulle attestazioni fornite dal <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName>proprietà e <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName>metodo.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName> Il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>proprietà consentono di specificare un tipo di attestazione che deve essere utilizzato per valutare le attestazioni contenute dall&quot;identità durante l&quot;esecuzione di queste operazioni.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>       Gli scenari di delega sono supportati tramite il <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>e <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>proprietà.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ClaimsIdentity : System.Security.Principal.IIdentity
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> raccolta delle attestazioni di classe con un oggetto vuoto."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Una raccolta vuota. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity ();
    parameters: []
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe utilizzando una raccolta enumerata di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> oggetti."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inizializzato dal `claims` parametro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni con cui compilare l&quot;identità basata sulle attestazioni."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsIdentity (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe da un flusso serializzato creato usando <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "I dati serializzati."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);
    parameters:
    - id: other
      type: System.Security.Claims.ClaimsIdentity
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe utilizzando il tipo di nome e l&quot;autenticazione da specificato <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Actor` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il valore di `identity.AuthenticationType` viene utilizzata la proprietà (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>). |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.BootStrapContext` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, le attestazioni da `identity` vengono aggiunte alla nuova istanza; in caso contrario, una raccolta vuota. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Label` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` non è assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, non è `null`e ha un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà che non è `null`; un nome attestazione viene aggiunta la nuova istanza utilizzando il valore della <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore della `identity.NameClaimType` proprietà viene utilizzata; in caso contrario, viene utilizzato <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Se `identity` assegnabile dal <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.RoleClaimType` proprietà viene utilizzata; in caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>viene utilizzato. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "L&quot;identità da cui basare la nuova identità basata sulle attestazioni."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe con un oggetto vuoto attestazioni raccolta e il tipo di autenticazione specificato."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il valore di `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, la proprietà è impostata su `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Una raccolta vuota. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (string authenticationType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Il tipo di autenticazione utilizzato."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe e il tipo di autenticazione delle attestazioni specificate."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il valore di `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, la proprietà è impostata su `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inizializzato dal `claims` parametro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni con cui compilare l&quot;identità basata sulle attestazioni."
    - id: authenticationType
      type: System.String
      description: "Il tipo di autenticazione utilizzato."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe da un flusso serializzato creato usando <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "I dati serializzati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Il contesto per la serializzazione."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe utilizzando le attestazioni specificate e specificata <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Actor` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, il valore della `identity.AuthenticationType` viene utilizzata la proprietà (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>). |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.BootStrapContext` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inizializzato dal `claims` parametro.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, le attestazioni da `identity` vengono aggiunti alla nuova istanza prima di quelli specificati tramite il `claims` parametro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Label` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` non è assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, non è `null`e ha un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà che non è `null`; un nome attestazione viene aggiunta la nuova istanza utilizzando il valore della <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore della `identity.NameClaimType` proprietà viene utilizzata; in caso contrario, viene utilizzato <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Se `identity` assegnabile dal <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.RoleClaimType` proprietà viene utilizzata; in caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>viene utilizzato. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "L&quot;identità da cui basare la nuova identità basata sulle attestazioni."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni con cui compilare l&quot;identità basata sulle attestazioni."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> tipo di attestazione di classe con il tipo di autenticazione, il tipo di attestazione nome e un ruolo."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il valore di `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, la proprietà è impostata su `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Una raccolta vuota. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Il valore di `nameType` parametro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Se il `nameType` parametro è null o una stringa vuota, la proprietà è impostata su <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Il valore di `roleType` parametro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Se il `roleType` parametro è null o una stringa vuota, la proprietà è impostata su <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (string authenticationType, string nameType, string roleType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Il tipo di autenticazione utilizzato."
    - id: nameType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni di nome."
    - id: roleType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni dei ruoli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> tipo di attestazione di classe con le attestazioni specificate, il tipo di autenticazione, nome tipo di attestazione e ruolo."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il valore di `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, la proprietà è impostata su `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inizializzato dal `claims` parametro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Il valore di `nameType` parametro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Tuttavia, se il `nameType` parametro `null` o una stringa vuota, la proprietà è impostata su <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Il valore di `roleClaimType` parametro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Tuttavia, se il `roleClaimType` parametro `null` o una stringa vuota, la proprietà è impostata su <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni con cui compilare l&quot;identità basata sulle attestazioni."
    - id: authenticationType
      type: System.String
      description: "Il tipo di autenticazione utilizzato."
    - id: nameType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni di nome."
    - id: roleType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni dei ruoli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe dall&quot;oggetto specificato <xref:System.Security.Principal.IIdentity>utilizzando le attestazioni specificate, il tipo di autenticazione, nome tipo di attestazione e ruolo di tipo di attestazione.</xref:System.Security.Principal.IIdentity>"
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Actor` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Il `authenticationType` parametro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se il `authenticationType` parametro `null` o una stringa vuota, il valore della `identity.AuthenticationType` viene utilizzata la proprietà (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>). |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.BootStrapContext` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inizializzato dal `claims` parametro.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, le attestazioni da `identity` vengono aggiunti alla nuova istanza prima di quelli specificati tramite il `claims` parametro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Nota:** quando vi si accede, il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>viene restituito in base al valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore di `identity.Label` proprietà; in caso contrario, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` non è assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, non è `null`e ha un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà che non è `null`; un nome attestazione viene aggiunta la nuova istanza utilizzando il valore della <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>proprietà.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Nota:** quando vi si accede, viene restituito in base il valore della proprietà <xref:System.Security.Claims.ClaimsIdentity.Name%2A>il <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e la raccolta di <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Il valore di `nameType` parametro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> Tuttavia, se il valore del `nameType` parametro `null` o una stringa vuota e `identity` assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore del `identity.NameClaimType` proprietà viene utilizzata; in caso contrario, viene utilizzato <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Il valore di `roleClaimType` parametro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> Tuttavia, se il valore della `roleClaimType` parametro è `null` o una stringa vuota e l&quot;identità è assegnabile da <xref:System.Security.Claims.ClaimsIdentity>, il valore del `identity.RoleClaimType` proprietà viene utilizzata; in caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>viene utilizzato. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "L&quot;identità da cui basare la nuova identità basata sulle attestazioni."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni con cui compilare la nuova identità delle attestazioni."
    - id: authenticationType
      type: System.String
      description: "Il tipo di autenticazione utilizzato."
    - id: nameType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni di nome."
    - id: roleType
      type: System.String
      description: "Il tipo di attestazione da usare per le attestazioni dei ruoli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Actor
  id: Actor
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene o imposta l&quot;identità dell&quot;entità chiamata cui sono stati concessi diritti di delega."
  remarks: "Un&quot;applicazione può accedere la catena di delega che ha provocato la chiamata corrente, in modo ricorsivo esaminando la proprietà attore. Il token è delega la chiamata per conto del quale è possibile accedere tramite il <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>proprietà.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Actor { get; set; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "La parte chiamante cui sono stati concessi diritti di delega."
  overload: System.Security.Claims.ClaimsIdentity.Actor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si verifica un tentativo di impostare la proprietà all&quot;istanza corrente."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  id: AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Aggiunge che una singola richiesta a questa identità basata sulle attestazioni."
  remarks: "Viene esaminata l&quot;attestazione e se l&quot;oggetto è diverso rispetto a questa identità basata sulle attestazioni, il <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>metodo viene richiamato con identità delle attestazioni come parametro per creare una nuova attestazione con l&quot;oggetto corretto.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Questo metodo ha il `SecurityCritical` attributo applicato al controllo quali entità possono aggiungere attestazioni per l&quot;identità. Ulteriormente verso il basso la pipe, le decisioni di autorizzazione vengono apportate in base alle attestazioni presenti nel <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Attestazione da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.AddClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Aggiunge che un elenco di attestazioni a questa identità basata sulle attestazioni."
  remarks: "Ogni attestazione viene esaminato e se l&quot;oggetto è diverso rispetto a questa identità basata sulle attestazioni, il <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>metodo viene richiamato con identità delle attestazioni come parametro per creare una nuova attestazione con l&quot;oggetto corretto.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Questo metodo ha il `SecurityCritical` attributo applicato al controllo quali entità possono aggiungere attestazioni per l&quot;identità. Ulteriormente verso il basso la pipe, le decisioni di autorizzazione vengono apportate in base alle attestazioni presenti nel <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaims (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Le attestazioni da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.AddClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claims</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il tipo di autenticazione."
  remarks: "In genere uno dei valori definiti da una <xref:System.Security.Claims.AuthenticationTypes>classe.</xref:System.Security.Claims.AuthenticationTypes>"
  syntax:
    content: public virtual string AuthenticationType { get; }
    return:
      type: System.String
      description: "Il tipo di autenticazione."
  overload: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  id: BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene o imposta il token utilizzato per creare questa identità basata sulle attestazioni."
  remarks: "The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class.  \n  \n Set the `saveBootstrapContext` attribute on either the [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) or the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the BootstrapContext property.  \n  \n If the BootstrapContext property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class."
  syntax:
    content: public object BootstrapContext { get; set; }
    return:
      type: System.Object
      description: "Il contesto di bootstrap."
  overload: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene le attestazioni associate a questa identità basata sulle attestazioni."
  remarks: "La raccolta può contenere le voci `null`.       Le attestazioni contenute nella raccolta di attestazioni sostanzialmente descrivono l&quot;entità rappresentata da <xref:System.Security.Claims.ClaimsIdentity>.</xref:System.Security.Claims.ClaimsIdentity> Le attestazioni descrivono le proprietà e i diritti possesso dell&quot;entità che possono essere esaminate dalle applicazioni per prendere decisioni relative all&quot;autenticazione e autorizzazione.      > [!NOTE] > La <xref:System.Security.Claims.ClaimsPrincipal>classe dispone di un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>anche la proprietà.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> Nella maggior parte dei casi è consigliabile accedere attestazioni dell&quot;utente tramite il <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>raccolta anziché tramite la raccolta di attestazioni.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> È necessario accedere a richieste di un singolo <xref:System.Security.Claims.ClaimsIdentity>solo nei casi in cui l&quot;entità contiene più di un <xref:System.Security.Claims.ClaimsIdentity>ed è necessario valutare o modificare un&quot;identità specifica.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "La raccolta di attestazioni associato a questa identità basata sulle attestazioni."
  overload: System.Security.Claims.ClaimsIdentity.Claims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Restituisce un nuovo <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> copiati da questa identità basata sulle attestazioni."
  syntax:
    content: public virtual System.Security.Claims.ClaimsIdentity Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Una copia dell&quot;istanza corrente."
  overload: System.Security.Claims.ClaimsIdentity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  id: CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Da aggiungere."
    return:
      type: System.Security.Claims.Claim
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.CreateClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "L&quot;autorità emittente; &quot;LOCAL AUTHORITY&quot;."
  syntax:
    content: public const string DefaultIssuer;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  id: DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Il nome predefinito; tipo di attestazione <xref href=&quot;System.Security.Claims.ClaimTypes.Name&quot;></xref>."
  syntax:
    content: public const string DefaultNameClaimType;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  id: DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Il ruolo predefinito; tipo di attestazione <xref href=&quot;System.Security.Claims.ClaimTypes.Role&quot;></xref>."
  syntax:
    content: public const string DefaultRoleClaimType;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera tutte le attestazioni corrispondenti al predicato specificato."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funzione che esegue la logica corrispondente."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Attestazioni corrispondenti. L&quot;elenco è di sola lettura."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera tutte le attestazioni che presentano il tipo di attestazione specificato."
  remarks: "Viene eseguito il confronto ordinale maiuscole in basate su `type`."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (string type);
    parameters:
    - id: type
      type: System.String
      description: "Tipo di attestazione su cui eseguire la corrispondenza di attestazioni."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Attestazioni corrispondenti. L&quot;elenco è di sola lettura."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera la prima attestazione che corrisponde al predicato specificato."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funzione che esegue la logica corrispondente."
    return:
      type: System.Security.Claims.Claim
      description: "La prima attestazione corrispondente o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene trovata alcuna corrispondenza."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera la prima attestazione con il tipo di attestazione specificato."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (string type);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione per la corrispondenza."
    return:
      type: System.Security.Claims.Claim
      description: "La prima attestazione corrispondente o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene trovata alcuna corrispondenza."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Consente di popolare il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> con i dati necessari per serializzare l&quot;oggetto corrente <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> oggetto."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto da popolare con i dati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "La destinazione per questa serializzazione. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Claims.ClaimsIdentity.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Determina se questa attestazioni di identità ha un&quot;attestazione che corrisponde al predicato specificato."
  syntax:
    content: public virtual bool HasClaim (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funzione che esegue la logica corrispondente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esiste un&quot;attestazione corrispondente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Determina se questa attestazioni di identità ha un&quot;attestazione con l&quot;oggetto tipo e il valore di attestazione."
  remarks: "Non controlla il <xref:System.Security.Claims.Claim.Issuer%2A>o <xref:System.Security.Claims.Claim.OriginalIssuer%2A>proprietà.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> Il confronto viene eseguito utilizzando l&quot;ordinale, tra maiuscole e minuscole nel valore. case tipo dipendente."
  syntax:
    content: public virtual bool HasClaim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione per la corrispondenza."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione per la corrispondenza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene trovata una corrispondenza. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**.       -or-       <code>value</code> is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene un valore che indica se l&quot;identità è stata autenticata."
  remarks: '`true`Se il <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>proprietà non è `null` o una stringa vuota.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>'
  syntax:
    content: public virtual bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;identità è stato autenticato; in caso contrario, **false**."
  overload: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Label
  id: Label
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene o imposta l&quot;etichetta per questa identità di attestazioni."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "L&quot;etichetta."
  overload: System.Security.Claims.ClaimsIdentity.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Name
  id: Name
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il nome dell&quot;identità basata sulle attestazioni."
  remarks: "Restituisce il valore della prima attestazione con un tipo che corrisponde al nome attestazione di tipo definito nel <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>proprietà.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Se non viene trovata alcuna attestazione che corrisponde al tipo di attestazione del nome, restituisce `null`."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Il nome o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  id: NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il tipo di attestazione utilizzato per determinare quali attestazioni di forniscono il valore per il <xref:System.Security.Claims.ClaimsIdentity.Name*>proprietà dell&quot;identità basata sulle attestazioni.</xref:System.Security.Claims.ClaimsIdentity.Name*>"
  remarks: "La proprietà NameClaimType specifica il tipo di attestazione (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) utilizzato per specificare il nome per questa identità.</xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> Il nome è possibile accedere mediante il <xref:System.Security.Claims.ClaimsIdentity.Name%2A>proprietà.</xref:System.Security.Claims.ClaimsIdentity.Name%2A>       Questa proprietà è impostata dal costruttore."
  syntax:
    content: public string NameClaimType { get; }
    return:
      type: System.String
      description: "Il nome del tipo di attestazione."
  overload: System.Security.Claims.ClaimsIdentity.NameClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  id: RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Tenta di rimuovere un&quot;attestazione di identità basata sulle attestazioni."
  remarks: "È possibile che l&quot;attestazione non può essere rimosso perché non appartiene dall&quot;identità. Ad esempio, si sarebbe per le attestazioni dei ruoli che sono proprietà dell&quot;entità. A differenza di <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>metodo, che restituisce un valore booleano che indica se l&quot;attestazione è stata rimossa, RemoveClaim genererà un&quot;eccezione se non è stato possibile rimuovere l&quot;attestazione viene confrontato l&quot;attestazione specificata del riferimento all&quot;oggetto (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A> </xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>       Questo metodo ha il `SecurityCritical` attributo applicato al controllo quali entità possono rimuovere attestazioni dall&quot;identità. Ulteriormente verso il basso la pipe, le decisioni di autorizzazione vengono apportate in base alle attestazioni presenti nel <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void RemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Attestazione da rimuovere."
  overload: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;attestazione non può essere rimosso."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  id: RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il tipo di attestazione che verrà interpretato come un ruolo di .NET Framework tra le attestazioni in questa identità basata sulle attestazioni."
  remarks: "Il tipo di attestazione ruolo è il tipo di attestazione (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) che viene utilizzato durante la valutazione di questa identità per il <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>metodo.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> Il <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>metodo viene chiamato per determinare se l&quot;entità corrente è un ruolo specificato.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> Il modello basato sulle attestazioni estende questo controllo per utilizzare le attestazioni presentate dal server principale. Oggetto <xref:System.Security.Claims.ClaimsPrincipal>oggetto può contenere uno o più <xref:System.Security.Claims.ClaimsIdentity>oggetti e ogni oggetto identità può contenere più <xref:System.Security.Claims.Claim>oggetti.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsPrincipal> La proprietà RoleClaimType specifica il tipo di attestazione dell&quot;attestazione che deve essere utilizzato per specificare il valore per il ruolo quando questa valutazione <xref:System.Security.Claims.ClaimsIdentity>oggetto.</xref:System.Security.Claims.ClaimsIdentity> La proprietà è impostata dal costruttore. Un valore comune è <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>.</xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>"
  syntax:
    content: public string RoleClaimType { get; }
    return:
      type: System.String
      description: "Il ruolo del tipo di attestazione."
  overload: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  id: TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Tenta di rimuovere un&quot;attestazione di identità basata sulle attestazioni."
  remarks: "È possibile che l&quot;attestazione non può essere rimosso perché non appartiene dall&quot;identità. Ad esempio, si sarebbe per le attestazioni dei ruoli che sono proprietà dell&quot;entità.       Riferimento a un oggetto corrisponde l&quot;attestazione specificata (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A>       Questo metodo ha il `SecurityCritical` attributo applicato al controllo quali entità possono rimuovere attestazioni dall&quot;identità. Ulteriormente verso il basso la pipe, le decisioni di autorizzazione vengono apportate in base alle attestazioni presenti nel <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>insieme.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Attestazione da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;attestazione è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Da aggiungere."
    - id: userData
      type: System.Byte[]
      description: "Da aggiungere."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.Actor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: true
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.ClaimsIdentity.#ctor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.Actor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim
  nameWithType: ClaimsIdentity.AddClaim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims
  nameWithType: ClaimsIdentity.AddClaims
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone
  nameWithType: ClaimsIdentity.Clone
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim
  nameWithType: ClaimsIdentity.CreateClaim
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
- uid: System.Security.Claims.ClaimsIdentity.FindAll*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll
  nameWithType: ClaimsIdentity.FindAll
- uid: System.Security.Claims.ClaimsIdentity.FindFirst*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst
  nameWithType: ClaimsIdentity.FindFirst
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData
  nameWithType: ClaimsIdentity.GetObjectData
- uid: System.Security.Claims.ClaimsIdentity.HasClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim
  nameWithType: ClaimsIdentity.HasClaim
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim
  nameWithType: ClaimsIdentity.RemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim
  nameWithType: ClaimsIdentity.TryRemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.WriteTo*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo
  nameWithType: ClaimsIdentity.WriteTo
