### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsBase
  id: SettingsBase
  children:
  - System.Configuration.SettingsBase.#ctor
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Item(System.String)
  - System.Configuration.SettingsBase.Properties
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Save
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  langs:
  - csharp
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
  type: Class
  summary: "Fornisce la classe di base usata per supportare le impostazioni delle proprietà utente."
  remarks: "Web Form ASP.NET e Windows Form è possibile utilizzare la stessa infrastruttura di impostazioni di configurazione per supportare le impostazioni utente. In ASP.NET, le impostazioni utente vengono spesso definite come profilo di ASP.NET. L&quot;infrastruttura di impostazioni includa la classe di base SettingsBase, la <xref:System.Configuration.SettingsProperty>classe, la <xref:System.Configuration.SettingsPropertyValue>classe, <xref:System.Configuration.SettingsContext>classe, la <xref:System.Configuration.SettingsProvider>classe e la <xref:System.Configuration.SettingAttribute>classe.</xref:System.Configuration.SettingAttribute> </xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsContext> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>       Le classi di base delle impostazioni forniscono solo un&quot;infrastruttura comune per la definizione e la persistenza delle proprietà delle impostazioni. A seconda di come vengono derivate queste classi di base e l&quot;ambiente in fase di esecuzione, l&quot;API delle impostazioni può fornire livelli di funzionalità diversi. Ad esempio, il profilo di ASP.NET utilizza le classi di base delle impostazioni per fornire le impostazioni per ogni utente che vengono salvate e caricate in base alla semantica di richiesta."
  syntax:
    content: public abstract class SettingsBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe."
  syntax:
    content: protected SettingsBase ();
    parameters: []
  overload: System.Configuration.SettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Context
  id: Context
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene il contesto di impostazioni associate."
  remarks: "Oggetto <xref:System.Configuration.SettingsContext>utilizzato dall&quot;applicazione per fornire informazioni contestuali che è possibile utilizzare il provider di rendere persistenti le impostazioni.</xref:System.Configuration.SettingsContext>       Ogni classe di impostazioni è derivata da <xref:System.Configuration.SettingsBase>un contesto associato.</xref:System.Configuration.SettingsBase> Il contesto viene passato al provider di impostazioni di identificare ulteriori informazioni sulle impostazioni. Il contesto funge pertanto da un suggerimento per determinare come mantenere i valori delle impostazioni associate al provider di impostazioni."
  syntax:
    content: public virtual System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> associato all&quot;istanza di impostazioni."
  overload: System.Configuration.SettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  id: Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inizializza le proprietà interne utilizzate da <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> oggetto."
  syntax:
    content: public void Initialize (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties, System.Configuration.SettingsProviderCollection providers);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Contesto delle impostazioni correlate alle impostazioni di proprietà."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Le proprietà delle impostazioni che saranno accessibili dal <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> istanza."
    - id: providers
      type: System.Configuration.SettingsProviderCollection
      description: "I provider di inizializzazione che devono essere utilizzati durante il caricamento e salvataggio di valori di proprietà."
  overload: System.Configuration.SettingsBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene un valore che indica se l&quot;accesso all&quot;oggetto è sincronizzato (thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso al <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> è sincronizzato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsBase.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene o imposta il valore della proprietà impostazioni specificate."
  remarks: "La proprietà Item, noto anche come indicizzatore, viene utilizzata regolarmente nella classe delle impostazioni derivata da <xref:System.Configuration.SettingsBase>.</xref:System.Configuration.SettingsBase> La proprietà dell&quot;elemento associa la proprietà pubblica della classe di proprietà di impostazione corrispondente.       La prima volta che si accede a una proprietà, il <xref:System.Configuration.SettingsBase>istanza troverà tutte le altre proprietà che condividono lo stesso provider della proprietà richiesta.</xref:System.Configuration.SettingsBase> Il <xref:System.Configuration.SettingsBase>istanza chiamerà quindi il provider, passandogli il set di <xref:System.Configuration.SettingsProperty>gli oggetti che rappresentano i dati, il provider deve recuperare.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsBase>       Si noti che l&quot;indicizzatore ottenere e impostare dati di proprietà in modo affidabile se <xref:System.Configuration.SettingsBase.IsSynchronized%2A>è `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A> Oggetto <xref:System.Configuration.SettingsBase>istanza per impostazione predefinita non è thread-safe.</xref:System.Configuration.SettingsBase> Tuttavia, è possibile chiamare <xref:System.Configuration.SettingsBase.Synchronized%2A>, passando un <xref:System.Configuration.SettingsBase>istanza per stabilire il <xref:System.Configuration.SettingsBase>indicizzatore operano in modo thread-safe.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase.Synchronized%2A>"
  syntax:
    content: public virtual object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Oggetto <xref:System.String>contenente il nome della proprietà a cui accedere.</xref:System.String>"
    return:
      type: System.Object
      description: "Se presente, il valore della proprietà di impostazione denominata."
  overload: System.Configuration.SettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Nessuna proprietà associato all&quot;oggetto corrente oppure non è stata trovata la proprietà specificata."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "È stato effettuato un tentativo di impostare una proprietà di sola lettura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Il valore fornito è di tipo non compatibile con la proprietà, le impostazioni durante un&quot;operazione set."
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Properties
  id: Properties
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene la raccolta di proprietà delle impostazioni."
  remarks: "Il `get` funzione di accesso della proprietà proprietà restituisce la raccolta di <xref:System.Configuration.SettingsProperty>le istanze associate alle proprietà gestite dal <xref:System.Configuration.SettingsBase>istanza.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsProperty>       La <xref:System.Configuration.SettingsBase>classe in modo nativo riconosce determinate caratteristiche di un&quot;impostazione, ad esempio il nome, tipo di proprietà, i provider di impostazioni, il valore predefinito e lo stato di sola lettura e una preferenza di serializzazione.</xref:System.Configuration.SettingsBase> Queste caratteristiche sono configurati in mirroring come proprietà nella <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> Tutti gli altri attributi della <xref:System.Configuration.SettingsProperty>classe vengono passati al provider di impostazioni associato come un <xref:System.Configuration.SettingsAttributeDictionary>.</xref:System.Configuration.SettingsAttributeDictionary> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> raccolta contenente tutti i <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> oggetti."
  overload: System.Configuration.SettingsBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene i valori delle proprietà di una raccolta di impostazioni."
  syntax:
    content: public virtual System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Una raccolta di <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> gli oggetti che rappresentano i valori di dati effettivi per la proprietà gestite dal <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> istanza."
  overload: System.Configuration.SettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Providers
  id: Providers
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Ottiene una raccolta di provider di impostazioni."
  syntax:
    content: public virtual System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> contenente <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> oggetti."
  overload: System.Configuration.SettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Save
  id: Save
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Archivia i valori correnti delle proprietà di impostazione."
  remarks: "Il <xref:System.Configuration.SettingsBase>istanza Raggruppa le proprietà in base al provider che è associato a ogni proprietà.</xref:System.Configuration.SettingsBase> Ogni provider viene quindi chiamato in sequenza e viene passato il set di proprietà che il provider deve salvare."
  syntax:
    content: public virtual void Save ();
    parameters: []
  overload: System.Configuration.SettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  id: Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Fornisce un <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe che è sincronizzato (thread-safe)."
  remarks: "L&quot;indicizzatore ottenere e impostare i dati della proprietà in modo thread-safe, se il <xref:System.Configuration.SettingsBase.IsSynchronized%2A>è impostata su `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A>  Oggetto <xref:System.Configuration.SettingsBase>istanza per impostazione predefinita non è thread-safe.</xref:System.Configuration.SettingsBase>  Tuttavia, è possibile chiamare Synchronized passando un <xref:System.Configuration.SettingsBase>istanza per stabilire il <xref:System.Configuration.SettingsBase>indicizzatore operano in modo thread-safe.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase>"
  syntax:
    content: public static System.Configuration.SettingsBase Synchronized (System.Configuration.SettingsBase settingsBase);
    parameters:
    - id: settingsBase
      type: System.Configuration.SettingsBase
      description: "La classe utilizzata per supportare le impostazioni delle proprietà utente."
    return:
      type: System.Configuration.SettingsBase
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe sincronizzata."
  overload: System.Configuration.SettingsBase.Synchronized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.SettingsBase.#ctor
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
- uid: System.Configuration.SettingsBase.Context
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.SettingsBase.IsSynchronized
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsBase.Item(System.String)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsBase.Properties
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsBase.Providers
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
- uid: System.Configuration.SettingsBase
  parent: System.Configuration
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
- uid: System.Configuration.SettingsBase.#ctor*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase.SettingsBase
- uid: System.Configuration.SettingsBase.Context*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
- uid: System.Configuration.SettingsBase.Initialize*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize
  nameWithType: SettingsBase.Initialize
- uid: System.Configuration.SettingsBase.IsSynchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
- uid: System.Configuration.SettingsBase.Item*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item
  nameWithType: SettingsBase.Item
- uid: System.Configuration.SettingsBase.Properties*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
- uid: System.Configuration.SettingsBase.Providers*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save
  nameWithType: SettingsBase.Save
- uid: System.Configuration.SettingsBase.Synchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized
  nameWithType: SettingsBase.Synchronized
