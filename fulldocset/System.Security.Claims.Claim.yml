### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.Claim
  id: Claim
  children:
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.Clone
  - System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.CustomSerializationData
  - System.Security.Claims.Claim.Issuer
  - System.Security.Claims.Claim.OriginalIssuer
  - System.Security.Claims.Claim.Properties
  - System.Security.Claims.Claim.Subject
  - System.Security.Claims.Claim.ToString
  - System.Security.Claims.Claim.Type
  - System.Security.Claims.Claim.Value
  - System.Security.Claims.Claim.ValueType
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
  type: Class
  summary: "Rappresenta un&quot;attestazione."
  remarks: "Un&quot;attestazione è un&quot;istruzione su un argomento da un&quot;autorità emittente. Attestazioni rappresentano gli attributi del soggetto che sono utili nel contesto di operazioni di autenticazione e autorizzazione. Gli argomenti e autorità emittenti sono entrambe le entità che fanno parte di uno scenario di identità. Alcuni esempi tipici di un oggetto sono: un utente, un&quot;applicazione o servizio, un dispositivo o un computer. Alcuni esempi tipici di un&quot;autorità di certificazione sono: il sistema operativo, un&quot;applicazione. un servizio, un provider di ruoli, un provider di identità o un provider di federazione. Un&quot;autorità di certificazione recapita le attestazioni mediante l&quot;emissione di token di sicurezza, in genere tramite un Token di sicurezza del servizio (STS). (Disponibile in WIF, è possibile compilare un servizio token di sicurezza mediante derivazione da di <xref:System.IdentityModel.SecurityTokenService>classe.)</xref:System.IdentityModel.SecurityTokenService> In alcuni casi, la raccolta di attestazioni ricevute da un&quot;autorità di certificazione può essere esteso per gli attributi del soggetto archiviati direttamente alla risorsa. Un&quot;attestazione può essere valutata per determinare i diritti di accesso ai dati e altre risorse protette durante il processo di autorizzazione e consente inoltre di rendere o express decisioni di autenticazione su un oggetto.       A partire da .NET 4.5, le classi di Windows Identity Foundation (WIF), che implementano l&quot;identità basata sulle attestazioni, sono stati completamente integrate in .NET Framework. Il concetto di attestazioni è implementato dalla classe attestazione.       Di seguito sono descritte le proprietà importanti della classe di attestazione: - il <xref:System.Security.Claims.Claim.Type%2A>proprietà è una stringa (in genere un URI) che contiene le informazioni semantiche sull&quot;attestazione; indica cosa significa che il valore dell&quot;attestazione.</xref:System.Security.Claims.Claim.Type%2A> Ad esempio, un&quot;attestazione con un tipo di attestazione <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) rappresenta il nome dell&quot;utente.</xref:System.Security.Claims.ClaimTypes.GivenName> Il valore della <xref:System.Security.Claims.Claim.Type%2A>proprietà può essere uno dei tipi di attestazione noti definiti nel <xref:System.Security.Claims.ClaimTypes>classe oppure può essere un URI arbitrario come definito dall&quot;autorità emittente.</xref:System.Security.Claims.ClaimTypes> </xref:System.Security.Claims.Claim.Type%2A> Ad esempio, un tipo di attestazione di &quot;urn: spendinglimit&quot; potrebbe rappresentare un attributo utente che ha senso nel contesto di business dell&quot;autorità di certificazione.      -La <xref:System.Security.Claims.Claim.Value%2A>proprietà contiene il valore dell&quot;attestazione.</xref:System.Security.Claims.Claim.Value%2A> Per ridurre le dipendenze e semplificare l&quot;amministrazione, disponibile in WIF è rappresentato il valore di un&quot;attestazione solo sotto forma di stringa. Per i tipi di valore più complessi, è consigliabile utilizzare i tipi di schema XML standard per indicare come il valore deve essere serializzato in e deserializzato da una stringa.      -La <xref:System.Security.Claims.Claim.ValueType%2A>proprietà contiene una stringa che identifica le informazioni sul tipo per il valore.</xref:System.Security.Claims.Claim.ValueType%2A> Questa proprietà deve essere utilizzata per comprendere il formato del valore e per fornire informazioni sulle modalità di deserializzazione. Se la soluzione richiede tipi di valori complessi, è consigliabile utilizzare i tipi di schema XML standard nel <xref:System.Security.Claims.Claim.ValueType%2A>proprietà per indicare come <xref:System.Security.Claims.Claim.Value%2A>proprietà è destinato a essere serializzato in e deserializzato da una stringa.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.ValueType%2A>      -La <xref:System.Security.Claims.Claim.Subject%2A>proprietà è un <xref:System.Security.Claims.ClaimsIdentity>oggetto che rappresenta l&quot;oggetto dell&quot;attestazione.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.Claim.Subject%2A> L&quot;oggetto dell&quot;attestazione è l&quot;entità (in genere l&quot;utente che richiede l&quot;accesso a una risorsa) su cui viene dichiarata l&quot;attestazione. Il <xref:System.Security.Claims.ClaimsIdentity>include, tra le relative proprietà, una raccolta di attestazioni che descrivono le proprietà e gli attributi del soggetto come attestata per da uno o più emittenti.</xref:System.Security.Claims.ClaimsIdentity>      -La <xref:System.Security.Claims.Claim.Issuer%2A>proprietà contiene il nome dell&quot;entità che ha emesso l&quot;attestazione.</xref:System.Security.Claims.Claim.Issuer%2A> L&quot;autorità emittente di un&quot;attestazione è rappresentato in WIF da una stringa che contiene un nome eseguito da un elenco di autorità di certificazione ben noti che viene mantenuto dal Registro di sistema di nome dell&quot;autorità di certificazione. Il Registro di sistema di nome dell&quot;autorità emittente è un&quot;istanza di una classe che deriva dalla <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Il Registro di sistema di nome dell&quot;autorità di certificazione associa un nome di tasti di scelta rapida per il materiale di crittografia necessario per verificare le firme di token generato dall&quot;emittente corrispondente. Ad esempio, il <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>(classe), disponibile con .NET 4.5, associa il nome del tasto di scelta per ogni autorità emittente con il certificato x. 509 corrispondente.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> L&quot;elenco di autorità emittenti noti si basa in genere al momento dell&quot;avvio dal Registro di sistema di nome dell&quot;autorità di certificazione. L&quot;elenco utilizzato per il <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>è specificato nel file di configurazione dell&quot;applicazione.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>      -La <xref:System.Security.Claims.Claim.OriginalIssuer%2A>proprietà contiene il nome dell&quot;entità che ha originariamente rilasciato l&quot;attestazione.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> Questa proprietà è progettata per semplificare gli scenari in cui un&quot;attestazione può attraversare più emittenti prima viene presentato dal client all&quot;applicazione relying Party. ad esempio gli scenari di federazione. È possibile esaminare la <xref:System.Security.Claims.Claim.OriginalIssuer%2A>proprietà per determinare l&quot;entità che ha originariamente rilasciato l&quot;attestazione.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> Il nome deriva dall&quot;elenco di autorità emittenti noti mantenute nel Registro di nome dell&quot;autorità di certificazione, come nel caso del <xref:System.Security.Claims.Claim.Issuer%2A>proprietà.</xref:System.Security.Claims.Claim.Issuer%2A>"
  example:
  - "The following example extracts the claims associated to the authenticated user performing an HTTP request and writes them in the HTTP response. The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal> and the claims are read from it. The claims are then written to HTTP the response.  \n  \n```c#  \nClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  \nif (null != principal)  \n{  \n   foreach (Claim claim in principal.Claims)  \n   {  \n      Response.Write(\"CLAIM TYPE: \" + claim.Type + \"; CLAIM VALUE: \" + claim.Value + \"</br>\");  \n   }  \n  \n}  \n  \n```"
  syntax:
    content: public class Claim
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public Claim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Da aggiungere."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  id: '#ctor(System.Security.Claims.Claim)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "Attestazione di sicurezza."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il lettore specificato e il soggetto."
  syntax:
    content: public Claim (System.IO.BinaryReader reader, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Lettore binario."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Soggetto descritto da questa attestazione."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con l&quot;attestazione di sicurezza specificato e il soggetto."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "Attestazione di sicurezza."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Soggetto descritto da questa attestazione."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il tipo di attestazione specificato e il valore."
  remarks: "Il <xref:System.Security.Claims.Claim.Subject%2A>è impostata su `null`.</xref:System.Security.Claims.Claim.Subject%2A> <xref:System.Security.Claims.Claim.Issuer%2A>E <xref:System.Security.Claims.Claim.OriginalIssuer%2A>sono impostate su <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> Il <xref:System.Security.Claims.Claim.ValueType%2A>è impostata su <xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName></xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName> </xref:System.Security.Claims.Claim.ValueType%2A>"
  syntax:
    content: public Claim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il tipo di attestazione specificato, il valore e tipo di valore."
  remarks: "Il <xref:System.Security.Claims.Claim.Subject%2A>è impostata su `null`.</xref:System.Security.Claims.Claim.Subject%2A> <xref:System.Security.Claims.Claim.Issuer%2A>E <xref:System.Security.Claims.Claim.OriginalIssuer%2A>sono impostate su <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione."
    - id: valueType
      type: System.String
      description: "Il tipo di valore di attestazione. Se questo parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> viene utilizzato."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il tipo di attestazione specificato, valore, tipo di valore e dell&quot;autorità di certificazione."
  remarks: "Il <xref:System.Security.Claims.Claim.Subject%2A>è impostata su `null`.</xref:System.Security.Claims.Claim.Subject%2A> Il <xref:System.Security.Claims.Claim.OriginalIssuer%2A>viene impostata in base al valore del `issuer` parametro.</xref:System.Security.Claims.Claim.OriginalIssuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione."
    - id: valueType
      type: System.String
      description: "Il tipo di valore di attestazione. Se questo parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> viene utilizzato."
    - id: issuer
      type: System.String
      description: "Autorità emittente dell&quot;attestazione. Se questo parametro è vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> viene utilizzato."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il tipo di attestazione specificato valore, tipo di valore, autorità di certificazione e autorità di certificazione originale."
  remarks: "Il <xref:System.Security.Claims.Claim.Subject%2A>è impostata su `null`.</xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione."
    - id: valueType
      type: System.String
      description: "Il tipo di valore di attestazione. Se questo parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> viene utilizzato."
    - id: issuer
      type: System.String
      description: "Autorità emittente dell&quot;attestazione. Se questo parametro è vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> viene utilizzato."
    - id: originalIssuer
      type: System.String
      description: "Autorità di certificazione originale dell&quot;attestazione. Se questo parametro è vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi il <> </> *> proprietà è impostata sul valore di <> </> *> proprietà."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe con il tipo di attestazione specificato, valore, tipo di valore, autorità di certificazione, autorità di certificazione originale e l&quot;oggetto."
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: type
      type: System.String
      description: "Il tipo di attestazione."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attestazione."
    - id: valueType
      type: System.String
      description: "Il tipo di valore di attestazione. Se questo parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> viene utilizzato."
    - id: issuer
      type: System.String
      description: "Autorità emittente dell&quot;attestazione. Se questo parametro è vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> viene utilizzato."
    - id: originalIssuer
      type: System.String
      description: "Autorità di certificazione originale dell&quot;attestazione. Se questo parametro è vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, quindi il <> </> *> proprietà è impostata sul valore di <> </> *> proprietà."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Soggetto descritto da questa attestazione."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone
  id: Clone
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Restituisce un nuovo <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> oggetto copiato da questo oggetto. La nuova attestazione non dispone di un oggetto."
  remarks: "Questa è un&quot;operazione di copia dei riferimenti. Il <xref:System.Security.Claims.Claim.Subject%2A>proprietà del nuovo <xref:System.Security.Claims.Claim>oggetto è impostato su `null`.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone ();
    parameters: []
    return:
      type: System.Security.Claims.Claim
      description: "Nuovo oggetto dell&quot;attestazione."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  id: Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Restituisce un nuovo <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> oggetto copiato da questo oggetto. L&quot;oggetto della nuova attestazione è impostato sull&quot;oggetto claimsidentity specificato."
  remarks: "Questa è un&quot;operazione di copia dei riferimenti. Il <xref:System.Security.Claims.Claim.Subject%2A>proprietà del nuovo <xref:System.Security.Claims.Claim>oggetto è impostato il valore di `identity` parametro.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone (System.Security.Claims.ClaimsIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
      description: "Oggetto previsto della nuova attestazione."
    return:
      type: System.Security.Claims.Claim
      description: "Nuovo oggetto dell&quot;attestazione."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Restituisce <xref:System.Byte>.</xref:System.Byte>"
  overload: System.Security.Claims.Claim.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Issuer
  id: Issuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene l&quot;emittente dell&quot;attestazione."
  remarks: "Il valore della proprietà dell&quot;autorità di certificazione è un nome che viene eseguito da un elenco di autorità emittenti noti mantenuto dal Registro di sistema di nome dell&quot;autorità di certificazione. Il Registro di sistema di nome dell&quot;autorità emittente è un&quot;istanza di una classe che deriva dalla <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Il Registro di sistema di nome dell&quot;autorità di certificazione associa un nome di tasto di scelta (il nome dell&quot;autorità di certificazione) con il materiale crittografico che è necessario verificare le firme dei token prodotto dall&quot;emittente. ad esempio, un certificato x.&509;."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "Un nome che si riferisce all&quot;autorità emittente dell&quot;attestazione."
  overload: System.Security.Claims.Claim.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.OriginalIssuer
  id: OriginalIssuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene l&quot;autorità di certificazione originale dell&quot;attestazione."
  remarks: "Contiene il nome dell&quot;entità che ha originariamente rilasciato l&quot;attestazione. Questa proprietà è progettata per semplificare gli scenari in cui un&quot;attestazione può attraversare più emittenti prima viene presentato dal client all&quot;applicazione relying Party. ad esempio gli scenari di federazione.       Il valore della proprietà OriginalIssuer è un nome che viene eseguito da un elenco di autorità emittenti noti mantenuto dal Registro di sistema di nome dell&quot;autorità di certificazione. Il Registro di sistema di nome dell&quot;autorità emittente è un&quot;istanza di una classe che deriva dalla <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Il Registro di sistema di nome dell&quot;autorità di certificazione associa un nome di tasto di scelta (il nome dell&quot;autorità di certificazione) con il materiale crittografico che è necessario verificare le firme dei token prodotto dall&quot;emittente. ad esempio, un certificato x.&509;.       Salvo per quegli scenari di delega e la federazione, il <xref:System.Security.Claims.Claim.Issuer%2A>proprietà e la proprietà OriginalIssuer viene in genere hanno lo stesso valore.</xref:System.Security.Claims.Claim.Issuer%2A> Se il valore della proprietà OriginalIssuer è diverso dal valore della <xref:System.Security.Claims.Claim.Issuer%2A>proprietà, l&quot;attestazione innanzitutto emesso dall&quot;autorità emittente originale e successivamente è stato nuovamente rilasciata dall&quot;autorità emittente.</xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public string OriginalIssuer { get; }
    return:
      type: System.String
      description: "Un nome di riferimento per l&quot;autorità di certificazione originale dell&quot;attestazione."
  overload: System.Security.Claims.Claim.OriginalIssuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Properties
  id: Properties
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene un dizionario che contiene le proprietà aggiuntive associate all&quot;attestazione."
  remarks: "La proprietà fornisce un dizionario di coppie nome-valore che consente di metadati o altre informazioni su cui affermano di essere associato ad esso. Per le attestazioni generate dai token SAML, questo dizionario e può contenere chiavi fornite dalle costanti nella <xref:System.Security.Claims.ClaimProperties>classe.</xref:System.Security.Claims.ClaimProperties>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Un dizionario che contiene le proprietà aggiuntive associate all&quot;attestazione. Le proprietà sono rappresentate come coppie nome-valore."
  overload: System.Security.Claims.Claim.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Subject
  id: Subject
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene l&quot;oggetto dell&quot;attestazione."
  remarks: "L&quot;oggetto è l&quot;entità su cui viene dichiarata l&quot;attestazione. Alcuni esempi tipici sono un utente, un&quot;applicazione o servizio, un dispositivo o un computer. L&quot;oggetto è rappresentato da un oggetto <xref:System.Security.Claims.ClaimsIdentity>che contiene una raccolta di attestazioni che descrivono tale</xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Subject { get; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Oggetto dell&quot;attestazione."
  overload: System.Security.Claims.Claim.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ToString
  id: ToString
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Restituisce una rappresentazione di stringa di questo <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> oggetto."
  remarks: 'La stringa restituita contiene i valori del <xref:System.Security.Claims.Claim.Type%2A>e <xref:System.Security.Claims.Claim.Value%2A>proprietà nel formato seguente:. &quot; Tipo: valore &quot;.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.Type%2A>'
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "La rappresentazione di stringa del <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> oggetto."
  overload: System.Security.Claims.Claim.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Type
  id: Type
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il tipo di attestazione dell&quot;attestazione."
  remarks: "La proprietà di tipo fornisce il contenuto di semantico dell&quot;attestazione, vale a dire, indicante che cos&quot;è l&quot;attestazione su. Ad esempio, un&quot;attestazione con un tipo di attestazione <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) rappresenta il nome dell&quot;utente.</xref:System.Security.Claims.ClaimTypes.GivenName> Il tipo di attestazione è in genere un URI. Tuttavia, non sono limitate in qualsiasi formato specifico diverso da deve essere rappresentato come una stringa. Il requisito solo generale è che l&quot;autorità emittente dell&quot;attestazione e il consumer attestazione devono concordare sul significato dell&quot;attestazione. Costanti per i tipi di attestazione noti utilizzati da Windows Identity Foundation (WIF) sono disponibili tramite la <xref:System.Security.Claims.ClaimTypes>classe.</xref:System.Security.Claims.ClaimTypes> Il valore dell&quot;attestazione viene fornito per il <xref:System.Security.Claims.Claim.Value%2A>proprietà.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "Il tipo di attestazione."
  overload: System.Security.Claims.Claim.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Value
  id: Value
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il valore dell&quot;attestazione."
  remarks: "Il valore di un&quot;attestazione è rappresentato solo sotto forma di stringa. Per i tipi di valore più complessi, è consigliabile utilizzare i tipi di schema XML standard per indicare come il valore deve essere serializzato e deserializzato in e da una stringa.       Il <xref:System.Security.Claims.Claim.ValueType%2A>proprietà fornisce informazioni sottostanti sintattici tipo sul valore.</xref:System.Security.Claims.Claim.ValueType%2A> La <xref:System.Security.Claims.Claim.Type%2A>proprietà fornisce le informazioni semantiche sul valore, vale a dire, fornisce il significato del valore e spiega un consumer di attestazione di interpretarlo.</xref:System.Security.Claims.Claim.Type%2A>"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "Il valore dell&quot;attestazione."
  overload: System.Security.Claims.Claim.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ValueType
  id: ValueType
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Ottiene il tipo di valore dell&quot;attestazione."
  remarks: "La proprietà ValueType contiene una stringa che identifica le informazioni sul tipo del valore. Questa proprietà può essere utilizzata per comprendere il formato del valore e per fornire informazioni su come serializzare e deserializzare il valore. Se la soluzione richiede tipi di valori complessi, è consigliabile utilizzare i tipi di schema XML standard nella proprietà ValueType per indicare come <xref:System.Security.Claims.Claim.Value%2A>proprietà deve essere serializzato e deserializzato da una stringa.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string ValueType { get; }
    return:
      type: System.String
      description: "Il tipo di valore di attestazione."
  overload: System.Security.Claims.Claim.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Da aggiungere."
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Scrive la <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> nel writer."
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Il writer per scrivere questa attestazione"
    - id: userData
      type: System.Byte[]
      description: "I dati utente per l&quot;attestazione"
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
- uid: System.Security.Claims.Claim.Clone
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
- uid: System.Security.Claims.Claim.CustomSerializationData
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.Claim.Issuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.Claim.Subject
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
- uid: System.Security.Claims.Claim.ToString
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
- uid: System.Security.Claims.Claim.Type
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
- uid: System.Security.Claims.Claim.Value
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
- uid: System.Security.Claims.Claim.ValueType
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.Claim.#ctor*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim
  nameWithType: Claim.Claim
- uid: System.Security.Claims.Claim.Clone*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone
  nameWithType: Claim.Clone
- uid: System.Security.Claims.Claim.CustomSerializationData*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
- uid: System.Security.Claims.Claim.Issuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
- uid: System.Security.Claims.Claim.Subject*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
- uid: System.Security.Claims.Claim.ToString*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString
  nameWithType: Claim.ToString
- uid: System.Security.Claims.Claim.Type*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
- uid: System.Security.Claims.Claim.Value*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
- uid: System.Security.Claims.Claim.ValueType*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo
  nameWithType: Claim.WriteTo
