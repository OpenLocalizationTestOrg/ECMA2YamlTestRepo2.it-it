### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ActiveDirectoryRole
  id: ActiveDirectoryRole
  children:
  - System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  - System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  - System.Workflow.Activities.ActiveDirectoryRole.GetManager
  - System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  - System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  - System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  - System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  - System.Workflow.Activities.ActiveDirectoryRole.Name
  - System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  - System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  - System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
  type: Class
  summary: "Rappresenta un ruolo di Active Directory in un ambiente di hosting di Windows Workflow Foundation. Questa classe non può essere ereditata."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]In genere, l&quot;archivio di Active Directory viene utilizzato per archiviare informazioni organizzative sul personale. Lo scopo principale per il ActiveDirectoryRole è per eseguire query su informazioni organizzative per ragioni aziendali.       I ruoli Active Directory è in genere corrispondono a una funzione di processo, un titolo o una competenza del processo all&quot;interno del contesto dell&quot;organizzazione."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.Workflow.Activities.WorkflowRole
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  id: GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene tutti i ruoli che riportano al ruolo corrente, direttamente o indirettamente."
  remarks: "GetAllReports restituisce tutti i nodi di sotto del nodo corrente. Utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>per restituire solo i nodi che sono direttamente sotto il nodo corrente.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Oggetto <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene tutti i ruoli che sia direttamente o indirettamente fanno riferimento al ruolo corrente."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  id: GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene tutti i ruoli che riportano direttamente al ruolo corrente."
  remarks: "GetDirectReports restituisce solo i nodi che sono direttamente sotto il nodo corrente. Per restituire tutti i nodi sotto il nodo corrente utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Un <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene tutti i ruoli che riportano direttamente al ruolo corrente."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  id: GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce una raccolta contenente tutti <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> oggetti associati all&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "Un ruolo può essere una raccolta di oggetti di sicurezza generale. Di conseguenza, un ruolo può contenere più identità, ad esempio utilizzare GetEntries per restituire tutti gli oggetti di directory associati al ruolo."
  syntax:
    content: public System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry> GetEntries ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
      description: "Il tipo generico <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> raccolta associata all&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  id: GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene un elenco generico di account Windows NT associato il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetIdentities consente di ottenere tutte <xref:System.Security.Principal.SecurityIdentifier>oggetti associati con la <xref:System.Workflow.Activities.ActiveDirectoryRole>e converte ognuno di essi in un valore stringa.</xref:System.Workflow.Activities.ActiveDirectoryRole> </xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Un elenco generico di valori che rappresentano gli account di Windows NT associati il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  id: GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un ruolo di Active Directory che contiene informazioni sulla gestione dell&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManager restituisce il gestore diretto per il ruolo corrente. Per restituire tutti i ruoli sopra il nodo corrente, utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManager ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene informazioni sulla gestione del ruolo corrente."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  id: GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce il ruolo di Active Directory che contiene informazioni sulla catena di gestione associata all&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManagerialChain restituisce tutti i nodi di sopra del ruolo corrente. Per restituire solo il gestore diretto del ruolo corrente, utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene informazioni sulla catena di gestione associata al ruolo corrente."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  id: GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un ruolo di Active Directory che contiene informazioni su tutte le operazioni di directory sotto la supervisione del Gesture della corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "Il <xref:System.Workflow.Activities.ActiveDirectoryRole>restituito contiene le informazioni di tutti gli oggetti gestiti dal gestore di questo ruolo ma non contiene queste informazioni dal ruolo corrente.</xref:System.Workflow.Activities.ActiveDirectoryRole>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Oggetto <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> che contiene informazioni su tutte le operazioni di directory sotto la supervisione del Gesture della corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  id: GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un elenco generico di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetti associati all&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetSecurityIdentifiers controlla ogni <xref:System.DirectoryServices.DirectoryEntry>restituito dal <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A>metodo per verificare se la voce ha un ID di sicurezza nella relativa <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>insieme.</xref:System.DirectoryServices.DirectoryEntry.Properties%2A> </xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> </xref:System.DirectoryServices.DirectoryEntry> Se il <xref:System.DirectoryServices.DirectoryEntry>ha una proprietà, GetSecurityIdentifiers aggiunge un <xref:System.Security.Principal.SecurityIdentifier>all&quot;elenco restituisce.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.DirectoryServices.DirectoryEntry>"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier> GetSecurityIdentifiers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
      description: "Elenco generico di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetti associati all&quot;oggetto corrente <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  id: IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce un valore che indica se il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> contiene l&quot;identità specificata."
  remarks: "Poiché un ruolo è una generalizzazione di uno o più oggetti, molte identità possono essere descritti da un solo ruolo. Utilizzare IncludesIdentity per verificare che un&quot;identità specificata è inclusa in questo ruolo."
  syntax:
    content: public override bool IncludesIdentity (string identity);
    parameters:
    - id: identity
      type: System.String
      description: "L&quot;identità da cercare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che <code> identity </code> è incluso nel <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  id: Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene o imposta il nome del ruolo di Active Directory."
  remarks: "Utilizzare il nome per descrivere il ruolo."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "Il nome del ruolo di Active Directory."
  overload: System.Workflow.Activities.ActiveDirectoryRole.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  id: RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene il nodo Active Directory radice associato il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "La voce radice è il ruolo fino alla catena di ruoli che non ha gestore."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry RootEntry { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "Oggetto <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> che rappresenta il nodo Active Directory radice associato il <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Popola un <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> con i dati necessari per serializzare l&quot;oggetto di destinazione."
  remarks: "L&quot;implementazione di <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>consente all&quot;oggetto da serializzare.</xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> da popolare con i dati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Il <xref:System.Runtime.Serialization.StreamingContext>destinazione per questa serializzazione.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: System.Workflow.Activities.WorkflowRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole
  parent: System.Workflow.Activities
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
- uid: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<DirectoryEntry>
  nameWithType: ICollection<DirectoryEntry>
  fullName: System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.DirectoryServices.DirectoryEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: DirectoryEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
- uid: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityIdentifier>
  nameWithType: IList<SecurityIdentifier>
  fullName: System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Principal.SecurityIdentifier>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: SecurityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports
  nameWithType: ActiveDirectoryRole.GetAllReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports
  nameWithType: ActiveDirectoryRole.GetDirectReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries
  nameWithType: ActiveDirectoryRole.GetEntries
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities
  nameWithType: ActiveDirectoryRole.GetIdentities
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager
  nameWithType: ActiveDirectoryRole.GetManager
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain
  nameWithType: ActiveDirectoryRole.GetManagerialChain
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers
  nameWithType: ActiveDirectoryRole.GetPeers
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity
  nameWithType: ActiveDirectoryRole.IncludesIdentity
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData
