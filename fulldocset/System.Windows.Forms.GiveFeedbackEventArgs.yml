### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.GiveFeedbackEventArgs
  id: GiveFeedbackEventArgs
  children:
  - System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)
  - System.Windows.Forms.GiveFeedbackEventArgs.Effect
  - System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors
  langs:
  - csharp
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.Forms.GiveFeedbackEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Windows.Forms.Control.GiveFeedback&quot;> </xref> evento che si verifica durante un&quot;operazione di trascinamento."
  remarks: "Il <xref:System.Windows.Forms.Control.GiveFeedback>evento si verifica durante un&quot;operazione di trascinamento.</xref:System.Windows.Forms.Control.GiveFeedback> Consente l&quot;origine di un evento di trascinamento per modificare l&quot;aspetto del puntatore del mouse per fornire l&quot;utente indicazioni visive durante un&quot;operazione di trascinamento e rilascio. Un oggetto GiveFeedbackEventArgs specifica il tipo di operazione di trascinamento e rilascio e se vengono utilizzati i cursori predefiniti.       Per informazioni sul modello di eventi, vedere [eventi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the GiveFeedbackEventArgs class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/t-system.windows.forms.g_2_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/t-system.windows.forms.g_2_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/t-system.windows.forms.g_2_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class GiveFeedbackEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)
  id: '#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)'
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  langs:
  - csharp
  name: GiveFeedbackEventArgs(DragDropEffects,Boolean)
  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.GiveFeedbackEventArgs&quot;> </xref> classe."
  syntax:
    content: public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);
    parameters:
    - id: effect
      type: System.Windows.Forms.DragDropEffects
      description: "Il tipo di operazione di trascinamento e rilascio. I valori possibili sono ottenuti applicando bit per bit o (|) per le costanti definite nel <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref>."
    - id: useDefaultCursors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vengono utilizzati puntatori predefiniti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect
  id: Effect
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  langs:
  - csharp
  name: Effect
  nameWithType: GiveFeedbackEventArgs.Effect
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.Effect
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene i commenti relativi all&quot;operazione di trascinamento e rilascio viene visualizzato."
  remarks: ''
  example:
  - "The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/p-system.windows.forms.g_5_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/p-system.windows.forms.g_5_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/p-system.windows.forms.g_5_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DragDropEffects Effect { get; }
    return:
      type: System.Windows.Forms.DragDropEffects
      description: "Uno del <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref> valori."
  overload: System.Windows.Forms.GiveFeedbackEventArgs.Effect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors
  id: UseDefaultCursors
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  langs:
  - csharp
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta se l&quot;operazione di trascinamento deve utilizzare cursori predefiniti associati agli effetti di trascinamento e rilascio."
  remarks: "Il sistema fornisce i cursori di trascinamento e rilascio predefinito per le operazioni di trascinamento diversi, ad esempio copia o spostamento. Se UseDefaultCursors è impostata su `false`, è responsabilità dell&quot;origine evento per impostare il cursore appropriato."
  example:
  - "The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/p-system.windows.forms.g_3_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/p-system.windows.forms.g_3_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/p-system.windows.forms.g_3_1.cs)]"
  syntax:
    content: public bool UseDefaultCursors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vengono utilizzati i puntatori predefiniti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: GiveFeedbackEventArgs(DragDropEffects,Boolean)
  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)
- uid: System.Windows.Forms.DragDropEffects
  parent: System.Windows.Forms
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.Forms.DragDropEffects
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: Effect
  nameWithType: GiveFeedbackEventArgs.Effect
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.Effect
- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
  fullName: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors
- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs
- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect*
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: Effect
  nameWithType: GiveFeedbackEventArgs.Effect
- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*
  parent: System.Windows.Forms.GiveFeedbackEventArgs
  isExternal: false
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
