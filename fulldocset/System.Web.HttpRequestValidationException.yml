### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequestValidationException
  id: HttpRequestValidationException
  children:
  - System.Web.HttpRequestValidationException.#ctor
  - System.Web.HttpRequestValidationException.#ctor(System.String)
  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
  type: Class
  summary: "Eccezione generata quando viene ricevuta una stringa di input potenzialmente dannosa dal client come parte dei dati della richiesta. Questa classe non può essere ereditata."
  remarks: "Limitare e di convalida dell&quot;input utente è fondamentale in un&quot;applicazione Web per impedire attacchi di pirata informatico che si basano sulle stringhe di input dannoso. Attacchi di script sono un esempio di tali attacchi. Altri tipi di dati indesiderati o dannosi possono essere passate in una richiesta di varie forme di input. Limitando i tipi di dati che viene passati a un livello basso di un&quot;applicazione, è possibile evitare eventi indesiderati, anche quando i programmatori che utilizzano il codice non inseriscono le tecniche di convalida necessaria sul posto.       La convalida delle richieste rileva client potenzialmente dannoso input e genera questa eccezione per interrompere l&quot;elaborazione della richiesta. Interruzione di una richiesta può indicare un tentativo di compromettere la sicurezza dell&quot;applicazione, ad esempio un attacco di script tra siti. È consigliabile che l&quot;applicazione di controllo in modo esplicito tutti gli input riguardanti le interruzioni di richiesta. Tuttavia, è possibile disabilitare la convalida della richiesta impostando il `validateRequest` attributo nella direttiva `false`, come illustrato nell&quot;esempio seguente: `<%@ Page validateRequest=&quot;false&quot; %>` per disabilitare la convalida della richiesta per l&quot;applicazione, è necessario modificare o creare un file Web. config per l&quot;applicazione e impostare il `validateRequest` attributo del `pages` sezione a `false`, come illustrato nell&quot;esempio seguente: ```   <configuration>      <system.web>        <pages validateRequest=&quot;false&quot; />      </system.web>    </configuration>    ``` per disabilitare la convalida della richiesta per tutte le applicazioni nel server , è possibile apportare questa modifica del file Machine. config.      > [!NOTE] > È fortemente consigliabile che l&quot;applicazione in modo esplicito verificare tutti gli input oltre alla convalida delle richieste eseguita da ASP.NET, utilizzato. La funzionalità di convalida della richiesta non può intercettare tutti gli attacchi, in particolare quelli predisposto in modo specifico con la logica dell&quot;applicazione."
  example:
  - "The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Web.HttpException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor
  id: '#ctor'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> classe."
  syntax:
    content: public HttpRequestValidationException ();
    parameters: []
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea un nuovo <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> eccezione con il messaggio di errore specificato."
  remarks: "Il contenuto del `message` parametro deve essere leggibile. Il chiamante del costruttore HttpRequestValidationException è necessario per garantire che il `message` stringa sia stata localizzata."
  syntax:
    content: public HttpRequestValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Stringa che descrive l&quot;errore."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> classe con un messaggio di errore specificato e un riferimento all&quot;eccezione interna che è la causa dell&quot;eccezione."
  remarks: "Un&quot;eccezione generata come risultato diretto di un&quot;eccezione precedente deve includere un riferimento all&quot;eccezione precedente nella <xref:System.Exception.InnerException%2A>proprietà.</xref:System.Exception.InnerException%2A> Il <xref:System.Exception.InnerException%2A>proprietà restituisce lo stesso valore passato al costruttore HttpRequestValidationException o `null` se il <xref:System.Exception.InnerException%2A>proprietà non fornisce il valore di eccezione interna al costruttore HttpRequestValidationException.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public HttpRequestValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Un messaggio di errore che spiega il motivo dell&quot;eccezione."
    - id: innerException
      type: System.Exception
      description: "Eccezione che è la causa dell&quot;eccezione corrente. Se questo parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, l&quot;eccezione corrente viene generata in un <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blocco che gestisce l&quot;eccezione interna."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.HttpException
  isExternal: false
  name: System.Web.HttpException
- uid: System.Web.HttpRequestValidationException.#ctor
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpRequestValidationException.#ctor*
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException.HttpRequestValidationException
