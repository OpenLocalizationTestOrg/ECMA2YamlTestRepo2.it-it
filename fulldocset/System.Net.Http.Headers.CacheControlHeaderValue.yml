### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  summary: "Rappresenta il valore dell&quot;intestazione Cache-Control."
  syntax:
    content: 'public class CacheControlHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> classe."
  syntax:
    content: public CacheControlHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> oggetto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "I token di estensione della cache, ognuno con un valore assegnato."
  remarks: "Questa proprietà rappresenta la direttiva &quot;estensione della cache&quot; in un campo di intestazione cache-control su una richiesta HTTP o una risposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "Una raccolta di estensione della cache i token con un valore assegnato facoltativo."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Funge da funzione hash per un <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> oggetto."
  remarks: "Un codice hash è un valore numerico che viene utilizzato per identificare un oggetto durante il test di uguaglianza. Può inoltre costituire un indice per un oggetto in una raccolta.       Il metodo GetHashCode è adatto per l&quot;uso in algoritmi hash e strutture di dati, ad esempio una tabella hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "La durata massima, espresso in secondi, che il client HTTP è disposto ad accettare una risposta."
  remarks: "Questa proprietà rappresenta la direttiva &quot;max-age&quot; in un campo di intestazione cache-control su una richiesta HTTP o una risposta HTTP.       A meno che il <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>proprietà è impostata, il client non è disposto ad accettare una risposta non aggiornata.</xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>"
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Il tempo in secondi."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Indica se un client HTTP è disposto ad accettare una risposta che ha superato la scadenza."
  remarks: "Questa proprietà rappresenta se la direttiva &quot;max aggiornata&quot; è presente in un campo di intestazione cache-control su una richiesta HTTP."
  syntax:
    content: public bool MaxStale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il client HTTP è disposto ad accettare una risposta che ha superato la scadenza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Il tempo massimo, espresso in secondi, un client HTTP è disposto ad accettare una risposta che ha superato la scadenza."
  remarks: "Questa proprietà rappresenta il valore assegnato alla direttiva &quot;max aggiornata&quot; in un campo di intestazione cache-control su una richiesta HTTP.       Se la proprietà MaxStaleLimit viene assegnata un valore diverso da zero, il client è disposto ad accettare una risposta che non abbia superato la scadenza non superi il numero di secondi specificato. Se alla proprietà MaxStaleLimit viene assegnato un valore pari a zero, il client è disposto ad accettare una risposta non aggiornata di ogni età."
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Il tempo in secondi."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "La durata di validità minima, in secondi, che un client HTTP è disposto ad accettare una risposta."
  remarks: "Questa proprietà rappresenta la direttiva &quot;min riconfigurarlo&quot; in un campo di intestazione cache-control su una richiesta HTTP.       La proprietà indica che il client HTTP è disposto ad accettare una risposta, la cui durata di validità è non inferiore rispetto al corrente età più la durata di validità specificato di tempo in secondi. Il client richiede una risposta che sarà ancora aggiornata per almeno la validità corrente oltre la durata di validità."
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Il tempo in secondi."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se il server di origine richiedono riconvalida di una voce della cache su qualsiasi utilizzo successivo quando la voce della cache diventa obsoleto."
  remarks: "Questa proprietà rappresenta la direttiva &quot;must-revalidate&quot; in un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public bool MustRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il server di origine richiede riconvalida di una voce della cache su qualsiasi utilizzo successivo, quando la voce più aggiornata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Indica se un client HTTP è disposto ad accettare una risposta memorizzata nella cache."
  remarks: "Questa proprietà rappresenta la direttiva &quot;no-cache&quot; in un campo di intestazione cache-control su una richiesta HTTP o una risposta HTTP.       Quando è impostata la proprietà NoCache `true` presente in un messaggio di richiesta HTTP, un&quot;applicazione deve inoltrare la richiesta verso il server di origine anche se ha una copia memorizzata nella cache degli elementi necessari."
  syntax:
    content: public bool NoCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il client HTTP è disposto ad accettare una risposta memorizzata nella cache. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Raccolta di fieldnames nella direttiva &quot;no-cache&quot; di un campo di intestazione cache-control in una risposta HTTP."
  remarks: "Questa proprietà rappresenta fieldnames nella direttiva &quot;no-cache&quot; di un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Raccolta di fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se una cache non è necessario archiviare qualsiasi parte di HTTP richiesta mressage o una risposta."
  remarks: "Questa proprietà rappresenta la direttiva &quot;no-store&quot; in un campo di intestazione cache-control su una richiesta HTTP o una risposta HTTP.       Lo scopo della proprietà NoStore è per impedire il rilascio involontario o memorizzazione delle informazioni riservate. Questa proprietà si applica all&quot;intero messaggio e può essere inviata in una risposta o di una richiesta HTTP."
  syntax:
    content: public bool NoStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una cache non è necessario archiviare qualsiasi parte del sia HTTP richiesta mressage o qualsiasi tipo di risposta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se una cache o proxy non deve modificare qualsiasi aspetto del corpo dell&quot;entità."
  remarks: "Questa proprietà rappresenta la direttiva &quot;no-transform&quot; in un campo di intestazione cache-control su una richiesta HTTP o una risposta HTTP.       Quando il NoTransform è impostata su `true`, cache intermedie o rpoxies non deve modificare qualsiasi aspetto del corpo dell&quot;entità. Gli implementatori di proxy e cache intermedie sono trovati utile convertire il tipo di supporto di determinati corpi di entità. Un proxy non trasparente potrebbe, ad esempio, convertire tra formati di immagine per risparmiare spazio nella cache o ridurre la quantità di traffico su un collegamento lento. Si verificano gravi problemi operativi, per alcuni, tuttavia, quando queste trasformazioni vengono applicate a corpi di entità possono tipi di applicazioni."
  syntax:
    content: public bool NoTransform { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una cache o proxy non è necessario modificare qualsiasi aspetto del corpo dell&quot;entità; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se una cache deve rispondere con una voce memorizzata nella cache che è coerenza con gli altri vincoli della richiesta HTTP oppure rispondere con stato 504 (Timeout del Gateway)."
  remarks: "Questa proprietà rappresenta la direttiva &quot;solo se-cache&quot; in un campo di intestazione cache-control su una richiesta HTTP."
  syntax:
    content: public bool OnlyIfCached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una cache deve rispondere con una voce memorizzata nella cache che è coerenza con gli altri vincoli della richiesta HTTP o rispondere con lo stato 504 (Timeout del Gateway); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte una stringa in un <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> istanza."
  syntax:
    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Stringa che rappresenta informazioni sui valori di intestazione cache-control."
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "Oggetto <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> istanza."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>non è informazioni sui valori di intestazione cache-control valido."
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se tutto o parte del messaggio di risposta HTTP è destinato a un singolo utente e non deve essere memorizzati nella cache da una cache condivisa."
  remarks: "Questa proprietà rappresenta la direttiva &quot;privata&quot; in un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public bool Private { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il messaggio di risposta HTTP è destinato a un singolo utente e non deve essere memorizzata nella cache da una cache condivisa. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Fieldnames una raccolta nella direttiva &quot;privata&quot; di un campo di intestazione cache-control in una risposta HTTP."
  remarks: "Questa proprietà rappresenta fieldnames nella direttiva &quot;privata&quot; di un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Raccolta di fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se il server di origine richiedono riconvalida di una voce della cache su qualsiasi utilizzo successivo quando la voce della cache non risulta più aggiornata per le cache dell&quot;agente utente condiviso."
  remarks: "Questa proprietà rappresenta la direttiva &quot;proxy-revalidate&quot; in un campo di intestazione cache-control in una risposta HTTP.       Questa proprietà non influisce sulla cache dell&quot;agente utente non condiviso."
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il server di origine richiede la riconvalida di una voce della cache su qualsiasi utilizzo successivo, quando la voce più aggiornata per le cache dell&quot;agente utente condiviso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se una risposta HTTP può essere memorizzati nella cache da una cache, anche se sarebbe normalmente non memorizzabile nella cache o essere memorizzata nella cache solo all&quot;interno di una cache condivisa non."
  remarks: "Questa proprietà rappresenta la direttiva &quot;public&quot; in un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public bool Public { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la risposta HTTP può essere memorizzati nella cache da una cache, anche se sarebbe normalmente non memorizzabile nella cache o essere memorizzata nella cache solo all&quot;interno di un non - condivisa cache. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "La durata massima condivisa, espresso in secondi, in una risposta HTTP che esegue l&quot;override la direttiva &quot;max-age&quot; in un&quot;intestazione cache-control o un&quot;intestazione Expires per una cache condivisa."
  remarks: "Questa proprietà rappresenta la direttiva &quot;s-max-age&quot; in un campo di intestazione cache-control in una risposta HTTP."
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Il tempo in secondi."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Crea un nuovo oggetto che è una copia dell&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> istanza."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Una copia dell&quot;istanza corrente."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> oggetto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se una stringa è valida <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> informazioni."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "Stringa da convalidare."
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "La <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> versione della stringa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
