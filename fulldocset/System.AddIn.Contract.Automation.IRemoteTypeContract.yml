### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: "Definisce un contratto che possono utilizzare per accedere alle informazioni sul tipo e richiamare membri oltre i limiti di dominio e il processo di applicazione."
  remarks: "Per ottenere un IRemoteTypeContract, è possono chiamare i componenti di <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>metodo di un oggetto che implementa il <xref:System.AddIn.Contract.Automation.IRemoteObjectContract>interfaccia.</xref:System.AddIn.Contract.Automation.IRemoteObjectContract> </xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>       Per ottenere informazioni sul tipo di oggetto, chiamano i componenti di <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>metodo.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>       Per ottenere informazioni sui membri di un oggetto, componenti chiamano uno dei metodi che restituisce informazioni su un particolare tipo di membro. Ad esempio, per ottenere informazioni sugli eventi di un oggetto, componenti possono utilizzare il <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A>metodo.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> </xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>       Per richiamare un membro di un oggetto, utilizzano i componenti di <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>metodo.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>"
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce il nome canonico della classe corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "Il nome canonico della corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> che fornisce l&quot;accesso a un evento specificato dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Il nome di un evento dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per l&quot;evento."
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> che fornisce l&quot;accesso all&quot;evento specificato, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso agli eventi specificati dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per gli eventi."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso agli eventi che corrispondono ai vincoli di associazione specificati; in caso contrario, un oggetto vuoto &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> che fornisce l&quot;accesso a un campo specificato dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Il nome di un campo dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per il campo."
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> che fornisce l&quot;accesso al campo specificato, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> gli oggetti che consente di accedere ai campi specificati dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per i campi."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> oggetti che consente di accedere ai campi corrispondenti ai vincoli di associazione specificati; in caso contrario, un oggetto vuoto &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce un&quot;interfaccia implementata da corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: "Il nome canonico di un&quot;interfaccia implementata da corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> che rappresenta il nome dell&quot;interfaccia con il valore canonico da questo <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> implementa. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> non implementa un&quot;interfaccia con il nome canonico specificato."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce le interfacce implementate dall&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> gli oggetti che rappresentano tutte le interfacce implementate dall&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso a tutti i membri specificati del tipo di membro specificato nell&quot;oggetto <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>, usando i vincoli di associazione specificati."
  remarks: "Questo metodo può essere utilizzato per ottenere un singolo membro, o per più membri che hanno lo stesso nome, come gli overload di metodo o costruttore."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Il nome di un membro dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>. Il nome può rappresentare più membri che hanno lo stesso nome."
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valori che specificano i membri per la ricerca."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per i membri."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> gli oggetti che rappresentano i membri dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> con il nome specificato e che soddisfano i criteri specificati per il <code> memberTypes </code> e <code> bindingFlags </code> parametri."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso a tutti i membri corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> che corrisponde ai vincoli di associazione specificati."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per i membri."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso ai membri dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> che soddisfano i vincoli di associazione specificati."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> che fornisce l&quot;accesso a un metodo specificato dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "Il nome di un metodo dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per il metodo."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> gli oggetti che rappresentano numero, ordine e tipo dei parametri per il metodo da ottenere."
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> che fornisce l&quot;accesso al metodo specificato, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso ai metodi specificati dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per i metodi."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso ai metodi che corrispondono ai vincoli di associazione specificati."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce una raccolta di <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso alle proprietà specificate dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per le proprietà."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> gli oggetti che fornisce l&quot;accesso alle proprietà che corrispondono ai vincoli di associazione specificati."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce un <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> che fornisce l&quot;accesso a una proprietà specificata dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "Il nome di una proprietà dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per il metodo."
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> che specifica il tipo restituito della proprietà."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "Un &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; di <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> gli oggetti che rappresentano i parametri per la proprietà specificata."
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> che fornisce l&quot;accesso alla proprietà specificata, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Restituisce informazioni sul tipo sull&quot;oggetto che corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identifica."
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: "Oggetto <xref href=&quot;System.AddIn.Contract.Automation.RemoteTypeData&quot;> </xref> che contiene informazioni sull&quot;oggetto che corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identifica."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Richiama il membro specificato dell&quot;oggetto corrente <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "Il `remoteArgModifiers` parametro viene utilizzato solo per i componenti scritti tramite COM. Ogni valore di `remoteArgModifiers` parametro indica se il valore corrispondente nel `remoteArgs` parametro viene passato per riferimento. La lunghezza di `remoteArgModifiers` deve essere lo stesso come lunghezza della `remoteArgs`.       Se si passa `null` per `remoteArgModifiers`, questo metodo utilizza la logica predefinita per determinare se un argomento viene passato per riferimento."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro da richiamare."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Combinazione bit per bit di <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> valori che specifica la modalità di ricerca per il membro."
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: "Il <xref href=&quot;System.AddIn.Contract.Automation.IRemoteObjectContract&quot;> </xref> su cui richiamare il membro specificato."
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: "Un <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&quot;> </xref> che contiene gli argomenti da passare al membro da richiamare."
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: "Matrice di valori booleani che indicano se ogni il `remoteArgs` valori viene passato per riferimento."
    - id: localeId
      type: System.Int32
      description: "Un ID impostazioni locali da utilizzare per conversioni specifiche delle impostazioni locali che potrebbero essere eseguite da un membro richiamato."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Oggetto <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> che rappresenta il valore restituito di un membro richiamato."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
    name: IRemoteEventInfoContract
    nameWithType: IRemoteEventInfoContract
    fullName: IRemoteEventInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
    name: IRemoteFieldInfoContract
    nameWithType: IRemoteFieldInfoContract
    fullName: IRemoteFieldInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteTypeContract
    name: IRemoteTypeContract
    nameWithType: IRemoteTypeContract
    fullName: IRemoteTypeContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.IContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.IContract
    name: IContract
    nameWithType: IContract
    fullName: IContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
    name: IRemoteMethodInfoContract
    nameWithType: IRemoteMethodInfoContract
    fullName: IRemoteMethodInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
    name: IRemotePropertyInfoContract
    nameWithType: IRemotePropertyInfoContract
    fullName: IRemotePropertyInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: IRemoteTypeContract.GetCanonicalName
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent
  nameWithType: IRemoteTypeContract.GetEvent
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents
  nameWithType: IRemoteTypeContract.GetEvents
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField
  nameWithType: IRemoteTypeContract.GetField
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields
  nameWithType: IRemoteTypeContract.GetFields
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface
  nameWithType: IRemoteTypeContract.GetInterface
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces
  nameWithType: IRemoteTypeContract.GetInterfaces
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember
  nameWithType: IRemoteTypeContract.GetMember
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers
  nameWithType: IRemoteTypeContract.GetMembers
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod
  nameWithType: IRemoteTypeContract.GetMethod
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods
  nameWithType: IRemoteTypeContract.GetMethods
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties
  nameWithType: IRemoteTypeContract.GetProperties
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty
  nameWithType: IRemoteTypeContract.GetProperty
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData
  nameWithType: IRemoteTypeContract.GetTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember
  nameWithType: IRemoteTypeContract.InvokeMember
