### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Esegue query su servizi di dominio Active Directory."
  remarks: "Utilizzare un oggetto DirectorySearcher per effettuare ricerche ed eseguire query in una gerarchia di servizi di dominio Active Directory Lightweight Directory Access Protocol (LDAP) utilizzando. LDAP è l&quot;unico provider di Active Directory Service Interfaces (ADSI) fornito dal sistema che supporta la ricerca di directory. Un amministratore può rendere, modificare ed eliminare oggetti presenti nella gerarchia di. Per ulteriori informazioni, vedere [Using System. DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       Quando si crea un&quot;istanza di DirectorySearcher, specificare la radice di cui che si desidera recuperare e un elenco facoltativo delle proprietà da recuperare. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>proprietà consente di impostare proprietà aggiuntive per effettuare le operazioni seguenti:-memorizza nella Cache i risultati della ricerca nel computer locale.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Impostare il <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>proprietà `true` per archiviare le informazioni di directory nel computer locale.</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> Gli aggiornamenti vengono applicati alla cache locale e il commit in servizi di dominio Active Directory solo quando il <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>metodo viene chiamato.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      -Specificare la durata della ricerca, utilizzando il <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>proprietà.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -Recuperare solo i nomi degli attributi. Impostare il <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>proprietà `true` per recuperare solo i nomi di attributi a cui sono stati assegnati valori.</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      -Esegue una ricerca di paging. Impostare il <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>proprietà per specificare il numero massimo di oggetti restituiti in una ricerca di paging.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> Se non si desidera eseguire una ricerca di paging, impostare il <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>proprietà sul valore predefinito pari a zero.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      -Specificare il numero massimo di voci da restituire, utilizzando il <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>proprietà.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> Se si imposta la <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>proprietà sul valore predefinito pari a zero, il server predefinito è 1000 voci.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      > [!NOTE] > Se il numero massimo di voci restituite e limiti di tempo supera i limiti vengono impostati sul server, le impostazioni del server eseguire l&quot;override di impostazioni del componente.       Per un elenco di valori di proprietà iniziali per un&quot;istanza della classe DirectorySearcher, vedere il <xref:System.DirectoryServices.DirectorySearcher.%23ctor>costruttore.</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      > [!NOTE] > Si presuppone di disporre di una conoscenza generale di servizi di dominio Active Directory prima di utilizzare questa classe. Per ulteriori informazioni, vedere il <xref:System.DirectoryServices?displayProperty=fullName>Panoramica.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con i valori predefiniti."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Un riferimento null (`Nothing` in Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Un oggetto <xref:System.Collections.Specialized.StringCollection>vuoto |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe utilizzando il percorso di ricerca specificati."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Un oggetto <xref:System.Collections.Specialized.StringCollection>vuoto |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Il nodo nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con il filtro di ricerca specificato."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Un riferimento null (`Nothing` in Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Un oggetto <xref:System.Collections.Specialized.StringCollection>vuoto |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). La <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con il filtro radice e la ricerca di ricerca specificati."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Un oggetto <xref:System.Collections.Specialized.StringCollection>vuoto. |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Il nodo nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). La <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con il filtro di ricerca specificato e le proprietà da recuperare."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Un riferimento null (`Nothing` in Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). Il <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Il set di proprietà da recuperare durante la ricerca. La <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con il percorso di ricerca specificato, il filtro di ricerca e proprietà da recuperare..."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Il nodo nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). La <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Il set di proprietà che vengono recuperate durante la ricerca. La <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> filtrare classe con la ricerca specificata, le proprietà da recuperare e ambito di ricerca."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali della <xref:System.DirectoryServices.DirectorySearcher>oggetto.</xref:System.DirectoryServices.DirectorySearcher>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Un riferimento null (`Nothing` in Visual Basic) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). La <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Il set di proprietà da recuperare durante la ricerca. La <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "L&quot;ambito della ricerca che viene rilevata dal server. Il <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> proprietà viene inizializzata su questo valore."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe con il percorso di ricerca specificato, il filtro di ricerca, le proprietà da recuperare e ambito di ricerca."
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Il nodo nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "La stringa di filtro di ricerca in formato Lightweight Directory Access Protocol (LDAP). La <xref:System.DirectoryServices.DirectorySearcher.Filter*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Il set di proprietà da recuperare durante la ricerca. La <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>proprietà viene inizializzata su questo valore.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "L&quot;ambito della ricerca che viene rilevata dal server. Il <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> proprietà viene inizializzata su questo valore."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica se la ricerca viene eseguita in modo asincrono."
  remarks: "Una ricerca asincrona possibile visualizzare i risultati come rilevati durante la ricerca contemporaneamente altri risultati. Ciò è utile per attività quali la compilazione di caselle di riepilogo.       L&quot;impostazione predefinita per questa proprietà è `false`."
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la ricerca è asincrona; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> in caso contrario."
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta il nome visualizzato LDAP dell&quot;attributo del nome distinto, eseguire la ricerca. Per questo tipo di ricerca, è possibile utilizzare un solo attributo."
  remarks: "Questa proprietà è impostata per l&quot;attributo deve essere un attributo di nome distinto, ad esempio membro o gestito dalla. L&quot;attributo può essere singolo o multivalore. Per ulteriori informazioni, vedere gli argomenti adschema &quot;[membro](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)&quot;e&quot;[Managed By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       La ricerca viene eseguita su oggetti che sono identificati dal nome distinto specificato nell&quot;attributo dell&quot;oggetto di base. Ad esempio, se l&quot;oggetto di base è un gruppo adschema e la si specifica è impostata su &quot;member&quot;, quindi la ricerca verrà eseguita su tutti gli oggetti che sono membri del gruppo. Per ulteriori informazioni, vedere l&quot;argomento di classe adschema &quot;Gruppo&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       Quando viene utilizzata la proprietà si specifica, la <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>proprietà deve essere impostata su <xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> Se la <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>proprietà è impostata su qualsiasi altro valore, la si specifica impostazione proprietà genererà un <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       Per ulteriori informazioni, vedere l&quot;argomento &quot;Esecuzione di un attributo Scope Query&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))."
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;attributo per eseguire la ricerca LDAP o una stringa di query con ambito attributo non è impostata."
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref:System.DirectoryServices.DirectorySearcher.SearchScope*>proprietà è impostata su un valore diverso da <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>.</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica se il risultato viene memorizzato nella cache del computer client."
  remarks: "Se la ricerca restituisce un set di risultati di grandi dimensioni, la ricerca verrà eseguita più efficiente se questa proprietà è impostata su `false` per evitare il trasferimento del set di risultati come computer client.  Se in tal caso, tuttavia, non sarà in grado di enumerare i risultati a due volte, in quanto il <xref:System.DirectoryServices.SearchResultCollection>oggetto crea un nuovo oggetto enumeratore ogni volta che viene chiamato.</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il risultato viene memorizzato nella cache sul computer client. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta la quantità massima di tempo in cui il client attende che il server restituire i risultati. Se il server non risponde entro questo intervallo, la ricerca verrà interrotta e viene restituito alcun risultato."
  remarks: "La risoluzione minima di questa proprietà è un secondo. Vengono ignorate le frazioni di secondo.       Se il <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>viene raggiunta prima che il client verifica il timeout, il server restituisce i risultati e il client non viene più attesa.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> Il limite di tempo massima per il server è 120 secondi."
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>struttura che contiene la quantità massima di tempo di attesa per il server restituire i risultati del client.</xref:System.TimeSpan>       Il valore predefinito è-1 secondo, ovvero per un&quot;attesa indefinita."
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica come devono essere risolti gli alias degli oggetti che si verificano durante una ricerca."
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "Oggetto <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref> valore che specifica il comportamento in cui vengono risolti i riferimenti agli alias. L&quot;impostazione predefinita per questa proprietà è <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un oggetto che rappresenta il controllo di sincronizzazione della directory da utilizzare con la ricerca."
  remarks: "Il controllo di sincronizzazione della directory, comunemente noti come il controllo DirSync, è un controllo LDAP che viene eseguito la ricerca per gli oggetti che sono stati modificati dopo uno stato precedente.       Per ulteriori informazioni, vedere l&quot;argomento &quot;[il Polling per le modifiche utilizzando il controllo DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "Il <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> oggetto per la ricerca. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Se il controllo di sincronizzazione della directory non deve essere utilizzato."
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Rilascia le risorse gestite utilizzate da di <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> oggetto e, facoltativamente, rilascia le risorse non gestite."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo rilascia le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se rilascia solo risorse non gestite."
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica il formato dei nomi distinti."
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "Uno del <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref> valori."
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica la stringa di filtro del formato Lightweight Directory Access Protocol (LDAP)."
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Formato di stringa di filtro di ricerca in LDAP, ad esempio &quot;(objectClass=User)&quot;. Il valore predefinito è &quot;(objectClass=*)&quot;, che consente di recuperare tutti gli oggetti."
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue la ricerca e restituisce una raccolta di voci presenti."
  remarks: "A causa di restrizioni di implementazione, la <xref:System.DirectoryServices.SearchResultCollection>classe non può rilasciare tutte le risorse non gestite quando è sottoposto a garbage collection.</xref:System.DirectoryServices.SearchResultCollection> Per evitare una perdita di memoria, è necessario chiamare il <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>metodo quando il <xref:System.DirectoryServices.SearchResultCollection>oggetto non è più necessario.</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "Oggetto <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref> oggetto che contiene i risultati della ricerca."
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Specificato <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> non è un contenitore."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La ricerca non è supportata dal provider in uso."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Esegue la ricerca e restituisce solo la prima voce che è stata trovata."
  remarks: "Se più di una voce viene trovata durante la ricerca, viene restituita solo la prima voce. Se viene rilevata alcuna voce in modo che corrisponda ai criteri di ricerca, un riferimento null (`Nothing` in Visual Basic) viene restituito."
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "Oggetto <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> oggetto che contiene la prima voce trovata durante la ricerca."
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica le dimensioni della pagina in una ricerca di paging."
  remarks: "Dopo che il server ha individuato il numero di oggetti che sono specificati dalla proprietà PageSize, interrompe la ricerca e restituire i risultati al client. Quando il client richiede più dati, il server verrà riavviato la ricerca in cui è stata interrotta."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Numero massimo di oggetti, che il server può restituire in una ricerca di paging. Il valore predefinito è zero, vale a dire che non può eseguire una ricerca di paging."
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nuovo valore è minore di zero."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene un valore che indica l&quot;elenco delle proprietà da recuperare durante la ricerca."
  remarks: "Per recuperare le proprietà specifiche, aggiungerli alla raccolta prima di iniziare la ricerca. Ad esempio, `searcher.PropertiesToLoad.Add(&quot;phone&quot;);` aggiungerà la proprietà phone all&quot;elenco di proprietà da recuperare nella ricerca.       La proprietà &quot;ADsPath&quot; viene sempre recuperata durante la ricerca. In [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] e sistemi operativi precedenti, l&quot;account che esegue la ricerca deve essere un membro del gruppo Administrators per recuperare la proprietà ntSecurityDescriptor. In questo caso non sarà il valore della proprietà che viene restituito per ntSecurityDescriptor `null`. Per ulteriori informazioni, vedere l&quot;argomento &quot;NT--descrittore di sicurezza&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> oggetto che contiene il set di proprietà da recuperare durante la ricerca.       Il valore predefinito è vuoto <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, che consente di recuperare tutte le proprietà."
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica se la ricerca recupera solo i nomi degli attributi a cui sono stati assegnati valori."
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vengono recuperati solo i nomi degli attributi a cui sono stati assegnati valori; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se vengono recuperati i nomi e valori di tutti gli attributi richiesti. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica la modalità di ricerca dei riferimenti."
  remarks: "Se la ricerca di primo livello non è specificata nel contesto di denominazione del server o quando i risultati della ricerca superano un contesto dei nomi (ad esempio, quando si dispone di domini figlio e ricerca nel dominio padre), il server invia un messaggio di riferimento al client che il client può essere ignorato o analizzato."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "Uno del <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il valore non è incluso il <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valori."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica il nodo nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca."
  remarks: "Se SearchRoot è un riferimento null (`Nothing` in Visual Basic), il percorso di ricerca è impostato sulla radice del dominio a cui il server è attualmente in uso.       Esistono diversi modi per eseguire la ricerca nel catalogo globale:: enumerazione del catalogo globale e selezionare il primo membro figlio.      -Specificare il nome del server. Utilizzare la funzione DsGetDcName per trovare il catalogo globale.  Per ulteriori informazioni sulla funzione DsGetDcName, vedere l&quot;argomento &quot;DsGetDcName&quot; in MSDN Library all&quot;indirizzo [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).      -Ottenere RootDSE del catalogo globale e chiedere di &quot;rootNamingContext&quot;.      -Utilizzare il catalogo globale, specificare un percorso di ricerca come se mediante il protocollo LDAP. Ad esempio, &quot;GC: / / OU =..., DC =..., DC =...&quot;.      -Il codice c# seguente viene illustrato come enumerare il catalogo globale e selezionare il primo membro figlio.          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "Il <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> oggetto nella gerarchia di servizi di dominio Active Directory in cui inizia la ricerca. Il valore predefinito è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica l&quot;ambito di ricerca che viene rilevata dal server."
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "Uno del <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il valore non è incluso il <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valori."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica le informazioni di accesso di sicurezza per gli attributi specificati devono essere restituite dalla ricerca."
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "Uno del <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref> valori."
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica la quantità massima di tempo che il server deve eseguire la ricerca per una singola pagina dei risultati. Questo non è lo stesso come il limite di tempo per la ricerca completa."
  remarks: "La risoluzione minima di questa proprietà è un secondo. Vengono ignorate le frazioni di secondo.       Quando viene raggiunto il limite di tempo, il server interrompe la ricerca e restituisce i risultati accumulati fino a quel punto con un cookie contenente le informazioni su come riprendere la ricerca.      > [!NOTE] > Questa proprietà si applica solo alle ricerche in cui <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>è impostata su un valore che non è il valore predefinito-1.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>che rappresenta la quantità di tempo che il server deve eseguire la ricerca per una pagina di risultati.</xref:System.TimeSpan>       Il valore predefinito è-1 secondi, ovvero la ricerca per un periodo illimitato."
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit proprietà ottiene o imposta un valore che indica la quantità massima di tempo il server per la ricerca. Se viene raggiunto il limite di tempo, vengono restituite solo le voci presenti fino a che puntano."
  remarks: "La risoluzione minima di questa proprietà è un secondo. Vengono ignorate le frazioni di secondo.       A differenza di <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>proprietà, la proprietà ServerTimeLimit indica la quantità totale di tempo che il server può dedicare a una ricerca.</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> Quando viene raggiunto il limite di tempo, il server interrompe la ricerca e restituisce i risultati accumulati fino a quel momento.       Impostare ServerTimeLimit su-1 secondi per utilizzare il valore predefinito del server determinata.      > [!NOTE] > Se ServerTimeLimit è impostata su un valore maggiore di predefinito di 120 secondi, viene utilizzato il valore predefinito del server determinata. Una volta raggiunto il limite di tempo del server, è possibile continuare la ricerca da dove era stata interrotta."
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>che rappresenta la quantità di tempo che il server deve eseguire la ricerca.</xref:System.TimeSpan>       Il valore predefinito è-1 secondi, che consente di utilizzare il predefinito di 120 secondi."
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica il numero massimo di oggetti restituiti dal server in una ricerca."
  remarks: "Il server si arresta la ricerca dopo il limite viene raggiunto e restituisce i risultati accumulati fino a quel momento.      > [!NOTE] > Se SizeLimit è impostata su un valore maggiore di 1000 voci quello predefinito determinato server, viene utilizzato il valore predefinito del server determinata."
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di oggetti restituiti dal server in una ricerca. Il valore predefinito è zero, che consente di utilizzare il limite predefinito pari a 1000 voci."
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nuovo valore è minore di zero."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica la proprietà in cui i risultati vengono ordinati."
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "Oggetto <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref> oggetto che specifica le proprietà e la direzione che devono essere ordinati i risultati della ricerca."
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Nothing in Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica se la ricerca deve restituire anche gli oggetti eliminati che corrispondono al filtro di ricerca."
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli oggetti eliminati devono essere inclusi nella ricerca. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> in caso contrario. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ottiene o imposta un valore che indica le opzioni di visualizzazione elenco virtuale per la ricerca."
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "Oggetto <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref> oggetto che contiene le informazioni sulla ricerca di visualizzazione elenco virtuale. Il valore predefinito per questa proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vale a dire che non utilizzano l&quot;opzione di ricerca di visualizzazione elenco virtuale."
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
