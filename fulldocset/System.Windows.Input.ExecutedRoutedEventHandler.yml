### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  id: ExecutedRoutedEventHandler
  langs:
  - csharp
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
  type: Delegate
  summary: "Rappresenta il metodo che gestirà il <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> e <xref href=&quot;System.Windows.Input.CommandBinding.PreviewExecuted&quot;> </xref> gli eventi indirizzati, nonché gli eventi associati correlati."
  remarks: "Questo delegato contiene la logica di implementazione per un <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand>  Separare la logica di implementazione del comando consente il comando per essere richiamati dai tipi e da diverse origini e consente di centralizzare della logica di comando.       Questo delegato viene usato anche per <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>e <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>, gli eventi che sono associati nel <xref:System.Windows.Input.CommandManager>classe che implementa la maggior parte dell&quot;infrastruttura di comando.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Ma gestori più pratici gestirà la <xref:System.Windows.Input.CommandBinding.Executed>eventi da un particolare <xref:System.Windows.Input.CommandBinding>, anziché di lavorare con il <xref:System.Windows.Input.CommandManager>livello.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       All&quot;interno di <xref:System.Windows.Input.ExecutedRoutedEventArgs>, le proprietà seguenti sono in genere di interesse quando si scrive un gestore eventi per un evento indirizzato che deriva da un comando eseguito:- <xref:System.Windows.RoutedEventArgs.Source%2A>segnala la destinazione in cui è stato eseguito il comando.</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.Input.ExecutedRoutedEventArgs> Una volta eseguito il comando, è possibile anche considerare il <xref:System.Windows.RoutedEventArgs.Source%2A>più in genere in indirizzati termini di eventi, come l&quot;oggetto che ha generato un evento indirizzato.</xref:System.Windows.RoutedEventArgs.Source%2A>      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>segnala il comando eseguito.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Questa proprietà è utile se si utilizzano associazioni di comandi e scrivere gestori che potenzialmente gestiscono più comandi.      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>Segnala tutti i parametri passati dal comando in esecuzione specifiche del comando.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Non tutti i comandi utilizzano o prevedono parametri specifici del comando.      - <xref:System.Windows.RoutedEventArgs.Handled%2A>segnala se l&quot;evento indirizzato che è il risultato del comando eseguito è stata già gestito da un altro elemento lungo la route.</xref:System.Windows.RoutedEventArgs.Handled%2A> Per i gestori eventi indirizzati, è consigliabile avere gestori che eseguono operazioni significativo quando la gestione dell&quot;evento per impostare <xref:System.Windows.RoutedEventArgs.Handled%2A>a `true`.</xref:System.Windows.RoutedEventArgs.Handled%2A> Ciò impedisce gestori tipici per l&quot;evento gestione nuovamente l&quot;evento lungo la route. Per ulteriori informazioni sulla gestione degli eventi indirizzati, vedere [contrassegnare gli eventi indirizzati come Handled e la gestione della classe](~/add/includes/ajax-current-ext-md.md).       Questo delegato rappresenta i gestori per <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>e <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName>, gli eventi che sono associati nel <xref:System.Windows.Input.CommandManager>classe che implementa la maggior parte dell&quot;infrastruttura di comando.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Ma gestori più pratici gestirà la <xref:System.Windows.Input.CommandBinding.Executed>eventi da un particolare <xref:System.Windows.Input.CommandBinding>, anziché di lavorare con il <xref:System.Windows.Input.CommandManager>livello.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Per ulteriori informazioni sui comandi, vedere [panoramica dei comandi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example creates an ExecutedRoutedEventHandler that sets a visual property on the target when the command is executed. The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.  \n  \n [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/visualbasic/custom_routedcommand/window1.xaml.vb#custom_routedcommandhandlers)]\n [!code-cs[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/csharp/Custom_RoutedCommand/Window1.xaml.cs#custom_routedcommandhandlers)]"
  syntax:
    content: public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
