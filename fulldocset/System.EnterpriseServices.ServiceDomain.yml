### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServiceDomain
  id: ServiceDomain
  children:
  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.ServiceDomain.Leave
  langs:
  - csharp
  name: ServiceDomain
  nameWithType: ServiceDomain
  fullName: System.EnterpriseServices.ServiceDomain
  type: Class
  summary: "Consente a un segmento di codice identificato <> </> *> e <> </> *> per l&quot;esecuzione nel proprio contesto e si comportano come se fosse un metodo che viene chiamato su un oggetto creato all&quot;interno del contesto. Questa classe non può essere ereditata."
  remarks: "Il <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>metodi vengono utilizzati insieme per racchiudere il codice che può quindi utilizzare i servizi COM+.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Il codice racchiuso tra le chiamate a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>viene eseguito nel proprio contesto e si comporta come se fosse un metodo che viene chiamato su un oggetto creato all&quot;interno del contesto.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Il <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>coppie possono essere annidate.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> È responsabilità dell&quot;utente per assicurarsi che le coppie di chiamate sono bilanciate in modo che ogni chiamata a <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>una precedente chiamata a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</xref:System.EnterpriseServices.ServiceDomain.Enter%2A> </xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ServiceDomain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  id: Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Crea il contesto specificato dal parametro di <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> dell&quot;oggetto e lo inserisce nello stack di contesto per diventare il contesto corrente."
  remarks: "Immettere crea innanzitutto un contesto configurato come specificato da di <xref:System.EnterpriseServices.ServiceConfig>oggetto passato come il `cfg` parametro.</xref:System.EnterpriseServices.ServiceConfig> Criteri su lati client e server vengono quindi generati come se fosse una chiamata al metodo. Il nuovo contesto viene quindi inserito in uno stack di contesto e diventa il contesto corrente. Grazie all&quot;efficiente progettazione e perché nessun marshaling di thread, tramite l&quot;invio e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>comporta in modo significativo riduzione del sovraccarico rispetto a una chiamata al metodo equivalente.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "Oggetto <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> che contiene le informazioni di configurazione per i servizi da utilizzare all&quot;interno del codice tra parentesi."
  overload: System.EnterpriseServices.ServiceDomain.Enter*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>non è supportata sulla piattaforma corrente."
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Leave
  id: Leave
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Attiva il server e quindi i criteri sul lato client, come se venisse restituita una chiamata al metodo. Il contesto corrente viene quindi estratto dallo stack di contesto e il contesto in cui è stato in esecuzione quando <xref:System.EnterpriseServices.ServiceDomain.Enter*>è stato chiamato diventa il contesto corrente.</xref:System.EnterpriseServices.ServiceDomain.Enter*>"
  syntax:
    content: public static System.EnterpriseServices.TransactionStatus Leave ();
    parameters: []
    return:
      type: System.EnterpriseServices.TransactionStatus
      description: "Uno del <xref href=&quot;System.EnterpriseServices.TransactionStatus&quot;> </xref> valori."
  overload: System.EnterpriseServices.ServiceDomain.Leave*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>non è supportata sulla piattaforma corrente."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.ServiceDomain.Leave
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
- uid: System.EnterpriseServices.TransactionStatus
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.EnterpriseServices.TransactionStatus
- uid: System.EnterpriseServices.ServiceDomain.Enter*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter
  nameWithType: ServiceDomain.Enter
- uid: System.EnterpriseServices.ServiceDomain.Leave*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave
  nameWithType: ServiceDomain.Leave
