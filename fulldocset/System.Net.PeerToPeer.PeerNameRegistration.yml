### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameRegistration
  id: PeerNameRegistration
  children:
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameRegistration.Cloud
  - System.Net.PeerToPeer.PeerNameRegistration.Comment
  - System.Net.PeerToPeer.PeerNameRegistration.Data
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  - System.Net.PeerToPeer.PeerNameRegistration.PeerName
  - System.Net.PeerToPeer.PeerNameRegistration.Port
  - System.Net.PeerToPeer.PeerNameRegistration.Start
  - System.Net.PeerToPeer.PeerNameRegistration.Stop
  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.Update
  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  langs:
  - csharp
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration
  fullName: System.Net.PeerToPeer.PeerNameRegistration
  type: Class
  summary: "Registra un <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>in un <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> o un set di cloud.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Registrazione crea (o aggiorna) tutte le informazioni che sono associate a un <xref:System.Net.PeerToPeer.PeerName>nel cloud o un cloud di peer.</xref:System.Net.PeerToPeer.PeerName>       È possibile disporre di più oggetti PeerNameRegistration per lo stesso nome di peer. In tal caso, se il nome del peer è protetto, ogni istanza rappresenta PeerNameRegistration in un&quot;area diversa. Tuttavia, se il nome del peer non è protetto, può essere registrato nella stessa area più volte, purché ogni registrazione da un processo diverso."
  syntax:
    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizializza una nuova istanza predefinita di <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> classe."
  remarks: "Restituisce una nuova istanza predefinita di tipo <xref:System.Net.PeerToPeer.PeerNameRegistration>.</xref:System.Net.PeerToPeer.PeerNameRegistration> Non esegue la registrazione dei nomi peer durante la costruzione.       Dopo aver creato un&quot;istanza di un oggetto con questo costruttore, il chiamante deve popolare i campi appropriati nell&quot;istanza prima di chiamare <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>o <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> classe con il nome specificato e il numero di porta."
  remarks: "Chiamare questo costruttore crea un&quot;istanza che verrà utilizzata per registrare tutti gli indirizzi di origine (sia IPv4 IPv6and) e la porta fornita per tutte le aree in cui il peer partecipa al momento.  Se l&quot;oggetto viene costruito correttamente, l&quot;oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>e <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>vengono popolate.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Se il nome del peer è protetto e registrato in precedenza un <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>peer partecipa al momento, un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Questo costruttore crea solo un <xref:System.Net.PeerToPeer.PeerNameRegistration>dell&quot;istanza; non esegue la registrazione.</xref:System.Net.PeerToPeer.PeerNameRegistration> Dopo la creazione di un&quot;istanza dell&quot;oggetto di registrazione con il costruttore e popolato i campi, l&quot;applicazione deve chiamare <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>per effettuare la registrazione effettiva.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> oggetto da registrare."
    - id: port
      type: System.Int32
      description: "Valore intero che specifica il numero di porta da registrare."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> name </code> parametro non può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Numero di porta specificato è minore di zero.  Numeri di porta devono essere maggiore o uguale a zero e minore di 65.535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato è già stato registrato da questo host.      -Il peer remoto non presenta il <xref:System.Net.PeerToPeer.PeerName.Authority*>per l&quot;oggetto fornito <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> oggetto.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizializza una nuova serializzabile <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  syntax:
    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Riferimento all&quot;oggetto che contiene i dati necessari per deserializzare questa istanza."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Contesto che fornisce i mezzi per deserializzare i dati. Detta anche l&quot;origine dei dati serializzati."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> classe con il nome del peer specificato, il numero di porta e <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Chiamare questo costruttore crea un&quot;istanza che verrà utilizzata per registrare tutti gli indirizzi di origine (sia IPv4 che IPv6), la porta fornita e specificata <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>  Se l&quot;oggetto viene costruito correttamente, le proprietà vengono popolate con gli specificato <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>e <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Se il parametro del cloud è `null`, il nome registrato con il <xref:System.Net.PeerToPeer.Cloud.Available>collegamento, in cui Inizializza i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available>       Dopo la creazione di istanze, il <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metodo deve essere chiamato per registrare il <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> oggetto da registrare."
    - id: port
      type: System.Int32
      description: "Valore intero che specifica il numero di porta da registrare."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>in cui registrare il nome del peer."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> name </code> parametro non può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Numero di porta specificato è minore di zero.  Numeri di porta devono essere maggiore o uguale a zero e minore di 65.535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato è già stato registrato da questo host.      -Il peer remoto non presenta il <xref:System.Net.PeerToPeer.PeerName.Authority*>per l&quot;oggetto fornito <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> oggetto.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  id: Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta le informazioni in un Cloud in cui la <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>oggetto verrà registrato.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  syntax:
    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }
    return:
      type: System.Net.PeerToPeer.Cloud
      description: "Un oggetto di tipo <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> che specifica cloud peer per cui è definita la registrazione. Questa proprietà è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostazione predefinita."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  id: Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta informazioni aggiuntive sul <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> oggetto che verrà registrato con il <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  syntax:
    content: public string Comment { get; set; }
    return:
      type: System.String
      description: "Il commento che contiene informazioni aggiuntive sul <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> da associare il <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Questa proprietà è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostazione predefinita."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Il valore di stringa specificata è maggiore di 39 caratteri Unicode."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  id: Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta i dati binari definiti dall&quot;applicazione per il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  remarks: "La quantità massima di dati che possono essere forniti è di 4.096 byte."
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "Matrice di byte che contiene i dati binari associati alla voce. Questa proprietà è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostazione predefinita."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "I dati specificati sono maggiori di 4096 byte."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Rilascia le risorse non gestite e facoltativamente rilascia le risorse gestite utilizzate da di <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  id: EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene la raccolta di endpoint di rete per cui viene registrato il nome del peer associato."
  remarks: "Nel <xref:System.Net>dello spazio dei nomi, un <xref:System.Net.IPEndPoint>rappresenta un endpoint di rete come un indirizzo IP e un numero di porta.</xref:System.Net.IPEndPoint> </xref:System.Net>  Per PNRP, è necessario specificare un valore di porta e indirizzo IP per ogni endpoint.  Il numero massimo di endpoint che può essere fornito è&10;. Selezione automatica degli indirizzi viene utilizzata quando questo parametro è `null`.       Se viene usato un metodo di registrazione che seleziona automaticamente gli indirizzi da registrare, non è disponibile alcun metodo per determinare gli indirizzi per cui è stato registrato il nome del peer.  Ovvero, la proprietà EndPointCollection non essere aggiornata per riflettere gli indirizzi selezionati.       Quando viene registrato un nome del peer per più di un nodo, ogni <xref:System.Net.PeerToPeer.PeerNameRegistration>è distinct e la proprietà EndPointCollection definita in ogni istanza di registrazione sarà diversa.</xref:System.Net.PeerToPeer.PeerNameRegistration> Inoltre, quando un <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>viene registrato in più <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, le registrazioni sono distinte e la raccolta di endpoint in genere sarà diversa per ogni istanza.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>"
  syntax:
    content: public System.Net.IPEndPointCollection EndPointCollection { get; }
    return:
      type: System.Net.IPEndPointCollection
      description: "Un <xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*>oggetto che contiene gli endpoint di rete per cui viene registrato il nome del peer associato.</xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*> A meno che non venga specificato esplicitamente, il valore predefinito per tutte le proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per i tipi di riferimento."
  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Popola un oggetto di informazioni di serializzazione con i dati necessari per serializzare il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> istanza."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Contiene i dati serializzati associati il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Contiene la destinazione del flusso serializzato associato il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  id: IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta se il nome del peer specificato nella <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>proprietà viene registrata con uno specifico <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> in un host.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  syntax:
    content: public bool IsRegistered ();
    parameters: []
    return:
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, il nome del peer è registrato con un <> </> *> per l&quot;host del peer. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, quindi il processo di registrazione può essere avviato con <> </> *>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Impossibile registrare un oggetto che è già stato eliminato."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  id: PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta il nome del peer da registrare con un cloud di peer."
  remarks: "Nome di un peer può essere registrato per più di un nodo. ogni <xref:System.Net.PeerToPeer.PeerNameRegistration>istanza è distinct.</xref:System.Net.PeerToPeer.PeerNameRegistration> Il <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>associati a ogni proprietà <xref:System.Net.PeerToPeer.PeerName>istanza è diversa.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Inoltre, è possibile registrare un nome di peer per più di un cloud che il nodo è connesso. ognuna di queste registrazioni è diverso. Il nome di peer <xref:System.Net.IPEndPointCollection>saranno diversi in ognuna di queste istanze.</xref:System.Net.IPEndPointCollection>"
  syntax:
    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Un oggetto di tipo <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> che contiene i valori associati a questo <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto. A meno che non venga specificato esplicitamente, il valore predefinito per tutte le proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per i tipi di riferimento."
  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  id: Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta il [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) numero di porta utilizzato dal peer da registrare nel <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto."
  remarks: "La porta predefinita viene utilizzata il <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metodo solo quando è specificato alcun endpoint.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "Valore intero che indica il numero di porta TCP di <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint> A meno che non venga specificato esplicitamente, il valore predefinito per questa proprietà è zero (0)."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore della porta specificato è minore di zero.  Numeri di porta devono essere maggiore o uguale a zero e minore di 65.535 (0xFFFF)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  id: Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Registra il <> </> *> nel <> </> *>. Se non <> </> *> è specificato, la selezione automatica degli indirizzi viene utilizzata con il valore di porta specificato per il <> </> *> proprietà."
  remarks: "Il metodo registra il nome del peer specificato nella <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>proprietà con tutti gli indirizzi di origine e di <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>specificato nel costruttore.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> La porta predefinita è utilizzata da questo metodo solo quando è specificato alcun endpoint.       Se il <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>proprietà è `null`, questo metodo registra il nome del peer specificato nella <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>proprietà utilizzando il <xref:System.Net.PeerToPeer.Cloud.Available>campo, che consente di inizializzare i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Dopo un <xref:System.Net.PeerToPeer.PeerNameRegistration>oggetto è stato avviato, il <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>metodo viene utilizzato per arrestare tale</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration>       Per aggiornare una registrazione, il <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>metodo deve essere utilizzato.</xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>"
  example:
  - "The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \n  \n [!code-cs[NCLPNRPRegisterPeerName#1](~/add/codesnippet/csharp/m-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto fosse Dispose () già chiamato su di esso."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato è già stato registrato. Il <> </> *> metodo deve essere utilizzato per aggiornare una registrazione.      -Il peer remoto non presenta il <> </> *> per il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato.      -È il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> o <> </> *> non è specificato; almeno uno deve essere fornito.      -Gli elementi del messaggio o di dati non sono validi. In alternativa, <> </> *> non è impostata e alcun blob di dati o <xref:System.Net.IPEndPoint>specificato.</xref:System.Net.IPEndPoint>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  id: Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Annulla la registrazione il nome del peer specificato nella <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>proprietà da tutte le aree in cui è stato registrato.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Dopo il processo di registrazione è stato arrestato, lo stato dell&quot;oggetto di registrazione è uguale allo stato subito dopo viene creato dal costruttore predefinito. In questo stato, tutte le relative proprietà si presuppone che non hanno alcun valore. L&quot; <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metodo può essere usato per riavviarlo.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>       È possibile disporre di più oggetti di registrazione per lo stesso nome di peer.  In tal caso, se il nome del peer è protetto, ogni istanza rappresenterà una registrazione in un altro cloud PNRP.  Tuttavia, se il nome del peer non è protetto, può essere registrato nella stessa area più volte.       Se questa istanza è già arrestata, questo metodo non ha alcun effetto."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <> </> *> proprietà non è ancora stata registrata. Questo errore si verifica quando un <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> oggetto viene costruito utilizzando il costruttore vuoto. Il <> </> *> proprietà deve essere compilata in questa istanza prima di chiamare <xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto fosse Dispose () già chiamato su di esso."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementa il <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> l&quot;interfaccia e restituisce i dati necessari per serializzare il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> istanza."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Contiene i dati serializzati associati il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> istanza."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Contiene la destinazione del flusso serializzato associato il <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> istanza."
  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  id: Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Gli aggiornamenti di <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> per un nodo registrato in uno specifico <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Aggiornamento viene eseguito con le informazioni specificate nelle proprietà."
  remarks: "Tutte le informazioni registrate nelle aree per questo <xref:System.Net.PeerToPeer.PeerName>prima della chiamata vengono eliminate completamente.</xref:System.Net.PeerToPeer.PeerName>  I nuovi dati non è combinati con la registrazione esistente.  Per aggiornare un <xref:System.Net.PeerToPeer.PeerNameRegistration>, prima di aggiornare le proprietà in questa istanza e quindi chiamare questo metodo.</xref:System.Net.PeerToPeer.PeerNameRegistration>       Dopo un <xref:System.Net.PeerToPeer.PeerNameRecord>è registrato, il <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>proprietà non può essere aggiornata.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord>  Tutti gli altri campi nel record possono essere aggiornate."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "-Il <> </> *> proprietà non è ancora stata registrata. Il metodo Update non può essere chiamato finché non il nome del peer specificato nel <> </> *> proprietà viene registrata in uno o più cloud.      -Il nome del peer specificato nella <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>proprietà è stata modificata dopo la corrispondente <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> è stato registrato.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Impossibile registrare un oggetto che è stato eliminato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Oggetto <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  id: UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Ottiene o imposta un valore che specifica se utilizzare la selezione automatica degli endpoint quando si attraversano una rete di peer o <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>"
  remarks: "Quando viene usata la selezione automatica degli endpoint (questa proprietà è impostata su `true`) senza informazioni di endpoint specificato prima dell&quot;inizio di un <xref:System.Net.PeerToPeer.PeerNameRegistration>, il sistema sceglie singoli endpoint e quindi li pubblica con il nome del peer associato in tutte le aree disponibili.</xref:System.Net.PeerToPeer.PeerNameRegistration>  Se la porta non è specificata, la selezione automatica sceglie zero come <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>       Se impostato su `false`, non viene eseguita la selezione automatica come descritto in precedenza.  In questo modo il processo di registrazione per la pubblicazione di un nome del peer insieme a un blob di dati (come specificato da di <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>proprietà).</xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Nessun endpoint è associato al nome.       Se viene usato un metodo di registrazione che seleziona automaticamente gli indirizzi da registrare, non è disponibile alcun metodo per determinare gli indirizzi per cui il <xref:System.Net.PeerToPeer.PeerName>oggetto è stato registrato.</xref:System.Net.PeerToPeer.PeerName>  Vale a dire il <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>proprietà non verrà aggiornata per riflettere gli indirizzi selezionati.</xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>       Aggiornamento di questa proprietà dopo l&quot;avvio di registrazione del nome peer non ha alcun effetto."
  syntax:
    content: public bool UseAutoEndPointSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se la selezione automatica degli endpoint da utilizzare. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se verrà utilizzato un altro metodo per determinare gli endpoint. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
- uid: System.Net.IPEndPointCollection
  parent: System.Net
  isExternal: false
  name: IPEndPointCollection
  nameWithType: IPEndPointCollection
  fullName: System.Net.IPEndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration.PeerNameRegistration
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose
  nameWithType: PeerNameRegistration.Dispose
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNameRegistration.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered
  nameWithType: PeerNameRegistration.IsRegistered
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start
  nameWithType: PeerNameRegistration.Start
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop
  nameWithType: PeerNameRegistration.Stop
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update
  nameWithType: PeerNameRegistration.Update
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
