### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Implementa un client del protocollo FTP (File Transfer)."
  remarks: "Per ottenere un&quot;istanza di FtpWebRequest, utilizzare il <xref:System.Net.WebRequest.Create%2A>metodo.</xref:System.Net.WebRequest.Create%2A> È inoltre possibile utilizzare la <xref:System.Net.WebClient>classe per caricare e scaricare le informazioni da un server FTP.</xref:System.Net.WebClient> Utilizza uno di questi approcci, quando si specifica una risorsa di rete che utilizza lo schema FTP (ad esempio, `&quot;ftp://contoso.com&quot;`) la classe FtpWebRequest offre la possibilità di interagire a livello di codice con i server FTP.       L&quot;URI può essere relativo o assoluto. Se l&quot;URI è nel formato `&quot;ftp://contoso.com/%2fpath&quot;` (%&2;f è una sequenza di escape &quot;/&quot;), quindi l&quot;URI è assoluto e la directory corrente sia `/path`. Se, tuttavia, l&quot;URI è nel formato `&quot;ftp://contoso.com/path&quot;`, .NET Framework esegue innanzitutto al server FTP (utilizzando il nome utente e la password impostata il <xref:System.Net.FtpWebRequest.Credentials%2A>proprietà), la directory corrente viene impostato su `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       È necessario disporre di un nome utente valido e la password per il server o il server deve consentire l&quot;accesso anonimo. È possibile specificare le credenziali utilizzate per connettersi al server impostando il <xref:System.Net.FtpWebRequest.Credentials%2A>proprietà oppure è possibile includere nel <xref:System.Uri.UserInfo%2A>parte dell&quot;URI passato al <xref:System.Net.WebRequest.Create%2A>metodo.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Se si includono <xref:System.Uri.UserInfo%2A>informazioni nell&quot;URI, la <xref:System.Net.FtpWebRequest.Credentials%2A>proprietà è impostata su nuove credenziali di rete con le informazioni di nome e una password utente specificato.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] >, A meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A>proprietà `true`, tutti i dati e i comandi, incluse le informazioni di nome e una password utente, vengono inviati al server in testo non crittografato.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta Secure Sockets Layer (SSL), è necessario impostare <xref:System.Net.FtpWebRequest.EnableSsl%2A>a `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       È necessario disporre di <xref:System.Net.WebPermission>per accedere alla risorsa FTP; in caso contrario, un <xref:System.Security.SecurityException>viene generata un&quot;eccezione.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Specificare il comando FTP da inviare al server impostando la <xref:System.Net.FtpWebRequest.Method%2A>proprietà su un valore definito nel <xref:System.Net.WebRequestMethods.Ftp>struttura.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Per trasmettere i dati di testo, modificare il <xref:System.Net.FtpWebRequest.UseBinary%2A>proprietà rispetto al valore predefinito (`true`) a `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Per ulteriori dettagli e restrizioni, vedere <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Quando si utilizza un oggetto FtpWebRequest per caricare un file in un server, è necessario scrivere il contenuto del file per il flusso di richiesta ottenuto chiamando il <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>e <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metodi.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> È necessario scrivere nel flusso e chiudere il flusso prima di inviare la richiesta.       Le richieste vengono inviate al server tramite la chiamata di <xref:System.Net.FtpWebRequest.GetResponse%2A>metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metodi.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Al termine dell&quot;operazione richiesta, un <xref:System.Net.FtpWebResponse>oggetto viene restituito.</xref:System.Net.FtpWebResponse> Il <xref:System.Net.FtpWebResponse>oggetto fornisce lo stato dell&quot;operazione e i dati scaricati dal server.</xref:System.Net.FtpWebResponse>       È possibile impostare un valore di timeout per la lettura o scrittura al server tramite il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>proprietà.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Se il periodo di timeout viene superato, la chiamata al metodo genera un <xref:System.Net.WebException>con <xref:System.Net.WebExceptionStatus>impostata su <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Quando si scarica un file da un server FTP, se il comando ha esito positivo, il contenuto del file di richiesta è disponibile nel flusso dell&quot;oggetto risposta. È possibile accedere a questo flusso chiamando il <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metodo.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Per ulteriori informazioni, vedere <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Se il <xref:System.Net.FtpWebRequest.Proxy%2A>è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato.</xref:System.Net.FtpWebRequest.Proxy%2A> Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>sono supportati i comandi.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Solo il contenuto binario scaricato è memorizzato nella cache. ovvero, il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>comando con il <xref:System.Net.FtpWebRequest.UseBinary%2A>proprietà impostata su `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Più FtpWebRequests riutilizzare le connessioni esistenti, se possibile.       Per ulteriori informazioni sul protocollo FTP, vedere RFC 959, &quot;File Transfer Protocol,&quot; disponibile all&quot;indirizzo [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina un&quot;operazione FTP asincrona."
  remarks: "Se è presente alcuna operazione in corso, questo metodo non esegue alcuna operazione. Se un trasferimento di file è in corso, questo metodo termina il trasferimento.      > [!NOTE] > Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Avvia flusso di contenuto di una richiesta per la scrittura di apertura asincrona."
  remarks: "È necessario completare l&quot;operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metodo.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> In genere, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>viene chiamato dal metodo a cui fa riferimento `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Per determinare lo stato dell&quot;operazione, verificare le proprietà di <xref:System.IAsyncResult>oggetto restituito da questo metodo.</xref:System.IAsyncResult>       Questo metodo non è bloccata durante l&quot;attesa per il flusso. Per il blocco, chiamare <xref:System.Net.FtpWebRequest.GetRequestStream%2A>al posto di questo metodo.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;operazione è stata completata.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per la `callback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>istanza che indica lo stato dell&quot;operazione.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una precedente chiamata a questo metodo o <xref:System.Net.FtpWebRequest.GetRequestStream*>non ha ancora completato.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Non è stato possibile stabilire una connessione al server FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "L&quot; <xref:System.Net.FtpWebRequest.Method*>proprietà non è impostata su <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Inizia l&quot;invio di una richiesta e ricevuta una risposta da un server FTP in modo asincrono."
  remarks: "È necessario completare l&quot;operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metodo.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> In genere, <xref:System.Net.FtpWebRequest.EndGetResponse%2A>viene chiamato dal metodo a cui fa riferimento `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Per determinare lo stato dell&quot;operazione, verificare le proprietà di <xref:System.IAsyncResult>oggetto restituito dal metodo BeginGetResponse.</xref:System.IAsyncResult>       Se il <xref:System.Net.FtpWebRequest.Proxy%2A>è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato.</xref:System.Net.FtpWebRequest.Proxy%2A>       BeginGetResponse non si blocca durante l&quot;attesa di risposta dal server. Per il blocco, chiamare il <xref:System.Net.FtpWebRequest.GetResponse%2A>metodo al posto di BeginGetResponse.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Per ulteriori informazioni sull&quot;utilizzo del modello di programmazione asincrona, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md).       Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se un <xref:System.Net.WebException>è generata, utilizzare la <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>le proprietà dell&quot;eccezione per determinare la risposta dal server.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;operazione è stata completata.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per la `callback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>istanza che indica lo stato dell&quot;operazione.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>o BeginGetResponse è già stato chiamato per questa istanza.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta i certificati utilizzati per stabilire una connessione crittografata al server FTP."
  remarks: "I certificati client vengono utilizzati per autenticare il client durante la negoziazione della connessione SSL iniziale. Per ulteriori informazioni, vedere <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] > Memorizza nella cache le sessioni SSL al momento della creazione di .NET Framework e tenta di riutilizzare una sessione nella cache per una nuova richiesta, se possibile. Durante il tentativo di riutilizzare una sessione SSL, .NET Framework viene utilizzato il primo elemento della <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se è presente uno), o tenta di riutilizzare una sessione anonima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>è vuoto.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> oggetto che contiene i certificati client."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il nome del gruppo di connessione che contiene il punto di servizio utilizzato per inviare la richiesta corrente."
  remarks: "Gruppi di connessione associano un set di richieste a un particolare tipo di connessione o un set di connessioni. Le connessioni in un gruppo di connessione possono essere riutilizzate solo per le richieste provenienti nello stesso dominio applicazione, quando le credenziali nella richiesta sono uguali e se la richiesta specifica il nome del gruppo di connessione. Quando una richiesta non specifica il nome di un gruppo di connessione, è possono utilizzare tutte le connessioni esistenti per il server richiesto non è associata a un gruppo di connessione. Quando le credenziali non sono uguali, la connessione esistente viene chiusa e la nuova richiesta deve essere autenticata nuovamente.       Utilizzo dei gruppi di connessione, è possibile migliorare le prestazioni perché in questo modo tutte le richieste per un utente di riutilizzare la connessione autenticata con le credenziali dell&quot;utente.       Modificando la proprietà ConnectionGroupName dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore contenente il nome di un gruppo di connessione.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un valore che viene ignorato dal <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> classe."
  remarks: "La proprietà ContentLength viene fornita solo per compatibilità con altre implementazioni della <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classi.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Non vi è alcun motivo per usare ContentLength."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "Un <xref:System.Int64>valore che deve essere ignorato.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un offset di byte nel file scaricato da questa richiesta."
  remarks: "Impostare la proprietà ContentOffset durante il download di un file da un server FTP. Questo offset indica la posizione nel file del server che contrassegna l&quot;inizio dei dati da scaricare. L&quot;offset viene specificato come numero di byte dall&quot;inizio del file. l&quot;offset del primo byte è zero.       Impostazione ContentOffset cause di <xref:System.Net.FtpWebRequest>per l&quot;invio di un riavvio (`REST`) per il server.</xref:System.Net.FtpWebRequest> Questo comando viene ignorato dalla maggior parte delle implementazioni di server FTP, se si siano caricando dati al server.       Modifica ContentOffset dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "Un <xref:System.Int64>istanza che specifica l&quot;offset del file, in byte.</xref:System.Int64> Il valore predefinito è zero."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per questa proprietà è minore di zero."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "La proprietà ContentType viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classi.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Non vi è alcun motivo per usare ContentType."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Informazioni sul tipo di contenuto non è supportate per il FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta le credenziali utilizzate per comunicare con il server FTP."
  remarks: "Non è necessario specificare le credenziali per la connessione tramite accesso anonimo. È necessario impostare la proprietà credenziali utilizzando una credenziale di tipo <xref:System.Net.NetworkCredential>; in questo modo il nome utente e la password può essere letti e inviati al server.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Informazioni di credenziali non vengono crittografate quando vengono trasmessi al server, a meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A>è impostata su `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Modifica delle credenziali dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Un <xref:System.Net.ICredentials>dell&quot;istanza; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la proprietà non è stata impostata.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un <xref:System.Net.ICredentials>di un tipo diverso da <xref:System.Net.NetworkCredential>è stato specificato per un&quot;operazione set.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Definisce i criteri di cache predefiniti per tutte le richieste FTP."
  remarks: "Solo il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>comando viene memorizzato nella cache.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Nella tabella seguente vengono descritti gli effetti della memorizzazione nella cache i criteri di <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest> FTP      | Criteri | Effetto |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Restituisce la risorsa memorizzata nella cache se la risorsa viene aggiornata, è accurata la lunghezza del contenuto e di scadenza, modifica e gli attributi di lunghezza del contenuto sono presenti. |   | <xref:System.Net.Cache.RequestCacheLevel>| Restituisce la risorsa dal server. |   | <xref:System.Net.Cache.RequestCacheLevel>| Restituisce la risorsa memorizzata nella cache se la lunghezza del contenuto è presente e corrisponde alla dimensione dell&quot;elemento; in caso contrario, genera un <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Restituisce la risorsa memorizzata nella cache se la lunghezza del contenuto viene fornita e corrisponde alla dimensione dell&quot;elemento; in caso contrario, la risorsa viene scaricata dal server e viene restituita al chiamante. |   | <xref:System.Net.Cache.RequestCacheLevel>| Restituisce la risorsa memorizzata nella cache, se il timestamp della risorsa nella cache è lo stesso come il timestamp della risorsa del server. in caso contrario, la risorsa è scaricata dal server, memorizzata nella cache e restituita al chiamante. |   | <xref:System.Net.Cache.RequestCacheLevel>| Scarica la risorsa dal server, viene memorizzato nella cache e la restituisce al chiamante. |   | <xref:System.Net.Cache.RequestCacheLevel>| Se esiste una risorsa memorizzati nella cache, viene eliminato.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> La risorsa viene scaricata dal server e viene restituita al chiamante. |      > [!NOTE] > DefaultCachePolicy impostazione esegue l&quot;override di qualsiasi impostazione di configurazione."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Oggetto <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> che definisce i criteri della cache per le richieste FTP."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il chiamante ha tentato di impostare questa proprietà su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>che specifica che deve essere utilizzata una connessione SSL.</xref:System.Boolean>"
  remarks: "> [!CAUTION]> A meno che non sia la proprietà EnableSsl `true`, tutti i dati e i comandi, incluse le informazioni di nome e una password utente, vengono inviati in testo non crittografato al server. Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta SSL, è necessario impostare EnableSsl `true`.       Il `&quot;AUTH TLS&quot;` comando viene inviato al server per richiedere una sessione crittografata. Se il server non riconosce questo comando, viene visualizzato un <xref:System.Net.WebException>eccezione.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le trasmissioni di controllo e i dati sono crittografate; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È già stata stabilita la connessione al server FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina un&quot;operazione asincrona in sospeso avviata con <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*>"
  remarks: "Se l&quot;operazione non è stata completata, il metodo EndGetRequestStream si blocca fino al completamento dell&quot;operazione. Per determinare se l&quot;operazione è stata completata, controllare la <xref:System.IAsyncResult.IsCompleted%2A>proprietà prima di chiamare il metodo EndGetRequestStream.</xref:System.IAsyncResult.IsCompleted%2A>       Oltre alle eccezioni elencate in &quot;Eccezioni&quot;, il metodo EndGetRequestStream rigenera le eccezioni generate durante l&quot;apertura del flusso per la scrittura.      > [!NOTE] > Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>oggetto restituito all&quot;avvio dell&quot;operazione.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "Scrivibile <xref:System.IO.Stream>istanza associata a questa istanza.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato ottenuto chiamando <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo metodo è stato già chiamato per l&quot;operazione identificata da <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina un&quot;operazione asincrona in sospeso avviata con <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*>"
  remarks: "Se l&quot;operazione non ha completato la fase il metodo EndGetResponse viene chiamato, EndGetResponse si blocca fino al completamento dell&quot;operazione. Per evitare il blocco, controllare il <xref:System.IAsyncResult.IsCompleted%2A>proprietà prima di chiamare EndGetResponse.</xref:System.IAsyncResult.IsCompleted%2A>       Oltre alle eccezioni elencate in &quot;Eccezioni&quot;, EndGetResponse rigenera le eccezioni generate durante la comunicazione con il server.      > [!NOTE] > Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che è stato restituito all&quot;avvio dell&quot;operazione.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Oggetto <xref:System.Net.WebResponse>riferimento che contiene un <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> istanza.</xref:System.Net.WebResponse> Questo oggetto contiene la risposta del server FTP alla richiesta."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato ottenuto chiamando <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo metodo è stato già chiamato per l&quot;operazione identificata da <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Si è verificato un errore utilizzando un proxy HTTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Recupera il flusso usato per caricare dati in un server FTP."
  remarks: "Prima di chiamare il metodo GetRequestStream, impostare le proprietà della richiesta. Dopo la scrittura dei dati nel flusso, è necessario chiudere il flusso prima dell&quot;invio della richiesta.       Se non è stato impostato il <xref:System.Net.FtpWebRequest.Method%2A>proprietà <xref:System.Net.WebRequestMethods.Ftp.UploadFile>o <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, non è possibile ottenere il flusso.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Blocchi GetRequestStream durante l&quot;attesa per il flusso. Per evitare questo problema, chiamare il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>metodo al posto di GetRequestStream.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Scrivibile <xref:System.IO.Stream>istanza utilizzata per archiviare i dati da inviare al server mediante la richiesta corrente.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Non è stato possibile stabilire una connessione al server FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Il <xref:System.Net.FtpWebRequest.Method*>proprietà non è impostata su &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; o &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Restituisce la risposta del server FTP."
  remarks: "Per accedere alle proprietà specifici del FTP, è necessario eseguire il cast l&quot; <xref:System.Net.WebResponse>oggetto restituito da questo metodo per <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse fa sì che venga stabilita una connessione di controllo e potrebbe anche creare una connessione dati. GetResponse si blocca fino a quando non viene ricevuta la risposta. Per evitare questo problema, è possibile eseguire questa operazione in modo asincrono chiamando il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metodi al posto di GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Se il <xref:System.Net.FtpWebRequest.Proxy%2A>è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       Se un <xref:System.Net.WebException>è generata, utilizzare la <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>le proprietà dell&quot;eccezione per determinare la risposta dal server.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Questo membro genera informazioni di traccia quando si abilita la tracciatura della rete nell&quot;applicazione. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Più chiamate a GetResponse restituiscono lo stesso oggetto di risposta, la richiesta non è stata rilasciata."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "Oggetto <xref:System.Net.WebResponse>riferimento che contiene un <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> istanza.</xref:System.Net.WebResponse> Questo oggetto contiene la risposta del server FTP alla richiesta."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un oggetto vuoto <xref:System.Net.WebHeaderCollection>oggetto.</xref:System.Net.WebHeaderCollection>"
  remarks: "La proprietà delle intestazioni viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classi.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Non vi è alcun motivo per utilizzare le intestazioni."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "Un oggetto vuoto <xref:System.Net.WebHeaderCollection>oggetto.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>valore che specifica se la connessione di controllo al server FTP viene chiusa dopo il completamento della richiesta.</xref:System.Boolean>"
  remarks: "Quando la proprietà di KeepAlive è impostata su `false`, la connessione di controllo viene chiuso quando si chiama il <xref:System.Net.FtpWebResponse.Close%2A>metodo.</xref:System.Net.FtpWebResponse.Close%2A>       Modifica KeepAlive dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione al server non deve essere eliminata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il comando da inviare al server FTP."
  remarks: "La proprietà metodo determina quale comando viene inviato al server. Impostare il metodo con le stringhe definite nei membri di campo pubblico della <xref:System.Net.WebRequestMethods.Ftp>classe.</xref:System.Net.WebRequestMethods.Ftp> Si noti che le stringhe definite nella <xref:System.Net.WebRequestMethods.Ftp>classe sono le uniche opzioni supportate per la proprietà del metodo.</xref:System.Net.WebRequestMethods.Ftp> Impostazione della proprietà metodo a qualsiasi altro valore comporterà un <xref:System.ArgumentException>eccezione.</xref:System.ArgumentException>       Quando si imposta metodo su <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, è necessario farlo prima di chiamare il <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Errore durante la chiamata di questi membri determina l&quot;ordine corretto un <xref:System.Net.ProtocolViolationException>eccezione quando si tenta di ottenere il flusso di richiesta.</xref:System.Net.ProtocolViolationException>       Le credenziali fornite per il <xref:System.Net.FtpWebRequest>oggetto necessario disporre dell&quot;autorizzazione per eseguire il metodo specificato.</xref:System.Net.FtpWebRequest> In caso contrario, il comando FTP non riesce.       Per determinare l&quot;esito positivo o negativo di un comando, controllare il <xref:System.Net.FtpWebResponse.StatusCode%2A>e <xref:System.Net.FtpWebResponse.StatusDescription%2A>proprietà.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore contenente il comando FTP da inviare al server.</xref:System.String> Il valore predefinito è <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Questa proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classi.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La preautenticazione non è supportata per il FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il proxy utilizzato per comunicare con il server FTP."
  remarks: "Identifica la proprietà del Proxy di <xref:System.Net.IWebProxy>istanza che comunica con il server FTP.</xref:System.Net.IWebProxy> Il proxy è impostato dal sistema tramite i file di configurazione e le impostazioni di rete locale di Internet Explorer. Per specificare che deve essere utilizzato alcun proxy, impostazione Proxy per l&quot;istanza del proxy restituito da di <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>metodo.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Per ulteriori informazioni sul rilevamento automatico proxy, vedere [il rilevamento automatico Proxy](~/add/includes/ajax-current-ext-md.md).       È necessario impostare Proxy prima della scrittura dei dati nel flusso della richiesta o per ottenere la risposta. Modifica Proxy dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       La <xref:System.Net.FtpWebRequest>classe supporta il proxy HTTP e Client Firewall ISA.</xref:System.Net.FtpWebRequest>       Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>sono supportati i comandi.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Un <xref:System.Net.IWebProxy>istanza responsabile per la comunicazione con il server FTP.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Questa proprietà non può essere impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un timeout durante la lettura o scrittura in un flusso."
  remarks: "Il ReadWriteTimeout utilizzato durante la scrittura nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo o la lettura dal flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metodo.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       In particolare, la proprietà ReadWriteTimeout controlla il timeout per il <xref:System.IO.Stream.Read%2A>metodo, che viene utilizzato per leggere il flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A>(metodo) e per il <xref:System.IO.Stream.Write%2A>metodo, che viene utilizzato per scrivere nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Se il periodo di timeout viene superato, la chiamata al metodo genera un <xref:System.Net.WebException>con <xref:System.Net.WebExceptionStatus>impostata su <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Per specificare la quantità di tempo di attesa di completamento della richiesta, utilizzare la <xref:System.Net.FtpWebRequest.Timeout%2A>proprietà.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Il numero di millisecondi prima che la lettura o scrittura volte. Il valore predefinito è 300.000 millisecondi (5 minuti)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La richiesta è già stata inviata."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per un&quot;operazione set è minore o uguale a zero e non è uguale a &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il nuovo nome di un file da rinominare."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "Il nuovo nome del file da rinominare."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato per un&quot;operazione set è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;URI richiesto da questa istanza."
  remarks: "Il valore della proprietà RequestUri è l&quot;URI specificato al momento il <xref:System.Net.WebRequest.Create%2A>metodo è stato chiamato per ottenere questa istanza.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "Oggetto <xref:System.Uri>istanza che identifica una risorsa che è possibile accedere tramite il protocollo di trasferimento di File.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto utilizzato per connettersi al server FTP."
  remarks: "Se non <xref:System.Net.ServicePoint>oggetto esiste, ne viene creata per il server FTP.</xref:System.Net.ServicePoint> Per impostare il numero massimo di connessioni che possono essere aperti per un server FTP, impostare il <xref:System.Net.ServicePoint.ConnectionLimit%2A>proprietà del <xref:System.Net.ServicePoint>istanza restituita da questa proprietà.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "Oggetto <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto che può essere usato per personalizzare il comportamento della connessione."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il numero di millisecondi di attesa per una richiesta."
  remarks: "Per specificare un valore infinito, impostare la proprietà di Timeout su <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Questo è il valore predefinito.       Timeout è il numero di millisecondi che ha effettuata una richiesta sincrona con il <xref:System.Net.FtpWebRequest.GetResponse%2A>metodo attende una risposta e che il <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo attende per un flusso.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Se una risorsa non risponde entro il periodo di timeout, la richiesta genera un <xref:System.Net.WebException>con la <xref:System.Net.WebException.Status%2A>proprietà è impostata su <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Modifica Timeout dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Una query di sistema DNS (Domain Name) può richiedere fino a 15 secondi o il timeout. Se la richiesta contiene un nome host che richiede la risoluzione e si imposta Timeout su un valore inferiore a 15 secondi, potrebbe richiedere più di 15 secondi prima di un <xref:System.Net.WebException>viene generata per indicare un timeout della richiesta.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che contiene il numero di millisecondi di attesa prima del timeout di una richiesta.</xref:System.Int32> Il valore predefinito è <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato è minore di zero e non è <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>valore che specifica il tipo di dati per i trasferimenti di file.</xref:System.Boolean>"
  remarks: "Se si inviano binario dati, ad esempio un&quot;immagine, impostare questa proprietà su `true`. Se si invia il testo, impostare la proprietà su `false`. Specifica di `true` provoca il <xref:System.Net.FtpWebRequest>per inviare un `&quot;TYPE I&quot;` comando al server.</xref:System.Net.FtpWebRequest> Specifica di `false` provoca il <xref:System.Net.FtpWebRequest>per inviare un `&quot;Type A&quot;` comando al server.</xref:System.Net.FtpWebRequest> Server FTP è possibile ignorare questi comandi.       Modifica UseBinary dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare al server che i dati da trasferire sono binari; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che i dati di testo. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "La proprietà UseDefaultCredentials viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classi.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Non vi è alcun motivo per usare UseDefaultCredentials."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Le credenziali predefinite non sono supportate per il FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il comportamento del processo di trasferimento dei dati di un&quot;applicazione client."
  remarks: "Imposta la proprietà UsePassive `true` invia il &quot;`PASV&quot;` comando al server. Questo comando richiede al server per l&quot;ascolto su una porta di dati e di attesa per una connessione, anziché avviare una al momento della ricezione di un comando di trasferimento.       Per una descrizione dei comportamenti vengono specificati mediante UsePassive, vedere RFC 959, &quot;File Transfer Protocol,&quot; sezione 3.2, &quot;Tentativo di stabilire connessioni di dati&quot; e sezione 4.1.2, &quot;Transfer Parameter Commands,&quot; disponibile all&quot;indirizzo [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Modifica UsePassive dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metodo provoca un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Se UsePassive è impostata su `true`, server FTP non può inviare le dimensioni del file e lo stato di avanzamento di download può essere sempre zero. Se UsePassive è impostata su `false`, un firewall può generare un avviso e bloccare il download del file."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se il trasferimento dei dati dell&quot;applicazione client processo rimane in attesa per una connessione sulla porta dati; in caso contrario, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se il client deve avviare una connessione sulla porta dati. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un valore nuovo per questa proprietà per una richiesta che è già in corso."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
