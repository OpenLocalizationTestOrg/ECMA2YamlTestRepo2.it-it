### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "DataTableReader Ottiene il contenuto di uno o più <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetti sotto forma di uno o più set di risultati forward-only in sola lettura."
  remarks: "DataTableReader è molto simile a qualsiasi altro lettore di dati, ad esempio <xref:System.Data.SqlClient.SqlDataReader>ad eccezione del fatto che DataTableReader consente di scorrere le righe in un <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlDataReader> In altre parole, consente di scorrere le righe in una cache. DataTableReader è attivo, mentre il lettore mantiene automaticamente la posizione, è possono modificare i dati memorizzati nella cache.       Quando si crea un DataTableReader da un <xref:System.Data.DataTable>, l&quot;oggetto DataTableReader risultante contiene un set di risultati con gli stessi dati il <xref:System.Data.DataTable>da cui è stato creato, ad eccezione delle righe che sono state contrassegnate come eliminate.</xref:System.Data.DataTable> </xref:System.Data.DataTable> Le colonne vengono visualizzate nello stesso ordine utilizzato <xref:System.Data.DataTable>.</xref:System.Data.DataTable> originale La struttura del risultato restituito è identica nello schema e dati all&quot;oggetto originale <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Un DataTableReader che è stato creato chiamando il <xref:System.Data.DataSet.GetDataReader%2A>metodo di un <xref:System.Data.DataSet>oggetto contiene più set di risultati se la <xref:System.Data.DataSet>contiene più di una tabella.</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> I risultati sono nella stessa sequenza di <xref:System.Data.DataTable>gli oggetti il <xref:System.Data.DataTableCollection>del <xref:System.Data.DataSet>oggetto.</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       Set di risultati restituito contiene solo la versione corrente di ogni <xref:System.Data.DataRow>; verranno ignorate le righe contrassegnate per l&quot;eliminazione.</xref:System.Data.DataRow>       Il `DataTableReader` fornisce stabile iteratore, vale a dire il contenuto del `DataTableReader` non vengono invalidati se le dimensioni della raccolta sottostante sono stata modificata durante l&quot;iterazione. Ad esempio, se uno o più delle righe nel <xref:System.Data.DataTable.Rows%2A>raccolta vengono eliminati o rimosse durante l&quot;iterazione, la posizione corrente all&quot;interno di `DataTableReader` viene mantenuta in modo appropriato e non invalida l&quot;iteratore.</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.DataTableReader&quot;> </xref> classe utilizzando i dati dall&quot;oggetto fornito <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Il <xref href=&quot;System.Data.DataTable&quot;> </xref> da cui il nuovo <xref href=&quot;System.Data.DataTableReader&quot;> </xref> Ottiene il set di risultati."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.DataTableReader&quot;> </xref> classe usando la matrice fornita di <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetti."
  remarks: "Se è necessario creare un <xref:System.Data.DataTableReader>dipende tutti o solo un subset delle tabelle all&quot;interno di uno specifico <xref:System.Data.Dataset>, chiamare il `DataSet`del <xref:System.Data.DataSet.GetDataReader%2A>metodo.</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> Se si desidera creare un nuovo <xref:System.Data.DataTableReader>istanza basata su un gruppo di `DataTable` istanze che non sono in caso contrario correlate, utilizzare questo costruttore.</xref:System.Data.DataTableReader> È possibile usufruire di questo costruttore per modificare l&quot;ordine del `DataTables` all&quot;interno di `DataTableReader`, se l&quot;ordine all&quot;interno di origine `DataSet` non soddisfa le proprie esigenze."
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Matrice di <xref href=&quot;System.Data.DataTable&quot;> </xref> gli oggetti che fornisce i risultati per il nuovo <xref href=&quot;System.Data.DataTableReader&quot;> </xref> oggetto."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Chiude l&quot;oggetto corrente <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "La chiamata `Close()` su un oggetto chiuso `DataTableReader` oggetto non viene generato un errore."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Il livello di annidamento della riga corrente di <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: '`DataTableReader`non supporta l&quot;annidamento. Il `Depth` proprietà restituisce sempre zero.'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Il livello di nidificazione per la riga corrente. sempre zero."
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce il numero di colonne nella riga corrente."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Se non posizionato in un set di risultati valido, 0. in caso contrario il numero di colonne nella riga corrente."
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si è verificato un tentativo di recuperare il numero di campi in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un <xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un valore booleano o coercibile rispetto al valore booleano o viene generata un&quot;eccezione.       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come byte."
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un byte o coercibile rispetto a un byte.       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Byte
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un byte."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Legge un flusso di byte a partire dall&quot;offset della colonna specificata nel buffer sotto forma di matrice a partire dall&quot;offset del buffer specificati."
  remarks: "`GetBytes`Restituisce il numero di byte disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte del campo. Questo può essere il caso, ad esempio, quando il <xref:System.Data.DataTableReader>viene letta una struttura di dati di grandi dimensioni in un buffer se si passa un buffer `null` (`Nothing` in Visual Basic), `GetBytes` restituisce la lunghezza dell&quot;intero campo in byte, non le dimensioni rimanenti in base al parametro di offset di buffer.</xref:System.Data.DataTableReader>       Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere o meno una matrice di byte o coercibile rispetto a una matrice di byte."
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataIndex
      type: System.Int64
      description: "L&quot;indice all&quot;interno del campo da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui leggere il flusso di byte."
    - id: bufferIndex
      type: System.Int32
      description: "L&quot;indice all&quot;interno del buffer da cui iniziare l&quot;inserimento dei dati."
    - id: length
      type: System.Int32
      description: "La lunghezza massima da copiare nel buffer."
    return:
      type: System.Int64
      description: "Il numero effettivo di byte letti."
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene una matrice di byte."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un carattere."
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere un carattere o coercibile rispetto a un carattere.       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Char
      description: "Il valore della colonna."
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il campo specificato non contiene un carattere."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce il valore della colonna specificata come matrice di caratteri."
  remarks: "`GetChars`Restituisce il numero di caratteri disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo.       Il numero effettivo di caratteri letti può essere minore della lunghezza richiesta, se viene raggiunta la fine del campo. Se si passa un buffer che è null (`Nothing` in Visual Basic), `GetChars` restituisce la lunghezza del campo intera in caratteri, non le dimensioni rimanenti in base al parametro di offset di buffer.       Viene eseguita alcuna conversione; pertanto i dati da recuperare devono già essere o meno una matrice di caratteri o coercibile rispetto a una matrice di caratteri."
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataIndex
      type: System.Int64
      description: "L&quot;indice all&quot;interno del campo da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Char[]
      description: "Buffer in cui leggere il flusso di caratteri."
    - id: bufferIndex
      type: System.Int32
      description: "L&quot;indice all&quot;interno del buffer da cui iniziare l&quot;inserimento dei dati."
    - id: length
      type: System.Int32
      description: "La lunghezza massima da copiare nel buffer."
    return:
      type: System.Int64
      description: "Il numero effettivo di caratteri letti."
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene una matrice di caratteri."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene una stringa che rappresenta il tipo di dati della colonna specificata."
  remarks: "Il metodo GetDataTypeName restituisce sempre il tipo dell&quot;oggetto sottostante <xref:System.Data.DataColumn>anziché un tipo specifico del provider.</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Stringa che rappresenta il tipo di dati della colonna."
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.DateTime>o coercibile rispetto a un `DataTime`.</xref:System.DateTime>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.DateTime
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un valore DateTime."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un <xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.Decimal>o coercibile rispetto a un `Decimal`.</xref:System.Decimal>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Decimal
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> valore."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna come numero a virgola mobile e precisione doppia."
  remarks: "Viene eseguita alcuna conversione; Pertanto, i dati recuperati devono già essere un numero a virgola mobile e precisione doppia o devono essere coercibile rispetto al numero a virgola mobile e precisione doppia.       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale in base zero della colonna."
    return:
      type: System.Double
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un numero a virgola mobile e precisione doppia."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce un enumeratore che può essere usato per scorrere la raccolta di elementi."
  remarks: "Gli enumeratori consentono solo la lettura dei dati in <xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader> Non è possibile utilizzare enumeratori per modificare la raccolta sottostante.       Inizialmente l&quot;enumeratore è posizionato prima del primo elemento nella raccolta. In questa posizione, la chiamata <xref:System.Collections.IEnumerator.Current%2A>genera un&quot;eccezione.</xref:System.Collections.IEnumerator.Current%2A> Pertanto, è necessario chiamare `MoveNext` per passare l&quot;enumeratore al primo elemento della raccolta prima di leggere il valore di `Current`.       `Current`Restituisce un <xref:System.Data.Common.DbDataRecord>e restituisce lo stesso oggetto finché non <xref:System.Collections.IEnumerator.MoveNext%2A>o <xref:System.Collections.IEnumerator.Reset%2A>viene chiamato.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`imposta `Current` all&quot;elemento successivo.       Una volta raggiunta la fine della raccolta, l&quot;enumeratore sarà posizionato dopo l&quot;ultimo elemento nella raccolta e la chiamata `MoveNext` restituisce false. Se l&quot;ultima chiamata a `MoveNext` restituito `false`, la chiamata `Current` genera un&quot;eccezione. Inoltre, poiché <xref:System.Data.DataTableReader>fornisce accesso forward-only ai dati, chiamare il <xref:System.Collections.IEnumerator.Reset%2A>metodo di IEnumerator genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       Il <xref:System.Data.DataTableReader>fornisce un enumeratore stabile.</xref:System.Data.DataTableReader> Ciò significa che, anche se le aggiunte o eliminazioni di righe all&quot;interno dei dati sottostanti, l&quot;enumeratore restituito da una chiamata a GetEnumerator sia ancora valido."
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>oggetto che rappresenta la raccolta di elementi.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione singola."
  remarks: "Viene eseguita alcuna conversione; Pertanto, i dati recuperati devono già essere un numero a virgola mobile e precisione singola o devono essere coercibile rispetto al numero a virgola mobile e precisione singola.       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Single
      description: "Il valore della colonna."
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un numero a virgola mobile e precisione singola."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come identificatore univoco globale (GUID)."
  remarks: "Viene eseguita alcuna conversione; pertanto i dati recuperati devono essere già un <xref:System.Guid>o coercibile rispetto a un `Guid`.</xref:System.Guid>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Guid
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un GUID."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 16 bit."
  remarks: "Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int16>o coercibile rispetto a un `Int16`.</xref:System.Int16>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.Int16
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un intero con segno a 16 bit."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 32 bit."
  remarks: "Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int32>o coercibile rispetto a un `Int32`.</xref:System.Int32>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.Int32
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un valore intero con segno a 32 bit."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 64 bit."
  remarks: "Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Int64>o coercibile rispetto a un `Int64`.</xref:System.Int64>       Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.Int64
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene un valore intero con segno a 64 bit."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come un <xref:System.String>.</xref:System.String>"
  remarks: "Il `GetName` e <xref:System.Data.DataTableReader.GetOrdinal%2A>metodi forniscono funzionalità inversa.</xref:System.Data.DataTableReader.GetOrdinal%2A> La chiamata al metodo `GetOrdinal` sul valore restituito della chiamata al metodo `GetName` deve restituire il parametro originale passato al `GetName`; lo stesso vale per le procedure di chiamata in ordine inverso."
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.String
      description: "Il nome della colonna specificata."
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;ordinale di colonna, dato il nome della colonna."
  remarks: "Poiché la maggior parte dei metodi forniti dalla <xref:System.Data.DataTableReader>classe deve essere fornito con un numero ordinale di colonna, è possibile utilizzare il `GetOrdinal` metodo per recuperare il numero di colonna, dato il nome della colonna.</xref:System.Data.DataTableReader>       `GetOrdinal`Innanzitutto, esegue una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. Se il numero di colonna non viene trovato un `IndexOutOfRangeException` viene generata un&quot;eccezione.       `GetOrdinal`è senza distinzione di larghezza dei caratteri kana.       Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare `GetOrdinal` all&quot;interno di un ciclo. Risparmiare tempo chiamando `GetOrdinal` una sola volta e assegnando i risultati a una variabile integer per l&quot;utilizzo all&quot;interno del ciclo"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Int32
      description: "Ordinale della colonna in base zero."
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome specificato non è un nome di colonna valido."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il tipo della colonna specificata nel formato specifico del provider."
  remarks: "Perché <xref:System.Data.DataTableReader>restituisce sempre il tipo archiviato all&quot;interno di sottostante <xref:System.Data.DataColumn>il valore restituito dalla chiamata del metodo di GetProviderSpecificFieldType restituisce sempre lo stesso tipo nello stesso tipo archiviato in <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando si utilizza il <xref:System.Data.DataTableReader>(classe), la chiamata al metodo GetProviderSpecificFieldType restituisce lo stesso tipo di una chiamata di <xref:System.Type.GetType%2A>metodo.</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata nel formato specifico del provider."
  remarks: "Perché <xref:System.Data.DataTableReader>restituisce sempre il tipo archiviato all&quot;interno di sottostante <xref:System.Data.DataColumn>il valore restituito dalla chiamata del metodo GetProviderSpecificValue sempre restituisce i dati dello stesso tipo dei dati archiviati all&quot;interno di <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando si utilizza il <xref:System.Data.DataTableReader>(classe), la chiamata al metodo GetProviderSpecificValue restituisce lo stesso valore e tipo di una chiamata di <xref:System.Data.DataTableReader.GetValue%2A>metodo.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero in base zero della colonna il cui valore viene recuperato."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel formato specifico del provider."
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Riempie la matrice fornita con informazioni sul tipo specifico del provider per tutte le colonne di <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Perché <xref:System.Data.DataTableReader>restituisce sempre i dati del tipo archiviati all&quot;interno di sottostante <xref:System.Data.DataColumn>i valori restituiti chiamando il metodo viene sempre gli stessi tipi di dati archiviati all&quot;interno di <xref:System.Data.DataTable>.</xref:System.Data.DataTable> di GetProviderSpecificValues</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Quando si utilizza il <xref:System.Data.DataTableReader>(classe), la chiamata al metodo GetProviderSpecificValues restituisce gli stessi valori e tipi a chiamare il <xref:System.Data.DataTableReader.GetValues%2A>metodo.</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Una matrice di oggetti da riempire con informazioni sul tipo per le colonne di <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il numero di valori di colonna copiate nella matrice."
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce un <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna di <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Metodo GetSchemaTable restituisce i metadati relativi a ogni colonna nell&quot;ordine seguente: | Colonna DataReader | Descrizione |   |-----------------------|-----------------|   | Nome colonna | Il nome della colonna come visualizzato nel <xref:System.Data.DataTable>. |   | ColumnOrdinal | Il numero ordinale della colonna |   | ColumnSize |-1 se il <xref:System.Data.Common.SchemaTableColumn.ColumnSize>(o <xref:System.Data.DataColumn.MaxLength%2A>) proprietà del <xref:System.Data.DataColumn>non può essere determinato o non è pertinente; in caso contrario, 0 o un numero intero positivo che contiene il `MaxLength` valore. |   | NumericPrecision | Se il tipo di colonna è un tipo numerico, questa è la precisione massima della colonna.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> Se il tipo di colonna non è un tipo di dati numerici, questo è un valore null. |   | NumericScale | Se il tipo di dati di colonna è un componente di scala, restituisce il numero di cifre a destra del separatore decimale. In caso contrario, restituire un valore null. |   | Tipo di dati | Il tipo della colonna sottostante. |   | Tipoprovider | L&quot;indicatore del tipo di dati della colonna. Se il tipo di dati della colonna varia da una riga per riga, questo valore è <xref:System.Object>.</xref:System.Object> Questa colonna non può contenere un valore null. |   | IsLong | `true` se il tipo di dati della colonna è <xref:System.String>e il relativo <xref:System.Data.DataColumn.MaxLength%2A>proprietà è -1.</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> In caso contrario, `false`. |   | AllowDBNull | `true` se il vincolo AllowDbNull è impostato su true per la colonna; in caso contrario, `false`. |   | IsReadOnly | `true` se la colonna non può essere modificato; in caso contrario `false`. |   | IsRowVersion | `false`, per ogni colonna. |   | IsUnique | `true`: Due righe di <xref:System.Data.DataTable>possono avere lo stesso valore in questa colonna.</xref:System.Data.DataTable> `IsUnique`è certamente true se la colonna rappresenta una chiave da sola o se esiste un vincolo di tipo UNIQUE applicato solo a questa colonna. `false`: La colonna può contenere valori duplicati nel `DataTable`. Il valore predefinito di questa colonna è `false`. |   | IsKey | `true`: La colonna fa parte di un set di colonne che, complessivamente, identificare in modo univoco la riga in <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Il set di colonne con `IsKey` impostato su `true` deve identificare in modo univoco una riga di `DataTable`. Non è necessario che il set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da un `DataTable` chiave primaria, un vincolo unique o un indice univoco. `false`: La colonna non è necessario per identificare in modo univoco la riga. Questo valore è `true` se la colonna fa parte di una chiave primaria singola o composita. In caso contrario, il relativo valore è `false`. |   | IsAutoIncrement | `true`: La colonna assegna valori a nuove righe in incrementi fissi. `false`: La colonna non assegna valori a nuove righe in incrementi fissi. Il valore predefinito di questa colonna è `false`. |   | BaseCatalogName | Il nome del catalogo nell&quot;archivio dati contenente la colonna. `Null`Se non è possibile determinare il nome del catalogo di base. Il valore predefinito per questa colonna è una `null` valore. |   | BaseSchemaName | Questo valore è sempre `Null`. |   | BaseTableName | Il nome del <xref:System.Data.DataTable>. |   | BaseColumnName | Il nome della colonna di <xref:System.Data.DataTable>. |   | AutoIncrementSeed | Il valore della proprietà del <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementSeed%2A>. |   | AutoIncrementStep | Il valore della proprietà del <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementStep%2A>. |   | DefaultValue | Il valore della proprietà del <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.DefaultValue%2A>. |   | Espressione | La stringa di espressione, se la colonna corrente è un&quot;espressione e tutte le colonne utilizzate nell&quot;espressione appartengono allo stesso `T:System.Data.DataTable` che contiene la colonna espressioni; in caso contrario `null`. |   | ColumnMapping | L&quot; <xref:System.Data.MappingType>valore associato alla <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> Il tipo può essere uno dei `Attribute`, `Element`, `Hidden`, o `SimpleContent`. Il valore predefinito è `Element`. |   | BaseTableNamespace | Il valore della proprietà del <xref:System.Data.DataTable> <xref:System.Data.DataTable.Namespace%2A>. |   | BaseColumnNamespace | Il valore di <xref:System.Data.DataColumn>del <xref:System.Data.DataColumn.Namespace%2A>proprietà. |</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna."
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> è chiuso."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come stringa."
  remarks: "Chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.String
      description: "Il valore della colonna specificata."
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "La colonna specificata non contiene una stringa."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata nel relativo formato nativo."
  remarks: "Sebbene sia possibile chiamare <xref:System.Data.DataTableReader.IsDBNull%2A>per vedere se sono presenti valori null prima di chiamare questo metodo, non è necessario eseguire questa operazione.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.Object
      description: "Il valore della colonna specificata. Questo metodo restituisce <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> per colonne con valori null."
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere alle colonne in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Popola una matrice di oggetti con i valori della colonna della riga corrente."
  remarks: "Per la maggior parte delle applicazioni, questo metodo fornisce un mezzo efficiente per il recupero di tutte le colonne, anziché recuperare ciascuna colonna singolarmente. Se si intende recuperare tutti i valori della colonna da una riga all&quot;interno di <xref:System.Data.DataTableReader>, `GetValues` metodo offre la soluzione più efficiente.</xref:System.Data.DataTableReader>       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di `Object` matrice può contenere viene copiato nella matrice. È inoltre possibile passare un `Object` matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante, in cui caso gli elementi della matrice aggiuntive rimane invariata dopo la chiamata al metodo.       Questo metodo inserisce `DBNull` nella matrice di output per le colonne null."
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di <xref:System.Object>in cui copiare i valori delle colonne di <xref href=&quot;System.Data.DataTableReader&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di valori di colonna copiate nella matrice."
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> contiene uno o più righe."
  remarks: "Il `HasRows` proprietà restituisce informazioni sul set di risultati corrente. Se il <xref:System.Data.DataTableReader>contiene il risultato di più set, è possibile esaminare il valore del `HasRows` proprietà immediatamente dopo la chiamata di <xref:System.Data.DataTableReader.NextResult%2A>metodo per determinare se il nuovo set di risultati contiene righe.</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       Utilizzare il `HasRows` proprietà per evitare la necessità di chiamare il <xref:System.Data.DataTableReader.Read%2A>metodo il <xref:System.Data.DataTableReader>Se non sono presenti righe nel set di risultati corrente.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> contiene uno o più righe; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si è verificato un tentativo di recuperare informazioni su un oggetto chiuso <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> è chiuso."
  remarks: "<xref:System.Data.DataTableReader.Close%2A>è l&quot;unico metodo e `IsClosed` e <xref:System.Data.DataTableReader.RecordsAffected%2A>sono le uniche proprietà che è possibile accedere dopo la <xref:System.Data.DataTableReader>è stata chiusa.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> è chiuso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti."
  remarks: "Chiamare questo metodo per verificare se sono presenti valori null della colonna prima di chiamare i metodi get tipizzati (ad esempio, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>e così via) per evitare la generazione di un errore.</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Il numero ordinale di colonna in base zero"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore della colonna specificato è equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il numero ordinale di colonna."
  remarks: "Questo overload per <xref:System.Data.DataTableReader.Item%2A>comportamento identico a quello di <xref:System.Data.DataTableReader.GetValue%2A>metodo.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il nome della colonna."
  remarks: "Innanzitutto viene eseguita una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo.       Questo metodo è senza distinzione kana-width.       Questa versione di overload di <xref:System.Data.DataTableReader.Item%2A>corrisponde alla chiamata al metodo il <xref:System.Data.DataTableReader.GetOrdinal%2A>(metodo) e successivamente alla chiamata di <xref:System.Data.DataTableReader.GetValue%2A>metodo.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome specificato non è un nome di colonna valido."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di recuperare dati da una riga eliminata."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Sposta il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> al set di risultati successivo, se presente."
  remarks: "Utilizzato per elaborare più risultati che possono essere generati mediante la creazione di un <xref:System.Data.DataTableReader>su un <xref:System.Data.DataSet>che contiene due o più tabelle o una matrice che contiene due o più <xref:System.Data.DataTable>istanze.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       Un nuovo <xref:System.Data.DataTableReader>è posizionato sul primo risultato.</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se si è verificato un altro set di risultati. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo per spostarsi all&quot;interno di un oggetto chiuso <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Sposta il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> al record successivo."
  remarks: "La posizione predefinita del <xref:System.Data.DataTableReader>prima del primo record.</xref:System.Data.DataTableReader> Pertanto, è necessario chiamare `Read` per avviare l&quot;accesso ai dati."
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se si è verificato un altro riga da leggere. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di leggere o accedere a una colonna in una classe chiusa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il numero di righe inserite, modificate o eliminate dall&quot;esecuzione dell&quot;istruzione SQL."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Il <xref href=&quot;System.Data.DataTableReader&quot;> </xref> non supporta questa proprietà e restituisce sempre 0."
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
