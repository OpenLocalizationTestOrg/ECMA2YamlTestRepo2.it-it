### YamlMime:ManagedReference
items:
- uid: System.Numerics.Plane
  id: Plane
  children:
  - System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  - System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Plane.D
  - System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  - System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.Equals(System.Numerics.Plane)
  - System.Numerics.Plane.Equals(System.Object)
  - System.Numerics.Plane.GetHashCode
  - System.Numerics.Plane.Normal
  - System.Numerics.Plane.Normalize(System.Numerics.Plane)
  - System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.ToString
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  langs:
  - csharp
  name: Plane
  nameWithType: Plane
  fullName: System.Numerics.Plane
  type: Struct
  summary: "Rappresenta un piano tridimensionale."
  syntax:
    content: 'public struct Plane : IEquatable<System.Numerics.Plane>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Plane>
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  id: '#ctor(System.Numerics.Vector4)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Vector4)
  nameWithType: Plane.Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(Vector4)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto da un vettore quadridimensionale specificato."
  syntax:
    content: public Plane (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Vettore i cui primi tre elementi descrivono il vettore normale e il cui <xref href=&quot;System.Numerics.Vector4&quot;> </xref> definisce la distanza lungo tale normale dall&quot;origine."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Vector3,Single)
  nameWithType: Plane.Plane(Vector3,Single)
  fullName: System.Numerics.Plane.Plane(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto da una normale specificata e dalla distanza lungo la normale dall&quot;origine."
  syntax:
    content: public Plane (System.Numerics.Vector3 normal, float d);
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: "Vettore normale del piano."
    - id: d
      type: System.Single
      description: "Distanza del piano dall&quot;origine lungo il relativo vettore normale."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Single,Single,Single,Single)
  nameWithType: Plane.Plane(Single,Single,Single,Single)
  fullName: System.Numerics.Plane.Plane(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto dai componenti X, Y e Z della normale e della distanza dall&quot;origine su tale normale."
  syntax:
    content: public Plane (float x, float y, float z, float d);
    parameters:
    - id: x
      type: System.Single
      description: "Componente X della normale."
    - id: y
      type: System.Single
      description: "Componente Y della normale."
    - id: z
      type: System.Single
      description: "Componente Z della normale."
    - id: d
      type: System.Single
      description: "La distanza del piano lungo la relativa normale dall&quot;origine."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: CreateFromVertices(Vector3,Vector3,Vector3)
  nameWithType: Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto che contiene tre punti specificati."
  syntax:
    content: public static System.Numerics.Plane CreateFromVertices (System.Numerics.Vector3 point1, System.Numerics.Vector3 point2, System.Numerics.Vector3 point3);
    parameters:
    - id: point1
      type: System.Numerics.Vector3
      description: "Il primo punto che definisce il piano."
    - id: point2
      type: System.Numerics.Vector3
      description: "Secondo punto che definisce il piano."
    - id: point3
      type: System.Numerics.Vector3
      description: "Il terzo punto che definisce il piano."
    return:
      type: System.Numerics.Plane
      description: "Piano contenente i tre punti."
  overload: System.Numerics.Plane.CreateFromVertices*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.D
  id: D
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: D
  nameWithType: Plane.D
  fullName: System.Numerics.Plane.D
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "La distanza del piano lungo la relativa normale dall&quot;origine."
  syntax:
    content: public float D;
    return:
      type: System.Single
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  id: Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Dot(Plane,Vector4)
  nameWithType: Plane.Dot(Plane,Vector4)
  fullName: System.Numerics.Plane.Dot(Plane,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcola il prodotto scalare di un piano e un vettore dimensionale a 4."
  syntax:
    content: public static float Dot (System.Numerics.Plane plane, System.Numerics.Vector4 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "Il piano."
    - id: value
      type: System.Numerics.Vector4
      description: "Vettore quadridimensionale."
    return:
      type: System.Single
      description: "Prodotto scalare."
  overload: System.Numerics.Plane.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: DotCoordinate(Plane,Vector3)
  nameWithType: Plane.DotCoordinate(Plane,Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(Plane,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce il prodotto scalare di un vettore tridimensionale specificato e il vettore normale di questo piano, pi√π la distanza (<xref href=&quot;System.Numerics.Plane.D&quot;></xref>) valore del piano."
  syntax:
    content: public static float DotCoordinate (System.Numerics.Plane plane, System.Numerics.Vector3 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "Il piano."
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore 3D."
    return:
      type: System.Single
      description: "Prodotto scalare."
  overload: System.Numerics.Plane.DotCoordinate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: DotNormal(Plane,Vector3)
  nameWithType: Plane.DotNormal(Plane,Vector3)
  fullName: System.Numerics.Plane.DotNormal(Plane,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce il prodotto scalare di un vettore tridimensionale specificato e il <xref href=&quot;System.Numerics.Plane.Normal&quot;> </xref> vettore di questo piano."
  syntax:
    content: public static float DotNormal (System.Numerics.Plane plane, System.Numerics.Vector3 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "Il piano."
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore tridimensionale."
    return:
      type: System.Single
      description: "Prodotto scalare."
  overload: System.Numerics.Plane.DotNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  id: Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Equals(Plane)
  nameWithType: Plane.Equals(Plane)
  fullName: System.Numerics.Plane.Equals(Plane)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se questa istanza e un altro oggetto piano sono uguali."
  remarks: "Due <xref:System.Numerics.Plane>oggetti sono uguali se i relativi <xref:System.Numerics.Plane>e <xref:System.Numerics.Plane>campi sono uguali.</xref:System.Numerics.Plane> </xref:System.Numerics.Plane> </xref:System.Numerics.Plane>"
  syntax:
    content: public bool Equals (System.Numerics.Plane other);
    parameters:
    - id: other
      type: System.Numerics.Plane
      description: "L&quot;altro piano."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due piani sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Plane.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Plane.Equals(Object)
  fullName: System.Numerics.Plane.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se questa istanza e un oggetto specificato sono uguali."
  remarks: "L&quot;istanza corrente e `obj` sono uguali se `obj` √® un <xref:System.Numerics.Plane>oggetto e i relativi <xref:System.Numerics.Plane.Normal>e <xref:System.Numerics.Plane.D>campi sono uguali.</xref:System.Numerics.Plane.D> </xref:System.Numerics.Plane.Normal> </xref:System.Numerics.Plane>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con l&quot;istanza corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza corrente e <code> obj </code> sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Plane.GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash."
  overload: System.Numerics.Plane.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Normal
  id: Normal
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Normal
  nameWithType: Plane.Normal
  fullName: System.Numerics.Plane.Normal
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Il vettore normale del piano."
  syntax:
    content: public System.Numerics.Vector3 Normal;
    return:
      type: System.Numerics.Vector3
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  id: Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Normalize(Plane)
  nameWithType: Plane.Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(Plane)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un nuovo <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto il cui vettore normale √® il vettore normale del piano di origine normalizzato."
  syntax:
    content: public static System.Numerics.Plane Normalize (System.Numerics.Plane value);
    parameters:
    - id: value
      type: System.Numerics.Plane
      description: "Piano di origine."
    return:
      type: System.Numerics.Plane
      description: "Piano normalizzato."
  overload: System.Numerics.Plane.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: op_Equality(Plane,Plane)
  nameWithType: Plane.op_Equality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Equality(Plane,Plane)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se due piani sono uguali."
  remarks: "Due <xref:System.Numerics.Plane>oggetti sono uguali se i relativi <xref:System.Numerics.Plane>e <xref:System.Numerics.Plane>campi sono uguali.</xref:System.Numerics.Plane> </xref:System.Numerics.Plane> </xref:System.Numerics.Plane>       Il metodo di uguaglianza definisce il funzionamento dell&quot;operatore di uguaglianza per <xref:System.Numerics.Plane>oggetti.</xref:System.Numerics.Plane>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Plane value1, System.Numerics.Plane value2);
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: "Primo piano da confrontare."
    - id: value2
      type: System.Numerics.Plane
      description: "Secondo piano da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: op_Inequality(Plane,Plane)
  nameWithType: Plane.op_Inequality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Inequality(Plane,Plane)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se due piani non sono uguali."
  remarks: "Il metodo di disuguaglianza definisce il funzionamento dell&quot;operatore di disuguaglianza per <xref:System.Numerics.Plane>oggetti.</xref:System.Numerics.Plane>"
  syntax:
    content: public static bool op_Inequality (System.Numerics.Plane value1, System.Numerics.Plane value2);
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: "Primo piano da confrontare."
    - id: value2
      type: System.Numerics.Plane
      description: "Secondo piano da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.ToString
  id: ToString
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: ToString()
  nameWithType: Plane.ToString()
  fullName: System.Numerics.Plane.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la rappresentazione di stringa di questo oggetto piano."
  remarks: "Rappresentazione di stringa di un <xref:System.Numerics.Plane>oggetto utilizzare le convenzioni di formattazione delle impostazioni cultura correnti per formattare i valori numerici nella stringa restituita.</xref:System.Numerics.Plane> Ad esempio, un <xref:System.Numerics.Plane>oggetto la cui rappresentazione di stringa viene formattata utilizzando le convenzioni delle impostazioni cultura en-US potrebbe essere visualizzato come `{Normal:<1.1, 2.2, 3.3> D:4.4}`.</xref:System.Numerics.Plane>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Una stringa che rappresenta questo <xref href=&quot;System.Numerics.Plane&quot;> </xref> oggetto."
  overload: System.Numerics.Plane.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Transform(Plane,Matrix4x4)
  nameWithType: Plane.Transform(Plane,Matrix4x4)
  fullName: System.Numerics.Plane.Transform(Plane,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trasforma un piano normalizzato in base a una 4x4 matrice."
  remarks: '`plane`deve gi√† essere normalizzate in modo che il relativo <xref:System.Numerics.Plane>vettore √® di lunghezza unit√† prima di questo metodo viene chiamato.</xref:System.Numerics.Plane>'
  syntax:
    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "Piano normalizzato da trasformare."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Matrice di trasformazione da applicare a `plane`."
    return:
      type: System.Numerics.Plane
      description: "Piano trasformato."
  overload: System.Numerics.Plane.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Transform(Plane,Quaternion)
  nameWithType: Plane.Transform(Plane,Quaternion)
  fullName: System.Numerics.Plane.Transform(Plane,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trasforma un piano normalizzato in base a una rotazione del quaternione."
  remarks: '`plane`deve gi√† essere normalizzate in modo che il relativo <xref:System.Numerics.Plane>vettore √® di lunghezza unit√† prima di questo metodo viene chiamato.</xref:System.Numerics.Plane>'
  syntax:
    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Quaternion rotation);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "Piano normalizzato da trasformare."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Rotazione Quaternion da applicare al piano."
    return:
      type: System.Numerics.Plane
      description: "Un nuovo piano risultante dall&quot;applicazione della rotazione del quaternione."
  overload: System.Numerics.Plane.Transform*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Vector4)
  nameWithType: Plane.Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(Vector4)
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Vector3,Single)
  nameWithType: Plane.Plane(Vector3,Single)
  fullName: System.Numerics.Plane.Plane(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Single,Single,Single,Single)
  nameWithType: Plane.Plane(Single,Single,Single,Single)
  fullName: System.Numerics.Plane.Plane(Single,Single,Single,Single)
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: CreateFromVertices(Vector3,Vector3,Vector3)
  nameWithType: Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(Vector3,Vector3,Vector3)
- uid: System.Numerics.Plane
  parent: System.Numerics
  isExternal: false
  name: Plane
  nameWithType: Plane
  fullName: System.Numerics.Plane
- uid: System.Numerics.Plane.D
  parent: System.Numerics.Plane
  isExternal: false
  name: D
  nameWithType: Plane.D
  fullName: System.Numerics.Plane.D
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Dot(Plane,Vector4)
  nameWithType: Plane.Dot(Plane,Vector4)
  fullName: System.Numerics.Plane.Dot(Plane,Vector4)
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: DotCoordinate(Plane,Vector3)
  nameWithType: Plane.DotCoordinate(Plane,Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(Plane,Vector3)
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: DotNormal(Plane,Vector3)
  nameWithType: Plane.DotNormal(Plane,Vector3)
  fullName: System.Numerics.Plane.DotNormal(Plane,Vector3)
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals(Plane)
  nameWithType: Plane.Equals(Plane)
  fullName: System.Numerics.Plane.Equals(Plane)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Plane.Equals(System.Object)
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals(Object)
  nameWithType: Plane.Equals(Object)
  fullName: System.Numerics.Plane.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Plane.GetHashCode
  parent: System.Numerics.Plane
  isExternal: false
  name: GetHashCode()
  nameWithType: Plane.GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Plane.Normal
  parent: System.Numerics.Plane
  isExternal: false
  name: Normal
  nameWithType: Plane.Normal
  fullName: System.Numerics.Plane.Normal
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: Normalize(Plane)
  nameWithType: Plane.Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(Plane)
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Equality(Plane,Plane)
  nameWithType: Plane.op_Equality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Equality(Plane,Plane)
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Inequality(Plane,Plane)
  nameWithType: Plane.op_Inequality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Inequality(Plane,Plane)
- uid: System.Numerics.Plane.ToString
  parent: System.Numerics.Plane
  isExternal: false
  name: ToString()
  nameWithType: Plane.ToString()
  fullName: System.Numerics.Plane.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform(Plane,Matrix4x4)
  nameWithType: Plane.Transform(Plane,Matrix4x4)
  fullName: System.Numerics.Plane.Transform(Plane,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform(Plane,Quaternion)
  nameWithType: Plane.Transform(Plane,Quaternion)
  fullName: System.Numerics.Plane.Transform(Plane,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Plane.#ctor*
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane
  nameWithType: Plane.Plane
- uid: System.Numerics.Plane.CreateFromVertices*
  parent: System.Numerics.Plane
  isExternal: false
  name: CreateFromVertices
  nameWithType: Plane.CreateFromVertices
- uid: System.Numerics.Plane.Dot*
  parent: System.Numerics.Plane
  isExternal: false
  name: Dot
  nameWithType: Plane.Dot
- uid: System.Numerics.Plane.DotCoordinate*
  parent: System.Numerics.Plane
  isExternal: false
  name: DotCoordinate
  nameWithType: Plane.DotCoordinate
- uid: System.Numerics.Plane.DotNormal*
  parent: System.Numerics.Plane
  isExternal: false
  name: DotNormal
  nameWithType: Plane.DotNormal
- uid: System.Numerics.Plane.Equals*
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals
  nameWithType: Plane.Equals
- uid: System.Numerics.Plane.GetHashCode*
  parent: System.Numerics.Plane
  isExternal: false
  name: GetHashCode
  nameWithType: Plane.GetHashCode
- uid: System.Numerics.Plane.Normalize*
  parent: System.Numerics.Plane
  isExternal: false
  name: Normalize
  nameWithType: Plane.Normalize
- uid: System.Numerics.Plane.op_Equality*
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Equality
  nameWithType: Plane.op_Equality
- uid: System.Numerics.Plane.op_Inequality*
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Inequality
  nameWithType: Plane.op_Inequality
- uid: System.Numerics.Plane.ToString*
  parent: System.Numerics.Plane
  isExternal: false
  name: ToString
  nameWithType: Plane.ToString
- uid: System.Numerics.Plane.Transform*
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform
  nameWithType: Plane.Transform
