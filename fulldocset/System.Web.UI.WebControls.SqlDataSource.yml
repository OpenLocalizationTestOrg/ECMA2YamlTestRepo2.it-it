### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSource
  id: SqlDataSource
  children:
  - System.Web.UI.WebControls.SqlDataSource.#ctor
  - System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.SqlDataSource.CacheDuration
  - System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSource.ConnectionString
  - System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  - System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  - System.Web.UI.WebControls.SqlDataSource.Delete
  - System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSource.Deleted
  - System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSource.Deleting
  - System.Web.UI.WebControls.SqlDataSource.EnableCaching
  - System.Web.UI.WebControls.SqlDataSource.FilterExpression
  - System.Web.UI.WebControls.SqlDataSource.Filtering
  - System.Web.UI.WebControls.SqlDataSource.FilterParameters
  - System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  - System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  - System.Web.UI.WebControls.SqlDataSource.GetViewNames
  - System.Web.UI.WebControls.SqlDataSource.Insert
  - System.Web.UI.WebControls.SqlDataSource.InsertCommand
  - System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSource.Inserted
  - System.Web.UI.WebControls.SqlDataSource.Inserting
  - System.Web.UI.WebControls.SqlDataSource.InsertParameters
  - System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.SqlDataSource.ProviderName
  - System.Web.UI.WebControls.SqlDataSource.SaveViewState
  - System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSource.SelectCommand
  - System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSource.Selected
  - System.Web.UI.WebControls.SqlDataSource.Selecting
  - System.Web.UI.WebControls.SqlDataSource.SelectParameters
  - System.Web.UI.WebControls.SqlDataSource.SortParameterName
  - System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  - System.Web.UI.WebControls.SqlDataSource.TrackViewState
  - System.Web.UI.WebControls.SqlDataSource.Update
  - System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSource.Updated
  - System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSource.Updating
  langs:
  - csharp
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
  type: Class
  summary: "Rappresenta un database SQL per i controlli con associazione a dati."
  remarks: "In questo argomento:- [Introduzione](#introduction)      -   [connessioni dati](#data_connections)      -   [esecuzione delle operazioni di dati](#performing_data_operations)      -   [Provider di dati](#data_provider)      -   [la memorizzazione nella cache](#caching)      -   [funzionalità aggiuntive](#additional_features)      -   [vista origine dati](#data_source_view)      -   [sintassi dichiarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controllo SqlDataSource l&quot;introduzione dell&quot;origine dati rappresenta i dati in un database relazionale di SQL per i controlli con associazione a dati.       È possibile utilizzare il controllo SqlDataSource in combinazione con un controllo con associazione a dati per recuperare dati da un database relazionale e per visualizzare, modificare e ordinare i dati in una pagina Web con pochi o nessun codice.      <a name=&quot;data_connections&quot;></a># # Dati connessioni per connettersi a un database, è necessario impostare il <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>proprietà in una stringa di connessione valida.</xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> SqlDataSource può supportare qualsiasi database relazionale di SQL che può essere connesso all&quot;utilizzo di un provider ADO.NET, ad esempio il `SqlClient`, `OleDb`, `Odbc`, o `OracleClient` provider. Per informazioni su come proteggere le stringhe di connessione, vedere [How To: le stringhe di connessione protetta quando i controlli origine dati di utilizzo](~/add/includes/ajax-current-ext-md.md).       Per recuperare dati da un database sottostante, impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà con una query SQL.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Se il database associato al SqlDataSource supporta le stored procedure, è possibile impostare il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà sul nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> La query SQL specificata si può anche essere una query con parametri. È possibile aggiungere <xref:System.Web.UI.WebControls.Parameter>gli oggetti che sono associati a una query con parametri per il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>insieme.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.Parameter> Per ulteriori informazioni sulle query SQL con parametri e la relativa sintassi, vedere [utilizzo dei parametri con i controlli origine dati per il filtraggio](~/add/includes/ajax-current-ext-md.md).       Il controllo SqlDataSource recupera dati ogni volta che il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Questo metodo fornisce l&quot;accesso a livello di codice al metodo specificato da <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo viene chiamato automaticamente da controlli associati a SqlDataSource quando i relativi <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Se si imposta la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>proprietà di un controllo con associazione a dati, il controllo viene associato automaticamente ai dati dall&quot;origine dati, come richiesto.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> Impostazione di `DataSourceID` il metodo consigliato per l&quot;associazione è un <xref:System.Web.UI.WebControls.ObjectDataSource>un controllo con associazione a dati.</xref:System.Web.UI.WebControls.ObjectDataSource> In alternativa, è possibile utilizzare il `DataSource` proprietà, ma è necessario chiamare esplicitamente il <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>metodo del controllo con associazione a dati.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Sono riportati alcuni esempi di controlli con associazione a dati che è possono utilizzare SqlDataSource <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.DropDownList>.</xref:System.Web.UI.WebControls.DropDownList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataGrid> È possibile chiamare il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo a livello di codice in qualsiasi momento per recuperare i dati dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       In scenari ASP.NET dichiarativi e a livello di codice, è possibile impostare il <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>proprietà del controllo con associazione a dati per l&quot;ID del controllo SqlDataSource.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> È inoltre possibile assegnare un&quot;istanza della classe SqlDataSource per la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>proprietà del controllo con associazione a dati.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Per ulteriori informazioni sull&quot;associazione di controlli con associazione a dati ai controlli origine dati, vedere [opzioni di accesso ai dati ASP.NET](http://msdn.microsoft.com/en-us/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).      <a name=&quot;performing_data_operations&quot;></a># # Esecuzione a seconda delle operazioni di dati sulle funzionalità dell&quot;oggetto sottostante del prodotto e la configurazione dell&quot;istanza della classe SqlDataSource database, è possibile eseguire operazioni sui dati, ad esempio aggiornamenti, inserimenti ed eliminazioni. Per eseguire queste operazioni sui dati, impostare il testo del comando appropriato e i relativi parametri per l&quot;operazione che si desidera eseguire. Ad esempio, per un&quot;operazione di aggiornamento, impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>proprietà da una stringa SQL o il nome di una stored procedure e aggiungere i parametri richiesti per il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> L&quot;aggiornamento viene eseguito quando il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>metodo viene chiamato in modo esplicito dal codice o automaticamente da un controllo con associazione a dati.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Viene seguito lo stesso modello generale per <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>operazioni.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       La query SQL e i comandi utilizzati nel <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>proprietà possono essere parametrizzate.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Ciò significa che la query o un comando è possibile utilizzare segnaposto anziché valori letterali e associare i segnaposto all&quot;applicazione o le variabili definite dall&quot;utente. È possibile associare i parametri nelle query SQL a variabili di sessione, i valori passati nella stringa di query per una pagina Web Form, i valori delle proprietà di altri controlli server e altro ancora. Per ulteriori informazioni su come utilizzare i parametri nelle query SQL con SqlDataSource, vedere [utilizzo dei parametri con i controlli origine dati per il filtraggio](../Topic/Using%20Parameters%20with%20Data%20Source%20Controls%20for%20Filtering.md) e [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Per impostazione predefinita, se uno dei parametri è `null` quando si esegue un `Select` dei comandi, verrà restituito alcun dato e non verrà generata alcuna eccezione. È possibile modificare questo comportamento impostando la <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>proprietà `false`.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>      <a name=&quot;data_provider&quot;></a># # Data Provider per impostazione predefinita, il controllo SqlDataSource funziona con il Provider di dati .NET Framework per SQL Server, ma SqlDataSource non è Microsoft SQL Server specifici. È possibile collegare il controllo SqlDataSource con qualsiasi prodotto di database per cui è disponibile un provider ADO.NET gestito. Quando si utilizza il <xref:System.Data.OleDb?displayProperty=fullName>provider, a cui può utilizzare qualsiasi database conformi a OLE DB con SqlDataSource.</xref:System.Data.OleDb?displayProperty=fullName> Quando si utilizza il <xref:System.Data.Odbc?displayProperty=fullName>provider, SqlDataSource può essere utilizzato con qualsiasi database, inclusi IBM DB2, MySQL e PostgreSQL e il driver ODBC.</xref:System.Data.Odbc?displayProperty=fullName> Quando si utilizza il <xref:System.Data.OracleClient?displayProperty=fullName>provider, SqlDataSource può funzionare con i database Oracle 8.1.7 e versioni successive.</xref:System.Data.OracleClient?displayProperty=fullName> L&quot;elenco dei provider disponibili è registrato nel `DbProviderFactories` sezione del file di configurazione, sia nel file Machine. config o Web. config. Per ulteriori informazioni, vedere [selezione di dati mediante il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;caching&quot;></a># # La memorizzazione nella cache se si visualizzano i dati nella pagina utilizzando un controllo SqlDataSource, è possibile aumentare le prestazioni della pagina utilizzando la funzionalità di memorizzazione dati controllo origine dati. La memorizzazione nella cache riduce il carico di elaborazione nel server di database a scapito della memoria sul server Web. Nella maggior parte dei casi, questo è un buon compromesso. SqlDataSource memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>proprietà è impostata per il numero di secondi che la cache memorizza i dati prima che venga eliminata la voce della cache.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> È inoltre possibile specificare un <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>ed eventualmente <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>valore.</xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a># # Ulteriori SqlDataSource il di funzionalità offre funzionalità aggiuntive, come indicato nella tabella seguente.      | Funzionalità | Requisiti |   |----------------|------------------|   | La memorizzazione nella cache | Impostare la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore, la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> `true`e il <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e proprietà di <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>in base al comportamento desiderato per i dati memorizzati nella cache. |   | L&quot;eliminazione | Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>proprietà da un&quot;istruzione SQL utilizzata per eliminare i dati.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Questa istruzione è in genere con parametri. |   | Filtro | Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>proprietà per il <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Impostare la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>su un&quot;espressione di filtro utilizzata per filtrare i dati quando viene chiamato il metodo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>. |   | Inserimento di | Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>proprietà da un&quot;istruzione SQL utilizzata per inserire i dati.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Questa istruzione è in genere con parametri. |   | Paging | Non supportata attualmente da SqlDataSource, tuttavia, alcuni controlli con associazione a dati, ad esempio <xref:System.Web.UI.WebControls.GridView>, supportano il paging quando si imposta la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>sul valore <xref:System.Web.UI.WebControls.SqlDataSourceMode>. |   | Selezione | Impostare la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>su un&quot;istruzione SQL utilizzata per recuperare i dati. |   | Ordinamento | Impostare la proprietà <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>su <xref:System.Web.UI.WebControls.SqlDataSourceMode>. |   | Aggiornamento | Impostare il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>proprietà da un&quot;istruzione SQL utilizzata per aggiornare i dati.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Web.UI.WebControls.GridView> Questa istruzione è in genere con parametri. |      <a name=&quot;data_source_view&quot;> </a> # # Dati origine vista come con tutti i controlli origine dati, il controllo SqlDataSource è associato a una classe di visualizzazione origine dati. Il controllo SqlDataSource ha un solo oggetto associato <xref:System.Web.UI.WebControls.SqlDataSourceView>, e è sempre denominato `Table`.</xref:System.Web.UI.WebControls.SqlDataSourceView>       Non vi è alcun rendering visivo del controllo SqlDataSource; è implementato come un controllo in modo che è possibile crearlo in modo dichiarativo e, facoltativamente, in modo da consentirne deve far parte di gestione dello stato. Di conseguenza, SqlDataSource non supporta funzionalità visive, ad esempio quelli forniti dal <xref:System.Web.UI.DataSourceControl.EnableTheming%2A>o <xref:System.Web.UI.DataSourceControl.SkinID%2A>proprietà.</xref:System.Web.UI.DataSourceControl.SkinID%2A> </xref:System.Web.UI.DataSourceControl.EnableTheming%2A>      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:SqlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       CancelSelectOnNullParameter=&quot;True|False&quot;       ConflictDetection=&quot;OverwriteChanges|CompareAllValues&quot;       ConnectionString=&quot;string&quot;       DataSourceMode=&quot;DataReader|DataSet&quot;       DeleteCommand=&quot;string&quot;       DeleteCommandType=&quot;Text|StoredProcedure&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       FilterExpression=&quot;string&quot;       ID=&quot;string&quot;       InsertCommand=&quot;string&quot;       InsertCommandType=&quot;Text|StoredProcedure&quot;       OldValuesParameterFormatString=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnFiltering=&quot;Filtering event handler&quot;       OnInit=&quot;Init event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       ProviderName=&quot;string|System.Data.Odbc|System.Data.OleDb|           System.Data.OracleClient|System.Data.SqlClient|           Microsoft.SqlServerCe.Client&quot;       runat=&quot;server&quot;       SelectCommand=&quot;string&quot;       SelectCommandType=&quot;Text|StoredProcedure&quot;       SkinID=&quot;string&quot;       SortParameterName=&quot;string&quot;       SqlCacheDependency=&quot;string&quot;       UpdateCommand=&quot;string&quot;       UpdateCommandType=&quot;Text|StoredProcedure&quot;       Visible=&quot;True|False&quot;   >           <DeleteParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </DeleteParameters>           <FilterParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </FilterParameters>           <InsertParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </InsertParameters>           <SelectParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </SelectParameters>           <UpdateParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </UpdateParameters>   </asp:SqlDataSource>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192424).  \n  \n This section contains four code examples:  \n  \n-   The first code example demonstrates how to display data from SQL Server in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.  \n  \n-   The second code example demonstrates how to display data from an ODBC-compliant database in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.  \n  \n-   The third code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n-   The fourth code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n    > [!NOTE]\n    >  These examples show how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example demonstrates how to use a SqlDataSource control declaratively to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example demonstrates how to use a SqlDataSource control declaratively to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is the name of the .NET Framework Data Provider for ODBC, which is <xref:System.Data.Odbc?displayProperty=fullName>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_2.aspx)]  \n  \n The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.GridView> control. As with the previous examples, data from the Northwind database is displayed in the <xref:System.Web.UI.WebControls.GridView> control. Additionally, because an <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is specified and the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> property is set to `true`, you can edit and update the records with no additional code. The <xref:System.Web.UI.WebControls.GridView> control automatically handles adding parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** button in the <xref:System.Web.UI.WebControls.GridView> control is clicked.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_3.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_3.aspx)]  \n  \n The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.DropDownList> and <xref:System.Web.UI.WebControls.TextBox> controls. The <xref:System.Web.UI.WebControls.DropDownList> control does not automatically add update parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection nor call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method, so you must do so. The update parameters are specified declaratively and you can add an event handler to perform the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation when an event is raised.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_4.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_4.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("SelectQuery")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class SqlDataSource : System.Web.UI.DataSourceControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource()
  nameWithType: SqlDataSource.SqlDataSource()
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe."
  syntax:
    content: public SqlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource(String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe con la stringa di connessione specificata e il comando Select."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi per `selectCommand` dipende dal provider ADO.NET attualmente in uso, identificato tramite il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>valore può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.SqlDataSource> control using the SqlDataSource constructor. The example is unusual in that the <xref:System.Web.UI.WebControls.SqlDataSource> control is being used not on a Web Forms page, but in the implementation of a middle-tier object as a simple way for a business object to interact with a database. The example uses a connection string that is stored in the Web.config file.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_142_1.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_142_1.vb)]"
  syntax:
    content: public SqlDataSource (string connectionString, string selectCommand);
    parameters:
    - id: connectionString
      type: System.String
      description: "Stringa di connessione utilizzata per connettersi al database sottostante."
    - id: selectCommand
      type: System.String
      description: "La query SQL utilizzata per recuperare dati dal database sottostante. Se la query SQL è una stringa SQL con parametri, potrebbe essere necessario aggiungere <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> oggetti per il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>insieme.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource(String,String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe con la stringa di connessione specificata e il comando Select."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi di `selectCommand` dipende dal provider ADO.NET attualmente in uso, è identificato dal `providerName` parametro. Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       Il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>"
  syntax:
    content: public SqlDataSource (string providerName, string connectionString, string selectCommand);
    parameters:
    - id: providerName
      type: System.String
      description: "Il nome del provider di dati che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> utilizza. Se è impostato alcun provider, il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> utilizza il provider ADO.NET per Microsoft SQL Server, per impostazione predefinita."
    - id: connectionString
      type: System.String
      description: "Stringa di connessione utilizzata per connettersi al database sottostante."
    - id: selectCommand
      type: System.String
      description: "La query SQL utilizzata per recuperare dati dal database sottostante. Se la query SQL è una stringa SQL con parametri, potrebbe essere necessario aggiungere <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> oggetti per il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>insieme.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;intervallo di tempo, espresso in secondi, che il controllo origine dati memorizza nella cache i dati recuperati dal <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta la memorizzazione nella cache di dati.</xref:System.Web.UI.WebControls.SqlDataSource> Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dalla cache piuttosto che dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo memorizza automaticamente i dati quando il <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>è impostata su `true` e la proprietà CacheDuration è impostata su un valore maggiore di 0, che indica il numero di secondi durante i quali la cache memorizza i dati prima che venga eliminata la voce della cache.</xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Il valore 0 indica una cache lunga all&quot;infinito.       Il comportamento della cache è determinato da una combinazione della durata e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry>valore, il <xref:System.Web.UI.WebControls.SqlDataSource>memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per un al massimo la quantità di tempo specificato dalla proprietà CacheDuration.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> I dati potrebbero essere rilasciati prima della durata, se la memoria è obbligatoria. La cache viene aggiornata durante l&quot;operazione successiva. Se il <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry>valore, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l&quot;intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> La cache scade, se è presente alcuna attività per un periodo di tempo uguale al valore CacheDuration dopo l&quot;ultimo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operazione.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo può memorizzare nella cache dati solo quando è in <xref:System.Web.UI.WebControls.SqlDataSourceMode>modalità.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> A <xref:System.NotSupportedException>eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource>NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore e la memorizzazione nella cache è abilitata anche.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. The CacheDuration is set to 20 seconds and, because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> value by default, users of this page will see fresh data every 20 seconds.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_599_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_599_1.aspx)]"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "Il numero di secondi durante i quali il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> memorizza nella cache i risultati di una <xref:System.Web.UI.WebControls.SqlDataSource.Select*>operazione.</xref:System.Web.UI.WebControls.SqlDataSource.Select*> Il valore predefinito è 0. Il valore non può essere negativo."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il comportamento di scadenza della cache che, in combinazione con la durata, viene descritto il comportamento della cache che utilizza il controllo origine dati."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta la memorizzazione nella cache di dati.</xref:System.Web.UI.WebControls.SqlDataSource> Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dalla cache piuttosto che dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Il comportamento della cache è determinato da una combinazione di <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e le impostazioni di CacheExpirationPolicy.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Se la proprietà CacheExpirationPolicy è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry>valore, il <xref:System.Web.UI.WebControls.SqlDataSource>memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per la quantità di tempo specificato dal <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>, proprietà ed Elimina quindi il tempo trascorso.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> La cache viene aggiornata durante l&quot;operazione successiva. Se la proprietà CacheExpirationPolicy è impostata sul <xref:System.Web.UI.DataSourceCacheExpiry>valore, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l&quot;intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva.</xref:System.Web.UI.DataSourceCacheExpiry> La cache scade, se è presente alcuna attività per un periodo di tempo uguale al <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>valore dopo l&quot;ultimo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operazione.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo può memorizzare nella cache di dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode>modalità.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> A <xref:System.NotSupportedException>eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource>NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore e la memorizzazione nella cache è abilitata anche.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. Because the CacheExpirationPolicy property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> value, users will not see fresh data even though the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value is 20 seconds. The cached data is refreshed only if there is no activity on the page for more than 20 seconds since the last page load.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_249_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_249_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Uno del <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una dipendenza di chiave definita dall&quot;utente che è collegata a tutti i dati di oggetti della cache che vengono creati dal controllo origine dati. Tutti gli oggetti della cache sono scaduti in modo esplicito quando scade la chiave."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta la memorizzazione nella cache di dati.</xref:System.Web.UI.WebControls.SqlDataSource> Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dalla cache piuttosto che dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       È possibile impostare la proprietà CacheKeyDependency per creare una dipendenza tra tutte le voci di cache che vengono creati il <xref:System.Web.UI.WebControls.SqlDataSource>controllo e la chiave.</xref:System.Web.UI.WebControls.SqlDataSource> È possibile a livello di codice che scada tutte le voci di cache in qualsiasi momento per la scadenza della chiave.       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo può memorizzare nella cache di dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode>modalità.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> A <xref:System.NotSupportedException>eccezione viene generata dal <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo, se il <xref:System.Web.UI.WebControls.SqlDataSource>NFS è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore e la memorizzazione nella cache è abilitata anche.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>       Viene creata una voce della cache univoche per ogni combinazione del <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Più <xref:System.Web.UI.WebControls.SqlDataSource>controlli possono utilizzare le stesse voci della cache in scenari in cui i controlli caricano gli stessi dati dallo stesso database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache."
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Creare una chiave che identifica tutti gli oggetti della cache per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se un&quot;operazione di recupero di dati è stata annullata quando dei parametri che è contenuto nel <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>restituisce raccolta <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  remarks: "Il valore della CancelSelectOnNullParameter proprietà è archiviato nella vista stato."
  syntax:
    content: public virtual bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un&quot;operazione di recupero di dati viene annullata se un parametro contenuto nel <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>valutati insieme a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*> Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il valore che indica come il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo esegue aggiornamenti ed eliminazioni quando i dati in una riga sottostante del database le modifiche apportate durante la fase dell&quot;operazione."
  remarks: "La proprietà ConflictDetection determina se i parametri per i valori vecchi e nuovi vengono applicati per la `Update` metodo. Ad esempio, se il comando specificato dal <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà restituisce un <xref:System.Data.DataTable>oggetto con le colonne `Name` e `Number` e la proprietà ConflictDetection è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per `Name` e `Number` per il `Update` (metodo).</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Se è impostata la proprietà ConflictDetection il <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per `Name`, `Number`, `original_Name`, e `original_Number`.</xref:System.Web.UI.ConflictOptions> (Il nome esatto dei parametri per i valori originali dipende il <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>proprietà.)</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo determina se il `Update` metodo specificato nella <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>proprietà presenta parametri corrispondenti.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Controllo della concorrenza è una tecnica che utilizzano archivi dati al controllo modalità di lettura e quando più client accedono e modificano gli stessi dati è cambiati nell&quot;archivio dati. Ad esempio, un client legge i dati e visualizza all&quot;utente, mentre un altro client legge gli stessi dati e presenta a un altro utente. Se entrambi gli utenti di aggiornano i dati e inviano per l&quot;archiviazione dei dati, potrebbero verificarsi risultati imprevisti, poiché entrambi i client potrebbero fornire valori diversi per gli stessi dati. Questa viene considerata un conflitto. Impostando la proprietà ConflictDetection sul <xref:System.Web.UI.ConflictOptions>valore, il `Update` metodo può confrontare i valori vecchi e nuovi per l&quot;origine dei dati per rilevare i conflitti e gestirli, in base alle esigenze.</xref:System.Web.UI.ConflictOptions>       La proprietà ConflictDetection delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uno del <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.ConflictDetection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa di connessione specifica del provider ADO.NET il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizza per connettersi a un database sottostante."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo può essere utilizzato con un&quot;ampia gamma di provider ADO.NET e la sintassi della stringa di connessione utilizzata per connettersi a un&quot;origine dati sottostante è specifica del provider.</xref:System.Web.UI.WebControls.SqlDataSource>       Quando si configura un <xref:System.Web.UI.WebControls.SqlDataSource>, si imposta la <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà per il tipo di database (il valore predefinito è <xref:System.Data.SqlClient?displayProperty=fullName>), e si imposta la proprietà ConnectionString su una stringa di connessione che include le informazioni necessarie per connettersi al database.</xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Il contenuto di una stringa di connessione diversi a seconda del tipo di database sta accedendo al controllo origine dati. Ad esempio, il <xref:System.Web.UI.WebControls.SqlDataSource>controllo richiede un nome del server, nome del database (catalogo) e informazioni su come autenticare l&quot;utente durante la connessione a SQL Server.</xref:System.Web.UI.WebControls.SqlDataSource> Per informazioni sul contenuto delle stringhe di connessione, vedere la <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>proprietà di <xref:System.Data.SqlClient.SqlConnection>classe, di <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>proprietà per la <xref:System.Data.OracleClient.OracleConnection>classe, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>proprietà della <xref:System.Data.OleDb.OleDbConnection>classe, o la <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>proprietà di <xref:System.Data.Odbc.OdbcConnection>classe.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       Se si modifica la proprietà ConnectionString di <xref:System.Web.UI.IDataSource.DataSourceChanged>evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource>riassociazione del controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>      > [!IMPORTANT] > Per informazioni sull&quot;archiviazione di una stringa di connessione, vedere [How To: Secure Connection Strings quando i controlli origine dati di utilizzo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the ConnectionString property to connect to a Microsoft SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates a more complex scenario, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Microsoft Access database. In each case, the `connectionStrings` element of the Web.config file is shown first, followed by the ASP.NET page that contains the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n The following code example demonstrates how to set the ConnectionString property to connect to a SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_2.aspx)]  \n  \n The following code example demonstrates a more complex scenario than the preceding code example, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Access database. Because the <xref:System.Web.UI.WebControls.SqlDataSource> is used with Access, the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb> provider, and the ConnectionString property is set to an appropriate connection string for a UNC-shared Access database. A <xref:System.Web.UI.WebControls.GridView> control displays orders with shipment dates. You can update an order by checking the appropriate check box, and then clicking the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example includes a password in plain text only for illustration purposes. In a production application, connection strings that include passwords should be encrypted. For more information, see [Protecting Connection Information](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_3.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_3.aspx)]  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_4.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_4.aspx)]"
  syntax:
    content: public virtual string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Stringa specifica del provider di dati .NET Framework di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> utilizza per connettersi al database SQL che rappresenta. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.SqlDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  id: CreateDataSourceView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CreateDataSourceView(String)
  nameWithType: SqlDataSource.CreateDataSourceView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Crea un oggetto vista origine dati associata al controllo origine dati."
  remarks: "Le classi che derivano dalla <xref:System.Web.UI.WebControls.SqlDataSource>classe può eseguire l&quot;override del metodo CreateDataSourceView per restituire oggetti vista origine dati fortemente tipizzati.</xref:System.Web.UI.WebControls.SqlDataSource>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Il nome della vista origine dati."
    return:
      type: System.Web.UI.WebControls.SqlDataSourceView
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> che è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  id: DataSourceMode
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la modalità di recupero di dati che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizzato per recuperare i dati."
  remarks: "Identifica la modalità di recupero di dati come un <xref:System.Web.UI.WebControls.SqlDataSource>controllo recupera dati dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource>       Quando la proprietà DataSourceMode è impostata il <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore, i dati vengono caricati in un <xref:System.Data.DataSet>oggetto e archiviati in memoria nel server.</xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceMode> Questo consente scenari in cui controlli dell&quot;interfaccia utente, ad esempio <xref:System.Web.UI.WebControls.GridView>, offrono l&quot;ordinamento, filtro e le funzionalità di paging.</xref:System.Web.UI.WebControls.GridView>       Quando la proprietà DataSourceMode è impostata il <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore, i dati vengono recuperati da un <xref:System.Data.IDataReader>oggetto, ovvero un cursore forward-only di sola lettura.</xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> Il tipo specifico del <xref:System.Data.IDataReader>oggetto dipende dal provider di dati NET che il <xref:System.Web.UI.WebControls.SqlDataSource>Usa, che è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.IDataReader> Per impostazione predefinita, il <xref:System.Web.UI.WebControls.SqlDataSource>controllo utilizza il provider per Microsoft SQL Server, il <xref:System.Data.SqlClient?displayProperty=fullName>, e il lettore dati è un <xref:System.Data.SqlClient.SqlDataReader>oggetto.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource>       Se si modifica la proprietà DataSourceMode, il <xref:System.Web.UI.IDataSource.DataSourceChanged>evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource>riassociazione.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>       Il valore della proprietà DataSourceMode memorizzato nella visualizzazione stato."
  example:
  - "The following code example demonstrates how to set the DataSourceMode property of the <xref:System.Web.UI.WebControls.SqlDataSource> control to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value for a scenario with a <xref:System.Web.UI.WebControls.ListBox> control that requires no sorting, paging, nor filtering.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceMode
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.DataSourceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà DataSourceMode è uno dei valori definiti nel <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Delete
  id: Delete
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Delete()
  nameWithType: SqlDataSource.Delete()
  fullName: System.Web.UI.WebControls.SqlDataSource.Delete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di eliminazione utilizzando la <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "Prima di eseguita l&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di un&quot;operazione di eliminazione.       Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.       Il metodo Delete viene fornito per l&quot;accesso a livello di codice per il `Delete` metodo. Se il <xref:System.Web.UI.WebControls.SqlDataSource>controllo è associato a un controllo con associazione a dati, il controllo con associazione a dati chiama automaticamente il **eliminare** metodo.</xref:System.Web.UI.WebControls.SqlDataSource>       Il metodo Delete delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>metodo del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Per eseguire l&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>valori, quindi viene eseguita la <xref:System.Data.Common.DbCommand>nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the Delete method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the Delete method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the Delete method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_3_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_3_1.aspx)]"
  syntax:
    content: public int Delete ();
    parameters: []
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe eliminate dal database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSource.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizzato per eliminare dati dal database sottostante."
  remarks: "Rappresenta una query SQL o il nome di una stored procedure, DeleteCommand e viene utilizzato il <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche la sintassi del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), la sintassi del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà DeleteCommand può essere una stringa SQL o il nome di una stored procedure, se il database supporta le stored procedure.       La proprietà DeleteCommand delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>      > [!IMPORTANT] > Per motivi di sicurezza, DeleteCommand proprietà non è archiviata in stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l&quot;archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità."
  example:
  - "The following code example demonstrates how to set the DeleteCommand text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`. Additionally, when the **Delete** button is clicked, the <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method. Finally, because this code example deletes data, an event handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> viene utilizzato per eliminare i dati."
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  remarks: "La proprietà DeleteCommandType delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSource.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di eliminazione è stata completata."
  remarks: "Gestire l&quot;evento Deleted per esaminare i valori dei parametri di output dopo un&quot;operazione di eliminazione è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>proprietà il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto a cui è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>proprietà contiene una query SQL con parametri, la raccolta DeleteParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>      > [!NOTE] > Assicurarsi che nessun <xref:System.Web.UI.WebControls.BoundField>controlli nel controllo con associazione a dati che associa il <xref:System.Web.UI.WebControls.SqlDataSource>controllo hanno nomi che corrispondono a tutti i nomi di parametro nella raccolta DeleteParameters.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.BoundField> Potrebbe essere parametri che hanno lo stesso nome come campi associati vengono esclusi dal comando SQL e di un errore &quot;parametro non è stato specificato&quot;.       Se il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per i valori vecchi e nuovi dei dati.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> I parametri per i valori precedenti sono denominati in base al <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta DeleteParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui i parametri vengono visualizzati nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro e un segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà recupera DeleteParameters il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>proprietà che è contenuto il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare DeleteParameters property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_121_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSource.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima di un&quot;operazione di eliminazione."
  remarks: "Gestire l&quot;evento di eliminazione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.SqlDataSource>       La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l&quot;operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>oggetto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> È possibile, tuttavia, annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>l&quot;oggetto in `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the Deleting event that is raised before a <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_101_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_101_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo è abilitata la memorizzazione nella cache dei dati."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta la memorizzazione nella cache di dati.</xref:System.Web.UI.WebControls.SqlDataSource> Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dalla cache piuttosto che dal database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Alla scadenza della cache, il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo recupera i dati dal database sottostante e li memorizza nella cache i dati.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo memorizza automaticamente i dati quando la proprietà EnableCaching è impostata su `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>è impostata su un valore maggiore di 0, che indica il numero di secondi che la cache memorizza i dati prima di recuperare un nuovo set.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. The EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds. Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> field by default, users of this page will see fresh data every 20 seconds.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_591_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_591_1.aspx)]"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la memorizzazione nella cache di dati è abilitata per il controllo origine dati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.EnableCaching*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La proprietà EnableCaching è impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando la memorizzazione nella cache non è supportato per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un&quot;espressione di filtro che viene applicato quando il <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metodo viene chiamato.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  remarks: "Il valore della proprietà FilterExpression è un&quot;espressione di stringa di formato (una stringa che viene elaborata la <xref:System.String.Format%2A?displayProperty=fullName>metodo) che utilizza i valori nella raccolta FilterExpression per qualsiasi parametro di sostituzione è incluso nella stringa.</xref:System.String.Format%2A?displayProperty=fullName> La sintassi dell&quot;espressione di filtro è la stessa sintassi è accettata dal <xref:System.Data.DataView.RowFilter%2A>proprietà, perché l&quot;espressione di filtro è applicata al <xref:System.Data.DataView.RowFilter%2A>proprietà del <xref:System.Data.DataView>oggetto restituito dall&quot;esecuzione di <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>(metodo).</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> Per ulteriori informazioni, vedere <xref:System.Data.DataColumn.Expression%2A>.</xref:System.Data.DataColumn.Expression%2A>       Se si aggiungono parametri per il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>insieme, è inoltre possibile includere segnaposto della stringa di formato (ad esempio, `&quot;{0}&quot;)` nell&quot;espressione per sostituire i valori dei parametri.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> I segnaposto vengono sostituiti in base all&quot;indice del parametro di <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>insieme.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Se un oggetto di <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>insieme `null`, l&quot;oggetto verrà sostituito da una stringa vuota.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>       È possibile includere parametri nella proprietà FilterExpression. Se il parametro è di tipo stringa o carattere, racchiuderlo tra virgolette singole. Virgolette non sono necessari, se il parametro è un tipo numerico. Il <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>insieme contiene i parametri vengono valutati per i segnaposto che si trovano nella proprietà FilterExpression.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta il filtraggio dei dati solo quando nel <xref:System.Web.UI.WebControls.SqlDataSourceMode>modalità.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource>       La proprietà FilterExpression delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using a FilterExpression string and the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. The FilterExpression property is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the FilterExpression contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the selection for the <xref:System.Web.UI.WebControls.DropDownList> control causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_89_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un&quot;espressione di filtro applicata quando vengono recuperati utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSource.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stata impostata la proprietà FilterExpression e <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> in <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modalità."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSource.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSource.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di filtro."
  remarks: "Gestire l&quot;evento di filtro per eseguire le operazioni di convalida sui valori dei parametri di filtro prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue un&quot;operazione di filtro.</xref:System.Web.UI.WebControls.SqlDataSource> È possibile annullare il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>oggetto `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> L&quot;evento viene generato solo se il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>       L&quot;evento di filtro delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=fullName>evento del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=fullName>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene una raccolta di parametri associati a un segnaposto di parametri in di <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>stringa.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>"
  remarks: "I parametri nella raccolta FilterParameters sono associati ai parametri specificati nella <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> I segnaposto di parametri che vengono specificati nel <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>proprietà corrispondono in base all&quot;ordine agli oggetti parametro nella raccolta FilterParameters quando il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>       La proprietà recupera FilterParameters il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>proprietà che è contenuto il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and FilterParameters properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied anytime the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the FilterParameters collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1207_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1207_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene un set di parametri associati ai segnaposto di parametro, vedere il <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSource.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  id: GetDbProviderFactory
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetDbProviderFactory()
  nameWithType: SqlDataSource.GetDbProviderFactory()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce il <xref href=&quot;System.Data.Common.DbProviderFactory&quot;> </xref> oggetto associato con il provider ADO.NET che è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName*>"
  remarks: "Il <xref:System.Data.Common.DbProviderFactory>proprietà viene utilizzata per il <xref:System.Web.UI.WebControls.SqlDataSource>controllo per creare gli oggetti connessione e comando parametro ADO.NET corretti durante l&quot;interazione con un database.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.Common.DbProviderFactory>"
  syntax:
    content: protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();
    parameters: []
    return:
      type: System.Data.Common.DbProviderFactory
      description: "A <xref href=&quot;System.Data.Common.DbProviderFactory&quot;> </xref> che rappresenta il provider ADO.NET identificato; in caso contrario un&quot;istanza di <xref href=&quot;System.Data.SqlClient&quot;> </xref>, se è impostato alcun provider."
  overload: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: SqlDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la vista origine dati denominata che è associata il controllo origine dati."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta solo una vista origine dati.</xref:System.Web.UI.WebControls.SqlDataSource> Come con tutti gli oggetti vista origine dati, il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto che è associato il controllo origine dati definisce le relative funzionalità, esegue tutte le operazioni necessarie per recuperare dati dal database sottostante ed esegue operazioni, ad esempio l&quot;ordinamento, inserimento, eliminazione e aggiornamento.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Il nome della visualizzazione da recuperare. Poiché il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> supporta solo una visualizzazione, `viewName` viene ignorato."
    return:
      type: System.Web.UI.DataSourceView
      description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> denominato &quot;Table&quot; che è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.GetView*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>viewName</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o un valore diverso da `Table`."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: SqlDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene una raccolta di nomi che rappresenta l&quot;elenco di oggetti di visualizzazione che sono associate le <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta solo una visualizzazione nei relativi dati sottostanti, denominati `&quot;Table&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> Il metodo GetViewNames restituisce un insieme a elemento singolo con questo nome di una vista."
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Un <xref:System.Collections.ICollection>che contiene i nomi delle viste di cui è associate il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.SqlDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Insert
  id: Insert
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Insert()
  nameWithType: SqlDataSource.Insert()
  fullName: System.Web.UI.WebControls.SqlDataSource.Insert()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione insert usando il <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "Prima di eseguita l&quot;operazione di inserimento, la <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima dell&quot;operazione di inserimento. Per eseguire un&quot;operazione di inserimento, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand>oggetto nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.       Il metodo di inserimento viene fornito per l&quot;accesso a livello di codice per il `Insert` metodo. Se il <xref:System.Web.UI.WebControls.SqlDataSource>controllo è associato a un controllo con associazione a dati, il controllo con associazione a dati chiama automaticamente il `Insert` metodo.</xref:System.Web.UI.WebControls.SqlDataSource>       Il metodo Insert delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>metodo del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and then the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_101_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_101_1.aspx)]"
  syntax:
    content: public int Insert ();
    parameters: []
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe inserite nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSource.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizzato per inserire dati nel database sottostante."
  remarks: "InsertCommand rappresenta una query SQL o il nome di una stored procedure e viene utilizzata il <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà InsertCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.       Questa proprietà di delega per il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>      > [!IMPORTANT] > Per motivi di sicurezza, InsertCommand proprietà viene archiviata non è stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l&quot;archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The second code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row into the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.  \n  \n> [!NOTE]\n>  These examples show how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values into the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_805_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_805_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_805_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_805_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> viene utilizzato per inserire dati."
  overload: System.Web.UI.WebControls.SqlDataSource.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  remarks: "La proprietà InsertCommandType delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.GridView> control. It also demonstrates how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and identified as a stored procedure by setting the InsertCommandType property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n After data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_948_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_948_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.InsertCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSource.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando viene completata un&quot;operazione di inserimento."
  remarks: "Gestire l&quot;evento Inserted per esaminare i valori dei parametri di output dopo un&quot;operazione di inserimento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the Inserted event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_73_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_73_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSource.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di inserimento."
  remarks: "Gestire l&quot;evento di inserimento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di inserimento.</xref:System.Web.UI.WebControls.SqlDataSource> La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l&quot;operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> È possibile, tuttavia, annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>l&quot;oggetto in `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the `DataBind` method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_151_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_151_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>proprietà il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto a cui è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  remarks: "La proprietà recupera InsertParameters il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>proprietà contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>       Se il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>proprietà contiene una query SQL con parametri, la raccolta InsertParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta InsertParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui compaiono nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_596_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_596_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSource.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carica lo stato delle proprietà di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo che devono essere mantenute."
  remarks: "Il metodo LoadViewState viene utilizzato per caricare lo stato di visualizzazione salvato in precedenza il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Oggetto che rappresenta lo stato del <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una stringa di formato da applicare ai nomi di tutti i parametri vengono passati al <> </> *> o <> </> *> metodo."
  remarks: "La stringa di formato OldValuesParameterFormatString viene applicata solo alle chiavi primarie, ad esempio quelle che sono identificati dal `DataKeyNames` proprietà del controllo con associazione a dati associato o di eliminazione e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e un set di `oldValues` vengono passati al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.       Due scenari comuni in cui è possibile modificare la proprietà OldValuesParameterFormatString sono i seguenti: - per distinguere tra i valori vecchi e nuovi aggiornamenti. Quando il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono aggiunti i valori originali e quelli nuovi per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Senza la stringa di formattazione, verranno creati due parametri con lo stesso nome per ogni campo dati. Se si modifica il nome del parametro del valore originale, è possibile confrontare i dati di origine dei dati per rilevare i conflitti e confrontare i valori di chiave.      -Alcune finestre di progettazione visiva implementano uno schema di denominazione specifico per le chiavi e i valori originali."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta una stringa di formato applicata ai nomi di qualsiasi <code> oldValues </code> i parametri passati al <> </> *> o <> </> *> metodi. Il valore predefinito è &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: SqlDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge un <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> gestore eventi per il <xref href=&quot;System.Web.UI.Page&quot;> </xref> controllo che contiene il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo."
  remarks: "Il gestore dell&quot;evento che viene aggiunto per il <xref:System.Web.UI.WebControls.SqlDataSource>gli aggiornamenti dell&quot;oggetto di <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>valori.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Se i valori vengono aggiornati, il <xref:System.Web.UI.IDataSource.DataSourceChanged>evento viene generato, tutti i controlli associati ai <xref:System.Web.UI.WebControls.SqlDataSource>riassociazione del controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.SqlDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName
  id: ProviderName
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
  fullName: System.Web.UI.WebControls.SqlDataSource.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del provider di dati .NET Framework che la <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizza per connettersi a un&quot;origine dati sottostante."
  remarks: ".NET Framework include i provider di dati seguenti: - il <xref:System.Data.SqlClient?displayProperty=fullName>provider è il valore predefinito, Provider di dati .NET Framework per SQL Server.</xref:System.Data.SqlClient?displayProperty=fullName>      -La <xref:System.Data.OleDb?displayProperty=fullName>provider è il Provider di dati .NET Framework per OLE DB.</xref:System.Data.OleDb?displayProperty=fullName>      -La <xref:System.Data.Odbc?displayProperty=fullName>provider è il Provider di dati .NET Framework per ODBC.</xref:System.Data.Odbc?displayProperty=fullName>      -La <xref:System.Data.OracleClient?displayProperty=fullName>provider è il Provider di dati .NET Framework per Oracle.</xref:System.Data.OracleClient?displayProperty=fullName>       La proprietà ProviderName mai è impostata sul nome del provider ADO.NET non gestito, ad esempio `MSDAORA`. Per ulteriori informazioni, vedere [selezione di dati mediante il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       Se si modifica la proprietà ProviderName di <xref:System.Web.UI.IDataSource.DataSourceChanged>viene generato l&quot;evento, tutti i controlli associati al <xref:System.Web.UI.WebControls.SqlDataSource>riassociazione.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>       Viene specificato un elenco dei provider disponibili nel `DbProviderFactories` sottosezione del `system.data` sezione del file Machine. config."
  example:
  - "This section contains two code examples. The first code demonstrates how to connect to a SQL Server database using the default .NET Framework Data Provider for SQL Server for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=fullName>. The second code example demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>.  \n  \n The following code example demonstrates how to connect to a SQL Server database using the default data provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=fullName>. Whenever the ProviderName property is not explicitly set, the default provider is used. The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is provider-specific.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1309_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1309_1.aspx)]  \n  \n The following code example, which is functionally the same as the preceding code example, demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>. The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN) that is used to connect to the ODBC database.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1309_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1309_2.aspx)]"
  syntax:
    content: public virtual string ProviderName { get; set; }
    return:
      type: System.String
      description: "Il nome del provider di dati che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> utilizza; in caso contrario, il provider ADO.NET per Microsoft SQL Server, se è impostato alcun provider. Il valore predefinito è il provider ADO.NET per Microsoft SQL Server."
  overload: System.Web.UI.WebControls.SqlDataSource.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva lo stato di visualizzazione corrente di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Oggetto che contiene lo stato salvato del <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSource.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSource.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera i dati dal database sottostante utilizzando il <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "Il metodo Select viene chiamato automaticamente durante la <xref:System.Web.UI.Control.PreRender>fase del ciclo di vita della pagina.</xref:System.Web.UI.Control.PreRender> Viene chiamato dai controlli con associazione a dati che sono stati associati a un <xref:System.Web.UI.WebControls.SqlDataSource>controllare tramite i relativi <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>proprietà.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataView>oggetto se di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.IDataReader>oggetto se di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Chiudi il <xref:System.Data.IDataReader>al termine della lettura dei dati dell&quot;oggetto.</xref:System.Data.IDataReader>       Prima di eseguita l&quot;operazione di selezione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire qualsiasi elaborazione prima dell&quot;operazione Select.       Al termine dell&quot;operazione di selezione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Selected>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.       Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata su <xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName>e la memorizzazione nella cache è abilitata, il <xref:System.Web.UI.WebControls.SqlDataSource>oggetto recupera i dati e Salva i dati nella cache durante l&quot;operazione Select.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> La cache viene creata, annullata o aggiornata in base al comportamento di memorizzazione nella cache che viene specificato tramite la combinazione del <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache.       Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata su <xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName>e <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>proprietà è stata specificata, l&quot;espressione di filtro viene valutata con tutte le proprietà fornite <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>proprietà e il filtro risultante viene applicato all&quot;elenco di dati durante l&quot;operazione di selezione.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>       Il metodo Select delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Per eseguire un&quot;operazione di recupero di dati, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>oggetto utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>valori, quindi viene eseguita la <xref:System.Data.Common.DbCommand>nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to programmatically call the Select method and set values based on the result of the query. The following example shows the declarative code for the Web controls.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource.Select#1](~/add/codesnippet/csharp/475f4e1e-4832-4407-9121-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/add/codesnippet/visualbasic/475f4e1e-4832-4407-9121-_1.aspx)]  \n  \n The following example shows how to programmatically call the Select method. The <xref:System.Web.UI.WebControls.SqlDataSource> control returns an integer. The value of the integer is used to set the text of a <xref:System.Web.UI.WebControls.Label> control and to determine whether to display a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/add/codesnippet/visualbasic/475f4e1e-4832-4407-9121-_2.vb)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource.Select#2](~/add/codesnippet/csharp/475f4e1e-4832-4407-9121-_2.cs)]"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> oggetto che viene usato per richiedere operazioni sui dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Un <xref:System.Collections.IEnumerable>elenco di righe di dati.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> oggetto non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizzato per recuperare dati dal database sottostante."
  remarks: "Rappresenta una query SQL o il nome di una stored procedure, la proprietà SelectCommand e viene utilizzata il <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo per recuperare dati da un database di SQL Server.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Se si utilizza un asterisco (*) nel comando Select per selezionare tutte le colonne e se si utilizza la generazione automatica di codice per eseguire l&quot;aggiornamento o eliminazione, assicurarsi che nessuna colonna deve contenere spazi nei nomi.       Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà SelectCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.       La proprietà SelectCommand delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>      > [!IMPORTANT] > Per motivi di sicurezza, SelectCommand proprietà viene archiviata non è stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l&quot;archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the SelectCommand text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to set the SelectCommand text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n In both examples, there is no need to explicitly call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method because the data-bound controls that are attached to the data source control through the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property will automatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method during the <xref:System.Web.UI.Control.PreRender> phase.  \n  \n The following code example demonstrates how to set the SelectCommand text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1253_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1253_1.aspx)]  \n  \n The following code example demonstrates how to set the SelectCommand text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The SelectCommand property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1253_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1253_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "Una stringa SQL o il nome di una stored procedure che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> viene utilizzato per recuperare i dati."
  overload: System.Web.UI.WebControls.SqlDataSource.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>proprietà è una query SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  remarks: "La proprietà SelectCommandType delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the SelectCommandType property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value, in order to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_358_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_358_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.SelectCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSource.Selected
  fullName: System.Web.UI.WebControls.SqlDataSource.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di recupero di dati è stata completata."
  remarks: "Gestire l&quot;evento selezionati per esaminare i valori dei parametri di output dopo un&quot;operazione di recupero di dati è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSource.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSource.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di recupero di dati."
  remarks: "Gestire l&quot;evento di selezione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione select.</xref:System.Web.UI.WebControls.SqlDataSource> Sono disponibili gli argomenti di selezione di <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>proprietà il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto a cui è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà contiene una query SQL con parametri, la raccolta SelectParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta SelectParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui compaiono nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà recupera SelectParameters il <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>proprietà che è contenuto il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the SelectParameters collection. The <xref:System.Web.UI.WebControls.DropDownList> control, which the <xref:System.Web.UI.WebControls.ControlParameter> is bound to, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n For information about other types of parameters you can use, see the <xref:System.Web.UI.WebControls.Parameter> class overview.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the SelectParameters property in the code example is functionally equivalent to using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1230_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1230_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome di un parametro di stored procedure utilizzata per ordinare i dati recuperati quando il recupero dei dati viene eseguita mediante una stored procedure."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>proprietà viene valutata solo quando il comando SQL che è contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà è il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> In questo caso, se è impostata la proprietà SortParameterName, contiene il nome di un parametro che viene utilizzato per ordinare i risultati della stored procedure.       Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>è impostata, viene aggiunto all&quot;inizio di <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Il nome di un parametro di stored procedure utilizzato per ordinare i dati recuperati quando il recupero dei dati viene eseguita mediante una stored procedure."
  overload: System.Web.UI.WebControls.SqlDataSource.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  id: SqlCacheDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una stringa delimitata da punto e virgola che indica i database e tabelle da utilizzare per la dipendenza della cache di Microsoft SQL Server."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta criteri di scadenza facoltativa in base il <xref:System.Web.Caching.SqlCacheDependency>oggetto per la cache di dati (il servizio deve essere configurato per il server di database).</xref:System.Web.Caching.SqlCacheDependency> </xref:System.Web.UI.WebControls.SqlDataSource>       La stringa SqlCacheDependency identifica i database e le tabelle in base al formato stesso che viene utilizzato il `@ Page` direttiva, in cui la prima parte della stringa è una stringa di connessione a un database di Microsoft SQL Server, seguita da un virgola come delimitatore e infine il nome della tabella di database (ad esempio, `&quot;connectionstring1:table1&quot;`). Se la proprietà SqlCacheDependency dipende da più di una tabella, le coppie nome e-tabella di stringhe di connessione sono separate da punti e virgola (ad esempio, `&quot;connectionstring1:table1&quot;;connectionstring2:table2&quot;`).      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Microsoft Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede più di un utente per accedere ai dati, e si desidera che ogni recupero di dati da verificare con le configurazioni di sicurezza per il database, non utilizzare la memorizzazione nella cache."
  example:
  - "The following code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <xref:System.Web.UI.WebControls.SqlDataSource> control. In this example, the database is polled every 120 seconds. If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.SqlDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is refreshed by the <xref:System.Web.UI.WebControls.SqlDataSource> control the next time the database is polled.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_795_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_795_1.aspx)]"
  syntax:
    content: public virtual string SqlCacheDependency { get; set; }
    return:
      type: System.String
      description: "Stringa che indica i database e le tabelle da utilizzare per la dipendenza della cache di SQL Server."
  overload: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tiene traccia delle modifiche dello stato di visualizzazione di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllare in modo che possano essere archiviate nel <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> oggetto per il controllo."
  remarks: "Il metodo TrackViewState viene sottoposto a override per contrassegnare il punto di partenza per iniziare a rilevare e le modifiche al controllo come parte dello stato di visualizzazione per il controllo."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Update
  id: Update
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Update()
  nameWithType: SqlDataSource.Update()
  fullName: System.Web.UI.WebControls.SqlDataSource.Update()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di aggiornamento usando il <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "Il metodo Update viene chiamato automaticamente dal <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>controlli durante il postback se i dati sono stati modificati.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Per i dati che sono stati modificati in altri controlli, il metodo Update può essere chiamato in modo esplicito nel postback durante il <xref:System.Windows.Forms.Form.Load>evento.</xref:System.Windows.Forms.Form.Load>       Prima di eseguita l&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di un&quot;operazione di aggiornamento.       Al termine dell&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Updated>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione.       Il metodo Update delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>metodo del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Per eseguire un&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand>oggetto nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Updating> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The second code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_109_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_109_1.aspx)]  \n  \n The following code example demonstrates how to display data that is retrieved from a SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_109_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_109_2.aspx)]"
  syntax:
    content: public int Update ();
    parameters: []
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe aggiornate nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSource.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo utilizzato per aggiornare i dati nel database sottostante."
  remarks: "Rappresenta una query SQL o il nome di una stored procedure, la proprietà UpdateCommand e viene utilizzata il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà UpdateCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.       La proprietà UpdateCommand delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>      > [!IMPORTANT] > Per motivi di sicurezza, UpdateCommand proprietà viene archiviata non è stato di visualizzazione. Poiché è possibile decodificare il contenuto dello stato di visualizzazione sul client, l&quot;archiviazione di informazioni riservate sulla struttura del database nella visualizzazione stato potrebbe causare vulnerabilità.      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the UpdateCommand property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the UpdateCommand property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> is selected. This example also includes some post-processing: after a record is updated, a notification e-mail message is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_301_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_301_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_301_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_301_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> viene utilizzato per aggiornare i dati."
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  remarks: "La proprietà UpdateCommandType delega al <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSource.Updated
  fullName: System.Web.UI.WebControls.SqlDataSource.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di aggiornamento è stata completata."
  remarks: "Gestire l&quot;evento aggiornato per esaminare i valori dei parametri di output dopo un&quot;operazione di aggiornamento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the Updated event is handled by an event handler to perform a post-processing step where an e-mail notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_103_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_103_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>proprietà il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> controllo che è associato il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>proprietà contiene una query SQL con parametri, la raccolta UpdateParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>       I nomi dei parametri possono essere influenzati dal <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>proprietà, in particolare, se il nome identifica una chiave primaria, ad esempio una chiave specificata utilizzando il `DataKeyNames` proprietà del controllo con associazione a dati o di eliminazione e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e un set di `oldValues` vengono passati al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.       L&quot;ordine dei parametri nella raccolta UpdateParameters potrebbe essere importante, a seconda del provider ADO.NET. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui compaiono nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni sui comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà recupera UpdateParameters il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>proprietà che è contenuto il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto a cui è associato il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare il <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento per convalidare i valori dei parametri prima di eseguire la query.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the UpdateParameters collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1200_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1200_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSource.Updating
  fullName: System.Web.UI.WebControls.SqlDataSource.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di aggiornamento."
  remarks: "Gestire l&quot;evento di aggiornamento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.SqlDataSource> La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare direttamente il <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>operazione sul database chiamando il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>oggetto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> È possibile, tuttavia, annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>per `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > I valori vengono inseriti nei parametri senza convalida, ovvero una potenziale minaccia alla sicurezza. Utilizzare l&quot;evento di aggiornamento per convalidare i valori dei parametri prima di eseguire la query. Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_75_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource()
  nameWithType: SqlDataSource.SqlDataSource()
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource()
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource(String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource(String,String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String,String)
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.SqlDataSource.ConnectionString
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CreateDataSourceView(String)
  nameWithType: SqlDataSource.CreateDataSourceView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(String)
- uid: System.Web.UI.WebControls.SqlDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSourceMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceMode
  nameWithType: SqlDataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSource.Delete
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Delete()
  nameWithType: SqlDataSource.Delete()
  fullName: System.Web.UI.WebControls.SqlDataSource.Delete()
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Deleted
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSource.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSource.Deleting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSource.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.SqlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSource.Filtering
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSource.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSource.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetDbProviderFactory()
  nameWithType: SqlDataSource.GetDbProviderFactory()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory()
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: SqlDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: SqlDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.SqlDataSource.Insert
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Insert()
  nameWithType: SqlDataSource.Insert()
  fullName: System.Web.UI.WebControls.SqlDataSource.Insert()
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Inserted
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSource.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserted
- uid: System.Web.UI.WebControls.SqlDataSource.Inserting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSource.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserting
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSource.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: SqlDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
  fullName: System.Web.UI.WebControls.SqlDataSource.ProviderName
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSource.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSource.Select(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Selected
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Selected
  nameWithType: SqlDataSource.Selected
  fullName: System.Web.UI.WebControls.SqlDataSource.Selected
- uid: System.Web.UI.WebControls.SqlDataSource.Selecting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSource.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSource.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSource.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSource.Update
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Update()
  nameWithType: SqlDataSource.Update()
  fullName: System.Web.UI.WebControls.SqlDataSource.Update()
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Updated
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Updated
  nameWithType: SqlDataSource.Updated
  fullName: System.Web.UI.WebControls.SqlDataSource.Updated
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSource.Updating
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Updating
  nameWithType: SqlDataSource.Updating
  fullName: System.Web.UI.WebControls.SqlDataSource.Updating
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource.SqlDataSource
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CreateDataSourceView
  nameWithType: SqlDataSource.CreateDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSource.Delete*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Delete
  nameWithType: SqlDataSource.Delete
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetDbProviderFactory
  nameWithType: SqlDataSource.GetDbProviderFactory
- uid: System.Web.UI.WebControls.SqlDataSource.GetView*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetView
  nameWithType: SqlDataSource.GetView
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: SqlDataSource.GetViewNames
- uid: System.Web.UI.WebControls.SqlDataSource.Insert*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Insert
  nameWithType: SqlDataSource.Insert
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSource.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OnInit
  nameWithType: SqlDataSource.OnInit
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSource.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSource.Select*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Select
  nameWithType: SqlDataSource.Select
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSource.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSource.Update*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Update
  nameWithType: SqlDataSource.Update
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
