### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.TempFileCollection
  id: TempFileCollection
  children:
  - System.CodeDom.Compiler.TempFileCollection.#ctor
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.BasePath
  - System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.Count
  - System.CodeDom.Compiler.TempFileCollection.Delete
  - System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.Finalize
  - System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.KeepFiles
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  - System.CodeDom.Compiler.TempFileCollection.TempDir
  langs:
  - csharp
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
  type: Class
  summary: "Rappresenta una raccolta di file temporanei."
  remarks: "TempFileCollection può essere utilizzato per generare nomi di file univoci e per tenere traccia di un elenco di file. Questo può essere utile per <xref:System.CodeDom.Compiler.ICodeCompiler>i responsabili dell&quot;implementazione per la gestione di un elenco di generato dal compilatore file intermedi, che a volte vengono eliminati dopo l&quot;uso.</xref:System.CodeDom.Compiler.ICodeCompiler>       Per specificare una directory per generare nomi di file univoco, utilizzare un costruttore di overload in modo appropriato. È inoltre possibile utilizzare un overload del costruttore per indicare se i file aggiunti alla raccolta devono, se non specificato diversamente, quando si utilizza il <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>o <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>metodi, eliminata quando la raccolta è stata eliminata o <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>metodo viene chiamato.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       Aggiungere un file in qualsiasi directory a un&quot;istanza di TempFileCollection utilizzando il <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>metodo.</xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       Per generare un nome univoco per un file temporaneo di un&quot;estensione di file specifico, chiamare <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>e specificare l&quot;estensione del nome di file da generare.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Il <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>metodo restituirà una stringa costituita da un percorso completo di un nome file dell&quot;estensione specificato nella directory specificata per il <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A>proprietà.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Il <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>metodo restituirà solo un nome di file univoco per ogni estensione di file.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>       Sia il <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>e <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>metodi dispongono di overload che consentono di specificare se i file devono essere eliminati quando la raccolta è stata eliminata o <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>metodo viene chiamato.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       Il <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>metodo eliminerà tutti i file nella raccolta, ad eccezione di quelli contrassegnati per la conservazione.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>       Il <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>proprietà indica il nome di file di base, senza l&quot;estensione file, utilizzato per generare i nomi di file restituiti da un percorso completo di <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>metodo.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>      > [!NOTE] > Questa classe contiene una richiesta di collegamento e una richiesta di ereditarietà a livello di classe che si applica a tutti i membri. Oggetto <xref:System.Security.SecurityException>viene generata quando il chiamante immediato o la classe derivata non dispone dell&quot;autorizzazione di attendibilità totale.</xref:System.Security.SecurityException> Per informazioni dettagliate sui requisiti di sicurezza, vedere [le richieste di collegamento](~/add/includes/ajax-current-ext-md.md) e [richieste di ereditarietà](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example shows the use of the TempFileCollection class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/csharp/t-system.codedom.compile_1_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_1_1.vb)]"
  syntax:
    content: 'public class TempFileCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe con i valori predefiniti."
  remarks: "Si tratta di un costruttore predefinito che inizializza la raccolta con le impostazioni predefinite. Per impostazione predefinita, questa raccolta di file temporanei verrà archiviati i file in una directory temporanea predefinito e verrà eliminati i file temporanei dopo essere stati generati e utilizzati."
  syntax:
    content: public TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe utilizzando la directory temporanea specificata è eliminare i file temporanei dopo la generazione e utilizzo, per impostazione predefinita."
  syntax:
    content: public TempFileCollection (string tempDir);
    parameters:
    - id: tempDir
      type: System.String
      description: "Un percorso della directory temporaneo da utilizzare per l&quot;archiviazione dei file temporanei."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe utilizzando la directory temporanea specificata e un valore che indica se mantenere o eliminare i file temporanei dopo che sono stati generati e utilizzare, per impostazione predefinita."
  remarks: "Il valore di `keepFiles` utilizzato per impostare il <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>parametro.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> I file temporanei nella raccolta vengono mantenuti o eliminati dopo il completamento dell&quot;attività del compilatore in base al valore del <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>proprietà nella raccolta.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Poiché ogni file viene aggiunto alla raccolta, il valore corrente di <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>è associato, a meno che non venga aggiunto con un metodo che presenta un `keepFile` parametro, nel qual caso viene utilizzato per il file specifico di valore.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Quando il <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>metodo viene chiamato se <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>è `true`, vengono eliminati tutti i file, inclusi quelli aggiunti con una <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>valore `true`.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> In questo modo i file specifici, quelli identificato come mantenere i file, per essere temporaneamente dopo la compilazione per scopi, ad esempio segnalazione errori, e quindi eliminato quando non sono più necessari."
  syntax:
    content: public TempFileCollection (string tempDir, bool keepFiles);
    parameters:
    - id: tempDir
      type: System.String
      description: "Un percorso della directory temporaneo da utilizzare per l&quot;archiviazione dei file temporanei."
    - id: keepFiles
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i file temporanei devono essere mantenuti dopo l&quot;uso; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se i file temporanei devono essere eliminati."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  id: AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Aggiunge un nome file con l&quot;estensione del nome file specificato alla raccolta."
  remarks: "Questo metodo restituisce un nome di file con l&quot;estensione specificata è stato aggiunto alla raccolta dei file temporanei. Altro codice è necessario creare comunque il file prima che possa essere utilizzato.       Questo metodo è chiamato una sola volta per ogni estensione di file, perché verrà restituito lo stesso nome se viene chiamato con la stessa estensione."
  syntax:
    content: public string AddExtension (string fileExtension);
    parameters:
    - id: fileExtension
      type: System.String
      description: "L&quot;estensione per il nome di file temporaneo generato automaticamente da aggiungere alla raccolta."
    return:
      type: System.String
      description: "Un nome di file con l&quot;estensione specificata è stata appena aggiunta alla raccolta."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  id: AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Aggiunge un nome file con l&quot;estensione del nome file specificato alla raccolta utilizzando il valore che indica se il file deve essere eliminato o mantenuto."
  remarks: "Questo metodo restituisce un nome di file con l&quot;estensione specificata è stato aggiunto alla raccolta dei file temporanei. Altro codice è necessario creare comunque il file prima che possa essere utilizzato.       Questo metodo è chiamato una sola volta per ogni estensione di file, perché verrà restituito lo stesso nome se viene chiamato con la stessa estensione."
  syntax:
    content: public string AddExtension (string fileExtension, bool keepFile);
    parameters:
    - id: fileExtension
      type: System.String
      description: "L&quot;estensione per il nome di file temporaneo generato automaticamente da aggiungere alla raccolta."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il file deve essere mantenuto dopo l&quot;uso; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il file deve essere eliminato."
    return:
      type: System.String
      description: "Un nome di file con l&quot;estensione specificata è stata appena aggiunta alla raccolta."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileExtension</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  id: AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Aggiunge il file specificato alla raccolta, utilizzando il valore che indica se mantenere il file dopo la raccolta è stata eliminata oppure quando il <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>metodo viene chiamato.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: ''
  example:
  - "The following example shows the use of the AddFile method to add a file that is to be kept to the collection. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/csharp/a38042f1-5040-47a0-b145-_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/visualbasic/a38042f1-5040-47a0-b145-_1.vb)]"
  syntax:
    content: public void AddFile (string fileName, bool keepFile);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome del file da aggiungere alla raccolta."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il file deve essere mantenuto dopo l&quot;uso; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il file deve essere eliminato."
  overload: System.CodeDom.Compiler.TempFileCollection.AddFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileName</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota.       - oppure - <code>fileName</code> è un duplicato."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  id: BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene il percorso completo per il nome di file di base, senza l&quot;estensione file, percorso della directory temporanea, che viene utilizzato per generare nomi di file temporanei per la raccolta."
  syntax:
    content: public string BasePath { get; }
    return:
      type: System.String
      description: "Il percorso completo per il nome di file di base, senza un&quot;estensione di nome file, percorso della directory temporanea, che viene utilizzato per generare nomi di file temporanei per la raccolta."
  overload: System.CodeDom.Compiler.TempFileCollection.BasePath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Se la proprietà BasePath non è stata impostata o è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, e <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> non è concesso per la directory temporanea indicata dal <xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>proprietà.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>"
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Copia i membri della raccolta per la stringa specificata, a partire dall&quot;indice specificato."
  syntax:
    content: public void CopyTo (string[] fileNames, int start);
    parameters:
    - id: fileNames
      type: System.String[]
      description: "La matrice di stringhe in cui copiare."
    - id: start
      type: System.Int32
      description: "Indice della matrice da cui iniziare la copia."
  overload: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  id: Count
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene il numero di file nella raccolta."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di file nella raccolta."
  overload: System.CodeDom.Compiler.TempFileCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  id: Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Elimina i file temporanei nella raccolta che non sono stati contrassegnati per la conservazione."
  remarks: "Il metodo Delete esamina ogni file per determinare, su base individuale, se il file deve essere mantenuta o eliminata nella raccolta. File possono essere contrassegnati in modo esplicito per essere mantenute quando vengono aggiunti alla raccolta tramite aggiunta di metodi che accettano un `keepFile` parametro. Quando si aggiunge un file nella raccolta usando il <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>overload che non dispone di un `keepFile` parametro il valore del <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>proprietà viene utilizzata come indicatore di file predefinito keep.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.CodeDom.Compiler.TempFileCollection>riferimenti.</xref:System.CodeDom.Compiler.TempFileCollection> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.CodeDom.Compiler.TempFileCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  id: Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Tenta di eliminare i file temporanei, prima di questo oggetto venga recuperato da garbage collection."
  remarks: "Questo metodo esegue l&quot;override <xref:System.Object.Finalize%2A?displayProperty=fullName>e pulisce le risorse chiamando `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Eseguire l&quot;override `Dispose(Boolean)` per personalizzare la pulizia.       Il codice dell&quot;applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l&quot;operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>metodo.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Per ulteriori informazioni, vedere [metodi Finalize e distruttori](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md), e [si esegue l&quot;override del metodo Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  id: GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene un enumeratore in grado di enumerare i membri della raccolta."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che contiene i membri della raccolta.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  id: KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene o imposta un valore che indica se conservare i file, per impostazione predefinita, quando il <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>metodo viene chiamato o la raccolta è stata eliminata.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: "Il valore della proprietà KeepFiles viene utilizzato come impostazione predefinita quando il <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>overload che non dispone di un `keepFile` parametro viene chiamato per aggiungere un file temporaneo alla raccolta.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Ogni file temporaneo nella raccolta è un flag che determina, in base al file, se tale file deve essere mantenuta o eliminata associato. I file vengono automaticamente mantenere o eliminati dopo il completamento della compilazione in base al relativo valore di file associato. Tuttavia, una volta completata la compilazione, è possano rilasciare i file che sono stati mantenuti impostando KeepFiles false e la chiamata di <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>metodo.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>  Verrà creato in tutti i file da eliminare."
  syntax:
    content: public bool KeepFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i file devono essere mantenuti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Copia gli elementi della raccolta in una matrice, iniziando in corrispondenza dell&quot;indice specificato della matrice di destinazione."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int start);
    parameters:
    - id: array
      type: System.Array
      description: "Oggetto unidimensionale <xref:System.Array>che costituisce la destinazione degli elementi copiati da <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Array> Il <xref:System.Array>deve avere un&quot;indicizzazione in base zero.</xref:System.Array>"
    - id: start
      type: System.Int32
      description: "Indice in base zero nella matrice da cui iniziare la copia."
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene il numero di elementi contenuti nella raccolta."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi contenuti nella <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene un valore che indica se l&quot;accesso alla raccolta è sincronizzato (thread-safe)."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso al <xref:System.Collections.ICollection>è sincronizzato (thread-safe); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene un oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere utilizzato per sincronizzare l&quot;accesso a <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce un enumeratore che scorre una raccolta."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.IEnumerable>interfaccia.</xref:System.Collections.IEnumerable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere la raccolta.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Esegue attività definite dall&quot;applicazione associata a liberare, rilasciare o reimpostare risorse non gestite."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.CodeDom.Compiler.TempFileCollection>esegue il cast dell&quot;istanza di un <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  id: TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene la directory temporanea per archiviare i file temporanei."
  syntax:
    content: public string TempDir { get; }
    return:
      type: System.String
      description: "La directory temporanea per archiviare i file temporanei."
  overload: System.CodeDom.Compiler.TempFileCollection.TempDir*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection.TempFileCollection
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension
  nameWithType: TempFileCollection.AddExtension
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile
  nameWithType: TempFileCollection.AddFile
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo
  nameWithType: TempFileCollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete
  nameWithType: TempFileCollection.Delete
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose
  nameWithType: TempFileCollection.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize
  nameWithType: TempFileCollection.Finalize
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TempFileCollection.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: TempFileCollection.System.IDisposable.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
