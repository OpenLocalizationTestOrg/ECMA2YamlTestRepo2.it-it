### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  summary: "Espone i membri pubblici del &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; classe al codice non gestito."
  remarks: "Questa interfaccia consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Questa interfaccia mantiene l&quot;ordine vtable della <xref:System.Reflection.PropertyInfo?displayProperty=fullName>classe membri che è possibile accedere tramite gli oggetti COM non gestiti.</xref:System.Reflection.PropertyInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]

      public interface _PropertyInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.Attributes*>proprietà.</xref:System.Reflection.PropertyInfo.Attributes*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.Attributes%2A>proprietà ottiene gli attributi di questa proprietà.</xref:System.Reflection.PropertyInfo.Attributes%2A>"
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: "Gli attributi di questa proprietà."
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.CanRead*>proprietà.</xref:System.Reflection.PropertyInfo.CanRead*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.CanRead%2A>proprietà ottiene un valore che indica se la proprietà può essere letta.</xref:System.Reflection.PropertyInfo.CanRead%2A>"
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa proprietà può essere letta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.CanWrite*>proprietà.</xref:System.Reflection.PropertyInfo.CanWrite*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.CanWrite%2A>proprietà ottiene un valore che indica se la proprietà può essere scritto.</xref:System.Reflection.PropertyInfo.CanWrite%2A>"
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa proprietà può essere modificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.DeclaringType*>proprietà.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.DeclaringType%2A>proprietà ottiene la classe che dichiara questo membro.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "Il <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> oggetto per la classe che dichiara questo membro."
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.Equals*>metodo.</xref:System.Object.Equals*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.Equals%2A>metodo determina se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Da confrontare con l&quot;attuale <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente <xref:System.Object>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetAccessors*>metodo.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetAccessors%2A>metodo restituisce una matrice i cui elementi riflettono le `get`, `set`e altre funzioni di accesso della proprietà riflesse dall&quot;istanza corrente.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Matrice di <xref:System.Reflection.MethodInfo>gli oggetti che riflette le <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>e altre funzioni di accesso della proprietà riflesse dall&quot;istanza corrente, se vengono rilevate funzioni di accesso; in caso contrario, questo metodo restituisce una matrice con zero (0) elementi.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetAccessors*>metodo.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetAccessors%2A>metodo restituisce una matrice i cui elementi riflettono i metodi pubblici e, se specificato, non pubbliche `get`, `set`e altre funzioni di accesso della proprietà riflesse dall&quot;istanza corrente.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i metodi non pubblici nell&quot;oggetto restituito <xref uid=&quot;langword_csharp_MethodInfo&quot; name=&quot;MethodInfo&quot; href=&quot;&quot;> </xref> matrice; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Matrice di <xref:System.Reflection.MethodInfo>oggetti i cui elementi riflettono le <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>e altre funzioni di accesso della proprietà riflesse dall&quot;istanza corrente.</xref:System.Reflection.MethodInfo> Se il <code> nonPublic </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, la matrice conterrà pubbliche e non pubbliche <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>e altre funzioni di accesso. Se <code> nonPublic </code> è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, la matrice contiene solo <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>e altre funzioni di accesso. Se non viene trovate alcuna funzione di accesso con la visibilità specificata, questo metodo restituisce una matrice con zero (0) elementi."
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metodo.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metodo restituisce una matrice contenente tutti gli attributi personalizzati.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario false."
    return:
      type: System.Object[]
      description: "Matrice che contiene tutti gli attributi personalizzati o matrice con zero elementi se non è definito alcun attributo."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metodo.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metodo restituisce una matrice di attributi personalizzati identificati dal <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Il tipo di attributo da cercare. Vengono restituiti solo gli attributi assegnabili a questo tipo."
    - id: inherit
      type: System.Boolean
      description: "true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario false."
    return:
      type: System.Object[]
      description: "Matrice di attributi personalizzati applicati a questo membro, o una matrice con zero (0) elementi se non sono stati applicati attributi."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetGetMethod*>metodo.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>pubblico restituisce `get` funzione di accesso per questa proprietà.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Oggetto <xref:System.Reflection.MethodInfo>oggetto che rappresenta il pubblico <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> funzione di accesso per questa proprietà, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> funzione di accesso non è pubblica o non esiste.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetGetMethod*>metodo.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>metodo pubblico o non pubblico `get` funzione di accesso per questa proprietà.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire un tipo non pubblico <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> della funzione di accesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>oggetto che rappresenta il <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> funzione di accesso per questa proprietà, se il <code> nonPublic </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo> Or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but no <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessors exist."
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.GetHashCode*>metodo.</xref:System.Object.GetHashCode*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.GetHashCode%2A>metodo serve come funzione hash per un particolare tipo.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>è adatto per l&quot;uso in algoritmi hash e dati strutture, ad esempio una tabella hash.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il codice hash per l&quot;istanza corrente."
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Matrice di nomi da mappare."
    - id: cNames
      type: System.UInt32
      description: "Il conteggio dei nomi di cui eseguire il mapping."
    - id: lcid
      type: System.UInt32
      description: "Contesto in cui interpretare i nomi delle impostazioni locali."
    - id: rgDispId
      type: System.IntPtr
      description: "Matrice allocata dal chiamante che riceve gli identificatori corrispondenti ai nomi."
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetIndexParameters*>metodo.</xref:System.Reflection.PropertyInfo.GetIndexParameters*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>metodo restituisce una matrice di tutti i parametri di indice per la proprietà</xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Matrice di tipo <xref:System.Reflection.ParameterInfo>contenente i parametri per gli indici.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetSetMethod*>metodo.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>pubblico restituisce `set` funzione di accesso per questa proprietà.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Il <xref:System.Reflection.MethodInfo>oggetto che rappresenta il <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> metodo per questa proprietà se il <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso è pubblico, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso non è pubblico.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetSetMethod*>metodo.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>metodo restituisce il `set` funzione di accesso per questa proprietà.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire una funzione di accesso non pubblico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Uno dei valori nella tabella seguente.       <table><thead><tr><th> Valore       </th><th> Significato       </th></tr></thead><tbody><tr><td> Oggetto <xref:System.Reflection.MethodInfo>oggetto che rappresenta il <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> metodo per questa proprietà.</xref:System.Reflection.MethodInfo>       </td><td> Il <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso è pubblico.       - o - <code> nonPublic </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso non è pubblica.       </td></tr><tr><td><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref></td><td> Il <code> nonPublic </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ma la proprietà è di sola lettura.       - o - <code> nonPublic </code> parametro <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso non è pubblica.       - oppure - è presente alcun <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> della funzione di accesso.       </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.GetType*>metodo.</xref:System.Object.GetType*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.GetType%2A>metodo ottiene il tipo dell&quot;istanza corrente.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto.</xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera le informazioni sul tipo per un oggetto che può essere utilizzato per ottenere le informazioni sul tipo per un&quot;interfaccia."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Le informazioni sul tipo da restituire."
    - id: lcid
      type: System.UInt32
      description: "Identificatore delle impostazioni locali per le informazioni sul tipo."
    - id: ppTInfo
      type: System.IntPtr
      description: "Puntatore a oggetto informazioni sul tipo richiesto."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera il numero di interfacce di informazioni sul tipo fornite da un oggetto (0 o 1)."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Quando termina, questo metodo contiene un puntatore a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall&quot;oggetto. Questo parametro viene passato non inizializzato."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetValue*>metodo.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetValue%2A>metodo restituisce un valore letterale associato alla proprietà da un compilatore.</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;oggetto verrà restituito il cui valore della proprietà."
    - id: index
      type: System.Object[]
      description: "Valori di indice facoltativi per le proprietà indicizzate. Questo valore deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per le proprietà non indicizzate."
    return:
      type: System.Object
      description: "Il valore della proprietà per il <code> obj </code> parametro."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.GetValue*>metodo.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.GetValue%2A>metodo restituisce il valore di una proprietà con l&quot;associazione specificata, l&quot;indice e <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;oggetto verrà restituito il cui valore della proprietà."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'L&quot;attributo di chiamata. This must be a bit flag from <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Specificare un attributo di chiamata appropriato. Per richiamare un membro statico, il <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> flag di <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> deve essere impostato.'
    - id: binder
      type: System.Reflection.Binder
      description: "Tipi di oggetto che consente l&quot;associazione, la coercizione di argomento, la chiamata dei membri e il recupero di <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> oggetti tramite reflection. Se `binder` è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, viene usato il binder predefinito."
    - id: index
      type: System.Object[]
      description: "Valori di indice facoltativi per le proprietà indicizzate. Questo valore deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per le proprietà non indicizzate."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Il <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> oggetto che rappresenta le impostazioni cultura per i quali viene localizzata la risorsa. Si noti che se la risorsa non viene localizzata con queste impostazioni cultura, il <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> metodo verrà successivamente chiamato in Cerca una corrispondenza. Se questo valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> viene ottenuto dal <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> proprietà."
    return:
      type: System.Object
      description: "Il valore della proprietà per il <code> obj </code> parametro."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce l&quot;accesso a proprietà e metodi esposti da un oggetto."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Un identificatore di un membro."
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Contesto delle impostazioni locali in cui interpretare gli argomenti."
    - id: wFlags
      type: System.Int16
      description: "Flag che descrivono il contesto della chiamata."
    - id: pDispParams
      type: System.IntPtr
      description: "Un puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici."
    - id: pVarResult
      type: System.IntPtr
      description: "Un puntatore alla posizione in cui verrà archiviato il risultato."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Un puntatore a una struttura contenente informazioni sull&quot;eccezione."
    - id: puArgErr
      type: System.IntPtr
      description: "L&quot;indice del primo argomento che contiene un errore."
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.IsDefined*>metodo.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MemberInfo.IsDefined%2A>metodo indica se uno o più istanze del `attributeType` parametro viene applicato a questo membro.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Il <xref:System.Type>dell&quot;oggetto a cui vengono applicati gli attributi personalizzati.</xref:System.Type>"
    - id: inherit
      type: System.Boolean
      description: "true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario false."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uno o più istanze del <code> attributeType </code> parametro vengono applicate a questo membro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.IsSpecialName*>proprietà.</xref:System.Reflection.PropertyInfo.IsSpecialName*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.IsSpecialName%2A>proprietà imposta un valore che indica se la proprietà è il nome speciale.</xref:System.Reflection.PropertyInfo.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa proprietà è il nome speciale; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.MemberType*>proprietà.</xref:System.Reflection.PropertyInfo.MemberType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.MemberType%2A>proprietà ottiene un <xref:System.Reflection.MemberTypes>valore che indica che questo membro è una proprietà.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.PropertyInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Uno del <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valori che indicano che questo membro è una proprietà."
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.Name*>proprietà.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.Name%2A>proprietà ottiene il nome del membro corrente.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>oggetto contenente il nome di questo membro.</xref:System.String>"
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.PropertyType*>proprietà.</xref:System.Reflection.PropertyInfo.PropertyType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.PropertyInfo.PropertyType%2A>proprietà ottiene il tipo di questa proprietà.</xref:System.Reflection.PropertyInfo.PropertyType%2A>"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "Il tipo di questa proprietà."
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.ReflectedType*>proprietà.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.ReflectedType%2A>proprietà ottiene l&quot;oggetto classe usato per ottenere questo <xref:System.Reflection.MemberInfo>oggetto.</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "Il <xref:System.Type>oggetto tramite cui <xref:System.Reflection.MemberInfo>oggetto è stato ottenuto.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.PropertyInfo.SetValue*>metodo.</xref:System.Reflection.PropertyInfo.SetValue*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.PropertyInfo.SetValue%2A>metodo imposta il valore della proprietà con valori di indice facoltativi per le proprietà di indice.</xref:System.Reflection.PropertyInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto il cui valore della proprietà verrà impostato."
    - id: value
      type: System.Object
      description: "Il nuovo valore per questa proprietà."
    - id: index
      type: System.Object[]
      description: "Valori di indice facoltativi per le proprietà indicizzate. Questo valore deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per le proprietà non indicizzate."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.FieldInfo.SetValue*>metodo.</xref:System.Reflection.FieldInfo.SetValue*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.FieldInfo.SetValue%2A>metodo imposta il valore della proprietà per l&quot;oggetto specificato sul valore dato.</xref:System.Reflection.FieldInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;oggetto verrà restituito il cui valore della proprietà."
    - id: value
      type: System.Object
      description: "Il nuovo valore per questa proprietà."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'L&quot;attributo di chiamata. This must be a bit flag from <xref href=&quot;System.Reflection.BindingFlags&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Specificare un attributo di chiamata appropriato. Per richiamare un membro statico, il <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> flag di <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> deve essere impostato.'
    - id: binder
      type: System.Reflection.Binder
      description: "Tipi di oggetto che consente l&quot;associazione, la coercizione di argomento, la chiamata dei membri e il recupero di <xref:System.Reflection.MemberInfo>oggetti tramite reflection.</xref:System.Reflection.MemberInfo> Se `binder` è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, viene usato il binder predefinito."
    - id: index
      type: System.Object[]
      description: "Valori di indice facoltativi per le proprietà indicizzate. Questo valore deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per le proprietà non indicizzate."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Il <xref:System.Globalization.CultureInfo>oggetto che rappresenta le impostazioni cultura per i quali viene localizzata la risorsa.</xref:System.Globalization.CultureInfo> Si noti che se la risorsa non viene localizzata con queste impostazioni cultura, il <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> metodo verrà successivamente chiamato in Cerca una corrispondenza. Se questo valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> viene ottenuto dal <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> proprietà."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.ToString*>metodo.</xref:System.Object.ToString*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
