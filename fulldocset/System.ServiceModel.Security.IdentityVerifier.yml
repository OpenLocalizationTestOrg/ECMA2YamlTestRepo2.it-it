### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.IdentityVerifier
  id: IdentityVerifier
  children:
  - System.ServiceModel.Security.IdentityVerifier.#ctor
  - System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  - System.ServiceModel.Security.IdentityVerifier.CreateDefault
  - System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  langs:
  - csharp
  name: IdentityVerifier
  nameWithType: IdentityVerifier
  fullName: System.ServiceModel.Security.IdentityVerifier
  type: Class
  summary: "Un <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> classe base che può essere implementata per verificare un&quot;identità prevista in un contesto di autorizzazione che rappresenta un endpoint remoto, o per creare un&quot;identità da un indirizzo endpoint."
  remarks: "Il [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastruttura chiamate di <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A>metodo per recuperare l&quot;identità del servizio dal messaggio.</xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> Successivamente, l&quot;infrastruttura chiama il <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A>metodo con lo restituito <xref:System.ServiceModel.EndpointIdentity>e <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.EndpointIdentity> </xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A>       Per ulteriori informazioni sull&quot;implementazione della classe, vedere [procedura: creare un verificatore di identità Client personalizzato](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract class IdentityVerifier
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: IdentityVerifier()
  nameWithType: IdentityVerifier.IdentityVerifier()
  fullName: System.ServiceModel.Security.IdentityVerifier.IdentityVerifier()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un&quot;istanza di questa classe."
  syntax:
    content: protected IdentityVerifier ();
    parameters: []
  overload: System.ServiceModel.Security.IdentityVerifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  id: CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: CheckAccess(EndpointIdentity,AuthorizationContext)
  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  fullName: System.ServiceModel.Security.IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Implementa un metodo per verificare un&quot;identità."
  syntax:
    content: public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);
    parameters:
    - id: identity
      type: System.ServiceModel.EndpointIdentity
      description: "Il <xref:System.ServiceModel.EndpointIdentity>per verificare.</xref:System.ServiceModel.EndpointIdentity>"
    - id: authContext
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "Il <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> per testare il `identity` contro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;identità viene verificata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.IdentityVerifier.CheckAccess*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault
  id: CreateDefault
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: CreateDefault()
  nameWithType: IdentityVerifier.CreateDefault()
  fullName: System.ServiceModel.Security.IdentityVerifier.CreateDefault()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un&quot;istanza predefinita di questa classe."
  syntax:
    content: public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();
    parameters: []
    return:
      type: System.ServiceModel.Security.IdentityVerifier
      description: "Un&quot;istanza predefinita di <xref href=&quot;System.ServiceModel.Security.IdentityVerifier&quot;> </xref>."
  overload: System.ServiceModel.Security.IdentityVerifier.CreateDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  id: TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  parent: System.ServiceModel.Security.IdentityVerifier
  langs:
  - csharp
  name: TryGetIdentity(EndpointAddress,EndpointIdentity)
  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  fullName: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Tenta di creare un&quot;identità da un endpoint."
  remarks: "Il predefinito <xref:System.ServiceModel.Security.IdentityVerifier>Crea un&quot; <xref:System.ServiceModel.DnsEndpointIdentity>in base la porzione hostname di <xref:System.ServiceModel.EndpointAddress.Uri%2A>Se <xref:System.ServiceModel.EndpointIdentity>non è stato specificato come parte di <xref:System.ServiceModel.EndpointAddress>.</xref:System.ServiceModel.EndpointAddress> </xref:System.ServiceModel.EndpointIdentity> un&quot; esplicita</xref:System.ServiceModel.EndpointAddress.Uri%2A> </xref:System.ServiceModel.DnsEndpointIdentity> </xref:System.ServiceModel.Security.IdentityVerifier>"
  syntax:
    content: public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);
    parameters:
    - id: reference
      type: System.ServiceModel.EndpointAddress
      description: "Il <xref:System.ServiceModel.EndpointAddress>da usare per creare l&quot;identità.</xref:System.ServiceModel.EndpointAddress>"
    - id: identity
      type: System.ServiceModel.EndpointIdentity
      description: "Il <xref:System.ServiceModel.EndpointIdentity>restituito.</xref:System.ServiceModel.EndpointIdentity>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene restituito l&quot;identità. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: IdentityVerifier()
  nameWithType: IdentityVerifier.IdentityVerifier()
  fullName: System.ServiceModel.Security.IdentityVerifier.IdentityVerifier()
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CheckAccess(EndpointIdentity,AuthorizationContext)
  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
  fullName: System.ServiceModel.Security.IdentityVerifier.CheckAccess(EndpointIdentity,AuthorizationContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.IdentityModel.Policy.AuthorizationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CreateDefault()
  nameWithType: IdentityVerifier.CreateDefault()
  fullName: System.ServiceModel.Security.IdentityVerifier.CreateDefault()
- uid: System.ServiceModel.Security.IdentityVerifier
  parent: System.ServiceModel.Security
  isExternal: false
  name: IdentityVerifier
  nameWithType: IdentityVerifier
  fullName: System.ServiceModel.Security.IdentityVerifier
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: TryGetIdentity(EndpointAddress,EndpointIdentity)
  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
  fullName: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(EndpointAddress,EndpointIdentity)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Security.IdentityVerifier.#ctor*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: IdentityVerifier
  nameWithType: IdentityVerifier.IdentityVerifier
- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CheckAccess
  nameWithType: IdentityVerifier.CheckAccess
- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: CreateDefault
  nameWithType: IdentityVerifier.CreateDefault
- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*
  parent: System.ServiceModel.Security.IdentityVerifier
  isExternal: false
  name: TryGetIdentity
  nameWithType: IdentityVerifier.TryGetIdentity
