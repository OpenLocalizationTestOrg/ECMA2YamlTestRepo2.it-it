### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  id: KeyContainerPermissionAccessEntryEnumerator
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  type: Class
  summary: "Rappresenta l&quot;enumeratore per <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> gli oggetti in un <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref>."
  remarks: "Gli enumeratori consentono solo la lettura dei dati nella raccolta. Non è possibile utilizzare enumeratori per modificare la raccolta sottostante.       Inizialmente l&quot;enumeratore è posizionato prima del primo elemento nella raccolta. Il <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>metodo riporta l&quot;enumeratore in questa posizione.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> In questa posizione, la chiamata di <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>proprietà genera un&quot;eccezione.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> Pertanto, è necessario chiamare il <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>metodo per passare l&quot;enumeratore al primo elemento della raccolta prima di leggere il valore della <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>proprietà.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>Restituisce lo stesso oggetto finché non <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>o <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>viene chiamato.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>imposta <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>all&quot;elemento successivo.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       Una volta raggiunta la fine della raccolta, l&quot;enumeratore sarà posizionato dopo l&quot;ultimo elemento nella raccolta e la chiamata <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>restituisce `false`.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Se l&quot;ultima chiamata a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>restituito `false`, la chiamata <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>genera un&quot;eccezione.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Per reimpostare <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>il primo elemento della raccolta, chiamare il metodo <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>seguita da una chiamata a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e la successiva chiamata a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>o <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Se la raccolta viene modificata tra la chiamata <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>e <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>restituisce l&quot;elemento a cui è impostata, anche se l&quot;enumeratore risulta già invalidato.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       L&quot;enumeratore non dispone di accesso esclusivo alla raccolta. Pertanto, l&quot;enumerazione di una raccolta non è quindi una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l&quot;enumeratore generare un&quot;eccezione. Per garantire la protezione dei thread durante l&quot;enumerazione, bloccare la raccolta per l&quot;intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  id: Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene la voce corrente nella raccolta."
  remarks: "Quando viene creato l&quot;enumeratore, non corrisponde a un oggetto, in modo che la proprietà corrente non è valida e verrà generata un&quot;eccezione se vi si accede. È necessario chiamare prima il <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>metodo per posizionare il cursore in corrispondenza del primo oggetto nella raccolta.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       Il recupero della proprietà corrente più volte senza alcuna chiamata a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>restituirà lo stesso <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>oggetto ogni volta.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "Corrente <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> oggetto nella raccolta."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si accede alla proprietà corrente prima di chiamare prima il <> </> *> metodo. Il cursore si trova prima del primo oggetto nella raccolta.       - oppure - dopo una chiamata a cui si accede alla proprietà di corrente di <> </> *> restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, che indica che il cursore si trova dopo l&quot;ultimo oggetto nella raccolta."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Passa all&quot;elemento successivo della raccolta."
  remarks: "Il metodo MoveNext restituisce `false` immediatamente se non sono presenti oggetti nella raccolta.       MoveNext restituisce `true` fino a quando non raggiunta la fine della raccolta. Restituisce quindi `false` per ogni chiamata successiva. Tuttavia, una volta MoveNext ha restituito `false`, l&quot;accesso al <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>proprietà genera un&quot;eccezione.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       Al momento della creazione, l&quot;enumeratore è posizionato prima del primo <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>oggetto nella raccolta e la prima chiamata a MoveNext posiziona l&quot;enumeratore al primo oggetto nella raccolta.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;enumeratore è avanzato all&quot;elemento successivo; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;enumeratore ha superato la fine della raccolta."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  id: Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reimposta l&quot;enumeratore all&quot;inizio della raccolta."
  remarks: "Un enumeratore viene spostato in una direzione forward-only. Utilizzare questo metodo per tornare all&quot;inizio della raccolta.       Il metodo Reset posiziona il cursore in corrispondenza del primo oggetto nella raccolta. Dopo la chiamata a Reset, non è necessario chiamare <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>per spostare il cursore avanti al primo oggetto.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene l&quot;oggetto corrente nella raccolta."
  remarks: "Non chiamare questo metodo. Utilizzare il <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>proprietà invece.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "L&quot;oggetto corrente nella raccolta."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
