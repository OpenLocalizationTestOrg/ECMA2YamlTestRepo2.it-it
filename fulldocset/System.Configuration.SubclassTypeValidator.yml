### YamlMime:ManagedReference
items:
- uid: System.Configuration.SubclassTypeValidator
  id: SubclassTypeValidator
  children:
  - System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  - System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  - System.Configuration.SubclassTypeValidator.Validate(System.Object)
  langs:
  - csharp
  name: SubclassTypeValidator
  nameWithType: SubclassTypeValidator
  fullName: System.Configuration.SubclassTypeValidator
  type: Class
  summary: "Convalida che un oggetto è una classe derivata di un tipo specificato."
  remarks: "La classe SubclassTypeValidator viene utilizzata per garantire che un oggetto soddisfi criteri specifici. I criteri di convalida viene stabilita quando viene creata un&quot;istanza della classe SubclassTypeValidator.       Il <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A>metodo determina se il tipo di oggetto da convalidare è effettivamente un <xref:System.Type>.</xref:System.Type> </xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> L&quot;oggetto da convalidare viene passato come parametro del <xref:System.Configuration.SubclassTypeValidator.Validate%2A>metodo.</xref:System.Configuration.SubclassTypeValidator.Validate%2A> Questo metodo verifica innanzitutto che l&quot;oggetto da convalidare non è `null`e quindi verifica che l&quot;oggetto è una classe derivata del tipo previsto."
  syntax:
    content: 'public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: SubclassTypeValidator(Type)
  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)
  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Configuration.SubclassTypeValidator&quot;> </xref> classe."
  remarks: "I criteri per la convalida si basano sul `baseClass` parametro."
  syntax:
    content: public SubclassTypeValidator (Type baseClass);
    parameters:
    - id: baseClass
      type: System.Type
      description: "Classe di base per la convalida."
  overload: System.Configuration.SubclassTypeValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseClass</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: SubclassTypeValidator.CanValidate(Type)
  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determina se un oggetto può essere convalidato in base al tipo."
  remarks: "Il metodo CanValidate determina se il tipo di oggetto da convalidare è effettivamente un <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> type </code> parametro corrisponde a un tipo che può essere convalidato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SubclassTypeValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: SubclassTypeValidator.Validate(Object)
  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determina se il valore di un oggetto è valido."
  remarks: "Quando un&quot;istanza di <xref:System.Configuration.SubclassTypeValidator>classe viene creata, la classe di base viene fornita e utilizzata come criteri di valutazione.</xref:System.Configuration.SubclassTypeValidator> Oggetto da convalidare viene passato come parametro del metodo di convalida. Questo metodo esegue il controllo di convalida tra la classe di base e l&quot;oggetto parametro."
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore dell&quot;oggetto."
  overload: System.Configuration.SubclassTypeValidator.Validate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>non è un <xref:System.Type> che possono essere derivati da <code>baseClass</code> come definito nel costruttore."
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: SubclassTypeValidator(Type)
  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)
  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: SubclassTypeValidator.CanValidate(Type)
  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: SubclassTypeValidator.Validate(Object)
  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.SubclassTypeValidator.#ctor*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: SubclassTypeValidator
  nameWithType: SubclassTypeValidator.SubclassTypeValidator
- uid: System.Configuration.SubclassTypeValidator.CanValidate*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: CanValidate
  nameWithType: SubclassTypeValidator.CanValidate
- uid: System.Configuration.SubclassTypeValidator.Validate*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: Validate
  nameWithType: SubclassTypeValidator.Validate
