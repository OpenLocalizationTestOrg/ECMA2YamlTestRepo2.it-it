### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.IMultipleResults
  id: IMultipleResults
  children:
  - System.Data.Linq.IMultipleResults.GetResult``1
  langs:
  - csharp
  name: IMultipleResults
  nameWithType: IMultipleResults
  fullName: System.Data.Linq.IMultipleResults
  type: Interface
  summary: "Rappresenta i risultati della query con una variabile o funzioni mappate restituiscono sequenze."
  remarks: "Nell&quot;esempio di codice SQL seguente, la forma dei risultati dipende dall&quot;input (`shape =1` o `shape = 2`). Non Ã¨ definito l&quot;ordine in cui vengono restituite le proiezioni."
  example:
  - "```  \nCREATE PROCEDURE VariableResultShapes(@shape int)  \nAS  \nif(@shape = 1)  \n    select CustomerID, ContactTitle, CompanyName from customers  \nelse if(@shape = 2)  \n    select OrderID, ShipName from orders  \n```  \n  \n [!code-vb[DLinqSprox#4](~/add/codesnippet/visualbasic/sprox/northwind-sprox.vb#4)]\n [!code-cs[DLinqSprox#4](~/add/codesnippet/csharp/sprox/northwind-sprox.cs#4)]"
  syntax:
    content: 'public interface IMultipleResults : IDisposable, System.Data.Linq.IFunctionResult'
  implements:
  - System.Data.Linq.IFunctionResult
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.Linq.IMultipleResults.GetResult``1
  id: GetResult``1
  parent: System.Data.Linq.IMultipleResults
  langs:
  - csharp
  name: GetResult()
  nameWithType: IMultipleResults.GetResult()
  fullName: System.Data.Linq.IMultipleResults.GetResult()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerable<TElement> GetResult<TElement> ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TElement}
      description: "Da aggiungere."
  overload: System.Data.Linq.IMultipleResults.GetResult<TElement>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.IMultipleResults.GetResult``1
  parent: System.Data.Linq.IMultipleResults
  isExternal: false
  name: GetResult()
  nameWithType: IMultipleResults.GetResult()
  fullName: System.Data.Linq.IMultipleResults.GetResult()
- uid: System.Collections.Generic.IEnumerable{TElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<TElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.IMultipleResults.GetResult<TElement>*
  parent: System.Data.Linq.IMultipleResults
  isExternal: false
  name: GetResult<TElement>
  nameWithType: IMultipleResults.GetResult<TElement>
