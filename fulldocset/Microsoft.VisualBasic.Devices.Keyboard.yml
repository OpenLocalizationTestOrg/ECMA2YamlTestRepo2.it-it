### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Keyboard
  id: Keyboard
  children:
  - Microsoft.VisualBasic.Devices.Keyboard.#ctor
  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.NumLock
  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  langs:
  - csharp
  name: Keyboard
  nameWithType: Keyboard
  fullName: Microsoft.VisualBasic.Devices.Keyboard
  type: Class
  summary: "Fornisce proprietà per accedere allo stato corrente della tastiera, ad esempio le chiavi attualmente premuti e fornisce un metodo per l&quot;invio di sequenze di tasti per la finestra attiva."
  remarks: "Il `My.Computer.Keyboard` oggetto fornisce un&quot;interfaccia per la tastiera del computer. Le proprietà del `My.Computer.Keyboard` forniscono informazioni sullo stato di numerosi tasti speciali. Il `My.Computer.Keyboard.SendKeys` metodo consente di inviare le chiavi per la finestra attiva come se fossero stati premuti sulla tastiera.      ## Un esempio di attività relative la tabella seguente elenca le attività di `My.Computer.Keyboard` oggetto.      |||   |-|-|   | Per | Vedere |   | Invia sequenze di tasti a un&quot;applicazione | [Procedura: avviare un&quot;applicazione e inviarle sequenze di tasti (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \n  \n [!code-vb[VbVbalrMyComputer#36](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#36)]"
  syntax:
    content: public class Keyboard
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Devices.Keyboard&quot;> </xref> classe."
  syntax:
    content: public Keyboard ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  id: AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il tasto ALT è premuto."
  remarks: "Il `My.Computer.Keyboard.AltKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A>proprietà.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \n  \n [!code-vb[VbVbalrMyComputer#23](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#23)]"
  syntax:
    content: public bool AltKeyDown { get; }
    return:
      type: System.Boolean
      description: 'Oggetto <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valore: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se il tasto ALT è rivolta verso il basso; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  id: CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se BLOC MAIUSC è attivato."
  remarks: "Viene restituito solo lo stato del tasto BLOC MAIUSC attivo.      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \n  \n [!code-vb[VbVbalrMyComputer#50](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#50)]"
  syntax:
    content: public bool CapsLock { get; }
    return:
      type: System.Boolean
      description: 'Oggetto <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valore: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se BLOC MAIUSC è attivato; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  id: CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il tasto CTRL è premuto."
  remarks: "Il `My.Computer.Keyboard.CtrlKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A>proprietà.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \n  \n [!code-vb[VbVbalrMyComputer#34](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#34)]"
  syntax:
    content: public bool CtrlKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se il tasto CTRL è verso l&quot;alto. in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  id: NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il tasto BLOC NUM è attivo."
  remarks: "Viene restituito solo lo stato del tasto BLOC NUM.      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#48](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#48)]"
  syntax:
    content: public bool NumLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se BLOC NUM è on. in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  id: ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il tasto BLOC SCORR è attivo."
  remarks: "Viene restituito solo lo stato del tasto BLOC SCORR.      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#31](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#31)]"
  syntax:
    content: public bool ScrollLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se BLOC SCORR è attivo; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  id: SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Invia uno o più sequenze di tasti per la finestra attiva, come se premuti sulla tastiera."
  remarks: "Il `My.Computer.Keyboard.SendKeys` metodo fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SendKeys.Send%2A>e <xref:System.Windows.Forms.SendKeys.SendWait%2A>metodi.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       Il `wait` argomento risulta utile se l&quot;altra applicazione deve essere completata prima di continua l&quot;applicazione.      > [!NOTE] > Perché non è disponibile alcun metodo gestito per attivare un&quot;altra applicazione, è possibile utilizzare questa classe all&quot;interno dell&quot;applicazione corrente, manualmente selezionare la finestra per inviare i tasti oppure utilizzare i metodi dell&quot;API di Windows, ad esempio `FindWindow` e `SetForegroundWindow`, per forzare lo stato attivo su altre applicazioni. Per ulteriori informazioni, vedere [procedura dettagliata: chiamata di API Windows](~/add/includes/ajax-current-ext-md.md).       Il `keys` argomento può specificare qualsiasi tasto singolo o combinata di tasti con ALT, CTRL o MAIUSC (o qualsiasi combinazione di tasti). Ogni chiave è rappresentata da uno o più caratteri, ad esempio `a` per il carattere &quot;a&quot;, o `{ENTER}` per il tasto INVIO.       Per combinare un tasto con il tasto MAIUSC, anteporre il codice tasto `+` (segno di addizione). Per combinare un tasto con il tasto CTRL, anteporre il codice tasto `^` (accento circonflesso). Per combinare un tasto con ALT, anteporre il codice tasto `%` (segno di percentuale). Per specificare la ripetizione di tasti, utilizzare il modulo `{` *chiave numero*`}`. È necessario inserire uno spazio tra *chiave* e *numero*. Ad esempio, `{LEFT 42}` significa &quot;premere il tasto freccia sinistra 42 volte&quot;; `{h 10}` significa &quot;preme &quot;h&quot; 10 volte.&quot;       Nella tabella seguente vengono elencati i codici che possono essere usati per specificare i caratteri che non vengono visualizzati quando si preme il tasto corrispondente (ad esempio l&quot;invio o TAB).      |||   |-|-|   | Chiave | Codice |   | BACKSPACE | {BACKSPACE} o {BS} |   | INTERROMPI | {INTERROMPI} |   | TASTO BLOC MAIUSC ATTIVO | {CAPSLOCK} |   | CANCELLA | {DESELEZIONARE} |   | ELIMINARE | {DELETE} o {CANC} |   | FRECCIA GIÙ | {VERSO IL BASSO} |   | FINE | {FINE} |   | INVIO (Tn) | {IMMETTERE} |   | IMMETTERE | ~ |   | ESC | {ESCAPE} o {ESC} |   | GUIDA | {GUIDA} |   | HOME | {CASA} |   | AGGIUNTIVI | {INSERIRE} |   | FRECCIA SINISTRA | {LEFT} |   | BLOC NUM | {BLOCNUM} |   | SPOSTARSI VERSO IL BASSO | {PGGIÙ} |   | SPOSTARSI VERSO L&quot;ALTO | {PGSU} |   | RESTITUIRE | {RESTITUITO} |   | FRECCIA DESTRA | {RIGHT} |   | BLOC SCORR | {BLOC SCORR} |   | SCHEDA | {SCHEDA} |   | FRECCIA IN SU | {FINO} |   | F1 a F15 | {F1} a {F15} |      # # Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "Oggetto <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> che definisce le chiavi da inviare."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Sussiste una situazione di attendibilità parziale in cui l&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  id: SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Invia uno o più sequenze di tasti per la finestra attiva, come se premuti sulla tastiera."
  remarks: "Il `My.Computer.Keyboard.SendKeys` metodo fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SendKeys.Send%2A>e <xref:System.Windows.Forms.SendKeys.SendWait%2A>metodi.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       Il `wait` argomento risulta utile se l&quot;altra applicazione deve essere completata prima di continua l&quot;applicazione.      > [!NOTE] > Perché non è disponibile alcun metodo gestito per attivare un&quot;altra applicazione, è possibile utilizzare questa classe all&quot;interno dell&quot;applicazione corrente, manualmente selezionare la finestra per inviare i tasti oppure utilizzare i metodi dell&quot;API di Windows, ad esempio `FindWindow` e `SetForegroundWindow`, per forzare lo stato attivo su altre applicazioni. Per ulteriori informazioni, vedere [procedura dettagliata: chiamata di API Windows](~/add/includes/ajax-current-ext-md.md).       Il `keys` argomento può specificare qualsiasi tasto singolo o combinata di tasti con ALT, CTRL o MAIUSC (o qualsiasi combinazione di tasti). Ogni chiave è rappresentata da uno o più caratteri, ad esempio `a` per il carattere &quot;a&quot;, o `{ENTER}` per il tasto INVIO.       Per combinare un tasto con il tasto MAIUSC, anteporre il codice tasto `+` (segno di addizione). Per combinare un tasto con il tasto CTRL, anteporre il codice tasto `^` (accento circonflesso). Per combinare un tasto con ALT, anteporre il codice tasto `%` (segno di percentuale). Per specificare la ripetizione di tasti, utilizzare il modulo `{` *chiave numero*`}`. È necessario inserire uno spazio tra *chiave* e *numero*. Ad esempio, `{LEFT 42}` significa &quot;premere il tasto freccia sinistra 42 volte&quot;; `{h 10}` significa &quot;preme &quot;h&quot; 10 volte.&quot;       Nella tabella seguente vengono elencati i codici che possono essere usati per specificare i caratteri che non vengono visualizzati quando si preme il tasto corrispondente (ad esempio l&quot;invio o TAB).      |||   |-|-|   | Chiave | Codice |   | BACKSPACE | {BACKSPACE} o {BS} |   | INTERROMPI | {INTERROMPI} |   | TASTO BLOC MAIUSC ATTIVO | {CAPSLOCK} |   | CANCELLA | {DESELEZIONARE} |   | ELIMINARE | {DELETE} o {CANC} |   | FRECCIA GIÙ | {VERSO IL BASSO} |   | FINE | {FINE} |   | INVIO (Tn) | {IMMETTERE} |   | IMMETTERE | ~ |   | ESC | {ESCAPE} o {ESC} |   | GUIDA | {GUIDA} |   | HOME | {CASA} |   | AGGIUNTIVI | {INSERIRE} |   | FRECCIA SINISTRA | {LEFT} |   | BLOC NUM | {BLOCNUM} |   | SPOSTARSI VERSO IL BASSO | {PGGIÙ} |   | SPOSTARSI VERSO L&quot;ALTO | {PGSU} |   | RESTITUIRE | {RESTITUITO} |   | FRECCIA DESTRA | {RIGHT} |   | BLOC SCORR | {BLOC SCORR} |   | SCHEDA | {SCHEDA} |   | FRECCIA IN SU | {FINO} |   | F1 a F15 | {F1} a {F15} |      # # Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys, bool wait);
    parameters:
    - id: keys
      type: System.String
      description: "Oggetto <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> che definisce le chiavi da inviare."
    - id: wait
      type: System.Boolean
      description: "Facoltativa. Oggetto <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che specifica se inviare o meno di attesa per sequenze di tasti da elaborare prima che l&quot;applicazione continua. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per impostazione predefinita."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Sussiste una situazione di attendibilità parziale in cui l&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  id: ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il tasto MAIUSC è premuto."
  remarks: "Il `My.Computer.Keyboard.ShiftKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A>proprietà.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | Non |   | Servizio Windows | **Yes**|   | Sito Web | Non |"
  example:
  - "This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \n  \n [!code-vb[VbVbalrMyComputer#47](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#47)]"
  syntax:
    content: public bool ShiftKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se il tasto MAIUSC in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard
  nameWithType: Keyboard.Keyboard
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys
  nameWithType: Keyboard.SendKeys
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
