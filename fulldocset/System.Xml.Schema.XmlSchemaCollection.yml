### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaCollection
  id: XmlSchemaCollection
  children:
  - System.Xml.Schema.XmlSchemaCollection.#ctor
  - System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)
  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Schema.XmlSchemaCollection.Contains(System.String)
  - System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaCollection.Count
  - System.Xml.Schema.XmlSchemaCollection.GetEnumerator
  - System.Xml.Schema.XmlSchemaCollection.Item(System.String)
  - System.Xml.Schema.XmlSchemaCollection.NameTable
  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count
  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized
  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot
  - System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler
  langs:
  - csharp
  name: "XmlSchemaCollection"
  nameWithType: XmlSchemaCollection
  fullName: System.Xml.Schema.XmlSchemaCollection
  type: Class
  summary: Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The XmlSchemaCollection class class is obsolete. Use <see cref="T:System.Xml.Schema.XmlSchemaSet"></see> instead.
  remarks: "Schemas are loaded using the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI). For XML Schemas, this will typically be the `targetNamespace` property of the schema.  \n  \n Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an <xref:System.Xml.Schema.XmlSchema> applies to XML Schemas only.  \n  \n This version of the product supports the World Wide Web Consortium (W3C) XML Schema recommendation located at http://www.w3.org/TR/xmlschema-1 and http://www.w3.org/TR/xmlschema-2. An XML Schema must reference the W3C Schema namespace `http://www.w3.org/2001/XMLSchema` in its schema element. See the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for an example.  \n  \n `XmlSchemaCollection` can be used by <xref:System.Xml.XmlValidatingReader> for efficient data validation.  \n  \n> [!IMPORTANT]\n>  The XmlSchemaCollection class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  example:
  - "The following example validates an XML document using the `XmlSchemaCollection`.  \n  \n [!code-cs[XmlSchemaCollection.Basic#1](~/add/codesnippet/CSharp/t-system.xml.schema.xmls_40_1.cs)]\n [!code-cpp[XmlSchemaCollection.Basic#1](~/add/codesnippet/CPP/t-system.xml.schema.xmls_40_1.cpp)]\n [!code-vb[XmlSchemaCollection.Basic#1](~/add/codesnippet/VisualBasic/t-system.xml.schema.xmls_40_1.vb)]"
  syntax:
    content: >-
      [System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XmlSchemaCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "XmlSchemaCollection()"
  nameWithType: XmlSchemaCollection.XmlSchemaCollection()
  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Initializes a new instance of the <xref uid="langword_csharp_XmlSchemaCollection" name="XmlSchemaCollection" href=""></xref> class.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  syntax:
    content: public XmlSchemaCollection ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaCollection.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "XmlSchemaCollection(XmlNameTable)"
  nameWithType: XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Initializes a new instance of the <xref uid="langword_csharp_XmlSchemaCollection" name="XmlSchemaCollection" href=""></xref> class with the specified &lt;xref:System.Xml.XmlNameTable&gt;. The <xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""></xref> is used when loading schemas.
  syntax:
    content: public XmlSchemaCollection (System.Xml.XmlNameTable nametable);
    parameters:
    - id: nametable
      type: System.Xml.XmlNameTable
      description: "The  to use."
  overload: System.Xml.Schema.XmlSchemaCollection.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(XmlSchema)"
  nameWithType: XmlSchemaCollection.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds the &lt;xref:System.Xml.Schema.XmlSchema&gt; to the collection.
  remarks: "The `targetNamespace` attribute is used to identify this schema.  \n  \n If the schema being added contains references to other namespaces (through `include` and `import` elements), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \n  \n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \n  \n `Semi-trusted code:` External references are not resolved.  \n  \n> [!NOTE]\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "The  to add to the collection."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)
  id: Add(System.Xml.Schema.XmlSchemaCollection)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(XmlSchemaCollection)"
  nameWithType: XmlSchemaCollection.Add(XmlSchemaCollection)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchemaCollection)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.
  remarks: "If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \n  \n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \n  \n `Semi-trusted code:` External references are not resolved.  \n  \n> [!NOTE]\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaCollection schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchemaCollection
      description: "The  you want to add to this collection."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(String,String)"
  nameWithType: XmlSchemaCollection.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds the schema located by the given URL into the schema collection.
  remarks: "If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection. For example, in the following C# code, authors.xsd is removed from the collection and names.xsd is added.  \n  \n```  \nschemaColl.Add(\"urn:author\", \"authors.xsd\");  \nschemaColl.Add(\"urn:author\", \"names.xsd\");  \n```  \n  \n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` defined in the XML Schema to identify the schema in the collection. If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \n  \n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \n  \n `Semi-trusted code:` External references are not resolved.  \n  \n> [!NOTE]\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  example:
  - "The following example validates three XML files using schemas stored in the `XmlSchemaCollection`.  \n  \n [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/CPP/m-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/VisualBasic/m-system.xml.schema.xmls_2_1.vb)]\n [!code-cs[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/CSharp/m-system.xml.schema.xmls_2_1.cs)]  \n  \n The sample uses the following five input files:  \n  \n `booksSchema.xml`  \n  \n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/add/codesnippet/XML/m-system.xml.schema.xmls_2_2.xml)]  \n  \n `booksSchemaFail.xml`  \n  \n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/add/codesnippet/XML/m-system.xml.schema.xmls_2_3.xml)]  \n  \n `newbooks.xml`  \n  \n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/add/codesnippet/XML/m-system.xml.schema.xmls_2_4.xml)]  \n  \n `books.xsd`  \n  \n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/add/codesnippet/XML/m-system.xml.schema.xmls_2_5.xml)]  \n  \n `schema1.xdr`  \n  \n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/add/codesnippet/XML/m-system.xml.schema.xmls_2_6.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string ns, string uri);
    parameters:
    - id: ns
      type: System.String
      description: "The namespace URI associated with the schema. For XML Schemas, this will typically be the ."
    - id: uri
      type: System.String
      description: "The URL that specifies the schema to load."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The schema is not a valid schema."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(String,XmlReader)"
  nameWithType: XmlSchemaCollection.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds the schema contained in the &lt;xref:System.Xml.XmlReader&gt; to the schema collection.
  remarks: "If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.  \n  \n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` defined in the XML Schema to identify the schema in the collection.  \n  \n If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \n  \n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \n  \n `Semi-trusted code:` External references are not resolved.  \n  \n> [!NOTE]\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader);
    parameters:
    - id: ns
      type: System.String
      description: "The namespace URI associated with the schema. For XML Schemas, this will typically be the ."
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader> containing the schema to add."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The schema is not a valid schema."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)
  id: Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(XmlSchema,XmlResolver)"
  nameWithType: XmlSchemaCollection.Add(XmlSchema,XmlResolver)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds the &lt;xref:System.Xml.Schema.XmlSchema&gt; to the collection. The specified <see cref="T:System.Xml.XmlResolver"></see> is used to resolve any external references.
  remarks: "The `targetNamespace` attribute is used to identify this schema.  \n  \n If the schema contains `include` and `import` elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  example:
  - "The following example adds a schema to the collection. An <xref:System.Xml.XmlUrlResolver> is passed to the `Add` method which sets the necessary credentials required to access any external resources referenced in the schema.  \n  \n [!code-vb[XmlSchemaCollection.Add#1](~/add/codesnippet/VisualBasic/e37f2dcd-545b-4372-9f34-_1.vb)]\n [!code-cs[XmlSchemaCollection.Add#1](~/add/codesnippet/CSharp/e37f2dcd-545b-4372-9f34-_1.cs)]\n [!code-cpp[XmlSchemaCollection.Add#1](~/add/codesnippet/CPP/e37f2dcd-545b-4372-9f34-_1.cpp)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema, System.Xml.XmlResolver resolver);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "The  to add to the collection."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "The  used to resolve namespaces referenced in  and  elements. If this is , external references are not resolved."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The schema is not a valid schema."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Add(String,XmlReader,XmlResolver)"
  nameWithType: XmlSchemaCollection.Add(String,XmlReader,XmlResolver)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Adds the schema contained in the &lt;xref:System.Xml.XmlReader&gt; to the schema collection. The specified <see cref="T:System.Xml.XmlResolver"></see> is used to resolve any external resources.
  remarks: "If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.  \n  \n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` attribute defined in the XML Schema to identify the schema in the collection.  \n  \n If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader, System.Xml.XmlResolver resolver);
    parameters:
    - id: ns
      type: System.String
      description: "The namespace URI associated with the schema. For XML Schemas, this will typically be the ."
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader> containing the schema to add."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "The  used to resolve namespaces referenced in  and  elements or  attribute (XDR schemas). If this is , external references are not resolved."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Add*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The schema is not a valid schema."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Contains(String)"
  nameWithType: XmlSchemaCollection.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Gets a value indicating whether a schema with the specified namespace is in the collection.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  example:
  - "The following example checks to see if a schema is in the collection. If it is, it displays the schema.  \n  \n [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/CPP/m-system.xml.schema.xmls_5_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/VisualBasic/m-system.xml.schema.xmls_5_1.vb)]\n [!code-cs[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/CSharp/m-system.xml.schema.xmls_5_1.cs)]"
  syntax:
    content: public bool Contains (string ns);
    parameters:
    - id: ns
      type: System.String
      description: "The namespace URI associated with the schema. For XML Schemas, this will typically be the target namespace."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Contains(XmlSchema)"
  nameWithType: XmlSchemaCollection.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Gets a value indicating whether the <xref uid="langword_csharp_targetNamespace" name="targetNamespace" href=""></xref> of the specified &lt;xref:System.Xml.Schema.XmlSchema&gt; is in the collection.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "The  object."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "CopyTo(XmlSchema[],Int32)"
  nameWithType: XmlSchemaCollection.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaCollection.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Copies all the <xref uid="langword_csharp_XmlSchema" name="XmlSchema" href=""></xref> objects from this collection into the given array starting at the given index.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] array, int index);
    parameters:
    - id: array
      type: System.Xml.Schema.XmlSchema[]
      description: "The array to copy the objects to."
    - id: index
      type: System.Int32
      description: "The index in `array` where copying will begin."
  overload: System.Xml.Schema.XmlSchemaCollection.CopyTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Count"
  nameWithType: XmlSchemaCollection.Count
  fullName: System.Xml.Schema.XmlSchemaCollection.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Gets the number of namespaces defined in this collection.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of namespaces defined in this collection."
  overload: System.Xml.Schema.XmlSchemaCollection.Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "GetEnumerator()"
  nameWithType: XmlSchemaCollection.GetEnumerator()
  fullName: System.Xml.Schema.XmlSchemaCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Provides support for the "for each" style iteration over the collection of schemas.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  example:
  - "The following example displays each of the XML Schemas in the schema collection.  \n  \n [!code-vb[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/VisualBasic/m-system.xml.schema.xmls_0_1.vb)]\n [!code-cs[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/CSharp/m-system.xml.schema.xmls_0_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/CPP/m-system.xml.schema.xmls_0_1.cpp)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaCollectionEnumerator
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "Item(String)"
  nameWithType: XmlSchemaCollection.Item(String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Item(String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Gets the &lt;xref:System.Xml.Schema.XmlSchema&gt; associated with the given namespace URI.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  example:
  - "The following example checks to see if a schema is in the collection. If it is, it displays the schema.  \n  \n [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/CPP/p-system.xml.schema.xmls_4_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/VisualBasic/p-system.xml.schema.xmls_4_1.vb)]\n [!code-cs[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/CSharp/p-system.xml.schema.xmls_4_1.cs)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema this[string ns] { get; }
    parameters:
    - id: ns
      type: System.String
      description: "The namespace URI associated with the schema you want to return. This will typically be the  of the schema."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "The <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref> associated with the namespace URI; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema."
  overload: System.Xml.Schema.XmlSchemaCollection.Item*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "NameTable"
  nameWithType: XmlSchemaCollection.NameTable
  fullName: System.Xml.Schema.XmlSchemaCollection.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Gets the default <xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""></xref> used by the <xref uid="langword_csharp_XmlSchemaCollection" name="XmlSchemaCollection" href=""></xref> when loading new schemas.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "An <xref uid=&quot;langword_csharp_XmlNameTable&quot; name=&quot;XmlNameTable&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaCollection.NameTable*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.CopyTo(Array,Int32)"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.CopyTo%2A?displayProperty=fullName&gt;.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The array to copy the objects to."
    - id: index
      type: System.Int32
      description: "The index in `array` where copying will begin."
  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.Count"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.Count%2A?displayProperty=fullName&gt;.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Returns the count of the items in the collection."
  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: For a description of this member, see ICollection.IsSynchronized.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the collection is synchronized, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: For a description of this member, see ICollection.SyncRoot.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Returns a &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; object that can be used to synchronize access to the collection."
  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "System.Collections.IEnumerable.GetEnumerator()"
  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A?displayProperty=fullName&gt;.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaCollection
  langs:
  - csharp
  name: "ValidationEventHandler"
  nameWithType: XmlSchemaCollection.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: Sets an event handler for receiving information about the XDR and XML schema validation errors.
  remarks: "These events occur when the schemas are added to the collection. If an event handler is not provided, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A> is `XmlSeverityType.Error`. To specify an event handler, define a callback function and add it to the `ValidationEventHandler`.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."
  example:
  - "The following example shows how to set an event handler to handle invalid XML Schemas.  \n  \n [!code-cs[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/CSharp/e-system.xml.schema.xmls_1_1.cs)]\n [!code-cpp[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/CPP/e-system.xml.schema.xmls_1_1.cpp)]\n [!code-vb[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/VisualBasic/e-system.xml.schema.xmls_1_1.vb)]  \n  \n The preceding example uses the file `invalid.xsd` as input.  \n  \n [!code-xml[XmlSchema.ValidationEventHandler#2](~/add/codesnippet/XML/e-system.xml.schema.xmls_1_2.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: "System.Object"
- uid: System.Xml.Schema.XmlSchemaCollection.#ctor
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "XmlSchemaCollection()"
  nameWithType: XmlSchemaCollection.XmlSchemaCollection()
  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection()
- uid: System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "XmlSchemaCollection(XmlNameTable)"
  nameWithType: XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: "XmlNameTable"
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(XmlSchema)"
  nameWithType: XmlSchemaCollection.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: "XmlSchema"
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(XmlSchemaCollection)"
  nameWithType: XmlSchemaCollection.Add(XmlSchemaCollection)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchemaCollection)
- uid: System.Xml.Schema.XmlSchemaCollection
  parent: System.Xml.Schema
  isExternal: false
  name: "XmlSchemaCollection"
  nameWithType: XmlSchemaCollection
  fullName: System.Xml.Schema.XmlSchemaCollection
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(String,String)"
  nameWithType: XmlSchemaCollection.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(String,XmlReader)"
  nameWithType: XmlSchemaCollection.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: "XmlReader"
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(XmlSchema,XmlResolver)"
  nameWithType: XmlSchemaCollection.Add(XmlSchema,XmlResolver)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: "XmlResolver"
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add(String,XmlReader,XmlResolver)"
  nameWithType: XmlSchemaCollection.Add(String,XmlReader,XmlResolver)
  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader,XmlResolver)
- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Contains(String)"
  nameWithType: XmlSchemaCollection.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: "Boolean"
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Contains(XmlSchema)"
  nameWithType: XmlSchemaCollection.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "CopyTo(XmlSchema[],Int32)"
  nameWithType: XmlSchemaCollection.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaCollection.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: "XmlSchema"
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: "XmlSchema"
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: "Int32"
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaCollection.Count
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Count"
  nameWithType: XmlSchemaCollection.Count
  fullName: System.Xml.Schema.XmlSchemaCollection.Count
- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "GetEnumerator()"
  nameWithType: XmlSchemaCollection.GetEnumerator()
  fullName: System.Xml.Schema.XmlSchemaCollection.GetEnumerator()
- uid: System.Xml.Schema.XmlSchemaCollectionEnumerator
  parent: System.Xml.Schema
  isExternal: false
  name: "XmlSchemaCollectionEnumerator"
  nameWithType: XmlSchemaCollectionEnumerator
  fullName: System.Xml.Schema.XmlSchemaCollectionEnumerator
- uid: System.Xml.Schema.XmlSchemaCollection.Item(System.String)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Item(String)"
  nameWithType: XmlSchemaCollection.Item(String)
  fullName: System.Xml.Schema.XmlSchemaCollection.Item(String)
- uid: System.Xml.Schema.XmlSchemaCollection.NameTable
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "NameTable"
  nameWithType: XmlSchemaCollection.NameTable
  fullName: System.Xml.Schema.XmlSchemaCollection.NameTable
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.CopyTo(Array,Int32)"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: "Array"
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.Count"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.Count
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.IEnumerable.GetEnumerator()"
  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: "IEnumerator"
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "ValidationEventHandler"
  nameWithType: XmlSchemaCollection.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: "ValidationEventHandler"
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaCollection.#ctor*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "XmlSchemaCollection"
  nameWithType: XmlSchemaCollection.XmlSchemaCollection
- uid: System.Xml.Schema.XmlSchemaCollection.Add*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Add"
  nameWithType: XmlSchemaCollection.Add
- uid: System.Xml.Schema.XmlSchemaCollection.Contains*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Contains"
  nameWithType: XmlSchemaCollection.Contains
- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "CopyTo"
  nameWithType: XmlSchemaCollection.CopyTo
- uid: System.Xml.Schema.XmlSchemaCollection.Count*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Count"
  nameWithType: XmlSchemaCollection.Count
- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "GetEnumerator"
  nameWithType: XmlSchemaCollection.GetEnumerator
- uid: System.Xml.Schema.XmlSchemaCollection.Item*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "Item"
  nameWithType: XmlSchemaCollection.Item
- uid: System.Xml.Schema.XmlSchemaCollection.NameTable*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "NameTable"
  nameWithType: XmlSchemaCollection.NameTable
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.CopyTo"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.Count"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot
- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Xml.Schema.XmlSchemaCollection
  isExternal: false
  name: "System.Collections.IEnumerable.GetEnumerator"
  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator
