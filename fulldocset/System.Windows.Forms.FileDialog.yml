### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.FileDialog
  id: FileDialog
  children:
  - System.Windows.Forms.FileDialog.AddExtension
  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  - System.Windows.Forms.FileDialog.CheckFileExists
  - System.Windows.Forms.FileDialog.CheckPathExists
  - System.Windows.Forms.FileDialog.CustomPlaces
  - System.Windows.Forms.FileDialog.DefaultExt
  - System.Windows.Forms.FileDialog.DereferenceLinks
  - System.Windows.Forms.FileDialog.EventFileOk
  - System.Windows.Forms.FileDialog.FileName
  - System.Windows.Forms.FileDialog.FileNames
  - System.Windows.Forms.FileDialog.FileOk
  - System.Windows.Forms.FileDialog.Filter
  - System.Windows.Forms.FileDialog.FilterIndex
  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.FileDialog.InitialDirectory
  - System.Windows.Forms.FileDialog.Instance
  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.FileDialog.Options
  - System.Windows.Forms.FileDialog.Reset
  - System.Windows.Forms.FileDialog.RestoreDirectory
  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  - System.Windows.Forms.FileDialog.ShowHelp
  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  - System.Windows.Forms.FileDialog.Title
  - System.Windows.Forms.FileDialog.ToString
  - System.Windows.Forms.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: System.Windows.Forms.FileDialog
  type: Class
  summary: "Visualizza una finestra di dialogo da cui l&quot;utente può selezionare un file."
  remarks: "FileDialog è una classe astratta che contiene il comportamento comune per il <xref:System.Windows.Forms.OpenFileDialog>e <xref:System.Windows.Forms.SaveFileDialog>classi.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> Non deve essere utilizzata direttamente, ma contiene un comportamento comune per queste due classi. È possibile creare un&quot;istanza di FileDialog. Anche se la classe è dichiarata pubblica, non può ereditare da esso, in quanto contiene i metodi astratti interni. Per creare una finestra di dialogo per selezionare o salvare un file, utilizzare <xref:System.Windows.Forms.OpenFileDialog>o <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>       FileDialog è una finestra di dialogo modale. Pertanto, quando viene visualizzata, blocca il resto dell&quot;applicazione fino a quando l&quot;utente ha scelto un file. Quando una finestra di dialogo viene visualizzata come form modale, nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nella finestra di dialogo. Il programma deve nascondere o chiudere la finestra di dialogo (in genere in risposta a un&quot;operazione dell&quot;utente) prima di input al programma chiamante.      > [!CAUTION] > Quando si utilizzano le classi derivate da FileDialog, ad esempio <xref:System.Windows.Forms.OpenFileDialog>e <xref:System.Windows.Forms.SaveFileDialog>, evitare di usare valori letterali stringa che contiene i percorsi assoluti.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> Al contrario, è possibile ottenere in modo dinamico il percorso usando uno o più delle tecniche descritte nella tabella seguente.       Se si desidera consentire agli utenti di selezionare una cartella anziché un file, utilizzare il <xref:System.Windows.Forms.FolderBrowserDialog>.</xref:System.Windows.Forms.FolderBrowserDialog>       In base al tipo di applicazione, modalità di archiviazione dati associati all&quot;applicazione e il motivo per l&quot;accesso al file system, esistono molti modi in cui è possibile creare un percorso di directory. La tabella seguente illustra le tecniche per la creazione di percorsi in modo dinamico.      | Categoria di percorso o un programma | Classe e ai membri di utilizzare |   |------------------------------|------------------------------|   | Percorsi di Windows standard, ad esempio i file di programma, documenti, il Desktop e così via | La classe <xref:System.Environment?displayProperty=fullName>è l&quot;origine più completa per questo motivo, tramite i metodi statici, ad esempio <xref:System.Environment.SystemDirectory%2A>, oppure tramite il metodo <xref:System.Environment.GetFolderPath%2A>, utilizzando uno del <xref:System.Environment.SpecialFolder>valori enumerati. |   | I percorsi relativi all&quot;applicazione corrente | La <xref:System.Windows.Forms.Application>classe dispone di membri statici per ottenere percorsi specifici, ad esempio <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>e <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.ExecutablePath%2A> </xref:System.Windows.Forms.Application.StartupPath%2A> </xref:System.Windows.Forms.Application> </xref:System.Environment.SpecialFolder> </xref:System.Environment.GetFolderPath%2A> </xref:System.Environment.SystemDirectory%2A> </xref:System.Environment?displayProperty=fullName><br /><br /> Il <xref:System.IO.Path.GetTempPath%2A>metodo il <xref:System.IO.Path?displayProperty=fullName>restituisce il percorso della cartella temporanea.</xref:System.IO.Path?displayProperty=fullName> </xref:System.IO.Path.GetTempPath%2A><br /><br /> Il <xref:System.IO.Directory.GetCurrentDirectory%2A>metodo la <xref:System.IO.Directory?displayProperty=fullName>classe restituisce la directory dell&quot;applicazione corrente in esecuzione.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.Directory.GetCurrentDirectory%2A><br /><br /> La proprietà <xref:System.IO.DriveInfo.RootDirectory%2A>della classe <xref:System.IO.DriveInfo>rappresenta directory radice dell&quot;unità specificata. |   | Percorsi memorizzati come impostazioni dell&quot;applicazione | La proprietà di impostazioni di applicazioni corrispondente della classe wrapper derivata dal <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> accesso</xref:System.IO.DriveInfo> </xref:System.IO.DriveInfo.RootDirectory%2A> Per ulteriori informazioni, vedere [impostazioni applicazione per Windows Form](~/add/includes/ajax-current-ext-md.md). |   | Archiviazione del Registro di sistema | Alcune applicazioni di archiviano le informazioni di directory nel Registro di sistema. La classe <xref:System.Windows.Forms.Application>dispone di <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>e <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>proprietà che si risolvono in un valore <xref:Microsoft.Win32.RegistryKey>. |   | Applicazioni ClickOnce | Per le applicazioni ClickOnce, utilizzare <xref:System.Windows.Forms.Application>, ad esempio i membri della classe <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, che verrà restituito un puntatore alla directory di dati di ClickOnce.</xref:System.Windows.Forms.Application.UserAppDataPath%2A> </xref:System.Windows.Forms.Application> </xref:Microsoft.Win32.RegistryKey> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application> Per ulteriori informazioni, vedere [l&quot;accesso a dati locali e remoti in applicazioni ClickOnce](~/add/includes/ajax-current-ext-md.md). |   | Applicazioni internazionali | Per le applicazioni internazionali, recuperare la parte di percorso relativo da una risorsa stringa in un&quot;applicazione utilizzando la <xref:System.Resources.ResourceReader?displayProperty=fullName>classe.</xref:System.Resources.ResourceReader?displayProperty=fullName> Per ulteriori informazioni sulla globalizzazione e localizzazione, vedere l&quot;argomento [globalizzazione e localizzazione](~/add/includes/ajax-current-ext-md.md). |       Si noti che il percorso completo è possibile creare uno o più delle tecniche descritte. Ad esempio, il <xref:System.Environment.GetFolderPath%2A>metodo può essere utilizzato per ottenere il percorso della cartella documenti, quindi un&quot;impostazione dell&quot;applicazione può essere utilizzata per aggiungere una parte relativa sottodirectory.</xref:System.Environment.GetFolderPath%2A>       La <xref:System.IO.Path?displayProperty=fullName>classe contiene membri statici per facilitare la gestione delle stringhe di percorso assoluto e relativo, mentre il <xref:System.IO.File?displayProperty=fullName>e <xref:System.IO.Directory?displayProperty=fullName>classi dispongono i membri statici che effettivamente gestione file e directory, rispettivamente.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.File?displayProperty=fullName> </xref:System.IO.Path?displayProperty=fullName>      > [!IMPORTANT] > Se l&quot;utente dell&quot;applicazione cambia la cartella in FileDialog, quindi la directory di lavoro corrente per l&quot;applicazione è impostata nel percorso specificato in FileDialog. Per evitare questo problema, impostare il <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>proprietà `true`.</xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of FileDialog and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and return the <xref:System.Windows.Forms.DialogResult>. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_8_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_8_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_8_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("FileOk")]

      [System.ComponentModel.DefaultProperty("FileName")]

      public abstract class FileDialog : System.Windows.Forms.CommonDialog
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.CommonDialog
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.CommonDialog.HelpRequest
  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.ShowDialog
  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.CommonDialog.Tag
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AddExtension
  id: AddExtension
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo aggiunge automaticamente un&quot;estensione a un nome di file se si omette l&quot;estensione."
  remarks: "L&quot;estensione aggiunta a un nome di file dipende dal filtro di file attualmente selezionato e il valore della <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>proprietà.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>       Se il <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>proprietà `true`, la finestra di dialogo aggiunge la prima estensione dal filtro di file corrente che corrisponde a un file esistente.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> Se nessun file corrispondono al filtro di file corrente, la finestra di dialogo aggiunge l&quot;estensione specificata nel <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>proprietà.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>       Se il <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>proprietà `false`, la finestra di dialogo aggiunge la prima estensione di file valido dal filtro di file corrente.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> Se il filtro di file corrente non contiene alcuna estensione di file valido, la finestra di dialogo aggiunge l&quot;estensione specificata nel <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>proprietà.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>"
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo aggiunge un&quot;estensione a un nome file, se si omette l&quot;estensione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  id: AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se questo <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> istanza deve aggiornare automaticamente aspetto e il comportamento durante l&quot;esecuzione su [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)]."
  remarks: "Se questa proprietà è `false`, <xref:System.Windows.Forms.FileDialog>classe avrà una [!INCLUDE[winxp](~/add/includes/winxp-md.md)]-applicare uno stile aspetto e il comportamento [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)].</xref:System.Windows.Forms.FileDialog>       In [!INCLUDE[winxp](~/add/includes/winxp-md.md)], questa proprietà non ha alcun effetto."
  syntax:
    content: public bool AutoUpgradeEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> istanza deve aggiornare automaticamente aspetto e il comportamento durante l&quot;esecuzione su [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)]; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo viene visualizzato un avviso se l&quot;utente specifica un nome di file che non esiste."
  remarks: "Il valore predefinito è `true` per che eredita <xref:System.Windows.Forms.OpenFileDialog>e `false` per che eredita <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo viene visualizzato un avviso se l&quot;utente specifica un nome di file che non esiste. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo viene visualizzato un avviso se l&quot;utente specifica un percorso che non esiste."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo viene visualizzato un avviso quando l&quot;utente specifica un percorso che non esiste. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene la raccolta di percorsi personalizzati per questo <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> istanza."
  remarks: "In [!INCLUDE[winxp](~/add/includes/winxp-md.md)], questa proprietà non ha alcun effetto."
  example:
  - "The following code example demonstrates how to use the CustomPlaces collection. To run this example, paste the following code into a Windows Form and call `InitializeDialogAndButton` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_53_1.vb)]\n [!code-cs[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/csharp/p-system.windows.forms.f_53_1.cs)]"
  syntax:
    content: public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }
    return:
      type: System.Windows.Forms.FileDialogCustomPlacesCollection
      description: "Per questa raccolta di posizioni personalizzate <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> istanza."
  overload: System.Windows.Forms.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DefaultExt
  id: DefaultExt
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta l&quot;estensione di file predefinita."
  remarks: "Quando l&quot;utente dell&quot;applicazione specifica un nome file senza estensione, il <xref:System.Windows.Forms.FileDialog>aggiunge un&quot;estensione per il nome del file.</xref:System.Windows.Forms.FileDialog> L&quot;estensione utilizzata è determinata dal <xref:System.Windows.Forms.FileDialog.Filter%2A>e le proprietà DefaultExt.</xref:System.Windows.Forms.FileDialog.Filter%2A> Se è selezionato un filtro di <xref:System.Windows.Forms.FileDialog>e il filtro specifica un&quot;estensione, quindi viene usata l&quot;estensione.</xref:System.Windows.Forms.FileDialog> Se il filtro selezionato utilizza un carattere jolly al posto di estensione, viene utilizzata l&quot;estensione specificata nella proprietà DefaultExt."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, DefaultExt, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_16_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_16_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_16_1.cpp)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "L&quot;estensione di file predefinita. La stringa restituita non include il periodo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo restituisce il percorso del file a cui fa riferimento il collegamento o se restituisce il percorso del collegamento (lnk)."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo restituisce il percorso del file a cui fa riferimento il collegamento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.EventFileOk
  id: EventFileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Proprietario di <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> evento."
  syntax:
    content: protected static readonly object EventFileOk;
    return:
      type: System.Object
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileName
  id: FileName
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta una stringa contenente il nome del file selezionato nella finestra di dialogo file."
  remarks: "Il nome del file include sia il percorso del file e l&quot;estensione. Se è selezionato alcun file, questo metodo restituisce una stringa vuota (&quot;&quot;).       Quando viene utilizzata dal <xref:System.Windows.Forms.SaveFileDialog>(classe), questa proprietà rappresenta il file viene salvato; quando viene utilizzata dal <xref:System.Windows.Forms.OpenFileDialog>(classe), rappresenta il file aperto.</xref:System.Windows.Forms.OpenFileDialog> </xref:System.Windows.Forms.SaveFileDialog>       Questa proprietà può essere solo il nome di un file selezionato. Se si desidera restituire una matrice contenente i nomi di tutti i file selezionati in una finestra di dialogo Selezione multipla, utilizzare <xref:System.Windows.Forms.FileDialog.FileNames%2A>.</xref:System.Windows.Forms.FileDialog.FileNames%2A>"
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the FileName, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_44_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_44_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_44_1.cpp)]"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "Il nome di file selezionato nella finestra di dialogo file. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileNames
  id: FileNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene i nomi dei file di tutti i file selezionati nella finestra di dialogo."
  remarks: "Ogni nome di file include sia il percorso del file e l&quot;estensione. Se è selezionato alcun file, questo metodo restituisce una matrice vuota."
  example:
  - "The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \n  \n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/visualbasic/TestOpenFileDialogMultiSelectVB/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/csharp/TestOpenFileDialogMultiSelect/Form1.cs#1)]"
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "Matrice di tipo <xref:System.String>, contenente i nomi di tutti i file selezionati nella finestra di dialogo.</xref:System.String>"
  overload: System.Windows.Forms.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileOk
  id: FileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Si verifica quando l&quot;utente fa clic su di **aprire** o **salvare** pulsante nella finestra di dialogo file."
  remarks: "Per informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property, handling the FileOk event and using the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method. When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog> object. The selected files are displayed in the form. The <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method forces a repaint of the form for each graphics file opened. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method. When the example is running, display the dialog box by clicking the button.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#1](~/add/codesnippet/csharp/e-system.windows.forms.f_1_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#1](~/add/codesnippet/cpp/e-system.windows.forms.f_1_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Filter
  id: Filter
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta l&quot;oggetto corrente del file nome stringa di filtro che determina le scelte visualizzate in &quot;Salva come tipo di file&quot; o &quot;File di tipo&quot; casella nella finestra di dialogo."
  remarks: "Per ogni opzione di filtro, la stringa di filtro contiene una descrizione del filtro, seguita da verticale della barra (|) e il modello di filtro. Le stringhe per diverse opzioni di filtro sono separate da barre verticali.       Di seguito è riportato un esempio di una stringa di filtro: `Text files (*.txt)|*.txt|All files (*.*)|*.*` è possibile aggiungere più modelli a un filtro di filtro separando i tipi di file con un punto e virgola, ad esempio: `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*` utilizzare il <xref:System.Windows.Forms.FileDialog.FilterIndex%2A>proprietà per impostare l&quot;opzione di filtro che verrà visualizzata per prima per l&quot;utente.</xref:System.Windows.Forms.FileDialog.FilterIndex%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the Filter and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_54_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_54_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_54_1.vb)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Il file di opzioni disponibili nella finestra di dialogo filtro."
  overload: System.Windows.Forms.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Filter</code>formato non valido."
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FilterIndex
  id: FilterIndex
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta l&quot;indice del filtro attualmente selezionato nella finestra di dialogo file."
  remarks: "Utilizzare la proprietà FilterIndex impostare opzione di filtro che viene visualizzata per prima per l&quot;utente. È inoltre possibile utilizzare il valore di FilterIndex dopo la visualizzazione finestra di dialogo file per eseguire operazioni sui file speciale in base al filtro prescelto.      > [!NOTE] > Il valore di indice della prima voce di filtro è 1."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and FilterIndex properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_0_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_0_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_0_1.vb)]"
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "Valore contenente l&quot;indice del filtro attualmente selezionato nella finestra di dialogo file. Il valore predefinito è 1."
  overload: System.Windows.Forms.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Definisce la routine di hook della finestra di dialogo comune di cui viene eseguito l&quot;override per aggiungere funzionalità specifiche per la finestra di dialogo file."
  remarks: "Una routine di hook consente all&quot;utente di connettere o inserire altre routine in una routine o l&quot;applicazione allo scopo di debug o di miglioramento della funzionalità.       Per impostazione predefinita, la routine di hook Centra la finestra di dialogo sullo schermo in risposta a un messaggio WM_INITDIALOG."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "Handle di finestra di dialogo."
    - id: msg
      type: System.Int32
      description: "Il messaggio ricevuto nella finestra di dialogo."
    - id: wparam
      type: System.IntPtr
      description: "Informazioni aggiuntive sul messaggio."
    - id: lparam
      type: System.IntPtr
      description: "Informazioni aggiuntive sul messaggio."
    return:
      type: System.IntPtr
      description: "Restituisce zero se la routine predefinita della finestra di dialogo Elabora il messaggio. Restituisce un valore diverso da zero se la routine predefinita della finestra di dialogo ignora il messaggio."
  overload: System.Windows.Forms.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta la directory iniziale visualizzata nella finestra di dialogo file."
  remarks: "La proprietà InitialDirectory è in genere impostata utilizzando una delle seguenti origini:-un percorso utilizzato in precedenza nel programma, ad esempio mantenuto l&quot;ultima operazione di directory o file.      -Un percorso di lettura da un&quot;origine persistente, ad esempio un&quot;impostazione dell&quot;applicazione, un <xref:Microsoft.Win32.Registry>o una stringa di risorsa nell&quot;applicazione.</xref:Microsoft.Win32.Registry>      -Percorsi utente e di sistema standard di Windows, ad esempio i file di programma, documenti, musica e così via (che è possibile ottenere utilizzando la <xref:System.Environment.GetFolderPath%2A>(metodo))-un percorso correlato all&quot;applicazione corrente, ad esempio la directory di avvio (che è possibile ottenere utilizzando le proprietà di <xref:System.Windows.Forms.Application>oggetto).</xref:System.Windows.Forms.Application> </xref:System.Environment.GetFolderPath%2A>       Per ulteriori informazioni sulla creazione di percorsi dinamici, vedere il <xref:System.Windows.Forms.FileDialog>Cenni preliminari sulla classe.</xref:System.Windows.Forms.FileDialog>       In [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)], se InitialDirectory è impostata su un nome completo del file anziché un percorso di directory, si utilizzerà la directory iniziale per il percorso dell&quot;applicazione o alla directory da cui l&quot;utente selezionato l&quot;ultima volta un file."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the InitialDirectory property to set what the initial directory is when the dialog box is displayed to the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_30_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_30_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_30_1.vb)]"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "La directory iniziale visualizzata nella finestra di dialogo file. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Instance
  id: Instance
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene l&quot;handle dell&quot;istanza Win32 per l&quot;applicazione."
  syntax:
    content: protected virtual IntPtr Instance { get; }
    return:
      type: System.IntPtr
      description: "Handle dell&quot;istanza Win32 per l&quot;applicazione."
  overload: System.Windows.Forms.FileDialog.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Genera il <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> evento."
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Oggetto <xref:System.ComponentModel.CancelEventArgs>che contiene i dati dell&quot;evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Options
  id: Options
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene i valori per inizializzare il <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>."
  remarks: "La proprietà Options corrisponde ai flag utilizzati per inizializzare una finestra di dialogo con Win32. Utilizzare le proprietà della <xref:System.Windows.Forms.FileDialog>classe per ottenere e impostare le opzioni.</xref:System.Windows.Forms.FileDialog>"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "Combinazione bit per bit di valori interni che inizializza il <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Reset
  id: Reset
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Reimposta tutte le proprietà sui valori predefiniti."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Windows.Forms.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo Ripristina la directory nella directory precedentemente selezionata prima della chiusura."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the RestoreDirectory property to ensure that the previously selected directory is restored when the dialog box is closed. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_5_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_5_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_5_1.vb)]"
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo Ripristina la directory corrente alla directory selezionata in precedenza, se l&quot;utente cambia directory durante la ricerca di file; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifica una finestra di dialogo comune."
  remarks: "Questo metodo fornisce un&quot;implementazione di <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>e viene richiamato quando l&quot;utente della finestra di dialogo file richiama <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.</xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> </xref:System.Windows.Forms.CommonDialog.RunDialog%2A>       Nelle classi derivate <xref:System.Windows.Forms.OpenFileDialog>e <xref:System.Windows.Forms.SaveFileDialog>un nome di file non valido <xref:System.Exception>può essere generato.</xref:System.Exception> </xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: protected override bool RunDialog (IntPtr hWndOwner);
    parameters:
    - id: hWndOwner
      type: System.IntPtr
      description: "Un valore che rappresenta l&quot;handle della finestra proprietaria per la finestra di dialogo comune."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il file potrebbe essere aperto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ShowHelp
  id: ShowHelp
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se il **Guida** pulsante viene visualizzato nella finestra di dialogo file."
  remarks: "A <xref:System.Windows.Forms.Control.HelpRequested>evento viene generato quando l&quot;utente sceglie il **Guida** pulsante.</xref:System.Windows.Forms.Control.HelpRequested>"
  syntax:
    content: public bool ShowHelp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo include un pulsante della Guida. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.ShowHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  id: SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta se la finestra di dialogo supporta la visualizzazione e il salvataggio di file con più estensioni di file."
  remarks: "In alcuni casi gli utenti devono aprire e salvare i file che utilizzano più estensioni di file. Ad esempio, i file. manifesto dell&quot;applicazione utilizzati per il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] tecnologia distribuzione terminano l&quot;estensione del nome file complesso &quot;. manifest&quot;. Impostando questa proprietà su `true` consente di impostare il <xref:System.Windows.Forms.FileDialog.Filter%2A>proprietà a un&quot;estensione di più punti.</xref:System.Windows.Forms.FileDialog.Filter%2A>       Se SupportMultiDottedExtensions `false`, e si assegna un&quot;estensione più punti a <xref:System.Windows.Forms.FileDialog.Filter%2A>, ad esempio i controlli derivati <xref:System.Windows.Forms.SaveFileDialog>utilizzeranno solo l&quot;ultima estensione della stringa.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.FileDialog.Filter%2A> Ad esempio, verrà utilizzato &quot;manifest&quot; anziché &quot;. manifest&quot;."
  example:
  - "The following code example saves files with the extension \".data.txt\". This code example requires that your application host a <xref:System.Windows.Forms.SaveFileDialog> named `saveFileDialog1` and a <xref:System.Windows.Forms.Button> named `button1`.  \n  \n [!code-cs[SupportMultiDottedExtensions#1](~/add/codesnippet/csharp/TestSaveFileDialog/Form1.cs#1)]\n [!code-vb[SupportMultiDottedExtensions#1](~/add/codesnippet/visualbasic/TestSaveFileDialogVB/Form1.vb#1)]"
  syntax:
    content: public bool SupportMultiDottedExtensions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo supporta più estensioni di nome di file; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Title
  id: Title
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta il titolo della finestra di dialogo file."
  remarks: "La stringa viene inserita nella barra del titolo della finestra di dialogo. Se il titolo è una stringa vuota, il sistema utilizza un titolo predefinito, ovvero &quot;Salva con nome&quot; o &quot;Apri&quot;."
  example:
  - "The following code example demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the Title and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=fullName> property to true. To run this example, paste the following code in a form containing an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1` and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializeOpenFileDialog` method in the form's constructor or `Load` method. The example also requires that the `Click` event of the `Button` control is connected to the event handler defined in the example.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#6](~/add/codesnippet/csharp/p-system.windows.forms.f_25_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#6](~/add/codesnippet/cpp/p-system.windows.forms.f_25_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#6](~/add/codesnippet/visualbasic/p-system.windows.forms.f_25_1.vb)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Il titolo della finestra di dialogo dei file. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ToString
  id: ToString
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Fornisce una stringa di versione di questo oggetto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Versione stringa dell&quot;oggetto."
  overload: System.Windows.Forms.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ValidateNames
  id: ValidateNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo accetta soltanto nomi file Win32 validi."
  remarks: "Se il controllo di modifica contiene esclusivamente spazi quando l&quot;utente fa clic **OK**, la finestra di dialogo restituisce il nome di file, se non è valido o non. Nessuna estensione predefinito viene aggiunto al testo."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la finestra di dialogo accetta soltanto nomi file Win32 validi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.CommonDialog
  isExternal: false
  name: System.Windows.Forms.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.FileDialog.AddExtension
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialogCustomPlacesCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FileDialogCustomPlacesCollection
  nameWithType: FileDialogCustomPlacesCollection
  fullName: System.Windows.Forms.FileDialogCustomPlacesCollection
- uid: System.Windows.Forms.FileDialog.DefaultExt
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.EventFileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.FileDialog.FileName
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.FileDialog.FileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.FileDialog.Filter
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.FileDialog.Options
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
- uid: System.Windows.Forms.FileDialog.ShowHelp
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
- uid: System.Windows.Forms.FileDialog.ValidateNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
- uid: System.Windows.Forms.FileDialog.AddExtension*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialog.DefaultExt*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: System.Windows.Forms.FileDialog.DereferenceLinks*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.FileName*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: System.Windows.Forms.FileDialog.Filter*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: System.Windows.Forms.FileDialog.HookProc*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: System.Windows.Forms.FileDialog.InitialDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: System.Windows.Forms.FileDialog.Options*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: System.Windows.Forms.FileDialog.RestoreDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: System.Windows.Forms.FileDialog.ShowHelp*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: System.Windows.Forms.FileDialog.ValidateNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
