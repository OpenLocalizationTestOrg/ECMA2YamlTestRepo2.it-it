### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.EnvelopedSignatureReader
  id: EnvelopedSignatureReader
  children:
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Read
  - System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  - System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  langs:
  - csharp
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader
  fullName: System.IdentityModel.EnvelopedSignatureReader
  type: Class
  summary: "Esegue il wrapping di un lettore che punta al documento XML firmato protetta per fornire un lettore che può essere usato per leggere il contenuto senza la necessità di elaborare la firma. La firma verrà convalidata automaticamente quando viene letto l&quot;ultimo elemento della busta. Questa classe non può essere ereditata."
  syntax:
    content: 'public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader'
  inheritance:
  - System.Xml.XmlDictionaryReader
  - System.IdentityModel.DelegatingXmlDictionaryReader
  implements: []
  inheritedMembers:
  - System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount
  - System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.Close
  - System.IdentityModel.DelegatingXmlDictionaryReader.Depth
  - System.IdentityModel.DelegatingXmlDictionaryReader.EOF
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.HasValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)
  - System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.LocalName
  - System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.Name
  - System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.NameTable
  - System.IdentityModel.DelegatingXmlDictionaryReader.NodeType
  - System.IdentityModel.DelegatingXmlDictionaryReader.Prefix
  - System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadState
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity
  - System.IdentityModel.DelegatingXmlDictionaryReader.Value
  - System.IdentityModel.DelegatingXmlDictionaryReader.ValueType
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> classe utilizzando il lettore specificato e il serializzatore di token di sicurezza."
  remarks: "Viene chiamato il costruttore di <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>con i parametri aggiuntivi seguenti: | Nome del parametro | Valore |   |--------------------|-----------|   | `signingTokenResolver`|`null`|   | `requireSignature`|`true`|   | `automaticallyReadSignature`|`true`|   | `resolveIntrinsicSigningKeys`|`true`|</xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore che fa riferimento il protetta firma XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il serializzatore di token da utilizzare per deserializzare il <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> della firma."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> classe utilizzando il lettore specificato, un serializzatore di token di sicurezza e un resolver dei token."
  remarks: "Viene chiamato il costruttore di <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>con i parametri aggiuntivi seguenti: | Nome del parametro | Valore |   |--------------------|-----------|   | `requireSignature`|`true`|   | `automaticallyReadSignature`|`true`|   | `resolveIntrinsicSigningKeys`|`true`|</xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore che fa riferimento il protetta firma XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il serializzatore di token da utilizzare per deserializzare il <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> della firma."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Il resolver del token da utilizzare per risolvere il token di firma. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Specifica che deve essere utilizzato un resolver dei token di sicurezza predefinito."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> classe utilizzando il lettore specificato, serializzatore di token di sicurezza, un resolver dei token e comportamento."
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore che fa riferimento il protetta firma XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il serializzatore di token da utilizzare per deserializzare il <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> della firma."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Il resolver del token da utilizzare per risolvere il token di firma. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Specifica che deve essere utilizzato un resolver dei token di sicurezza predefinito."
    - id: requireSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma è obbligatoria. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: automaticallyReadSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma deve essere letto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: resolveIntrinsicSigningKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le chiavi di firma intrinseche devono essere risolto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  id: Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Legge il nodo successivo dal flusso."
  remarks: "Controlla se la fine della busta viene raggiunto e convalida la firma, se il `requireSignature` parametro è stato specificato `true` nel costruttore. Se il lettore ottiene posizionato su un `<Signature>` elemento, la firma intera viene letto in se il `automaticallyReadSignature` parametro è stato specificato `true` nel costruttore."
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo successivo è stato letto correttamente. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se non sono presenti più nodi."
  overload: System.IdentityModel.EnvelopedSignatureReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene le credenziali di firma che vengono usate nella firma, dopo aver utilizzata la busta e quando la firma è convalidata."
  syntax:
    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Le credenziali di firma."
  overload: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  id: TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Legge la firma, se il lettore è attualmente posizionato in un <xref uid=&quot;langword_csharp_&lt;Signature&gt;&quot; name=&quot;&lt;Signature&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Se il lettore è attualmente posizionato un `<Signature>` elemento, richiama il <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>metodo per leggere la firma.</xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>"
  syntax:
    content: public bool TryReadSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma è stato letto correttamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.DelegatingXmlDictionaryReader
  isExternal: false
  name: System.IdentityModel.DelegatingXmlDictionaryReader
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose
  nameWithType: EnvelopedSignatureReader.Dispose
- uid: System.IdentityModel.EnvelopedSignatureReader.Read*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read
  nameWithType: EnvelopedSignatureReader.Read
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature
  nameWithType: EnvelopedSignatureReader.TryReadSignature
