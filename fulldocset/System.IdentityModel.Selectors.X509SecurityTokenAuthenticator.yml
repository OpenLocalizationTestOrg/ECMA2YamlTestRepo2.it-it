### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  id: X509SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  type: Class
  summary: "Autentica un <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>."
  remarks: "Utilizzare la classe X509SecurityTokenAuthenticator per autenticare <xref:System.IdentityModel.Tokens.X509SecurityToken>i token di sicurezza.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe."
  remarks: "Quando il <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo viene chiamato per autenticare il token, il certificato x.&509; non è mappato a un&quot;identità Windows e il certificato viene convalidato utilizzando una catena di certificati.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe utilizzando il validator del certificato specificato."
  remarks: "La <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe fornisce un set di certificato predefinito i modelli di convalida, ad esempio il <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>proprietà.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Questi modelli di convalida possono essere passati al `validator` parametro. Quando un&quot;applicazione richiede un metodo di convalida personalizzato, derivare una classe da <xref:System.IdentityModel.Selectors.X509CertificateValidator>ed eseguire l&quot;override di <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Il <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo viene chiamato dal <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Per impostazione predefinita, il <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>non è mappato il certificato x.&509; a un&quot;identità Windows.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Oggetto <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> che verifica che il certificato è valido."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe utilizzando il metodo di convalida del certificato specificato e indica se l&quot;identità del certificato è associata a un&quot;identità Windows."
  remarks: "La <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe fornisce un set di certificato predefinito i modelli di convalida, ad esempio il <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>proprietà.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Questi modelli di convalida possono essere passati al `validator` parametro. Quando un&quot;applicazione richiede un metodo di convalida personalizzato, derivare una classe da <xref:System.IdentityModel.Selectors.X509CertificateValidator>ed eseguire l&quot;override di <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Il <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo viene chiamato dal <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Quando il <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo viene chiamato per autenticare il token e `mapToWindows` è `true`, il certificato x.&509; viene associato a un account di Windows e vengono aggiunte attestazioni al <xref:System.IdentityModel.Policy.EvaluationContext>con i gruppi di Windows a cui appartiene l&quot;utente.</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> Il certificato x.&509; viene eseguito il mapping a un account Windows dipende il tipo di token di sicurezza:: quando il token di sicurezza è di tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, il certificato x.&509; viene associato usando il <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>proprietà.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>      -Quando il token di sicurezza è di tipo `X509SecurityToken`, il certificato x.&509; viene associato a un account di Windows utilizzando il nome dell&quot;entità utente (UPN)."
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Oggetto <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> che verifica che il certificato è valido."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per associare l&quot;identità del certificato a un&quot;identità Windows. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe utilizzando il metodo di convalida del certificato specificato e indica se l&quot;identità del certificato è associata a un&quot;identità Windows e i gruppi di Windows l&quot;utente appartiene a."
  remarks: "Passare `false` per il `includeWindowsGroups` quando il gruppo di Windows le informazioni di parametro non è necessario per migliorare le prestazioni.       La <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe dispone di varie proprietà statiche, ad esempio il <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>proprietà che possono essere passati al `validator` parametro.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Queste proprietà forniscono metodi di convalida comuni per i certificati x.&509;. Quando un metodo di convalida personalizzato viene richiesto, derivare una classe da <xref:System.IdentityModel.Selectors.X509CertificateValidator>ed eseguire l&quot;override di <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Il <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo viene chiamato dal <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Quando `true` viene passato il `mapToWindows` parametro, il certificato x.&509; viene associato a un account di Windows e relative attestazioni vengono aggiunte al <xref:System.IdentityModel.Policy.EvaluationContext>, ad esempio i gruppi di Windows che l&quot;utente appartiene a.</xref:System.IdentityModel.Policy.EvaluationContext> Quando il token di sicurezza è di tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>proprietà utilizza l&quot;identità specificata nel token; in caso contrario, il certificato x.&509; viene eseguito il mapping a un&quot;identità Windows utilizzando un accesso Kerberos S4U basato sull&quot;estensione SubjectAltNames del nome dell&quot;entità utente del certificato x.&509;.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Oggetto <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> che verifica che il certificato è valido."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per associare l&quot;identità del certificato a un&quot;identità Windows. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i gruppi di Windows appartiene all&quot;utente di <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>proprietà costruita tramite il processo di autenticazione in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che indica se il token di sicurezza specificato può essere convalidato da questo autenticatore del token di sicurezza."
  remarks: "Il metodo CanValidateTokenCore non autentica il token di sicurezza. che viene eseguita mediante il <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metodo.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> da convalidare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando <code> token </code> è un <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> token di sicurezza o di una classe che deriva da <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  id: MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Ottiene un valore che indica se eseguire il mapping del certificato x.&509; a un account di Windows."
  remarks: "La proprietà MapCertificateToWindowsAccount può essere impostata solo in un costruttore.       Se viene utilizzata la sicurezza SSL o HTTPS a livello di trasporto e di mapping è già fornito dal canale di sicurezza sottostante o da Internet Information Services (IIS), tale mapping viene applicato senza alcuna convalida di catena. Prima di eseguire il mapping, in caso contrario, il certificato viene convalidato utilizzando una catena di certificati e il certificato deve essere concatenato a un&quot;identità NT_AUTHORITY. La struttura della catena usata corrisponde alla CERT_CHAIN_POLICY_NT_AUTH come definito nel `CertVerifyCertificateChainPolicy` funzione (vedere il [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) funzione nel SDK di crittografia). Questo comportamento si verifica solo quando il mapping di un certificato a un account di Windows."
  syntax:
    content: public bool MapCertificateToWindowsAccount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire il mapping del certificato x.&509; a un account di Windows. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Autentica il token di sicurezza specificato e restituisce il set di criteri di autorizzazione del token di sicurezza."
  remarks: "Quando viene eseguito l&quot;override di metodo ValidateTokenCore, seguire queste linee guida:: quando il token di sicurezza passato il `token` parametro non può essere convalidato, generare il <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>eccezione.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -Quando non sono presenti criteri di autorizzazione attivi per questa applicazione, restituire un vuota <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>di tipo <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       Quando `null` restituito da questo metodo, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] genera il <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>eccezione.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       Le chiamate al metodo ValidateTokenCore il <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metodo del metodo di convalida specificato nel costruttore per autenticare il `token` parametro.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> da convalidare."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Oggetto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; di tipo <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> che contiene il set di criteri di autorizzazione attivi per questa applicazione."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore
