### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInController
  id: AddInController
  children:
  - System.AddIn.Hosting.AddInController.AddInEnvironment
  - System.AddIn.Hosting.AddInController.AppDomain
  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  - System.AddIn.Hosting.AddInController.Shutdown
  - System.AddIn.Hosting.AddInController.Token
  langs:
  - csharp
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
  type: Class
  summary: "Fornisce l&quot;accesso a un componente aggiuntivo per un&quot;ampia gamma di attività."
  remarks: "Utilizzare questa classe per eseguire le attività seguenti:-utilizzare la <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>proprietà per ottenere un <xref:System.AddIn.Hosting.AddInEnvironment>oggetto per un componente aggiuntivo.</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> Utilizzare quindi tale oggetto per attivare altri componenti aggiuntivi nello stesso dominio applicazione e processo come il componente aggiuntivo originale.      -Utilizzare la <xref:System.AddIn.Hosting.AddInController.AppDomain%2A>proprietà per ottenere un <xref:System.AppDomain>oggetto per un componente aggiuntivo.</xref:System.AppDomain> </xref:System.AddIn.Hosting.AddInController.AppDomain%2A> Utilizzare quindi tale oggetto per attivare altri componenti aggiuntivi nello stesso dominio applicazione come il componente aggiuntivo originale. Si noti che a causa delle limitazioni in servizi remoti tra processi, questo scenario non funzionerà con i componenti aggiuntivi che vengono attivati in un processo separato.      -Utilizzare la <xref:System.AddIn.Hosting.AddInController.Token%2A>proprietà per ottenere un <xref:System.AddIn.Hosting.AddInToken>oggetto che rappresenta un componente aggiuntivo.</xref:System.AddIn.Hosting.AddInToken> </xref:System.AddIn.Hosting.AddInController.Token%2A>      -Arrestare un componente aggiuntivo con il <xref:System.AddIn.Hosting.AddInController.Shutdown%2A>metodo.</xref:System.AddIn.Hosting.AddInController.Shutdown%2A>       Per ottenere il controller per un componente aggiuntivo, chiamare il <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>(metodo) e passare un&quot;istanza del componente aggiuntivo come parametro.</xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>"
  example:
  - "The following example activates an add-in within the same environment as a previously activated add-in by using an AddInController object.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public sealed class AddInController
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  id: AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene un <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> oggetto."
  remarks: "Utilizzare questa proprietà per ottenere l&quot; <xref:System.AddIn.Hosting.AddInEnvironment>oggetto per un componente aggiuntivo.</xref:System.AddIn.Hosting.AddInEnvironment> Utilizzare quindi tale oggetto per attivare altri componenti aggiuntivi nello stesso dominio applicazione e processo come il componente aggiuntivo originale."
  example:
  - "The following example activates a second add-in within the same environment as the first add-in.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }
    return:
      type: System.AddIn.Hosting.AddInEnvironment
      description: "Oggetto che può essere utilizzato per attivare altri componenti aggiuntivi nello stesso ambiente il componente aggiuntivo originale."
  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AppDomain
  id: AppDomain
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene il dominio applicazione che contiene un componente aggiuntivo."
  remarks: "Utilizzare questa proprietà per ottenere un componente aggiuntivo <xref:System.AppDomain>oggetto e per attivare altri componenti aggiuntivi nello stesso dominio applicazione.</xref:System.AppDomain>"
  example:
  - "The following example activates a second add-in in the same application domain as the first add-in.  \n  \n [!code-vb[AddInP3Host#9](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#9)]\n [!code-cs[AddInP3Host#9](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#9)]"
  syntax:
    content: public AppDomain AppDomain { get; }
    return:
      type: System.AppDomain
      description: "Dominio applicazione del componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInController.AppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  id: GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene il controller di un componente aggiuntivo."
  remarks: "I <xref:System.AddIn.Hosting.AddInToken.Activate%2A>metodi restituiscono un oggetto che rappresenta la visualizzazione dell&quot;host del componente aggiuntivo.</xref:System.AddIn.Hosting.AddInToken.Activate%2A>"
  syntax:
    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);
    parameters:
    - id: addIn
      type: System.Object
      description: "La visualizzazione di host del componente aggiuntivo."
    return:
      type: System.AddIn.Hosting.AddInController
      description: "Il controller per il componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInController.GetAddInController*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Disabilita un componente aggiuntivo."
  remarks: "Questo metodo interrompe la pipeline di comunicazione tra un componente aggiuntivo e il relativo host. Se il componente aggiuntivo è stato attivato in un dominio dell&quot;applicazione generato automaticamente tramite il <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>o <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29>metodi, il metodo Shutdown scarica anche il dominio dell&quot;applicazione.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> </xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>       Se il componente aggiuntivo è stato caricato nel proprio dominio applicazione, il metodo Shutdown scarica anche il dominio dell&quot;applicazione.       Se il componente aggiuntivo è stato caricato in un dominio di applicazione esistente, i segmenti di host e della pipeline non disporrà più riferimenti a tale componente aggiuntivo. In questo caso, il componente aggiuntivo sarà idoneo a essere recuperata tramite garbage collection.       È inoltre possibile utilizzare questa classe per arrestare un componente aggiuntivo che viene attivato in un processo esterno."
  example:
  - "The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \n  \n [!code-vb[AddInCollectionPipelineHost#6](~/add/codesnippet/visualbasic/ListAdaptersHost/Program.vb#6)]\n [!code-cs[AddInCollectionPipelineHost#6](~/add/codesnippet/csharp/ListAdaptersHost/Program.cs#6)]"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.AddIn.Hosting.AddInController.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Token
  id: Token
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene il token che rappresenta il componente aggiuntivo."
  remarks: "In genere, si utilizza questa proprietà per ottenere un token per attivare un componente aggiuntivo in un secondo momento."
  syntax:
    content: public System.AddIn.Hosting.AddInToken Token { get; }
    return:
      type: System.AddIn.Hosting.AddInToken
      description: "Oggetto che rappresenta il componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInController.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
- uid: System.AddIn.Hosting.AddInController
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
- uid: System.AddIn.Hosting.AddInController.Token
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
- uid: System.AddIn.Hosting.AddInToken
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController
  nameWithType: AddInController.GetAddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown
  nameWithType: AddInController.Shutdown
- uid: System.AddIn.Hosting.AddInController.Token*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
