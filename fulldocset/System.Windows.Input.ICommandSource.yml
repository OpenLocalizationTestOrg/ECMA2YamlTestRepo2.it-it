### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommandSource
  id: ICommandSource
  children:
  - System.Windows.Input.ICommandSource.Command
  - System.Windows.Input.ICommandSource.CommandParameter
  - System.Windows.Input.ICommandSource.CommandTarget
  langs:
  - csharp
  name: ICommandSource
  nameWithType: ICommandSource
  fullName: System.Windows.Input.ICommandSource
  type: Interface
  summary: "Definisce un oggetto che sa come richiamare un comando."
  remarks: "L&quot;origine del comando definisce come un comando viene richiamato da un particolare oggetto.  Ad esempio, se un <xref:System.Windows.Controls.Button>è associata a un comando, il comando viene richiamato quando il <xref:System.Windows.Controls.Button>si fa clic su.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Button>       Un comando di origine verrà in genere disabilitata automaticamente se non è possibile eseguire il comando che è associato il comando sulla destinazione corrente.  Ad esempio, un <xref:System.Windows.Controls.MenuItem>associato il <xref:System.Windows.Input.ApplicationCommands.Paste%2A>comando verrà automaticamente visualizzati in grigio quando il <xref:System.Windows.Input.ApplicationCommands.Paste%2A>comando non è possibile eseguire il comando sulla destinazione corrente.</xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Controls.MenuItem>       In genere, un comando di origine resterà in ascolto il <xref:System.Windows.Input.ICommand.CanExecuteChanged>evento del comando.</xref:System.Windows.Input.ICommand.CanExecuteChanged>  Questo indica l&quot;origine del comando al variare delle condizioni nella destinazione di comando, ad esempio perdita di stato attivo della tastiera.  L&quot;origine del comando può quindi eseguire una query il comando utilizzando il <xref:System.Windows.Input.ICommand.CanExecute%2A>metodo.</xref:System.Windows.Input.ICommand.CanExecute%2A>       Alcune delle classi in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] che implementano ICommandSource sono: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>e <xref:System.Windows.Documents.Hyperlink>.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Primitives.ButtonBase>       Nel [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] dei comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A>proprietà su un ICommandSource è applicabile solo quando <xref:System.Windows.Input.ICommand>è un <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A>è impostata su un ICommandSource e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando viene ignorata.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>"
  syntax:
    content: public interface ICommandSource
  implements: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.Command
  id: Command
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene il comando che verrà eseguito quando viene richiamata l&quot;origine del comando."
  syntax:
    content: public System.Windows.Input.ICommand Command { get; }
    return:
      type: System.Windows.Input.ICommand
      description: "Il comando che verrà eseguito quando viene richiamata l&quot;origine del comando."
  overload: System.Windows.Input.ICommandSource.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandParameter
  id: CommandParameter
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Rappresenta il valore di dati che può essere passato al comando quando viene eseguita definito dall&quot;utente."
  remarks: "In genere, il parametro viene utilizzato per passare informazioni specifiche per il comando quando viene eseguita.  Il tipo di dati è definito dal comando."
  syntax:
    content: public object CommandParameter { get; }
    return:
      type: System.Object
      description: "Dati specifici del comando."
  overload: System.Windows.Input.ICommandSource.CommandParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandTarget
  id: CommandTarget
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Oggetto che viene eseguito il comando."
  remarks: "Nel [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] dei comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A>proprietà in un <xref:System.Windows.Input.ICommandSource>è applicabile solo quando <xref:System.Windows.Input.ICommand>è un <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A>è impostata su un <xref:System.Windows.Input.ICommandSource>e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando viene ignorata.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>       Quando si utilizza un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando è l&quot;oggetto in cui il <xref:System.Windows.Input.CommandManager.Executed>e <xref:System.Windows.Input.CommandManager.CanExecute>gli eventi vengono generati.</xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.RoutedCommand> Se la proprietà CommandTarget non è impostata, l&quot;elemento con stato attivo della tastiera da utilizzare come destinazione."
  syntax:
    content: public System.Windows.IInputElement CommandTarget { get; }
    return:
      type: System.Windows.IInputElement
      description: "Oggetto che viene eseguito il comando."
  overload: System.Windows.Input.ICommandSource.CommandTarget*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.ICommandSource.Command
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.ICommandSource.CommandParameter
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommandSource.CommandTarget
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.ICommandSource.Command*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
- uid: System.Windows.Input.ICommandSource.CommandParameter*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
- uid: System.Windows.Input.ICommandSource.CommandTarget*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
