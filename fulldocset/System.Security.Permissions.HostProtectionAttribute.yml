### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.HostProtectionAttribute
  id: HostProtectionAttribute
  children:
  - System.Security.Permissions.HostProtectionAttribute.#ctor
  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.HostProtectionAttribute.CreatePermission
  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  - System.Security.Permissions.HostProtectionAttribute.Resources
  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  - System.Security.Permissions.HostProtectionAttribute.SharedState
  - System.Security.Permissions.HostProtectionAttribute.Synchronization
  - System.Security.Permissions.HostProtectionAttribute.UI
  langs:
  - csharp
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute
  fullName: System.Security.Permissions.HostProtectionAttribute
  type: Class
  summary: "Consente l&quot;uso di azioni di sicurezza dichiarativa per determinare i requisiti di protezione host. Questa classe non può essere ereditata."
  remarks: "Questo attributo interessa solo le applicazioni non gestite che ospitano il common language runtime e implementare la protezione host, come ad esempio SQL Server. Se il codice viene eseguito in un&quot;applicazione client o in un server che non sia protetto da host, l&quot;attributo &quot;non ha alcun effetto&quot;; non viene rilevato e pertanto non è applicata. Quando viene applicato, i risultati di azioni di sicurezza per la creazione di una richiesta di collegamento basato sulle risorse host espone una classe o metodo.      > [!IMPORTANT] > Lo scopo di questo attributo è per applicare host modello le indicazioni di programmazione, non il comportamento di sicurezza.  Anche se una richiesta di collegamento viene utilizzata per verificare la conformità ai requisiti del modello di programmazione, il HostProtectionAttribute non è un&quot;autorizzazione di sicurezza.       Se l&quot;host non dispone di requisiti del modello di programmazione, non si verificano le richieste di collegamento.       Questo attributo identifica le operazioni seguenti:-metodi o classi che non si adattano l&quot;host di programmazione del modello, ma sono altrimenti innocui.      -Metodi o classi che non si adattano il modello di programmazione host e può portare a destabilizzare il codice utente gestito dal server.      -Metodi o classi che non si adattano l&quot;host di programmazione del modello e potrebbe causare una destabilizzazione del processo del server stesso.      > [!NOTE] > Se si sta creando una libreria di classi che deve essere chiamato dalle applicazioni che possono essere eseguite in un ambiente host protetto, è necessario applicare questo attributo per i membri che espongono <xref:System.Security.Permissions.HostProtectionResource>categorie di risorse.</xref:System.Security.Permissions.HostProtectionResource> I membri di libreria di classi .NET Framework con l&quot;attributo che solo il chiamante immediato da controllare.  Il membro della libreria deve essere causato anche un controllo del chiamante immediato nello stesso modo.      > [!NOTE] > Non utilizzano il [Ngen.exe (Native Image Generator)](~/add/includes/ajax-current-ext-md.md) per creare un&quot;immagine nativa di assembly che sono protetti mediante il HostProtectionAttribute. In un ambiente completamente attendibile, l&quot;immagine viene sempre caricato, indipendentemente dalle HostProtectionAttribute, e in un ambiente parzialmente attendibile non viene caricata l&quot;immagine."
  example:
  - "The following code example illustrates the use of the HostProtectionAttribute attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/csharp/t-system.security.permis_7_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/cpp/t-system.security.permis_7_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/visualbasic/t-system.security.permis_7_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;> </xref> classe con i valori predefiniti."
  remarks: "Questo costruttore crea un <xref:System.Security.Permissions.HostProtectionAttribute>con tutte le proprietà booleane impostate `false`.</xref:System.Security.Permissions.HostProtectionAttribute>"
  syntax:
    content: public HostProtectionAttribute ();
    parameters: []
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.HostProtectionAttribute&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valore."
  remarks: "Questo costruttore non deve essere utilizzato. Serve per l&quot;uso di infrastruttura."
  syntax:
    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Uno del <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valori."
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code>is not <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una nuova autorizzazione di sicurezza host."
  remarks: "Questo metodo deve essere chiamato solo dal sistema di sicurezza, mai dal codice dell&quot;applicazione.       In fase di compilazione, gli attributi convertono le dichiarazioni di sicurezza in un formato serializzato nei metadati. Dati di sicurezza dichiarativa nei metadati vengono creati dall&quot;autorizzazione corrispondente per l&quot;attributo che questo metodo restituisce."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Un <xref href=&quot;System.Security.IPermission&quot;> </xref> che corrisponde all&quot;attributo corrente."
  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  id: ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposta la gestione esterna del processo."
  remarks: "Il codice che espone gestione esterna del processo potrebbe creare o eliminare altri processi."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/csharp/p-system.security.permis_2_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/cpp/p-system.security.permis_2_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/visualbasic/p-system.security.permis_2_1.vb)]"
  syntax:
    content: public bool ExternalProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposta la gestione esterna del processo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  id: ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposto il threading esterno."
  remarks: "Il codice che espone il threading esterno Crea o modifica thread diverso dal proprio, che potrebbero essere dannosi per l&quot;host."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_8_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_8_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_8_1.vb)]"
  syntax:
    content: public bool ExternalThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposto il threading esterno; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  id: MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se le risorse potrebbero determinare una perdita di memoria se al termine dell&quot;operazione."
  remarks: "Codice potrebbe causare una perdita di risorse al termine, se non è protetto da un handle sicuro o in altro modo per garantire il rilascio delle risorse."
  syntax:
    content: public bool MayLeakOnAbort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le risorse potrebbero determinare una perdita di memoria al termine; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  id: Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta i flag che specificano categorie di funzionalità potenzialmente dannose per l&quot;host."
  remarks: "Il <xref:System.Security.Permissions.HostProtectionResource>specificano le risorse esposte dal metodo o della classe che sono potenzialmente dannose per l&quot;host.</xref:System.Security.Permissions.HostProtectionResource>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Resources property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_17_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_17_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_17_1.vb)]"
  syntax:
    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }
    return:
      type: System.Security.Permissions.HostProtectionResource
      description: "Combinazione bit per bit di <xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.Security.Permissions.HostProtectionResource&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.Resources*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  id: SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposta l&quot;infrastruttura di sicurezza."
  remarks: "L&quot;utilizzo di un <xref:System.Security.Principal.WindowsIdentity>oggetto per rappresentare un utente è un esempio di esposizione dell&quot;infrastruttura di sicurezza.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SecurityInfrastructure property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/csharp/p-system.security.permis_19_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/cpp/p-system.security.permis_19_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/visualbasic/p-system.security.permis_19_1.vb)]"
  syntax:
    content: public bool SecurityInfrastructure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposta l&quot;infrastruttura di sicurezza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  id: SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposta la gestione dei processi con effetti diretti."
  remarks: "Codice di gestione del processo con effetti diretti potrebbe arrestare il processo corrente, il server verrà terminato."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_26_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_26_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_26_1.vb)]"
  syntax:
    content: public bool SelfAffectingProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposta gestione dei processi con effetti diretti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  id: SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposto il threading con effetti."
  remarks: "Threading con effetti diretti modifica i thread in modo che influisce solo sul codice utente."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_3_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_3_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_3_1.vb)]"
  syntax:
    content: public bool SelfAffectingThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposto il threading con effetti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  id: SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposto lo stato condiviso."
  remarks: "Quando SharedState è `true`, indica che viene esposto uno stato che potrebbe essere condivisa tra thread."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SharedState property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_15_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_15_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_15_1.vb)]"
  syntax:
    content: public bool SharedState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposto lo stato condiviso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  id: Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposta la sincronizzazione."
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Synchronization property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_4_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_4_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_4_1.vb)]"
  syntax:
    content: public bool Synchronization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposta la sincronizzazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  id: UI
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se viene esposta l&quot;interfaccia utente."
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the UI property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_12_1.cs)]\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_12_1.cpp)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_12_1.vb)]"
  syntax:
    content: public bool UI { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene esposta l&quot;interfaccia utente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.HostProtectionAttribute.UI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: System.Security.Permissions.HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionResource
  parent: System.Security.Permissions
  isExternal: false
  name: HostProtectionResource
  nameWithType: HostProtectionResource
  fullName: System.Security.Permissions.HostProtectionResource
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: System.Security.Permissions.HostProtectionAttribute.UI
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute.HostProtectionAttribute
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: HostProtectionAttribute.CreatePermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
