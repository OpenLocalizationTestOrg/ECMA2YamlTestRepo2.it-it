### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable
  id: IWebEditable
  children:
  - System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  langs:
  - csharp
  name: IWebEditable
  nameWithType: IWebEditable
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable
  type: Interface
  summary: "Fornisce un&quot;interfaccia per gli sviluppatori di specificare i controlli di modifica personalizzati sono associati un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "L&quot;interfaccia IWebEditable consente di associare personalizzato <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli a un controllo server, ad esempio un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, un controllo utente o un controllo server personalizzato.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> Il <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli sono contenuti in un <xref:System.Web.UI.WebControls.WebParts.EditorZone>controllo e questa zona con i relativi controlli di modifica fornisce agli utenti finali con un&quot;interfaccia utente (UI) per la modifica di proprietà, l&quot;aspetto e comportamento associato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       L&quot;interfaccia IWebEditable include due membri esposti. Il <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>proprietà fornisce un modo per <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli per ottenere un riferimento al controllo server associato.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> Il <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>metodo viene utilizzato per creare un&quot;istanza di ogni personalizzata <xref:System.Web.UI.WebControls.WebParts.EditorPart>controllo associata a un server di controllo e restituirle come raccolta.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>       L&quot;interfaccia IWebEditable è già implementata nella <xref:System.Web.UI.WebControls.WebParts.WebPart>classe, anche se per impostazione predefinita questa implementazione non associare qualsiasi personalizzati <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli con la <xref:System.Web.UI.WebControls.WebParts.WebPart>classe</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> di base Per associare un oggetto derivato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo con personalizzato <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli, è possibile eseguire l&quot;override di <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to override the methods of the IWebEditable interface in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, which then creates an instance of a custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control when the <xref:System.Web.UI.WebControls.WebParts.WebPart> control enters edit mode.  \n  \n This example has four parts:  \n  \n-   The code for the custom class.  \n  \n-   The Web page that hosts the custom control.  \n  \n-   A user control that switches the page into edit mode.  \n  \n-   A description of how the example works in a browser.  \n  \n The first part of the code example is the custom `TextDisplayWebPart` class. Notice that the class derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and implements the IWebEditable interface, providing specific implementations for the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method and the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> property. Notice also that nested within the `TextDisplayWebPart` class is a private, custom `TextDisplayEditorPart` class that derives from the base <xref:System.Web.UI.WebControls.WebParts.EditorPart> class. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebEditable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_1.cs)]  \n  \n The second part of the code example is a Web page that hosts the custom control. Notice that although an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control is declared in the markup of the page, the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control need not be referenced there, because it can be added programmatically at run time.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_2.aspx)]\n [!code-cs[WebParts_IWebEditable_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_2.aspx)]  \n  \n The third part of the code example is a user control that enables a user to switch the page into edit mode. Notice that the user control is referenced in the hosting Web page. For a full description of how to create this user control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebEditable_Overview#8](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_3.ascx)]\n [!code-vb[WebParts_IWebEditable_Overview#8](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_3.ascx)]  \n  \n To run the code example, load the hosting Web page in a browser, add some text to the text box, and click the **Set Label Content** button to update the label in the control. To switch the page into edit mode, select **Edit** from the drop-down list containing the display modes. To display the UI from the custom `TextDisplayEditorPart` control, click the verbs menu drop-down arrow on the `TextDisplayWebPart` control, and select **Edit**. In the editing UI, you can use the drop-down list containing the font styles to update the text style for the label in the `TextDisplayWebPart` control. You must click **Browse Mode** in the display modes drop-down list to return the page to normal view and confirm that the text in the label now has the font style you selected while in edit mode."
  syntax:
    content: public interface IWebEditable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Restituisce una raccolta di personalizzato <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlli associati a un controllo server che implementa il <xref href=&quot;System.Web.UI.WebControls.WebParts.IWebEditable&quot;> </xref> interfaccia."
  remarks: "Il metodo CreateEditorParts consente di creare una raccolta di tutti i personalizzata <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli associati al controllo personalizzato, <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo o utente di controllare e restituirle come un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>oggetto.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo accetta la raccolta e crea istanze di tutti i <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli ogni volta che il controllo server passa alla modalità di modifica.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       In genere si implementa questo metodo in un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo eseguendo l&quot;override relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Nel metodo, si creano istanze della classe personalizzata <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli che si desidera associare ai controlli, aggiungerli a un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>dell&quot;oggetto e quindi restituire tale oggetto.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart> La raccolta di <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli viene quindi assegnato al <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>proprietà del <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>fuso.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>      > [!NOTE] > Qualsiasi <xref:System.Web.UI.WebControls.WebParts.EditorPart>che viene aggiunto alla raccolta di <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli in un&quot;implementazione del metodo CreateEditorParts devono avere un valore assegnato alla proprietà ID, in caso contrario verrà generata un&quot;eccezione quando la raccolta viene assegnata al <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates an override of the CreateEditorParts method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the sample is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example contains both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Note that the override of the CreateEditorParts method creates an <xref:System.Collections.ArrayList> to collect one or more custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, and then uses the list to create the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_112_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/m-system.web.ui.webcontr_112_1.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "Un <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> che contiene la raccolta di personalizzata <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlli associati a un controllo server."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo, controllo utente o un controllo personalizzato che verrà modificato da <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controlli."
  remarks: "La proprietà WebBrowsableObject fornisce un modo per <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli per ottenere un riferimento ai controlli server a cui sono associate.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       Sebbene la proprietà è di sola lettura, il riferimento all&quot;oggetto che restituisce consente <xref:System.Web.UI.WebControls.WebParts.EditorPart>controlli per modificare i valori nel controllo del server.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how the WebBrowsableObject property can be overridden in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example overrides both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_329_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_329_1.cs)]"
  syntax:
    content: public object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "Un riferimento all&quot;oggetto per il controllo associato a un <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts
  nameWithType: IWebEditable.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
