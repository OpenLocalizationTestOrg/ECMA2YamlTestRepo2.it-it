### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IHierarchyData
  id: IHierarchyData
  children:
  - System.Web.UI.IHierarchyData.GetChildren
  - System.Web.UI.IHierarchyData.GetParent
  - System.Web.UI.IHierarchyData.HasChildren
  - System.Web.UI.IHierarchyData.Item
  - System.Web.UI.IHierarchyData.Path
  - System.Web.UI.IHierarchyData.Type
  langs:
  - csharp
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
  type: Interface
  summary: "Espone un nodo di una struttura di dati gerarchici, incluso l&quot;oggetto nodo e alcune proprietà che descrivono le caratteristiche del nodo. Il contenuto di oggetti che implementano l&quot;interfaccia IHierarchyData <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> raccolte e vengono utilizzati dall&quot;esplorazione del sito ASP.NET e i dati dai controlli origine."
  remarks: "L&quot;interfaccia IHierarchyData è implementata da classi che rappresentano i nodi di una struttura gerarchica e rilevare le relazioni gerarchiche per i nodi padre e figlio. Le classi che implementano l&quot;interfaccia IHierarchyData possono essere contenute nelle raccolte che implementano il <xref:System.Web.UI.IHierarchicalEnumerable>interfaccia.</xref:System.Web.UI.IHierarchicalEnumerable>"
  example:
  - "The following code example demonstrates how to implement the IHierarchyData interface with a class that wraps a <xref:System.IO.FileSystemInfo> object. The <xref:System.IO.FileSystemInfo> class is a good example of a hierarchical data node, which the IHierarchyData interface represents for ASP.NET hierarchical data source controls. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_0_1.vb)]  \n  \n The following code example demonstrates how to recursively iterate through an <xref:System.Web.UI.IHierarchicalEnumerable> collection, extract the IHierarchyData item from the enumerator using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method, and perform basic work with the data item.  \n  \n [!code-cs[System.Web.UI.IHierarchyData_1#1](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_0_2.aspx)]\n [!code-vb[System.Web.UI.IHierarchyData_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_0_2.aspx)]"
  syntax:
    content: public interface IHierarchyData
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.GetChildren
  id: GetChildren
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: GetChildren()
  nameWithType: IHierarchyData.GetChildren()
  fullName: System.Web.UI.IHierarchyData.GetChildren()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un oggetto di enumerazione che rappresenta tutti i nodi figlio del nodo gerarchico corrente."
  remarks: "È possibile utilizzare il <xref:System.Web.UI.IHierarchyData.HasChildren%2A>proprietà per determinare se il <xref:System.Web.UI.IHierarchyData>nodo presenta nodi figlio.</xref:System.Web.UI.IHierarchyData> </xref:System.Web.UI.IHierarchyData.HasChildren%2A>"
  example:
  - "The following code example demonstrates how to check the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the GetChildren method. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \n  \n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_3_1.cs)]\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_3_1.vb)]"
  syntax:
    content: public System.Web.UI.IHierarchicalEnumerable GetChildren ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchicalEnumerable
      description: "Un <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> raccolta di nodi figlio del nodo gerarchico corrente."
  overload: System.Web.UI.IHierarchyData.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.GetParent
  id: GetParent
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: GetParent()
  nameWithType: IHierarchyData.GetParent()
  fullName: System.Web.UI.IHierarchyData.GetParent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> oggetto che rappresenta il nodo padre del nodo gerarchico corrente."
  remarks: "Il <xref:System.Web.UI.IHierarchyData>interfaccia non definisce una proprietà HasParent, pertanto i chiamanti devono controllare il valore restituito del metodo GetParent per `null` per determinare se l&quot;oggetto corrente <xref:System.Web.UI.IHierarchyData>nodo è il nodo radice a cui appartiene il nodo della struttura di dati gerarchici.</xref:System.Web.UI.IHierarchyData> </xref:System.Web.UI.IHierarchyData>"
  example:
  - "The following code example demonstrates how to implement the GetParent method in a class that implements the <xref:System.Web.UI.IHierarchyData> interface. The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the GetParent method implementation checks the type of the <xref:System.IO.FileSystemInfo> object, and returns the appropriate parent object based on the type. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_1_1.vb)]"
  syntax:
    content: public System.Web.UI.IHierarchyData GetParent ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchyData
      description: "Un <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> oggetto che rappresenta il nodo padre del nodo gerarchico corrente."
  overload: System.Web.UI.IHierarchyData.GetParent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.HasChildren
  id: HasChildren
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: HasChildren
  nameWithType: IHierarchyData.HasChildren
  fullName: System.Web.UI.IHierarchyData.HasChildren
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Indica se il nodo di dati gerarchici che il <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> oggetto presenta nodi figlio."
  remarks: "La proprietà HasChildren è una proprietà che consente ai chiamanti di evitare la verifica il valore restituito di <xref:System.Web.UI.IHierarchyData.GetChildren%2A>metodo per `null`.</xref:System.Web.UI.IHierarchyData.GetChildren%2A> Se la proprietà HasChildren restituisce `true`, chiamare il <xref:System.Web.UI.IHierarchyData.GetChildren%2A>metodo per recuperare un <xref:System.Web.UI.IHierarchicalEnumerable>raccolta di nodi figlio.</xref:System.Web.UI.IHierarchicalEnumerable> </xref:System.Web.UI.IHierarchyData.GetChildren%2A>"
  example:
  - "The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <xref:System.Web.UI.IHierarchyData> object in a recursive data-binding method. The items in an <xref:System.Web.UI.IHierarchicalEnumerable> collection are enumerated, and for each an <xref:System.Web.UI.IHierarchyData> object is retrieved using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method. Finally, the HasChildren property is checked to determine whether to recurse. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> class.  \n  \n [!code-vb[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_3_1.vb)]\n [!code-cs[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_3_1.cs)]"
  syntax:
    content: public bool HasChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo corrente dispone di nodi figlio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.IHierarchyData.HasChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.Item
  id: Item
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: Item
  nameWithType: IHierarchyData.Item
  fullName: System.Web.UI.IHierarchyData.Item
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il nodo di dati gerarchici che il <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> oggetto rappresenta."
  remarks: "Benché molte classi che rappresentano i nodi di dati gerarchici, ad esempio la <xref:System.Web.SiteMapNode>classe, implementare il <xref:System.Web.UI.IHierarchyData>direttamente l&quot;interfaccia, altre classi possono agire solo come wrapper per una classe che implementa l&quot;interfaccia.</xref:System.Web.UI.IHierarchyData> </xref:System.Web.SiteMapNode> La proprietà dell&quot;elemento viene fornita per queste situazioni di progettazione, quando gli oggetti business sono funzionalmente equivalenti a un <xref:System.Web.UI.IHierarchyData>oggetto ma non possono essere riprogettati facilmente.</xref:System.Web.UI.IHierarchyData>"
  example:
  - "The following code example demonstrates how to access <xref:System.Web.UI.IHierarchyData> properties, check the type of an <xref:System.Web.UI.IHierarchyData> object using the <xref:System.Web.UI.IHierarchyData.Type%2A> property, and cast the object to perform more type-specific operations. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \n  \n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_1_1.cs)]\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_1_1.vb)]"
  syntax:
    content: public object Item { get; }
    return:
      type: System.Object
      description: "Un <xref:System.Object>oggetto del nodo di dati gerarchici.</xref:System.Object>"
  overload: System.Web.UI.IHierarchyData.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.Path
  id: Path
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: Path
  nameWithType: IHierarchyData.Path
  fullName: System.Web.UI.IHierarchyData.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il percorso gerarchico del nodo."
  remarks: "La proprietà Path può essere passata al <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>metodo per recuperare l&quot; <xref:System.Web.UI.HierarchicalDataSourceView>oggetto che corrisponde al nodo identificato dal percorso.</xref:System.Web.UI.HierarchicalDataSourceView> </xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>      > [!CAUTION] > Proprietà Path non deve contenere informazioni riservate sull&quot;ambiente host, in quanto potrebbero essere visualizzata in un controllo con associazione a dati al client."
  example:
  - "The following code example demonstrates how to implement the Path property in a class that implements the <xref:System.Web.UI.IHierarchyData> interface. The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the Path property implementation returns its file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_0_1.vb)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il percorso gerarchico relativo al nodo corrente.</xref:System.String>"
  overload: System.Web.UI.IHierarchyData.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchyData.Type
  id: Type
  parent: System.Web.UI.IHierarchyData
  langs:
  - csharp
  name: Type
  nameWithType: IHierarchyData.Type
  fullName: System.Web.UI.IHierarchyData.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il nome del tipo di <xref:System.Object>contenuti nel <xref:System.Web.UI.IHierarchyData.Item*>proprietà.</xref:System.Web.UI.IHierarchyData.Item*> </xref:System.Object>"
  remarks: "La proprietà di tipo non restituirà il <xref:System.Type?displayProperty=fullName>dell&quot;oggetto rappresentato un <xref:System.Web.UI.IHierarchyData>oggetto.</xref:System.Web.UI.IHierarchyData> </xref:System.Type?displayProperty=fullName> Restituisce un nome usato dai controlli con associazione a dati per distinguere tra gli elementi in una gerarchia con diverse proprietà associabili."
  example:
  - "The following code example demonstrates how to write the basic <xref:System.Web.UI.IHierarchyData> properties to an <xref:System.Web.HttpResponse> stream, then check the type of an <xref:System.Web.UI.IHierarchyData> object using the Type property and cast the object to perform more type-specific operations. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \n  \n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_2_1.cs)]\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_2_1.vb)]"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "Il nome del tipo di oggetto che il <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> oggetto rappresenta."
  overload: System.Web.UI.IHierarchyData.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IHierarchyData.GetChildren
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: GetChildren()
  nameWithType: IHierarchyData.GetChildren()
  fullName: System.Web.UI.IHierarchyData.GetChildren()
- uid: System.Web.UI.IHierarchicalEnumerable
  parent: System.Web.UI
  isExternal: false
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
- uid: System.Web.UI.IHierarchyData.GetParent
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: GetParent()
  nameWithType: IHierarchyData.GetParent()
  fullName: System.Web.UI.IHierarchyData.GetParent()
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Web.UI.IHierarchyData.HasChildren
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: HasChildren
  nameWithType: IHierarchyData.HasChildren
  fullName: System.Web.UI.IHierarchyData.HasChildren
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.IHierarchyData.Item
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Item
  nameWithType: IHierarchyData.Item
  fullName: System.Web.UI.IHierarchyData.Item
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.IHierarchyData.Path
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Path
  nameWithType: IHierarchyData.Path
  fullName: System.Web.UI.IHierarchyData.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IHierarchyData.Type
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Type
  nameWithType: IHierarchyData.Type
  fullName: System.Web.UI.IHierarchyData.Type
- uid: System.Web.UI.IHierarchyData.GetChildren*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: GetChildren
  nameWithType: IHierarchyData.GetChildren
- uid: System.Web.UI.IHierarchyData.GetParent*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: GetParent
  nameWithType: IHierarchyData.GetParent
- uid: System.Web.UI.IHierarchyData.HasChildren*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: HasChildren
  nameWithType: IHierarchyData.HasChildren
- uid: System.Web.UI.IHierarchyData.Item*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Item
  nameWithType: IHierarchyData.Item
- uid: System.Web.UI.IHierarchyData.Path*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Path
  nameWithType: IHierarchyData.Path
- uid: System.Web.UI.IHierarchyData.Type*
  parent: System.Web.UI.IHierarchyData
  isExternal: false
  name: Type
  nameWithType: IHierarchyData.Type
