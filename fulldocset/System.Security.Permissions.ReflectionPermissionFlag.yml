### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionFlag
  id: ReflectionPermissionFlag
  children:
  - System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  - System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  - System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
  type: Enum
  summary: "Specifica l&quot;utilizzo consentito del <xref href=&quot;System.Reflection&quot;> </xref> e <xref href=&quot;System.Reflection.Emit&quot;> </xref> gli spazi dei nomi."
  remarks: "Questa enumerazione viene utilizzata per la <xref:System.Security.Permissions.ReflectionPermission>e <xref:System.Security.Permissions.ReflectionPermissionAttribute>classi.</xref:System.Security.Permissions.ReflectionPermissionAttribute> </xref:System.Security.Permissions.ReflectionPermission> Se non <xref:System.Security.Permissions.ReflectionPermission>viene concesso, la reflection è consentita su tutti i tipi e membri, ma le operazioni di chiamata sono consentite solo tipi e membri visibili.</xref:System.Security.Permissions.ReflectionPermission> Per ulteriori informazioni, vedere [considerazioni sulla sicurezza per la Reflection](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Perché <xref:System.Security.Permissions.ReflectionPermission>può fornire l&quot;accesso ai membri di classe privata, è consigliabile concedere <xref:System.Security.Permissions.ReflectionPermission>al codice Internet solo con il flag RestrictedMemberAccess e non con qualsiasi altro flag.</xref:System.Security.Permissions.ReflectionPermission> </xref:System.Security.Permissions.ReflectionPermission>       Il flag RestrictedMemberAccess è stato introdotto nel [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]. Per utilizzare questo flag, l&quot;applicazione deve essere destinata la [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)] o versione successiva.      > [!IMPORTANT] > AllFlags non include il flag RestrictedMemberAccess. Per ottenere una maschera che include tutti i flag di questa enumerazione, è necessario utilizzare la combinazione di AllFlags con RestrictedMemberAccess.       A partire dal [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)], il flag ReflectionEmit non è più necessario per generare il codice, a meno che non vengano generati i simboli di debug. Per utilizzare questa funzionalità, l&quot;applicazione deve essere destinata la [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] o versione successiva.       A partire dal [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], il flag TypeInformation non è più necessario per la reflection su membri e tipi non pubblici; il flag è stato contrassegnato come obsoleto."
  example:
  - "The following example shows how to use the ReflectionPermissionFlag enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermission> class that represents the right to perform restricted member access. This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermission> class.  \n  \n For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/visualbasic/t-system.security.permis_18_1.vb)]\n [!code-cs[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/csharp/t-system.security.permis_18_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ReflectionPermissionFlag
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "<xref uid=&quot;langword_csharp_TypeInformation&quot; name=&quot;TypeInformation&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MemberAccess&quot; name=&quot;MemberAccess&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_ReflectionEmit&quot; name=&quot;ReflectionEmit&quot; href=&quot;&quot;></xref> are set. AllFlags non include RestrictedMemberAccess."
  syntax:
    content: AllFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Le operazioni di chiamata su tutti i membri sono consentite, indipendentemente dal set di autorizzazioni. Se questo flag non è impostato, le operazioni di chiamata sono consentite solo sui membri visibili."
  syntax:
    content: MemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Enumerazione di tipi e membri è consentita. Le operazioni di chiamata sono consentite in tipi e membri visibili."
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "È consentita la creazione di simboli di debug. A partire dal [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)], questo flag non è più necessario per generare il codice."
  syntax:
    content: ReflectionEmit
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Accesso al membro è disponibile per codice parzialmente attendibile. Codice parzialmente attendibile può accedere a tipi non pubblici e membri, ma solo se la concessione del codice parzialmente attendibile include tutte le autorizzazioni nel set di concessioni dell&quot;assembly che contiene i tipi non pubblici e i membri di cui si accede. Questo flag è una novità del [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]."
  syntax:
    content: RestrictedMemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Questo flag è obsoleto. Nessun flag è necessario per enumerare i tipi e membri ed esaminare i relativi metadati. In alternativa, usare NoFlags."
  syntax:
    content: TypeInformation
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
