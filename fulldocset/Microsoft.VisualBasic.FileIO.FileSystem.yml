### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.FileSystem
  id: FileSystem
  children:
  - Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  - Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.Drives
  - Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystem
  nameWithType: FileSystem
  fullName: Microsoft.VisualBasic.FileIO.FileSystem
  type: Class
  summary: "Fornisce proprietà e metodi per l&quot;utilizzo di unità, file e directory."
  remarks: "Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem` oggetto.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo | [Procedura: leggere file di testo](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo delimitato | [Procedura: leggere file di testo delimitato da virgole](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo a larghezza fissa | [Procedura: leggere file di testo a larghezza fissa](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo con più formati | [Procedura: leggere file di testo con più formati](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file binario | [Procedura: leggere da file binari](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo con un <xref:System.IO.StreamReader>|[ Procedura: leggere testo da file con un oggetto StreamReader](~/add/includes/ajax-current-ext-md.md)|   | Scrivere in un file di testo | [Procedura: scrivere testo in file](~/add/includes/ajax-current-ext-md.md)|   | Aggiungere un file di testo | [Procedura: aggiungere testo a file](~/add/includes/ajax-current-ext-md.md)|   | Scrivere in un file binario | [Procedura: scrivere file binari](~/add/includes/ajax-current-ext-md.md)|   | Scrivere in file di testo di **documenti** directory |[ Procedura: scrivere testo in file di Directory documenti](~/add/includes/ajax-current-ext-md.md)|   | Scrivere in un file di testo con un `StreamWriter` | [procedura: scrivere testo in file con un oggetto StreamWriter](~/add/includes/ajax-current-ext-md.md)|   | Copiare i file con un criterio specifico | [Procedura: copiare file con un criterio specifico in una Directory](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file nella stessa directory | [Procedura: creare una copia di un File nella stessa Directory](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file in una directory diversa | [Procedura: creare una copia di un File in una Directory diversa](~/add/includes/ajax-current-ext-md.md)|   | Creare un file | [Procedura: creare un File](~/add/includes/ajax-current-ext-md.md)|   | Eliminare un file | [Procedura: eliminare un File](~/add/includes/ajax-current-ext-md.md)|   | Trovare i file con un criterio specifico | [Procedura: trovare file con un modello specifico](~/add/includes/ajax-current-ext-md.md)|   | Spostare un file | [Procedura: spostare un File](~/add/includes/ajax-current-ext-md.md)|   | Rinominare un file | [Procedura: rinominare un File](~/add/includes/ajax-current-ext-md.md)|   | Copiare una directory in un&quot;altra directory | [Procedura: copiare una Directory in un&quot;altra Directory](~/add/includes/ajax-current-ext-md.md)|   | Creare una directory | [Procedura: creare una Directory](~/add/includes/ajax-current-ext-md.md)|   | Cercare sottodirectory con un criterio specifico | [Procedura: cercare sottodirectory con un criterio specifico](~/add/includes/ajax-current-ext-md.md)|   | Ottenere la raccolta di file in una directory | [Procedura: ottenere la raccolta di file in una Directory](~/add/includes/ajax-current-ext-md.md)|   | Leggere la **documenti** directory |[ Procedura: recuperare il contenuto della Directory documenti](~/add/includes/ajax-current-ext-md.md)|   | Analizzare un percorso di file | [Procedura: analizzare percorsi di File](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._1_1.vb)]"
  syntax:
    content: public class FileSystem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.FileIO.FileSystem&quot;> </xref> classe."
  remarks: ''
  example:
  - '[Objects (Visual Basic)](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public FileSystem ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Combina due percorsi e restituisce un percorso formattato correttamente."
  remarks: "Questo metodo elimina i caratteri di barra in eccesso per creare un percorso formattato correttamente.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CombinePath` metodo.      |||   |-|-|   | Per | Vedere |   | Combinare un nome di file e percorso di directory | [Procedura: analizzare percorsi di File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public static string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Primo percorso da combinare."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Secondo percorso da combinare."
    return:
      type: System.String
      description: "La combinazione dei percorsi specificati."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>o <code>relativePath</code> sono percorsi in formato non valido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia il contenuto di una directory in un&quot;altra directory."
  remarks: "Questo metodo copia il contenuto della directory di origine nella directory di destinazione. Se la directory di destinazione non esiste, viene creato. Se esiste una directory con lo stesso nome nel percorso di destinazione, il contenuto delle due directory viene unito. È possibile specificare un nuovo nome per la directory durante l&quot;operazione.       Quando si copiano i file contenuti in una directory, possono essere generate eccezioni causati da un file specifico. Quando vengono generate queste eccezioni, vengono consolidati in un&quot;unica eccezione il cui `Data` proprietà contiene le voci sotto forma di un <xref:System.Collections.IDictionary>in cui il percorso del file o directory è la chiave e il messaggio di eccezione specifico è contenuto nel valore corrispondente.</xref:System.Collections.IDictionary> Utilizzare `For…Each` per enumerare le voci.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CopyDirectory` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare una directory | [Procedura: copiare una Directory in un&quot;altra Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/02942d01-133a-478f-ae50-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "La directory da copiare."
    - id: destinationDirectoryName
      type: System.String
      description: "Posizione nella quale deve essere copiato il contenuto della directory."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>o <code>sourceDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory di origine non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il percorso di origine e destinazione sono gli stessi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome di una cartella nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Un file di destinazione esiste ma non è accessibile."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia il contenuto di una directory in un&quot;altra directory."
  remarks: "Questo metodo copia il contenuto della directory di origine nella directory di destinazione. Se la directory di destinazione non esiste, viene creato. Se esiste una directory con lo stesso nome nel percorso di destinazione, il contenuto delle due directory viene unito. È possibile specificare un nuovo nome per la directory durante l&quot;operazione.       Quando si copiano i file contenuti in una directory, possono essere generate eccezioni causati da un file specifico. Quando vengono generate queste eccezioni, vengono consolidati in un&quot;unica eccezione il cui `Data` proprietà contiene le voci sotto forma di un <xref:System.Collections.IDictionary>in cui il percorso del file o directory è la chiave e il messaggio di eccezione specifico è contenuto nel valore corrispondente.</xref:System.Collections.IDictionary> Utilizzare `For…Each` per enumerare le voci.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CopyDirectory` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare una directory | [Procedura: copiare una Directory in un&quot;altra Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/8f7d2df3-4266-47ac-8381-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "La directory da copiare."
    - id: destinationDirectoryName
      type: System.String
      description: "Posizione nella quale deve essere copiato il contenuto della directory."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>o <code>sourceDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory di origine non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il percorso di origine e destinazione sono gli stessi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome di una cartella nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Un file di destinazione esiste ma non è accessibile."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>è impostato su <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e l&quot;utente annulla l&quot;operazione oppure non è possibile copiare uno o più file nella directory."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia il contenuto di una directory in un&quot;altra directory."
  remarks: "Questo metodo copia il contenuto della directory di origine nella directory di destinazione. Se la directory di destinazione non esiste, viene creato. Se esiste una directory con lo stesso nome nel percorso di destinazione, il contenuto delle due directory viene unito. È possibile specificare un nuovo nome per la directory durante l&quot;operazione.       Quando si copiano i file contenuti in una directory, potrebbero essere generate eccezioni causati da un file specifico, ad esempio un file esistente durante un&quot;unione `overwrite` è impostato su `False`. Quando vengono generate queste eccezioni, vengono consolidati in un&quot;unica eccezione il cui `Data` proprietà contiene le voci sotto forma di un <xref:System.Collections.IDictionary>in cui il percorso del file o directory è la chiave e il messaggio di eccezione specifico è contenuto nel valore corrispondente.</xref:System.Collections.IDictionary> Utilizzare `For…Each` per enumerare le voci.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CopyDirectory` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare una directory | [Procedura: copiare una Directory in un&quot;altra Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/fdc93a8a-3025-4efd-8987-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "La directory da copiare."
    - id: destinationDirectoryName
      type: System.String
      description: "Posizione nella quale deve essere copiato il contenuto della directory."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>per sovrascrivere i file esistenti; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>o <code>sourceDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory di origine non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il percorso di origine e destinazione sono gli stessi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome di una cartella nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Un file di destinazione esiste ma non è accessibile."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia il contenuto di una directory in un&quot;altra directory."
  remarks: "Questo metodo copia il contenuto della directory di origine nella directory di destinazione. Se la directory di destinazione non esiste, viene creato. Se esiste una directory con lo stesso nome nel percorso di destinazione, il contenuto delle due directory viene unito. È possibile specificare un nuovo nome per la directory durante l&quot;operazione.       Quando si copiano i file contenuti in una directory, possono essere generate eccezioni causati da un file specifico. Quando vengono generate queste eccezioni, vengono consolidati in un&quot;unica eccezione il cui `Data` proprietà contiene le voci sotto forma di un <xref:System.Collections.IDictionary>in cui il percorso del file o directory è la chiave e il messaggio di eccezione specifico è contenuto nel valore corrispondente.</xref:System.Collections.IDictionary> Utilizzare `For…Each` per enumerare le voci.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CopyDirectory` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare una directory | [Procedura: copiare una Directory in un&quot;altra Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/c0cf1625-22a4-46e5-a6cf-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "La directory da copiare."
    - id: destinationDirectoryName
      type: System.String
      description: "Posizione nella quale deve essere copiato il contenuto della directory."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica quale deve essere eseguita se l&quot;utente fa clic **Annulla** durante l&quot;operazione. Valore predefinito è <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>o <code>sourceDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory di origine non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il percorso di origine e destinazione sono gli stessi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome di una cartella nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Un file di destinazione esiste ma non è accessibile."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>è impostato su <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e l&quot;utente annulla l&quot;operazione oppure non è possibile copiare uno o più file nella directory."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia un file in una nuova posizione."
  remarks: "`CopyFile`non mantiene le voci ACE (voci di controllo di accesso). Il file appena creato eredita le voci ACE predefinite dalla directory in cui è stato creato.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.CopyFile` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare un file nella stessa directory. | [Procedura: creare una copia di un File nella stessa Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file in una directory diversa. | [Procedura: creare una copia di un File in una Directory diversa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Il file da copiare."
    - id: destinationFileName
      type: System.String
      description: "Il percorso in cui deve essere copiato il file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contiene informazioni sul percorso."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>o <code>sourceFileName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Un file nella directory di destinazione con lo stesso nome è in uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia un file in una nuova posizione."
  remarks: "`CopyFile`non mantiene le voci ACE (voci di controllo di accesso). Il file appena creato eredita le voci ACE predefinite dalla directory in cui è stato creato.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.CopyFile` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare un file nella stessa directory. | [Procedura: creare una copia di un File nella stessa Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file in una directory diversa. | [Procedura: creare una copia di un File in una Directory diversa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Il file da copiare."
    - id: destinationFileName
      type: System.String
      description: "Il percorso in cui deve essere copiato il file."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contiene informazioni sul percorso."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>o <code>sourceFileName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file di destinazione esista e <code> overwrite </code> è impostato su <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia un file in una nuova posizione."
  remarks: "`CopyFile`non mantiene le voci ACE (voci di controllo di accesso). Il file appena creato eredita le voci ACE predefinite dalla directory in cui è stato creato.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.CopyFile` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare un file nella stessa directory. | [Procedura: creare una copia di un File nella stessa Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file in una directory diversa. | [Procedura: creare una copia di un File in una Directory diversa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Il file da copiare."
    - id: destinationFileName
      type: System.String
      description: "Il percorso in cui deve essere copiato il file."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se i file esistenti devono essere sovrascritti. in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contiene informazioni sul percorso."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>o <code>sourceFileName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file di destinazione esista e <code> overwrite </code> è impostato su <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia un file in una nuova posizione."
  remarks: "`CopyFile`non mantiene le voci ACE (voci di controllo di accesso). Il file appena creato eredita le voci ACE predefinite dalla directory in cui è stato creato.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.CopyFile` metodo.      |||   |-|-|   | Per | Vedere |   | Copiare un file nella stessa directory. | [Procedura: creare una copia di un File nella stessa Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiare un file in una directory diversa. | [Procedura: creare una copia di un File in una Directory diversa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Il file da copiare."
    - id: destinationFileName
      type: System.String
      description: "Il percorso in cui deve essere copiato il file."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica quale deve essere eseguita se l&quot;utente fa clic **Annulla** durante l&quot;operazione. Valore predefinito è <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contiene informazioni sul percorso."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>o <code>sourceFileName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file di destinazione esista e <code> overwrite </code> è impostato su <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>è impostato su <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e l&quot;utente ha annullato l&quot;operazione o che si verifica un errore dei / o non specificato."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Crea una directory."
  remarks: "Se la directory esiste già, viene generata alcuna eccezione.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.CreateDirectory` metodo.      |||   |-|-|   | Per | Vedere |   | Creare una directory | [Procedura: creare una Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._120_1.vb)]"
  syntax:
    content: public static void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e percorso della directory."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome della directory non è valido. Ad esempio, contiene caratteri non validi o solo spazi vuoti."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il nome della directory è troppo lungo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome della directory è solo due punti (:)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory padre della directory da creare è di sola lettura"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per creare la directory."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Ottiene o imposta la directory corrente."
  remarks: '`CurrentDirectory`è una variabile di ambiente a livello di sistema.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_2.vb)]"
  syntax:
    content: public static string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "La directory corrente per le operazioni dei / o file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Il percorso non è valido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina una directory."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "Directory da eliminare."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "Specifica le azioni da intraprendere quando una directory che deve essere eliminato contiene file o directory. Valore predefinito è <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il percorso è una stringa di lunghezza zero, non è corretto, contiene solo spazi vuoti o contiene caratteri non validi (inclusi i caratteri jolly). Il percorso specificato è un dispositivo (inizia con \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste o è un file."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Un file nella directory o sottodirectory è in uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome della directory contiene i due punti (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "L&quot;utente annulla l&quot;operazione o la directory non può essere eliminata."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina una directory."
  remarks: "Il `showUI` e `recycle` parametri non sono supportati nelle applicazioni che non sono interattive, ad esempio servizi di Windows con l&quot;utente."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "Directory da eliminare."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Specifica se il file eliminato deve essere inviato al **Cestino**. Valore predefinito è <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il percorso è una stringa di lunghezza zero, non è corretto, contiene solo spazi vuoti o contiene caratteri non validi (inclusi i caratteri jolly). Il percorso specificato è un dispositivo (inizia con \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste o è un file."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Un file nella directory o sottodirectory è in uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome della directory contiene i due punti (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "L&quot;utente annulla l&quot;operazione o la directory non può essere eliminata."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina una directory."
  remarks: "Il `showUI`, `recycle`, e `onUserCancel` parametri non sono supportati nelle applicazioni che non sono interattive, ad esempio servizi di Windows con l&quot;utente."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "Directory da eliminare."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Specifica se il file eliminato deve essere inviato al **Cestino**. Valore predefinito è <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica se generare un&quot;eccezione se l&quot;utente fa clic **Annulla**."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il percorso è una stringa di lunghezza zero, non è corretto, contiene solo spazi vuoti o contiene caratteri non validi (inclusi i caratteri jolly). Il percorso specificato è un dispositivo (inizia con \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste o è un file."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Un file nella directory o sottodirectory è in uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il nome della directory contiene i due punti (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "L&quot;utente annulla l&quot;operazione o la directory non può essere eliminata."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina un file."
  remarks: "La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.DeleteFile` metodo.      |||   |-|-|   | Per | Vedere |   | Per eliminare un file | [Procedura: eliminare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file da eliminare."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. contiene una barra finale in cui deve essere specificato un file; o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eliminare il file o il file è di sola lettura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina un file."
  remarks: "Il `showUI` e `recycle` parametri non sono supportati nelle applicazioni che non sono interattive, ad esempio servizi di Windows con l&quot;utente.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.DeleteFile` metodo.      |||   |-|-|   | Per | Vedere |   | Per eliminare un file | [Procedura: eliminare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file da eliminare."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "O meno per inviare il file eliminato il **Cestino**. Valore predefinito è <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. contiene una barra finale in cui deve essere specificato un file; o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eliminare il file o il file è di sola lettura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina un file."
  remarks: "Il `showUI`, `recycle`, e `onUserCancel` parametri non sono supportati nelle applicazioni che non sono interattive, ad esempio servizi di Windows con l&quot;utente.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.DeleteFile` metodo.      |||   |-|-|   | Per | Vedere |   | Per eliminare un file | [Procedura: eliminare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file da eliminare."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se si desidera rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "O meno per inviare il file eliminato il **Cestino**. Valore predefinito è <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica se viene generata un&quot;eccezione quando l&quot;utente annulla l&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. contiene una barra finale in cui deve essere specificato un file; o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eliminare il file o il file è di sola lettura."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "L&quot;utente ha annullato l&quot;operazione e <code> onUserCancel </code> è impostato su <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se la directory specificata esista."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._66_1.vb)]"
  syntax:
    content: public static bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Percorso della directory."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se la directory esiste; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  id: Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di sola lettura di tutti i nomi delle unità disponibili."
  remarks: "Questa proprietà restituisce tutte le unità logiche."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._109_1.vb)]"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "Una raccolta di sola lettura di tutte le unità disponibili come <xref href=&quot;System.IO.DriveInfo&quot;> </xref> oggetti."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se il file specificato esiste."
  remarks: "Se l&quot;applicazione non dispone delle autorizzazioni sufficienti per leggere il file specificato, il `FileExists` restituisce `False`, indipendentemente dall&quot;esistenza del percorso; il metodo non genera un&quot;eccezione."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._163_1.vb)]"
  syntax:
    content: public static bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file."
    return:
      type: System.Boolean
      description: "Restituisce <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se il file esiste; in caso contrario questo metodo restituisce <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del file termina con una barra rovesciata (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di sola lettura di stringhe che rappresentano i nomi dei file che contiene il testo specificato."
  remarks: "Se viene trovato alcun file corrispondenti al criterio specificato, viene restituita una raccolta vuota.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.FindInFiles` metodo.      |||   |-|-|   | Per | Vedere |   | Ricerca di una directory per i file che contiene una stringa specifica | [Procedura dettagliata: modifica di file e directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/c1aba623-4b25-4809-b962-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "La directory in cui cercare."
    - id: containsText
      type: System.String
      description: "Il testo di ricerca."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se la ricerca deve essere tra maiuscole e minuscole; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se includere le sottocartelle. Valore predefinito è <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura dei nomi di file che contengono il testo specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory specificata non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory specificata punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il percorso di directory specificato contiene un carattere due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di sola lettura di stringhe che rappresentano i nomi dei file che contiene il testo specificato."
  remarks: "Se viene trovato alcun file corrispondenti al criterio specificato, viene restituita una raccolta vuota.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.FindInFiles` metodo.      |||   |-|-|   | Per | Vedere |   | Ricerca di una directory per i file che contiene una stringa specifica | [Procedura dettagliata: modifica di file e directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/3de7a74a-9724-4c87-9247-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "La directory in cui cercare."
    - id: containsText
      type: System.String
      description: "Il testo di ricerca."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se la ricerca deve essere tra maiuscole e minuscole; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se includere le sottocartelle. Valore predefinito è <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: fileWildcards
      type: System.String[]
      description: "Motivo per cui trovare una corrispondenza."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura dei nomi di file che contengono il testo specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory specificata non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory specificata punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il percorso di directory specificato contiene un carattere due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di stringhe che rappresentano i nomi di percorso delle sottodirectory all&quot;interno di una directory."
  remarks: "La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.GetDirectories` metodo.      |||   |-|-|   | Per | Vedere |   | Elencare le sottodirectory con un criterio specifico | [Procedura: cercare sottodirectory con un criterio specifico in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._39_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e percorso della directory."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura dei nomi di percorso delle sottodirectory all&quot;interno della directory specificata..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory specificata non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory specificata punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di stringhe che rappresentano i nomi di percorso delle sottodirectory all&quot;interno di una directory."
  remarks: "È possibile utilizzare il `wildcards` parametro per specificare un criterio specifico. Se si desidera includere il contenuto delle sottodirectory nella ricerca, impostare il `searchType` parametro `SearchAllSubDirectories`.       Se viene trovata alcuna directory corrispondenti al criterio specificato, viene restituita una raccolta vuota.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.GetDirectories` metodo.      |||   |-|-|   | Per | Vedere |   | Elencare le sottodirectory con un criterio specifico | [Procedura: cercare sottodirectory con un criterio specifico in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/7bb013c4-a081-4298-a67c-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e percorso della directory."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se includere le sottocartelle. Valore predefinito è <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Criterio di corrispondenza nomi."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura dei nomi di percorso delle sottodirectory all&quot;interno della directory specificata."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o più dei caratteri jolly specificati <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, una stringa vuota o contiene solo spazi."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory specificata non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory specificata punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce un <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> oggetto per il percorso specificato."
  remarks: "Se la directory non esiste, viene generata un&quot;eccezione non fino a quando la prima volta che una proprietà <xref:System.IO.DirectoryInfo>si accede all&quot;oggetto.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._121_1.vb)]"
  syntax:
    content: public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Percorso della directory."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>oggetto per il percorso specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il percorso della directory contiene un carattere due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce un <xref href=&quot;System.IO.DriveInfo&quot;> </xref> oggetto per l&quot;unità specificata."
  remarks: "La <xref:System.IO.DriveInfo>classe modella un&quot;unità e fornisce metodi e proprietà per ottenere informazioni sull&quot;unità.</xref:System.IO.DriveInfo> Utilizzare <xref:System.IO.DriveInfo>per determinare quali unità sono disponibili e il tipo di unità siano.</xref:System.IO.DriveInfo> È anche possibile eseguire una query la proprietà per determinare la capacità e spazio libero sul disco."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._132_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public static System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "Unità da esaminare."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>oggetto per l&quot;unità specificata."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce un <xref href=&quot;System.IO.FileInfo&quot;> </xref> oggetto per il file specificato."
  remarks: "Non viene generata un&quot;eccezione se il file non esiste; invece verrà generata la prima volta, che le proprietà dell&quot;oggetto sono accessibili.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.GetFileInfo` metodo.      |||   |-|-|   | Per | Vedere |   | Determinare il nome e percorso di un file | [Procedura: analizzare percorsi di File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._167_1.vb)]"
  syntax:
    content: public static System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>oggetto per il file specificato"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del percorso non è valido. Ad esempio, contiene caratteri non validi o solo spazi vuoti. Il nome file ha una barra finale."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il percorso contiene i due punti all&quot;interno della stringa."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso è troppo lungo."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;accesso al file ACL (elenco di controllo di accesso)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di sola lettura di stringhe che rappresentano i nomi dei file contenuti in una directory."
  remarks: "Se viene trovato alcun file corrispondenti al criterio specificato, viene restituita una raccolta vuota.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.GetFiles` metodo.      |||   |-|-|   | Per | Vedere |   | Ottenere la raccolta di file in una directory | [Procedura: ottenere la raccolta di file in una Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Trovare i file con un criterio specifico in una directory | [Procedura: trovare file con un criterio specifico in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Directory in cui cercare."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura di nomi di file della directory specificata."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Non esiste una directory in cui cercare."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce una raccolta di sola lettura di stringhe che rappresentano i nomi dei file contenuti in una directory."
  remarks: "Se viene trovato alcun file corrispondenti al criterio specificato, viene restituita una raccolta vuota.       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.GetFiles` metodo.      |||   |-|-|   | Per | Vedere |   | Ottenere la raccolta di file in una directory | [Procedura: ottenere la raccolta di file in una Directory in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Trovare i file con un criterio specifico in una directory | [Procedura: trovare file con un criterio specifico in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Directory in cui cercare."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se includere le sottocartelle. Valore predefinito è <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Motivo per cui trovare una corrispondenza."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di sola lettura di nomi di file della directory specificata."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Non esiste una directory in cui cercare."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>punta a un file esistente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Analizza il nome del file dal percorso specificato."
  remarks: "Si tratta di un&quot;operazione di stringa. il `FileSystem` non viene esaminato.       Il `GetName` metodo ignora una barra alla fine del percorso.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.GetFileName` metodo.      |||   |-|-|   | Per | Vedere |   | Analizzare un percorso di file | [Procedura: analizzare percorsi di File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._3_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public static string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "Obbligatorio. Percorso da analizzare. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "Il nome del file dal percorso specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce il percorso padre del percorso specificato."
  remarks: "Si tratta di un&quot;operazione di stringa. il file system non viene esaminato."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: public static string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Percorso da esaminare."
    return:
      type: System.String
      description: "Il percorso padre del percorso specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Percorso non contiene un percorso padre perché è un percorso radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Crea un file temporaneo a zero byte denominato in modo univoco su disco e restituisce il percorso completo del file."
  remarks: "Questo metodo può essere utilizzato per creare un file temporaneo."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._71_1.vb)]"
  syntax:
    content: public static string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>contenente il percorso completo del file temporaneo."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta una directory da una posizione a altra."
  remarks: "Se viene effettuato un tentativo di spostare una directory all&quot;interno di una directory che non esiste, verrà creata la struttura di destinazione."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Percorso della directory da spostare."
    - id: destinationDirectoryName
      type: System.String
      description: "Percorso della directory a cui è stata spostata la directory di origine."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>o <code>destinationDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;origine è una directory radice o il percorso di origine e il percorso di destinazione sono uguali."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta una directory da una posizione a altra."
  remarks: "Se viene effettuato un tentativo di spostare una directory all&quot;interno di una directory che non esiste, verrà creata la struttura di destinazione."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Percorso della directory da spostare."
    - id: destinationDirectoryName
      type: System.String
      description: "Percorso della directory a cui è stata spostata la directory di origine."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>o <code>destinationDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory di destinazione esiste già e o<code> verwrite </code> è impostato su <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta una directory da una posizione a altra."
  remarks: "Se viene effettuato un tentativo di spostare una directory all&quot;interno di una directory che non esiste, verrà creata la struttura di destinazione."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Percorso della directory da spostare."
    - id: destinationDirectoryName
      type: System.String
      description: "Percorso della directory a cui è stata spostata la directory di origine."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se le directory esistenti devono essere sovrascritti. in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>o <code>destinationDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La directory di destinazione esiste già e o<code> verwrite </code> è impostato su <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta una directory da una posizione a altra."
  remarks: "Se viene effettuato un tentativo di spostare una directory all&quot;interno di una directory che non esiste, verrà creata la struttura di destinazione."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Percorso della directory da spostare."
    - id: destinationDirectoryName
      type: System.String
      description: "Percorso della directory a cui è stata spostata la directory di origine."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica se viene generata un&quot;eccezione quando l&quot;utente annulla l&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>o <code>destinationDirectoryName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>è impostato su <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> e non è possibile copiare una sottodirectory del file."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>è impostato su <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e l&quot;utente annulla l&quot;operazione oppure non è possibile completare l&quot;operazione."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione è ciclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta un file in una nuova posizione."
  remarks: "Se la struttura di destinazione non esiste, viene creato.       Il `MoveFile` metodo mantiene le voci ACE (voci di controllo di accesso) solo per lo spostamento di file all&quot;interno dello stesso volume. Ciò include le voci ACE ereditate diventano dirette quando spostato (direct ACE hanno la precedenza sulle ACE ereditate). Se un file viene spostato tra volumi, verranno copiate non ACE.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.MoveFile` metodo.      |||   |-|-|   | Per | Vedere |   | Spostare un file | [Procedura: spostare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Percorso del file da spostare."
    - id: destinationFileName
      type: System.String
      description: "Percorso della directory in cui il file deve essere spostato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta un file in una nuova posizione."
  remarks: "Se la struttura di destinazione non esiste, viene creato.       Il `MoveFile` metodo mantiene le voci ACE (voci di controllo di accesso) solo per lo spostamento di file all&quot;interno dello stesso volume. Ciò include le voci ACE ereditate diventano dirette quando spostato (direct ACE hanno la precedenza sulle ACE ereditate). Se un file viene spostato tra volumi, verranno copiate non ACE.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.MoveFile` metodo.      |||   |-|-|   | Per | Vedere |   | Spostare un file | [Procedura: spostare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Percorso del file da spostare."
    - id: destinationFileName
      type: System.String
      description: "Percorso della directory in cui il file deve essere spostato."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta un file in una nuova posizione."
  remarks: "Se la struttura di destinazione non esiste, viene creato.       Il `MoveFile` metodo mantiene le voci ACE (voci di controllo di accesso) solo per lo spostamento di file all&quot;interno dello stesso volume. Ciò include le voci ACE ereditate diventano dirette quando spostato (direct ACE hanno la precedenza sulle ACE ereditate). Se un file viene spostato tra volumi, verranno copiate non ACE.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.MoveFile` metodo.      |||   |-|-|   | Per | Vedere |   | Spostare un file | [Procedura: spostare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Percorso del file da spostare."
    - id: destinationFileName
      type: System.String
      description: "Percorso della directory in cui il file deve essere spostato."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>per sovrascrivere i file esistenti; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Sposta un file in una nuova posizione."
  remarks: "Se la struttura di destinazione non esiste, viene creato.       Il `MoveFile` metodo mantiene le voci ACE (voci di controllo di accesso) solo per lo spostamento di file all&quot;interno dello stesso volume. Ciò include le voci ACE ereditate diventano dirette quando spostato (direct ACE hanno la precedenza sulle ACE ereditate). Se un file viene spostato tra volumi, verranno copiate non ACE.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.MoveFile` metodo.      |||   |-|-|   | Per | Vedere |   | Spostare un file | [Procedura: spostare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Percorso del file da spostare."
    - id: destinationFileName
      type: System.String
      description: "Percorso della directory in cui il file deve essere spostato."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Specifica se rilevare visivamente lo stato dell&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Specifica se viene generata un&quot;eccezione quando l&quot;utente annulla l&quot;operazione. Valore predefinito è <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file di origine non è valido o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>è impostato su <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e l&quot;utente ha annullato l&quot;operazione o si verifica un errore dei / o non specificato."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Il <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metodo consente di creare un <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> oggetto che fornisce un modo semplice ed efficiente, analizzare il file di testo strutturati, ad esempio i log. Il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> oggetto può essere usato per leggere i file delimitati sia a larghezza fissa."
  remarks: "Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.OpenTextFieldParser` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo delimitato | [Procedura: leggere da file di testo delimitato da virgole in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo a larghezza fissa | [Procedura: leggere da file di testo a larghezza fissa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo con più formati | [Procedura: leggere file di testo con più formati in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._156_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "Il file da aprire con il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>per leggere il file specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Impossibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l&quot;eccezione, mentre il <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>proprietà viene assegnato il testo contenuto nella riga.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Il <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metodo consente di creare un <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> oggetto che fornisce un modo semplice ed efficiente, analizzare il file di testo strutturati, ad esempio i log. Il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> oggetto può essere usato per leggere i file delimitati sia a larghezza fissa."
  remarks: "Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.OpenTextFieldParser` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo delimitato | [Procedura: leggere da file di testo delimitato da virgole in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo a larghezza fissa | [Procedura: leggere da file di testo a larghezza fissa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo con più formati | [Procedura: leggere file di testo con più formati in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/23049b6e-0913-4641-bd0f-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "Il file da aprire con il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: fieldWidths
      type: System.Int32[]
      description: "Larghezze dei campi."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>per leggere il file specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Impossibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l&quot;eccezione, mentre il <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>proprietà viene assegnato il testo contenuto nella riga.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Il <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metodo consente di creare un <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> oggetto che fornisce un modo semplice ed efficiente, analizzare il file di testo strutturati, ad esempio i log. Il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> oggetto può essere usato per leggere i file delimitati sia a larghezza fissa."
  remarks: "Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.OpenTextFieldParser` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo delimitato | [Procedura: leggere da file di testo delimitato da virgole in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo a larghezza fissa | [Procedura: leggere da file di testo a larghezza fissa in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Leggere da un file di testo con più formati | [Procedura: leggere file di testo con più formati in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/714bc4c9-ee52-4bdc-875b-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "Il file da aprire con il <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: delimiters
      type: System.String[]
      description: "Delimitatori per i campi."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>per leggere il file specificato."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Impossibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l&quot;eccezione, mentre il <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>proprietà viene assegnato il testo contenuto nella riga.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Apre un <xref:System.IO.StreamReader>oggetto da leggere da un file.</xref:System.IO.StreamReader>"
  remarks: "Possono essere letti solo file di testo con un <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.OpenTextFileReader` metodo.      |||   |-|-|   | Per | Vedere |   | Aprire un file con un <xref:System.IO.StreamReader>|[ Procedura: leggere testo da file con un oggetto StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._86_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "File da leggere."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>oggetto da leggere dal file</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del file termina con una barra rovesciata (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Impossibile trovare il file specificato."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per leggere il file."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Apre un <xref:System.IO.StreamReader>oggetto da leggere da un file.</xref:System.IO.StreamReader>"
  remarks: "Possono essere letti solo file di testo con un <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.OpenTextFileReader` metodo.      |||   |-|-|   | Per | Vedere |   | Aprire un file con un <xref:System.IO.StreamReader>|[ Procedura: leggere testo da file con un oggetto StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/86e418b6-8642-47bd-853b-_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "File da leggere."
    - id: encoding
      type: System.Text.Encoding
      description: "La codifica da utilizzare per il contenuto del file. Valore predefinito è ASCII."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>oggetto da leggere dal file</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del file termina con una barra rovesciata (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Impossibile trovare il file specificato."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per leggere il file."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Apre un <xref:System.IO.StreamWriter>oggetto da scrivere nel file specificato.</xref:System.IO.StreamWriter>"
  remarks: "Il `OpenTextFileWriter` metodo apre e Inizializza un flusso per un file e quindi restituisce il <xref:System.IO.StreamWriter>oggetto per il flusso.</xref:System.IO.StreamWriter> È possibile scrivere nel flusso tutte le volte che è necessario e quindi chiuderla quando non si desidera.      > [!NOTE] > È necessario chiamare il <xref:System.IO.StreamWriter.Close%2A>metodo il <xref:System.IO.StreamWriter>oggetto per verificare che tutti i dati vengano scritti correttamente nel flusso sottostante.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se si siano scrivendo solo alcune stringhe in un file, potrebbe essere più semplice l&quot;utilizzo di <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.OpenTextFileWriter` metodo.      |||   |-|-|   | Per | Vedere |   | Scrivere testo in un file con un `StreamWriter` | [procedura: scrivere testo in file con un oggetto StreamWriter in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/01606e79-13a9-4f6b-a18a-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "File da scrivere."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per aggiungere il contenuto del file. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> di sovrascrivere il contenuto del file. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>oggetto da scrivere nel file specificato.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del file termina con una barra finale."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Apre un <xref:System.IO.StreamWriter>da scrivere nel file specificato.</xref:System.IO.StreamWriter>"
  remarks: "Il `OpenTextFileWriter` metodo apre e Inizializza un flusso per un file e quindi restituisce il <xref:System.IO.StreamWriter>oggetto per il flusso.</xref:System.IO.StreamWriter> È possibile scrivere nel flusso tutte le volte che è necessario e quindi chiuderla quando non si desidera.      > [!NOTE] > È necessario chiamare il <xref:System.IO.StreamWriter.Close%2A>metodo il <xref:System.IO.StreamWriter>oggetto per verificare che tutti i dati vengano scritti correttamente nel flusso sottostante.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se si siano scrivendo solo alcune stringhe in un file, potrebbe essere più semplice l&quot;utilizzo di <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.OpenTextFileWriter` metodo.      |||   |-|-|   | Per | Vedere |   | Scrivere testo in un file con un `StreamWriter` | [procedura: scrivere testo in file con un oggetto StreamWriter in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/dde0fe7a-3324-4e07-ba75-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "File da scrivere."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per aggiungere il contenuto nel file. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> di sovrascrivere il contenuto del file. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Codifica da utilizzare per la scrittura nel file. Valore predefinito è ASCII."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>oggetto da scrivere nel file specificato.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del file termina con una barra finale."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce il contenuto di un file come matrice di byte."
  remarks: "Il `ReadAllBytes` metodo il `My.Computer.FileSystem` oggetto consente di leggere da un file binario. Il contenuto del file viene restituito come matrice di byte.       Non prendere decisioni in merito al relativo contenuto in base al nome del file. Ad esempio, il file Form1. vb non sia un file di origine Visual Basic. Verificare tutti gli input prima di utilizzare i dati nell&quot;applicazione.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.ReadAllBytes` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file binario | [Procedura: leggere da file binari in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._186_1.vb)]"
  syntax:
    content: public static byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "File da leggere."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>Matrice che contiene il contenuto del file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce il contenuto di un file di testo come una <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "Il `ReadAllText` metodo il `My.Computer.FileSystem` oggetto consente di leggere da un file di testo. Il contenuto del file viene restituito sotto forma di stringa.       La codifica del file può essere specificato se il contenuto del file è in una codifica, ad esempio ASCII o UTF-8. Se si sta leggendo da un file con caratteri estesi, è necessario specificare la codifica del file utilizzando un altro overload di <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>       Non prendere decisioni in merito al relativo contenuto in base al nome del file. Ad esempio, il file Form1. vb non sia un file di origine Visual Basic. Verificare tutti gli input prima di utilizzare i dati nell&quot;applicazione.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.ReadAllText` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo | [Procedura: leggere file di testo in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file da leggere."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>che contiene il contenuto del file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Restituisce il contenuto di un file di testo come una <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "Il `ReadAllText` metodo il `My.Computer.FileSystem` oggetto consente di leggere da un file di testo. Il contenuto del file viene restituito sotto forma di stringa.       La codifica del file può essere specificato se il contenuto del file è in una codifica, ad esempio ASCII o UTF-8. Se si sta leggendo da un file con caratteri estesi, è necessario specificare la codifica del file.       Non prendere decisioni in merito al relativo contenuto in base al nome del file. Ad esempio, il file Form1. vb non sia un file di origine Visual Basic. Verificare tutti gli input prima di utilizzare i dati nell&quot;applicazione.       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.ReadAllText` metodo.      |||   |-|-|   | Per | Vedere |   | Leggere da un file di testo | [Procedura: leggere file di testo in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Nome e percorso del file da leggere."
    - id: encoding
      type: System.Text.Encoding
      description: "Codifica dei caratteri da utilizzare durante la lettura del file. Valore predefinito è UTF-8."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>che contiene il contenuto del file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Rinomina una directory."
  remarks: "Questo metodo non può essere utilizzato per spostare una directory. Utilizzare il `MoveDirectory` metodo per spostare e rinominare la directory."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/313534a3-4c32-4f3e-9ae2-_1.vb)]"
  syntax:
    content: public static void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "Percorso e nome della directory da rinominare."
    - id: newName
      type: System.String
      description: "Nuovo nome di directory."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contiene informazioni sul percorso."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - oppure - <code>newName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "È un file o directory esistente con il nome specificato <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera i 248 caratteri."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Rinomina un file."
  remarks: "Questo metodo non può essere utilizzato per spostare un file. Utilizzare il <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>metodo per spostare e rinominare il file.</xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.RenameFile` metodo.      |||   |-|-|   | Per | Vedere |   | Rinominare un file | [Procedura: rinominare un File in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/39c53cd2-9477-4e35-83cb-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public static void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "File da rinominare."
    - id: newName
      type: System.String
      description: "Nuovo nome del file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contiene informazioni sul percorso o termina con una barra rovesciata (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - oppure - <code>newName</code> è <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "La directory non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "È un file o directory esistente con il nome specificato <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;utente non dispone dell&quot;autorizzazione necessaria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Scrive dati in un file binario."
  remarks: "Se il percorso specificato, escluso il nome di file, non è valido, un <xref:System.IO.DirectoryNotFoundException>verrà generata l&quot;eccezione.</xref:System.IO.DirectoryNotFoundException> Se il percorso sia valido, ma il file non esiste, viene creato il file.      > [!NOTE] > Il `WriteAllBytes` metodo apre un file, in cui scrive e quindi lo chiude. Codice che usa il `WriteAllBytes` metodo è più semplice del codice che utilizza un <xref:System.IO.BinaryWriter>oggetto.</xref:System.IO.BinaryWriter> Tuttavia, se si aggiungono dati a un file utilizzando un ciclo, un <xref:System.IO.BinaryWriter>oggetto può fornire prestazioni migliori perché solo aprire e chiudere il file una volta.</xref:System.IO.BinaryWriter>       La tabella seguente elenca un esempio di un&quot;attività che coinvolgono la `My.Computer.FileSystem.WriteAllBytes` metodo.      |||   |-|-|   | Per | Vedere |   | Scrivere in un file binario | [Procedura: scrivere file binari in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/45dbfd83-d122-4e5f-a7b8-_1.vb)]"
  syntax:
    content: public static void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Percorso e nome del file da scrivere."
    - id: data
      type: System.Byte[]
      description: "Dati da scrivere nel file."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per aggiungere il contenuto del file; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> per sovrascrivere il contenuto del file. Valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Scrive il testo in un file."
  remarks: "La codifica UTF-8 è utilizzata per scrivere il file. Per specificare una codifica diversa, usare un overload diverso del <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       Se il file specificato non esiste, viene creato.       Se la codifica specificata non corrisponde alla codifica esistente del file, la codifica specificata viene ignorata.      > [!NOTE] > Il `WriteAllText` metodo apre un file, in cui scrive e quindi lo chiude. Codice che usa il `WriteAllText` metodo è più semplice del codice che utilizza un <xref:System.IO.StreamWriter>oggetto.</xref:System.IO.StreamWriter> Tuttavia, se si stanno aggiungendo stringhe in un file utilizzando un ciclo, un <xref:System.IO.StreamWriter>oggetto può fornire prestazioni migliori perché solo aprire e chiudere il file una sola volta.</xref:System.IO.StreamWriter> Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.WriteAllText` metodo.      |||   |-|-|   | Per | Vedere |   | Scrivere un file di testo | [Procedura: scrivere testo in file in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Aggiungere testo a un file | [Procedura: aggiungere testo a file in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "File da scrivere."
    - id: text
      type: System.String
      description: "Testo da scrivere nel file."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per aggiungere il contenuto del file. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> di sovrascrivere il contenuto del file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Scrive il testo in un file."
  remarks: "Se il file specificato non esiste, viene creato.       Se la codifica specificata non corrisponde alla codifica esistente del file, la codifica specificata viene ignorata.      > [!NOTE] > Il `WriteAllText` metodo apre un file, in cui scrive e quindi lo chiude. Codice che usa il `WriteAllText` metodo è più semplice del codice che utilizza un <xref:System.IO.StreamWriter>oggetto.</xref:System.IO.StreamWriter> Tuttavia, se si stanno aggiungendo stringhe in un file utilizzando un ciclo, un <xref:System.IO.StreamWriter>oggetto può fornire prestazioni migliori perché solo aprire e chiudere il file una sola volta.</xref:System.IO.StreamWriter> Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>metodo.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       Nella tabella seguente sono elencati esempi di attività che coinvolgono la `My.Computer.FileSystem.WriteAllText` metodo.      |||   |-|-|   | Per | Vedere |   | Scrivere un file di testo | [Procedura: scrivere testo in file in Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Aggiungere testo a un file | [Procedura: aggiungere testo a file in Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "File da scrivere."
    - id: text
      type: System.String
      description: "Testo da scrivere nel file."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Per aggiungere il contenuto del file. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> di sovrascrivere il contenuto del file."
    - id: encoding
      type: System.Text.Encoding
      description: "Codifica da utilizzare durante la scrittura nel file."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Il percorso non è valido per uno dei seguenti motivi: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi. o percorso di una periferica (inizia con \\ \\.\\); termina con una barra finale.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Il file non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il file è in uso da un altro processo oppure si verifica un errore dei / o."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso supera la lunghezza massima definita dal sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un nome di file o directory nel percorso contiene i due punti (:) o in un formato non valido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per scrivere la stringa nel buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone delle autorizzazioni necessarie per visualizzare il percorso."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: FileSystem.FileSystem
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath
  nameWithType: FileSystem.CombinePath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystem.CopyDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile
  nameWithType: FileSystem.CopyFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystem.DeleteFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystem.DirectoryExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists
  nameWithType: FileSystem.FileExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystem.FindInFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystem.GetDirectories
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystem.GetDirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystem.GetDriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystem.GetFileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles
  nameWithType: FileSystem.GetFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName
  nameWithType: FileSystem.GetName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystem.GetParentPath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystem.GetTempFileName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystem.MoveDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile
  nameWithType: FileSystem.MoveFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystem.OpenTextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystem.OpenTextFileReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystem.OpenTextFileWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystem.ReadAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystem.ReadAllText
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystem.RenameDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile
  nameWithType: FileSystem.RenameFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystem.WriteAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystem.WriteAllText
