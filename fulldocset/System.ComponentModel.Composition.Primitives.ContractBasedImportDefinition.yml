### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  id: ContractBasedImportDefinition
  children:
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  langs:
  - csharp
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  type: Class
  summary: "Rappresenta un&quot;importazione richiesta da un <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> oggetto e che è possibile specificare un nome di contratto e metadati."
  syntax:
    content: 'public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ImportDefinition
  implements: []
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality
  - System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref> classe."
  syntax:
    content: protected ContractBasedImportDefinition ();
    parameters: []
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref> con il nome di contratto specificato, l&quot;identità del tipo richiesto, i metadati necessari, cardinalità e criteri di creazione di classi e indica se la definizione di importazione è ricomponibile o un prerequisito."
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);
    parameters:
    - id: contractName
      type: System.String
      description: "Il nome del contratto di <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetto necessario per la definizione di importazione."
    - id: requiredTypeIdentity
      type: System.String
      description: "L&quot;identità del tipo del tipo di esportazione previsto. Utilizzare il <xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>metodo per generare un&quot;identità per un determinato tipo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> Se non è necessario alcun tipo specifico, utilizzare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "Una raccolta di coppie chiave/valore contenenti i nomi dei metadati e i tipi necessari per la definizione di importazione; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostare il <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>proprietà per un oggetto vuoto &lt;xref:System.Collections.Generic.IEnumerable%601&gt; insieme.</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "Uno dei valori di enumerazione che indica la cardinalità del <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti richiesti per la definizione di importazione."
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per specificare che la definizione di importazione può essere soddisfatto più volte per tutta la durata di un <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per specificare che la definizione di importazione deve essere soddisfatto prima che un <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> possa iniziare a produrre oggetti esportati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Un valore che indica che l&quot;utilità di importazione richiede un criterio di creazione specifico per le esportazioni utilizzate per soddisfare questa importazione. Se non è necessario alcun criterio di creazione specifico, il valore predefinito è <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>requiredMetadata</code> contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - oppure - <code>cardinality</code> non fa parte di <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> valori."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref> con il nome di contratto specificato, l&quot;identità del tipo richiesto, i metadati obbligatori e facoltativi, cardinalità e criteri di creazione di classi e indica se la definizione di importazione è ricomponibile o un prerequisito."
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata);
    parameters:
    - id: contractName
      type: System.String
      description: "Il nome del contratto di <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetto necessario per la definizione di importazione."
    - id: requiredTypeIdentity
      type: System.String
      description: "L&quot;identità del tipo del tipo di esportazione previsto. Utilizzare il <xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>metodo per generare un&quot;identità per un determinato tipo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> Se non è necessario alcun tipo specifico, utilizzare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "Una raccolta di coppie chiave/valore contenenti i nomi dei metadati e i tipi necessari per la definizione di importazione; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostare il <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>proprietà per un oggetto vuoto &lt;xref:System.Collections.Generic.IEnumerable%601&gt; insieme.</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "Uno dei valori di enumerazione che indica la cardinalità del <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti richiesti per la definizione di importazione."
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per specificare che la definizione di importazione può essere soddisfatto più volte per tutta la durata di un <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per specificare che la definizione di importazione deve essere soddisfatto prima che un <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> possa iniziare a produrre oggetti esportati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Un valore che indica che l&quot;utilità di importazione richiede un criterio di creazione specifico per le esportazioni utilizzate per soddisfare questa importazione. Se non è necessario alcun criterio di creazione specifico, il valore predefinito è <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>."
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "I metadati associati a questa importazione."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>requiredMetadata</code> contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - oppure - <code>cardinality</code> non fa parte di <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> valori."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  id: Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Ottiene un&quot;espressione che definisce le condizioni che devono corrispondere per soddisfare l&quot;importazione descritto da questa definizione di importazione."
  syntax:
    content: public override System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> Constraint { get; }
    return:
      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
      description: "Un&quot;espressione che contiene un &lt;xref:System.Func%602&gt; oggetto che definisce le condizioni che devono corrispondere per la <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref> devono essere soddisfatti da un <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  id: IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Restituisce un valore che indica se il vincolo rappresentato da questo oggetto viene soddisfatto dall&quot;esportazione rappresentata dalla definizione di esportazione specificata."
  syntax:
    content: public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);
    parameters:
    - id: exportDefinition
      type: System.ComponentModel.Composition.Primitives.ExportDefinition
      description: "Definizione di esportazione da testare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il vincolo viene soddisfatto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Ottiene o imposta un valore che indica che l&quot;utilità di importazione richiede una specifica <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> per le esportazioni utilizzate per soddisfare questa importazione."
  syntax:
    content: public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Uno dei seguenti valori: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, se l&quot;utilità di importazione non richiede un oggetto specifico <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>per richiedere che tutte le esportazioni utilizzate devono essere condiviso da tutte le unità di importazione nel contenitore.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>per richiedere che tutte le esportazioni utilizzate devono essere non condiviso nel contenitore. In questo caso, ogni utilità di importazione riceve un&quot;istanza separata."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  id: RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Ottiene i nomi dei metadati dell&quot;esportazione richiesti dalla definizione di importazione."
  remarks: "Esegue l&quot;override di questa proprietà non devono mai restituire `null` o restituire un <xref:System.Collections.Generic.IEnumerable%601>raccolta che contiene un elemento che è `null`.</xref:System.Collections.Generic.IEnumerable%601> Se la definizione non contiene i metadati necessari, restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601>raccolta invece.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> RequiredMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "Una raccolta di <xref:System.String>gli oggetti che contengono i nomi dei metadati del <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti richiesti per il <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>.</xref:System.String> Il valore predefinito è vuoto &lt;xref:System.Collections.Generic.IEnumerable%601&gt; insieme."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  id: RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Ottiene il tipo previsto dell&quot;esportazione che corrisponde a questo <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>."
  syntax:
    content: public virtual string RequiredTypeIdentity { get; }
    return:
      type: System.String
      description: "Stringa che viene generata chiamando il <xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>sul tipo che richiede l&quot;importazione di questo metodo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*> Se il valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, questa importazione non prevede un tipo specifico."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "Restituisce la rappresentazione di stringa del <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref> oggetto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "La rappresentazione di stringa del <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref> oggetto."
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Type>>
  nameWithType: IEnumerable<KeyValuePair<String,Type>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportCardinality
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportCardinality
  nameWithType: ImportCardinality
  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<ExportDefinition,Boolean>>
  nameWithType: Expression<Func<ExportDefinition,Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
- uid: System.ComponentModel.Composition.Primitives.ExportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ExportDefinition
  nameWithType: ExportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString
  nameWithType: ContractBasedImportDefinition.ToString
