### YamlMime:ManagedReference
items:
- uid: System.Windows.DragEventArgs
  id: DragEventArgs
  children:
  - System.Windows.DragEventArgs.AllowedEffects
  - System.Windows.DragEventArgs.Data
  - System.Windows.DragEventArgs.Effects
  - System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.DragEventArgs.KeyStates
  langs:
  - csharp
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
  type: Class
  summary: "Contiene argomenti attinenti a tutti gli eventi di trascinamento e rilascio (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, e <xref:System.Windows.DragDrop.Drop>).</xref:System.Windows.DragDrop.Drop> </xref:System.Windows.DragDrop.DragOver> </xref:System.Windows.DragDrop.DragLeave> </xref:System.Windows.DragDrop.DragEnter>"
  syntax:
    content: 'public sealed class DragEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.DragEventArgs.AllowedEffects
  id: AllowedEffects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Ottiene un membro del <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumerazione che specifica le operazioni consentite dall&quot;origine dell&quot;evento di trascinamento."
  remarks: "Quando viene avviata un&quot;operazione di trascinamento e rilascio chiamando il <xref:System.Windows.DragDrop.DoDragDrop%2A>(metodo), le operazioni consentite sono specificate con un membro con il <xref:System.Windows.DragDropEffects>enumerazione.</xref:System.Windows.DragDropEffects> </xref:System.Windows.DragDrop.DoDragDrop%2A> Ad esempio, quando si trascina un file di sola lettura l&quot;initiator di trascinamento deve indicare che il file può essere copiato, ma non è stato spostato.  Prima di tentare di eseguire un&quot;operazione sui dati trascinati, esaminare questa proprietà per assicurarsi che l&quot;operazione è consentita."
  syntax:
    content: public System.Windows.DragDropEffects AllowedEffects { get; }
    return:
      type: System.Windows.DragDropEffects
      description: "Membro di <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumerazione che specifica le operazioni consentite dall&quot;origine dell&quot;evento di trascinamento."
  overload: System.Windows.DragEventArgs.AllowedEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Data
  id: Data
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Ottiene un oggetto dati che contiene i dati associati all&quot;evento di trascinamento corrispondente."
  syntax:
    content: public System.Windows.IDataObject Data { get; }
    return:
      type: System.Windows.IDataObject
      description: "Un oggetto dati che contiene i dati associati all&quot;evento di trascinamento corrispondente..."
  overload: System.Windows.DragEventArgs.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Effects
  id: Effects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Ottiene o imposta l&quot;operazione di trascinamento e rilascio di destinazione."
  remarks: "Per impostazione predefinita, l&quot;effetto specificato in questa proprietà determina il cursore del mouse per la destinazione di un&quot;operazione di trascinamento e rilascio. Ciò è utile per fornire feedback all&quot;utente per l&quot;operazione che si verifica quando viene eliminato l&quot;oggetto corrispondente."
  syntax:
    content: public System.Windows.DragDropEffects Effects { get; set; }
    return:
      type: System.Windows.DragDropEffects
      description: "Membro di <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumerazione che specifica l&quot;operazione di trascinamento e rilascio di destinazione."
  overload: System.Windows.DragEventArgs.Effects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Restituisce un punto di rilascio è relativo a un oggetto specificato <xref href=&quot;System.Windows.IInputElement&quot;> </xref>."
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Un <xref href=&quot;System.Windows.IInputElement&quot;> </xref> oggetto per cui ottenere un punto di rilascio relativo."
    return:
      type: System.Windows.Point
      description: "Un punto di rilascio relativa all&quot;elemento specificato in <code> relativeTo </code>."
  overload: System.Windows.DragEventArgs.GetPosition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Raised when <code>relativeTo</code> is **null**."
  platform:
  - net462
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "Da aggiungere."
    - id: genericTarget
      type: System.Object
      description: "Da aggiungere."
  overload: System.Windows.DragEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.KeyStates
  id: KeyStates
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Ottiene un&quot;enumerazione di flag che indica lo stato corrente dei tasti MAIUSC, CTRL e ALT, nonché lo stato dei pulsanti del mouse."
  remarks: "È possibile regolare l&quot;effetto di un&quot;operazione di trascinamento e rilascio in base allo stato di una chiave specifica. Ad esempio, dati possono essere copiati o spostati a seconda se viene premuto il tasto CTRL o MAIUSC durante l&quot;operazione di trascinamento e rilascio."
  syntax:
    content: public System.Windows.DragDropKeyStates KeyStates { get; }
    return:
      type: System.Windows.DragDropKeyStates
      description: "Uno o più membri del <xref href=&quot;System.Windows.DragDropKeyStates&quot;> </xref> enumerazione flag."
  overload: System.Windows.DragEventArgs.KeyStates*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.DragEventArgs.AllowedEffects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
- uid: System.Windows.DragDropEffects
  parent: System.Windows
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.DragDropEffects
- uid: System.Windows.DragEventArgs.Data
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
- uid: System.Windows.IDataObject
  parent: System.Windows
  isExternal: false
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.IDataObject
- uid: System.Windows.DragEventArgs.Effects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DragEventArgs.KeyStates
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
- uid: System.Windows.DragDropKeyStates
  parent: System.Windows
  isExternal: false
  name: DragDropKeyStates
  nameWithType: DragDropKeyStates
  fullName: System.Windows.DragDropKeyStates
- uid: System.Windows.DragEventArgs.AllowedEffects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
- uid: System.Windows.DragEventArgs.Data*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
- uid: System.Windows.DragEventArgs.Effects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: DragEventArgs.GetPosition
- uid: System.Windows.DragEventArgs.InvokeEventHandler*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: DragEventArgs.InvokeEventHandler
- uid: System.Windows.DragEventArgs.KeyStates*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
