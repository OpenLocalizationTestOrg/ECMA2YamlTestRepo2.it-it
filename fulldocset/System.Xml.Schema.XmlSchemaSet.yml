### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSet
  id: XmlSchemaSet
  children:
  - System.Xml.Schema.XmlSchemaSet.#ctor
  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaSet.CompilationSettings
  - System.Xml.Schema.XmlSchemaSet.Compile
  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaSet.Count
  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  - System.Xml.Schema.XmlSchemaSet.GlobalElements
  - System.Xml.Schema.XmlSchemaSet.GlobalTypes
  - System.Xml.Schema.XmlSchemaSet.IsCompiled
  - System.Xml.Schema.XmlSchemaSet.NameTable
  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Schemas
  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaSet.XmlResolver
  langs:
  - csharp
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
  type: Class
  summary: "Contiene una cache degli schemi XML Schema definition language (XSD)."
  remarks: "> [!IMPORTANT]>-Non utilizzano gli schemi da origini sconosciute o non attendibili o posizioni. In questo modo può pregiudicare la sicurezza del codice.   >-XML Schema (inclusi gli schemi inline) sono intrinsecamente vulnerabili ad attacchi denial of service; non le accetti in scenari non attendibili.   >-Messaggi di errore di convalida dello schema e le eccezioni possono esporre informazioni riservate riguardanti il modello di contenuto o i percorsi URI per il file di schema. Prestare attenzione a non esporre queste informazioni per i chiamanti non attendibili.   >-Considerazioni aggiuntive sulla sicurezza sono illustrati nella sezione &quot;Considerazioni sulla sicurezza&quot;.       XmlSchemaSet è una cache o una libreria in cui è possibile archiviare schemi XML Schema definition language (XSD). XmlSchemaSet migliora le prestazioni memorizzando nella cache degli schemi nella cache anziché accedervi da un file o un URL. Ogni schema è identificato dallo spazio dei nomi URI e percorso che è stato specificato quando lo schema è stato aggiunto al set. Utilizzare il <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>proprietà a cui assegnare l&quot;oggetto XmlSchemaSet un lettore XML devono utilizzare per la convalida dei dati.</xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>      ## Considerazioni sulla sicurezza, non utilizzare gli schemi da origini sconosciute o non attendibili. In questo modo può pregiudicare la sicurezza del codice. Includono spazi dei nomi esterni o i percorsi a cui fa riferimento, vengono risolte importazione e ridefinizione gli elementi di uno schema URI di base dello schema che li include o Importa. Ad esempio, se l&quot;URI di base dell&quot;inclusione o importazione dello schema è vuoto o `null`, i percorsi esterni vengono risolti in relazione alla directory corrente. La <xref:System.Xml.XmlUrlResolver>classe viene utilizzata per la risoluzione degli schemi esterni per impostazione predefinita.</xref:System.Xml.XmlUrlResolver> Per disabilitare la risoluzione di inclusione, importazione e ridefinire gli elementi di uno schema, impostare il <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>proprietà `null`.</xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>      -La classe utilizza XmlSchemaSet la <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>classe per analizzare e far corrispondere le espressioni regolari in uno schema XML.</xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> La convalida degli aspetti dello schema con espressioni regolari in uno schema XML può comportare un aumento nell&quot;utilizzo della CPU e deve essere evitata negli scenari di disponibilità elevata.      -Eccezioni generate in seguito all&quot;utilizzo della classe XmlSchemaSet, ad esempio la <xref:System.Xml.Schema.XmlSchemaException>classe può contenere informazioni riservate che non devono essere esposte in scenari non attendibili.</xref:System.Xml.Schema.XmlSchemaException> Ad esempio, il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>proprietà di un <xref:System.Xml.Schema.XmlSchemaException>restituisce il percorso dell&quot;URI del file di schema che ha causato l&quot;eccezione.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>proprietà non deve essere esposta in scenari non attendibili.</xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Le eccezioni devono essere gestite correttamente in modo che queste informazioni riservate non viene esposto in scenari non attendibili."
  example:
  - "The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \n  \n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \n  \n## Input  \n The sample uses the following two input files.  \n  \n **booksSchemaFail.xml:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \n  \n **books.xsd:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \n  \n## Output  \n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \n  \n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'."
  syntax:
    content: public class XmlSchemaSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> classe."
  syntax:
    content: public XmlSchemaSet ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> classe con specificata <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "Il <xref:System.Xml.XmlNameTable>oggetto da usare.</xref:System.Xml.XmlNameTable>"
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.XmlNameTable>oggetto passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlNameTable>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Aggiunge il determinato <xref:System.Xml.Schema.XmlSchema>per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  remarks: "Se il <xref:System.Xml.Schema.XmlSchema>esiste già nell&quot;oggetto di <xref:System.Xml.Schema.XmlSchemaSet>, il metodo Add non esegue alcuna operazione.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchema>       La funzionalità di questo metodo è identica a quello del <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metodo.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto da aggiungere al <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Un <xref:System.Xml.Schema.XmlSchema>Se lo schema è valido.</xref:System.Xml.Schema.XmlSchema> Se lo schema non è valido e un <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> non viene specificato, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito e viene generato l&quot;evento di convalida appropriato. In caso contrario, un <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> viene generata un&quot;eccezione."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Lo schema non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  id: Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Aggiunge tutti di schemi XML Schema definition language (XSD) nel determinato <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Prima di aggiungere uno schema per un <xref:System.Xml.Schema.XmlSchemaSet>, deve essere pre-elaborato correttamente.</xref:System.Xml.Schema.XmlSchemaSet> Pre-elaborazione vengono eseguite le seguenti attività di base.      1.  Lo schema viene verificato la validità strutturale in base alle regole di W3C XML Schema, ma lo schema non è completamente convalidato.      2.  I riferimenti ai componenti di schema interni ed esterni vengono risolti. Gli eventuali schemi importati o inclusi recuperati vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli schemi importati vengono aggiunti come separato <xref:System.Xml.Schema.XmlSchema>, oggetti e gli schemi inclusi diventano parte di incluso <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Se il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà del <xref:System.Xml.Schema.XmlSchemaSet>da aggiungere è `true`, tutti gli schemi di <xref:System.Xml.Schema.XmlSchemaSet>per aggiungere vengono aggiunti a <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Se il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà del <xref:System.Xml.Schema.XmlSchemaSet>da aggiungere è `false`, ciascuno schema aggiunto viene pre-elaborato prima di essere aggiunti.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Se uno degli schemi appena aggiunta <xref:System.Xml.Schema.XmlSchemaSet>non riesce a essere pre-elaborato, non gli schemi vengono aggiunti; al contrario, un <xref:System.Xml.Schema.XmlSchemaException>viene generata un&quot;eccezione.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet> Di conseguenza, l&quot;esempio di due codice seguenti non sono equivalenti.      ```vb#   &quot; First example   schemaSet.Add(schemaSet1)      &quot; Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```Esempi di due codice precedenti non sono equivalenti. Nel primo esempio, se esiste uno schema non valido `schemaSet1` e il relativo <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà è impostata su `false`, non gli schemi vengono aggiunti a `schemaSet`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Nel secondo esempio, può essere aggiunto un numero di schemi `schemaSet` prima viene rilevato uno schema non valido e viene generata un&quot;eccezione."
  example:
  - "The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \n  \n```vb#  \nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet2.Add(schemaSet1)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \nschemaSet2.Add(schemaSet1);  \n```"
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> oggetto."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Uno schema di <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> oggetto passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Aggiunge lo schema di XML Schema definition language (XSD) all&quot;URL specificato per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Prima di aggiungere uno schema per un <xref:System.Xml.Schema.XmlSchemaSet>, deve essere pre-elaborato correttamente.</xref:System.Xml.Schema.XmlSchemaSet> Pre-elaborazione vengono eseguite le seguenti attività di base.      1.  Lo schema viene verificato la validità strutturale in base alle regole di W3C XML Schema, ma lo schema non è completamente convalidato.      2.  I riferimenti ai componenti di schema interni ed esterni vengono risolti. Gli eventuali schemi importati o inclusi recuperati vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli schemi importati vengono aggiunti come separato <xref:System.Xml.Schema.XmlSchema>, oggetti e gli schemi inclusi diventano parte di incluso <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Di seguito sono riportate note importanti relative all&quot;utilizzo del metodo Add.      -Aggiunta di uno schema per il <xref:System.Xml.Schema.XmlSchemaSet>con lo stesso spazio dei nomi e lo schema URL del percorso di destinazione come schema già contenuto all&quot;interno di <xref:System.Xml.Schema.XmlSchemaSet>restituirà l&quot;oggetto dello schema originale.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      -Quando un nuovo schema viene aggiunto a un <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà del <xref:System.Xml.Schema.XmlSchemaSet>è impostato su `false`.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -Qualsiasi elemento di inclusione o importazione, rilevato in uno schema XML viene risolti quando viene chiamato il metodo Add. La mancata risoluzione includono gli elementi e importazione in un avviso di convalida dello schema e, se non <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>è stato specificato per il <xref:System.Xml.Schema.XmlSchemaSet>oggetto, questo avviso non verrà segnalato.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>      -Se uno schema con lo stesso spazio dei nomi uno schema che esiste già nella <xref:System.Xml.Schema.XmlSchemaSet>viene aggiunto per il <xref:System.Xml.Schema.XmlSchemaSet>, entrambi gli schemi vengono aggiunti.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>          > [!NOTE] > Questo comportamento è diverso da obsoleta <xref:System.Xml.Schema.XmlSchemaCollection>oggetto.</xref:System.Xml.Schema.XmlSchemaCollection>      -Il metodo Add del <xref:System.Xml.Schema.XmlSchemaSet>ha la possibilità di utilizzare lo spazio dei nomi di destinazione definito in uno schema, anziché richiedere che lo spazio dei nomi di destinazione venga specificato come parametro quando viene chiamato il metodo Add.</xref:System.Xml.Schema.XmlSchemaSet> Specifica `null` nel `targetNamespace` indica al parametro del metodo Add di <xref:System.Xml.Schema.XmlSchemaSet>per utilizzare lo spazio dei nomi di destinazione definito nello schema, come illustrato nell&quot;esempio di codice seguente.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, &quot;books.xsd&quot;)      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;)       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;books.xsd&quot;);      foreach(XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;))   {       schema.Write(Console.Out);   }   ```Nell&quot;esempio di codice precedente, `null` è specificato come il `targetNamespace` parametro al metodo Add. Di conseguenza, il `targetNamespace` definito in Books. XML file viene utilizzato. In questo caso, sarebbe identico se http://www.contoso.com/books fosse stato specificato come il risultato della chiamata al metodo Add di `targetNamespace` parametro.      -W3C XML Schema consente schemi senza uno spazio dei nomi di destinazione per essere inclusi negli schemi con uno spazio dei nomi di destinazione definito. Lo schema senza uno spazio dei nomi di destinazione definito in questo caso, viene convertito nello spazio dei nomi di destinazione dello schema di inclusione. Lo schema incluso viene trattato come se disponesse di tale spazio dei nomi di destinazione definito. Analogamente, è possibile aggiungere schemi senza uno spazio dei nomi di destinazione per il <xref:System.Xml.Schema.XmlSchemaSet>e inseriti nello spazio dei nomi di destinazione specificato dal metodo Add, come illustrato nell&quot;esempio seguente.</xref:System.Xml.Schema.XmlSchemaSet>      ```   <xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>       <xs:element name=&quot;A&quot; type=&quot;xs:string&quot; />   </xs:schema>   ```Se lo schema precedente viene aggiunto il <xref:System.Xml.Schema.XmlSchemaSet>con lo spazio dei nomi di destinazione http://www.contoso.com/new/targetnamespace (come illustrato nel codice seguente), viene considerato come se fosse lo spazio dei nomi dichiarato nello schema `http://www.contoso.com/new/targetnamespace`.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;)      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;);   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"
  example:
  - "The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n```  \n  \n The example uses the `books.xsd` file as input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Lo schema `targetNamespace` , proprietà o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare il `targetNamespace` specificato nello schema."
    - id: schemaUri
      type: System.String
      description: "L&quot;URL che specifica lo schema da caricare."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Un <xref:System.Xml.Schema.XmlSchema>Se lo schema è valido.</xref:System.Xml.Schema.XmlSchema> Se lo schema non è valido e un <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> non viene specificato, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito e viene generato l&quot;evento di convalida appropriato. In caso contrario, un <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> viene generata un&quot;eccezione."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Lo schema non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;URL passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o <xref:System.String.Empty>.</xref:System.String.Empty>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Aggiunge lo schema XML Schema definition language (XSD) contenuto nel <xref:System.Xml.XmlReader>per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Prima di aggiungere uno schema per un <xref:System.Xml.Schema.XmlSchemaSet>, deve essere pre-elaborato correttamente.</xref:System.Xml.Schema.XmlSchemaSet> Pre-elaborazione vengono eseguite le seguenti attività di base.      1.  Lo schema viene verificato la validità strutturale in base alle regole di W3C XML Schema, ma lo schema non è completamente convalidato.      2.  I riferimenti ai componenti di schema interni ed esterni vengono risolti. Gli eventuali schemi importati o inclusi recuperati vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli schemi importati vengono aggiunti come separato <xref:System.Xml.Schema.XmlSchema>, oggetti e gli schemi inclusi diventano parte di incluso <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Di seguito sono riportate note importanti relative all&quot;utilizzo del metodo Add.      -Ha recuperato gli schemi importati o inclusi dagli schemi contenuti <xref:System.Xml.XmlReader>vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader>      -Se il <xref:System.Xml.XmlReader>non è posizionato sull&quot;elemento radice, un <xref:System.Xml.Schema.XmlSchemaException>viene generata un&quot;eccezione a meno che l&quot;elemento corrente è un elemento.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.XmlReader> Se l&quot;elemento corrente è un `xs:schema` elemento, in cui viene letto il documento dello schema di <xref:System.Xml.Schema.XmlSchemaSet>; in caso contrario, un <xref:System.Xml.Schema.XmlSchemaException>, viene generata perché lo schema non è valido.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet>      -Se il <xref:System.Xml.XmlReader>è posizionato su una sequenza di nodi XML, viene aggiunto solo il primo nodo nella sequenza.</xref:System.Xml.XmlReader>      -Se lo schema è stato creato da un <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>chiamata al metodo, il valore della <xref:System.Xml.Schema.XmlSchemaValidationFlags>proprietà viene ignorata, poiché l&quot;elaborazione degli schemi inline non viene applicata per i documenti di W3C XML Schema.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>      -La <xref:System.Xml.XmlResolver>proprietà del <xref:System.Xml.XmlReader>non viene utilizzato per risolvere i riferimenti a spazi dei nomi o schema percorsi in includono e importazione di elementi.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlResolver> Al contrario, il <xref:System.Xml.XmlResolver>proprietà del <xref:System.Xml.Schema.XmlSchemaSet>viene utilizzato.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      -Il metodo Add del <xref:System.Xml.Schema.XmlSchemaSet>ha la possibilità di utilizzare lo spazio dei nomi di destinazione definito in uno schema, anziché richiedere che lo spazio dei nomi di destinazione venga specificato come parametro quando viene chiamato il metodo Add.</xref:System.Xml.Schema.XmlSchemaSet> Specifica di `null` o <xref:System.String.Empty?displayProperty=fullName>alla Aggiungi metodo indica il <xref:System.Xml.Schema.XmlSchemaSet>per utilizzare lo spazio dei nomi di destinazione definito nello schema.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.String.Empty?displayProperty=fullName> Per un esempio di questo comportamento, vedere il <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metodo.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Le altre funzionalità di questo metodo sono identica a quello del <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metodo.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  example:
  - "The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", New XmlTextReader(\"books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", new XmlTextReader(\"books.xsd\");  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Lo schema `targetNamespace` , proprietà o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare il `targetNamespace` specificato nello schema."
    - id: schemaDocument
      type: System.Xml.XmlReader
      description: "Il <xref:System.Xml.XmlReader>oggetto.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Un <xref:System.Xml.Schema.XmlSchema>Se lo schema è valido.</xref:System.Xml.Schema.XmlSchema> Se lo schema non è valido e un <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> non viene specificato, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito e viene generato l&quot;evento di convalida appropriato. In caso contrario, un <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> viene generata un&quot;eccezione."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Lo schema non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.XmlReader>oggetto passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  id: CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene o imposta il <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "La <xref:System.Xml.Schema.XmlSchemaCompilationSettings>classe specifica le opzioni di convalida (Unique Particle Attribution Attribution) per <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaCompilationSettings> Per ulteriori informazioni sull&quot;abilitazione di controlli di convalida UPA, vedere il <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>proprietà.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaCompilationSettings
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;></xref> for the <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>. Il valore predefinito è un <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> istanza con la <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>proprietà impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>"
  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  id: Compile
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Compila gli schemi XML Schema definition language (XSD) aggiunto al <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> in un singolo schema logico."
  remarks: "Questo metodo viene chiamato automaticamente quando la convalida è necessaria e <xref:System.Xml.Schema.XmlSchemaSet>non è stato compilato in precedenza, ad esempio, quando un <xref:System.Xml.Schema.XmlSchemaSet>viene utilizzato come input per creare un <xref:System.Xml.XmlReader>oggetto il <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>proprietà di un <xref:System.Xml.XmlReaderSettings>oggetto.</xref:System.Xml.XmlReaderSettings> </xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Se il <xref:System.Xml.Schema.XmlSchemaSet>è già stato compilato, questo metodo non Ricompila gli schemi.</xref:System.Xml.Schema.XmlSchemaSet> Se questo metodo viene eseguito correttamente, il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>è impostata su `true`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Gli schemi che sono già stati compilati da un <xref:System.Xml.Schema.XmlSchemaSet>non vengono ricompilate.</xref:System.Xml.Schema.XmlSchemaSet> Tuttavia, gli schemi che sono stati compilati utilizzando il metodo di compilazione del <xref:System.Xml.Schema.XmlSchema>verrà ricompilato.</xref:System.Xml.Schema.XmlSchema>      > [!NOTE] > È necessario chiamare il <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metodo se è stato modificato uno schema (o uno dei relativi inclusi o importati) dopo averlo aggiunto al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Il <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metodo verifica la validità strutturale in base alle regole di W3C XML Schema dello schema.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Tuttavia, non eseguirà un controllo di convalida completa. Risolverà inoltre riferimenti a componenti interni ed esterni dello schema. Gli eventuali schemi importati o inclusi recuperati vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli schemi importati vengono aggiunti come distinti <xref:System.Xml.Schema.XmlSchema>gli oggetti mentre gli schemi inclusi vengono integrati di incluso <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Se ha esito positivo, la chiamata a rielaborare il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>è impostata su false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n```"
  syntax:
    content: public void Compile ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.Compile*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Si è verificato un errore durante la convalida e la compilazione degli schemi nel <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Indica se uno schema XML Schema definition language (XSD) con l&quot;URI dello spazio dei nomi di destinazione specificato nella <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Gli schemi aggiunti alla indirettamente il <xref:System.Xml.Schema.XmlSchemaSet>vengono rilevati dal metodo Contains; ad esempio, importare gli schemi.</xref:System.Xml.Schema.XmlSchemaSet> Di conseguenza, se uno schema per lo spazio dei nomi http://www.contoso.com/retail che importa uno schema per lo spazio dei nomi http://www.contoso.com/books viene aggiunto per il <xref:System.Xml.Schema.XmlSchemaSet>, la chiamata di Contains con `http://www.contoso.com/books` come parametro, restituisce `true`.</xref:System.Xml.Schema.XmlSchemaSet>"
  syntax:
    content: public bool Contains (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Lo schema `targetNamespace` proprietà."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uno schema con l&quot;URI dello spazio dei nomi di destinazione specificato si trova il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Indica se il linguaggio di definizione di XML Schema (XSD) specificato <xref:System.Xml.Schema.XmlSchema>oggetto è incluso il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Xml.Schema.XmlSchema>oggetto è incluso il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Copia tutti i <xref:System.Xml.Schema.XmlSchema>oggetti dal <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> nella matrice specificata, a partire dall&quot;indice specificato.</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemas(schemaSet.Count) As XmlSchema  \nschemaSet.CopyTo(schemas, 0)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \nschemaSet.CopyTo(schemas, 0);  \n```"
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchema[]
      description: "Matrice da cui copiare gli oggetti."
    - id: index
      type: System.Int32
      description: "L&quot;indice nella matrice in cui ha inizio la copia."
  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene il numero di logica XML Schema definition) gli schemi XSD ( <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Se sono disponibili due schemi per lo spazio dei nomi `http://www.contoso.com` nel <xref:System.Xml.Schema.XmlSchemaSet>, la proprietà Count restituirà 1 poiché gli schemi vengono considerati come un singolo schema logico ai fini della convalida.</xref:System.Xml.Schema.XmlSchemaSet> Tuttavia, se uno schema per lo spazio dei nomi `http://www.contoso.com/retail` importato uno schema per il `http://www.contoso.com/books` dello spazio dei nomi, il valore della proprietà Count sarebbe 2."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di schemi logici di <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  id: GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene tutti gli attributi globali tutte la definizione di XML Schema (schemi XSD) nei <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Raccolta di attributi globali."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  id: GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene tutti gli elementi globali tutte la definizione di XML Schema (schemi XSD) nei <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Raccolta di elementi globali."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  id: GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene tutti i tipi semplici e complessi globali tutti il XML Schema Definition language (XSD) gli schemi nella <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "La proprietà GlobalTypes restituisce sempre un tipo che rappresenta il `xs:anyType` tipo complesso."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Raccolta di tipi semplici e complessi globali."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  id: IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene un valore che indica se gli schemi XML Schema definition language (XSD) nei <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> sono stati compilati."
  remarks: "La proprietà IsCompiled non verrà modificata se gli schemi vengono modificati in <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli aggiornamenti dei singoli schemi di <xref:System.Xml.Schema.XmlSchemaSet>non vengono rilevate.</xref:System.Xml.Schema.XmlSchemaSet> Di conseguenza, è possibile la proprietà IsCompiled `true` anche se uno degli schemi contenuti in cui <xref:System.Xml.Schema.XmlSchemaSet>è stato modificato, fino a quando non sono stati aggiunti o rimossi schemi da <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.
  syntax:
    content: public bool IsCompiled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli schemi nel <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> sono stati compilati dall&quot;ultima volta che uno schema è stato aggiunto o rimosso il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene il valore predefinito <xref:System.Xml.XmlNameTable>utilizzato il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> durante il caricamento di nuovi schemi di XML Schema definition language (XSD).</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "Tabella degli oggetti stringa atomizzati."
  overload: System.Xml.Schema.XmlSchemaSet.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  id: Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Rimuove lo schema di XML Schema definition language (XSD) specificato da di <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Rimozione di uno schema dal <xref:System.Xml.Schema.XmlSchemaSet>Imposta il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.Remove(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.Remove(schema);  \n    }  \n}  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto da rimuovere dal <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto rimosso dal <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se lo schema non trovato nel <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Remove*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Lo schema non è uno schema valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.Schema.XmlSchema>passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  id: RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Rimuove lo schema di XML Schema definition language (XSD) specificato e tutti gli schemi importati dal <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Il metodo RemoveRecursive rimuove lo schema specificato e tutti gli schemi importati dal <xref:System.Xml.Schema.XmlSchemaSet>, fino a quando non sono presenti dipendenze nello schema o nei relativi schemi importati.</xref:System.Xml.Schema.XmlSchemaSet> Se sono presenti dipendenze nello schema o i relativi schemi importati nella <xref:System.Xml.Schema.XmlSchemaSet>, nessun elemento viene rimosso e restituito RemoveRecursive `false`.</xref:System.Xml.Schema.XmlSchemaSet> Se `false` viene restituito e un <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>è definito, viene inviato un avviso per il gestore dell&quot;evento che descrive le dipendenze.</xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>       Se lo schema specificato Importa altri schemi e lo schema specificato in precedenza è stata rimossa con il <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>metodo RemoveRecursive metodo non rimuoverà gli schemi importati e restituirà `false`.</xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> Ad esempio, se `parentSchema` Importa `childSchema1` e `childSchema2` verrà rimosso solo il codice seguente `parentSchema`, ma non importato `childSchema1` e `childSchema2` schemi: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` rimuoverà il codice seguente il `parentSchema` e gli schemi importati: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` RemoveRecursive il metodo non ha effetto sullo stato del <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>proprietà.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.RemoveRecursive(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.RemoveRecursive(schema);  \n    }  \n}  \n```"
  syntax:
    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);
    parameters:
    - id: schemaToRemove
      type: System.Xml.Schema.XmlSchema
      description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto da rimuovere dal <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Xml.Schema.XmlSchema>oggetto e tutte le importazioni sono state rimosso correttamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.Schema.XmlSchema>passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  id: Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Rielabora un schema XSD (linguaggio) di XML Schema definition che contiene già il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Rielaborazione di uno schema esegue tutti i passaggi di pre-elaborazione eseguiti su uno schema quando la <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metodo viene chiamato.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A> Se ha esito positivo, la chiamata a rielaborare il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>è impostata su `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Il metodo di rielaborazione deve essere utilizzato dopo uno schema nel <xref:System.Xml.Schema.XmlSchemaSet>è stato modificato, dopo il <xref:System.Xml.Schema.XmlSchemaSet>ha eseguito la compilazione.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > È necessario chiamare il metodo di rielaborazione se è stato modificato uno schema (o uno dei relativi inclusi o importati) dopo averlo aggiunto al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Il metodo di rielaborazione verifica la validità strutturale in base alle regole di W3C XML Schema dello schema. Tuttavia, non eseguirà un controllo di convalida completa. Risolverà inoltre riferimenti a componenti interni ed esterni dello schema. Gli eventuali schemi importati o inclusi recuperati vengono aggiunti anche al <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Gli schemi importati vengono aggiunti come distinti <xref:System.Xml.Schema.XmlSchema>gli oggetti mentre gli schemi inclusi vengono integrati di incluso <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Se ha esito positivo, la chiamata a rielaborare il <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>è impostata su false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nDim schema As XmlSchema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n  \nDim element As XmlSchemaElement = New XmlSchemaElement()  \nschema.Items.Add(element)  \nelement.Name = \"book\"  \nelement.SchemaTypeName = New XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\")  \n  \nschemaSet.Reprocess(schema)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nXmlSchema schema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n  \nXmlSchemaElement element = new XmlSchemaElement();  \nschema.Items.Add(element);  \nelement.Name = \"book\";  \nelement.SchemaTypeName = new XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\");  \n  \nschemaSet.Reprocess(schema);  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Lo schema da rielaborare."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Un <xref:System.Xml.Schema.XmlSchema>Se lo schema è uno schema valido.</xref:System.Xml.Schema.XmlSchema> Se lo schema non è valido e un <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> è specificato, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito e viene generato l&quot;evento di convalida appropriato. In caso contrario, un <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> viene generata un&quot;eccezione."
  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Lo schema non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto passato come parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref:System.Xml.Schema.XmlSchema>oggetto passato come un parametro non esiste già nel <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  id: Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Restituisce una raccolta di tutte la definizione di XML Schema (schemi XSD) nei <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Questo metodo restituisce gli schemi aggiunti indirettamente il <xref:System.Xml.Schema.XmlSchemaSet>perché sono stati importati.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Schemi il metodo è l&quot;equivalente del <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>metodo obsoleto <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Un <xref:System.Collections.ICollection>contenente tutti gli schemi che sono stati aggiunti i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Collections.ICollection> Se non gli schemi sono stati aggiunti per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, vuota <xref:System.Collections.ICollection>oggetto viene restituito.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  id: Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Restituisce una raccolta di tutte la definizione di XML Schema (schemi XSD) nei <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> che appartengono allo spazio dei nomi specificato."
  remarks: "Se il `targetNamespace` parametro `null` o <xref:System.String.Empty>, quindi vengono restituiti tutti gli schemi senza uno spazio dei nomi.</xref:System.String.Empty>       Questo metodo restituisce gli schemi aggiunti indirettamente il <xref:System.Xml.Schema.XmlSchemaSet>perché sono stati importati.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Schemi il metodo è l&quot;equivalente del <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>metodo obsoleto <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Lo schema `targetNamespace` proprietà."
    return:
      type: System.Collections.ICollection
      description: "Un <xref:System.Collections.ICollection>contenente tutti gli schemi che sono stati aggiunti i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> che appartengono allo spazio dei nomi specificato.</xref:System.Collections.ICollection> Se non gli schemi sono stati aggiunti per il <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, vuota <xref:System.Collections.ICollection>oggetto viene restituito.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Specifica un gestore eventi per ricevere informazioni sugli errori di convalida dello schema di XML Schema definition language (XSD)."
  remarks: "Imposta un gestore eventi per la ricezione di informazioni sugli errori di convalida dello schema quando la <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>o <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>metodi di <xref:System.Xml.Schema.XmlSchemaSet>vengono chiamati.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Se non è definito un gestore eventi, un <xref:System.Xml.Schema.XmlSchemaException>viene generata per gli errori di convalida in cui <xref:System.Xml.Schema.XmlSeverityType>è <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaException> Non vengono generate eccezioni per gli errori di convalida con un <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType>"
  example:
  - "The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \n  \n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \n  \n The example uses the books.xml file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \n  \n The example uses the books.xsd file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Imposta il <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizzato per risolvere gli spazi dei nomi o percorsi a cui fa riferimento includono e importazione di elementi di uno schema."
  remarks: "Il <xref:System.Xml.XmlResolver>di un <xref:System.Xml.Schema.XmlSchemaSet>viene utilizzato per risolvere gli spazi dei nomi o percorsi a cui fa riferimento di includono e importazione di elementi di uno schema, ogni volta che viene aggiunto uno schema tramite il <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>o <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metodi.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      > [!IMPORTANT] > Includono spazi dei nomi esterni o i percorsi a cui fa riferimento, importazione e ridefinizione gli elementi di uno schema vengono risolte utilizzando l&quot;URI di base dello schema che li include o Importa. Ad esempio, se l&quot;URI di base dell&quot;inclusione o importazione dello schema è vuoto o `null`, i percorsi esterni vengono risolti in relazione alla directory corrente. La <xref:System.Xml.XmlUrlResolver>classe viene utilizzata per la risoluzione degli schemi esterni per impostazione predefinita.</xref:System.Xml.XmlUrlResolver> Per disabilitare la risoluzione di inclusione, importazione e ridefinizione gli elementi di uno schema, impostare la proprietà XmlResolver su `null`."
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Il <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizzato per risolvere gli spazi dei nomi o percorsi a cui fa riferimento includono e importazione di elementi di uno schema."
  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaCompilationSettings
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaCompilationSettings
  nameWithType: XmlSchemaCompilationSettings
  fullName: System.Xml.Schema.XmlSchemaCompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: XmlSchema
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaSet.Count
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaSet.#ctor*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add
  nameWithType: XmlSchemaSet.Add
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile
  nameWithType: XmlSchemaSet.Compile
- uid: System.Xml.Schema.XmlSchemaSet.Contains*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains
  nameWithType: XmlSchemaSet.Contains
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo
  nameWithType: XmlSchemaSet.CopyTo
- uid: System.Xml.Schema.XmlSchemaSet.Count*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove
  nameWithType: XmlSchemaSet.Remove
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive
  nameWithType: XmlSchemaSet.RemoveRecursive
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess
  nameWithType: XmlSchemaSet.Reprocess
- uid: System.Xml.Schema.XmlSchemaSet.Schemas*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas
  nameWithType: XmlSchemaSet.Schemas
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
