### YamlMime:ManagedReference
items:
- uid: System.Activities.WorkflowApplication
  id: WorkflowApplication
  children:
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  - System.Activities.WorkflowApplication.Abort
  - System.Activities.WorkflowApplication.Abort(System.String)
  - System.Activities.WorkflowApplication.Aborted
  - System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  - System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.Cancel
  - System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  - System.Activities.WorkflowApplication.Completed
  - System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  - System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  - System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  - System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  - System.Activities.WorkflowApplication.Extensions
  - System.Activities.WorkflowApplication.GetBookmarks
  - System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  - System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  - System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  - System.Activities.WorkflowApplication.Id
  - System.Activities.WorkflowApplication.Idle
  - System.Activities.WorkflowApplication.InstanceStore
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  - System.Activities.WorkflowApplication.Load(System.Guid)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  - System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  - System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  - System.Activities.WorkflowApplication.LoadRunnableInstance
  - System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  - System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.WorkflowApplication.OnNotifyPaused
  - System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  - System.Activities.WorkflowApplication.OnUnhandledException
  - System.Activities.WorkflowApplication.Persist
  - System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  - System.Activities.WorkflowApplication.PersistableIdle
  - System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  - System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  - System.Activities.WorkflowApplication.Run
  - System.Activities.WorkflowApplication.Run(System.TimeSpan)
  - System.Activities.WorkflowApplication.SupportsInstanceKeys
  - System.Activities.WorkflowApplication.Terminate(System.Exception)
  - System.Activities.WorkflowApplication.Terminate(System.String)
  - System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  - System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  - System.Activities.WorkflowApplication.Unload
  - System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  - System.Activities.WorkflowApplication.Unloaded
  langs:
  - csharp
  name: WorkflowApplication
  nameWithType: WorkflowApplication
  fullName: System.Activities.WorkflowApplication
  type: Class
  summary: "Fornisce un host per una singola istanza del flusso di lavoro."
  remarks: "La classe WorkflowApplication fornisce un host per un&quot;istanza del flusso di lavoro singola. Si tratta di un proxy all&quot;istanza del flusso di lavoro effettiva gestita dal runtime del flusso di lavoro. Gli utenti di WorkflowApplication possono indicare al runtime del flusso di lavoro di eseguire azioni su un&quot;istanza del flusso di lavoro chiamando i metodi adatti su un oggetto WorkflowApplication. Se un&quot;azione richiesta non è valida, viene generata un&quot;eccezione.       Uso di WorkflowApplication è possibile eseguire le attività seguenti: 1.  Creare una nuova istanza del flusso di lavoro o caricare un&quot;istanza del flusso di lavoro da un archivio di istanze.      2.  Fornire estensioni da utilizzare da attività all&quot;interno di un&quot;istanza del flusso di lavoro.      3.  Controllare l&quot;esecuzione di un&quot;istanza del flusso di lavoro.      4.  Riprendere un segnalibro creato da un&quot;attività all&quot;interno di un&quot;istanza del flusso di lavoro.      5.  Rendere persistente o scaricare un&quot;istanza del flusso di lavoro.      6.  La notifica degli eventi del ciclo di vita di istanza del flusso di lavoro."
  example:
  - "The following example hosts a workflow using WorkflowApplication. A WorkflowApplication instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/t-system.activities.work_1_1.cs)]"
  syntax:
    content: 'public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance'
  inheritance:
  - System.Object
  - System.Activities.Hosting.WorkflowInstance
  implements: []
  inheritedMembers:
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> classe con la definizione di flusso di lavoro specificata."
  remarks: ''
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity. The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation. When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.  \n  \n```Output  \nWorkflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   \nThe two dice are 1 and 5.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#130](~/add/codesnippet/csharp/m-system.activities.work_15_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#21](~/add/codesnippet/csharp/m-system.activities.work_15_2.cs)]"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "La definizione del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> classe con la definizione di flusso di lavoro specificata e l&quot;identità della definizione."
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "La definizione del flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione."
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,IDictionary<String,Object>)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> classe che utilizza i valori di argomenti e definizione di flusso di lavoro specificata."
  remarks: ''
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name. The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWorkflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  \n500 / 36 = 13 Remainder 32  \nWorkflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#120](~/add/codesnippet/csharp/2961edb8-5268-42fa-8c6d-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#10](~/add/codesnippet/csharp/2961edb8-5268-42fa-8c6d-_2.cs)]"
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary<string,object> inputs);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "La definizione del flusso di lavoro."
    - id: inputs
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "I valori per argomenti definiti nell&quot;attività radice della definizione del flusso di lavoro codificata dal nome dell&quot;argomento."
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)'
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> classe che utilizza la definizione di flusso di lavoro specificata e i valori degli argomenti e identità della definizione."
  syntax:
    content: public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary<string,object> inputs, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "La definizione del flusso di lavoro."
    - id: inputs
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "L&quot;identità di definizione."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "I valori per argomenti definiti nell&quot;attività radice della definizione del flusso di lavoro codificata dal nome dell&quot;argomento."
  overload: System.Activities.WorkflowApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Abort
  id: Abort
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Abort()
  nameWithType: WorkflowApplication.Abort()
  fullName: System.Activities.WorkflowApplication.Abort()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro."
  remarks: "Quando un flusso di lavoro ospitato da un <xref:System.Activities.WorkflowApplication>viene interrotta, il <xref:System.Activities.WorkflowApplication.Aborted%2A>gestore viene richiamato e <xref:System.Activities.WorkflowApplication.Completed%2A>non viene richiamato il gestore.</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication.Aborted%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Abort is called. When the workflow is aborted, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   \nWorkflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  \nException: System.Activities.WorkflowApplicationAbortedException  \nThe workflow has been aborted.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#11](~/add/codesnippet/csharp/m-system.activities.work_17_1.cs)]"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Abort(System.String)
  id: Abort(System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Abort(String)
  nameWithType: WorkflowApplication.Abort(String)
  fullName: System.Activities.WorkflowApplication.Abort(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro per il motivo specificato."
  remarks: "Quando un flusso di lavoro ospitato da un <xref:System.Activities.WorkflowApplication>viene interrotta, il <xref:System.Activities.WorkflowApplication.Aborted%2A>gestore viene richiamato e <xref:System.Activities.WorkflowApplication.Completed%2A>non viene richiamato il gestore.</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication.Aborted%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Abort is called. When the workflow is aborted, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   \nWorkflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  \nException: System.Activities.WorkflowApplicationAbortedException  \nThe reason for aborting the workflow.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#11](~/add/codesnippet/csharp/m-system.activities.work_21_1.cs)]"
  syntax:
    content: public void Abort (string reason);
    parameters:
    - id: reason
      type: System.String
      description: "Il motivo per la richiesta di interruzione."
  overload: System.Activities.WorkflowApplication.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Aborted
  id: Aborted
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
  fullName: System.Activities.WorkflowApplication.Aborted
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il &lt;xref:System.Action%601&gt; che è richiamato quando l&quot;istanza del flusso di lavoro viene interrotta."
  remarks: "Quando un flusso di lavoro ospitato da un <xref:System.Activities.WorkflowApplication>viene interrotta, il Aborted gestore viene richiamato e <xref:System.Activities.WorkflowApplication.Completed%2A>non viene richiamato il gestore.</xref:System.Activities.WorkflowApplication.Completed%2A> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the Aborted handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#5](~/add/codesnippet/csharp/p-system.activities.work_2_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationAbortedEventArgs> Aborted { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationAbortedEventArgs}
      description: "L&quot;azione che viene richiamato quando l&quot;istanza del flusso di lavoro viene interrotta."
  overload: System.Activities.WorkflowApplication.Aborted*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  id: AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: AddInitialInstanceValues(IDictionary<XName,Object>)
  nameWithType: WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  fullName: System.Activities.WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Specifica i valori dei metadati dell&quot;istanza inclusi con la prima persistenza di una nuova istanza."
  syntax:
    content: public void AddInitialInstanceValues (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> writeOnlyValues);
    parameters:
    - id: writeOnlyValues
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
      description: "I valori di metadati da includere con la prima persistenza."
  overload: System.Activities.WorkflowApplication.AddInitialInstanceValues*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  id: BeginCancel(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCancel(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Annulla un&quot;istanza del flusso di lavoro in modo asincrono utilizzando l&quot;oggetto specificato <xref:System.AsyncCallback>e lo stato fornito dall&quot;utente.</xref:System.AsyncCallback>"
  remarks: "Per determinare se l&quot;operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> <xref:System.Activities.WorkflowApplication.EndCancel%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndCancel%2A> Se <xref:System.Activities.WorkflowApplication.EndCancel%2A>viene chiamato prima che venga completata l&quot;operazione di annullamento, si blocca fino al completamento dell&quot;operazione di annullamento.</xref:System.Activities.WorkflowApplication.EndCancel%2A> Per impostazione predefinita, l&quot;operazione di annullamento deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> </xref:System.TimeoutException>       Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginCancel (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di annullamento è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di annullamento asincrona."
  overload: System.Activities.WorkflowApplication.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCancel(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Annulla un&quot;istanza del flusso di lavoro in modo asincrono usando l&quot;intervallo di timeout specificato, <xref:System.AsyncCallback>e lo stato fornito dall&quot;utente.</xref:System.AsyncCallback>"
  remarks: "Per determinare se l&quot;operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> <xref:System.Activities.WorkflowApplication.EndCancel%2A>può essere chiamato dall&quot;interno o dall&quot;esterno del metodo specificato nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndCancel%2A> Se <xref:System.Activities.WorkflowApplication.EndCancel%2A>viene chiamato prima che venga completata l&quot;operazione di annullamento, si blocca fino al completamento dell&quot;operazione di annullamento.</xref:System.Activities.WorkflowApplication.EndCancel%2A> Se l&quot;operazione di annullamento non viene completata nell&quot;intervallo specificato per il `timeOut` parametro, <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</xref:System.Activities.WorkflowApplication.EndCancel%2A> </xref:System.TimeoutException> un       Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di annullamento deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di annullamento è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di annullamento asincrona."
  overload: System.Activities.WorkflowApplication.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  id: BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea un proprietario di istanza predefinito in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, identità della definizione, il filtro di identità, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione."
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "Il filtro di identità."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea un proprietario di istanza predefinito in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, identità della definizione, il filtro di identità, l&quot;intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione."
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "Il filtro di identità."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Elimina un proprietario di istanza predefinito in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Elimina un proprietario di istanza predefinito in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, l&quot;intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera un proprietario di istanza in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;identificatore dell&quot;istanza specificato, archivio di istanze, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "L&quot;identificatore dell&quot;istanza."
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera un proprietario di istanza in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;identificatore dell&quot;istanza specificato, l&quot;archivio di istanze, intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "L&quot;identificatore dell&quot;istanza."
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  id: BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera un proprietario di istanza eseguibile in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera un proprietario di istanza eseguibile in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;archivio di istanze specificato, l&quot;intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;istanza specificata, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(Guid,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando l&quot;identificatore dell&quot;istanza specificato, un metodo di callback e lo stato fornito dall&quot;utente."
  syntax:
    content: public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Un identificatore univoco globale a 128 bit per l&quot;istanza del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Lo stato di un&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;istanza specificata, mappa di aggiornamento, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;istanza specificata, l&quot;intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando l&quot;identificatore dell&quot;istanza specificato, periodo di timeout, il metodo di callback e lo stato fornito dall&quot;utente."
  syntax:
    content: public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Un identificatore univoco globale a 128 bit per l&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Lo stato di un&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono con l&quot;istanza specificata, mappa di aggiornamento, l&quot;intervallo di timeout, callback e lo stato.</xref:System.IAsyncResult>"
  syntax:
    content: public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di caricamento iniziale è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  id: BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoadRunnableInstance(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizia un&quot;operazione per caricare un&quot;istanza del flusso di lavoro eseguibile da <xref:System.Activities.WorkflowApplication.InstanceStore*>.</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "Un&quot;istanza eseguibile è un&quot;istanza per il quale un timer o istanza di un blocco scaduto.       Per determinare se l&quot;operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> Per impostazione predefinita, l&quot;operazione di ripresa deve essere completata in 30 secondi, altrimenti <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> </xref:System.TimeoutException> un       Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione è stata completata."
    - id: state
      type: System.Object
      description: "Un oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona"
  overload: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per caricare un&quot;istanza del flusso di lavoro eseguibile dal <xref:System.Activities.WorkflowApplication.InstanceStore*>utilizzando l&quot;intervallo di timeout specificato.</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "Un&quot;istanza eseguibile è un&quot;istanza per il quale un timer o istanza di un blocco scaduto.       Per determinare se l&quot;operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> Se l&quot;operazione di caricamento non viene completata entro l&quot;intervallo di timeout specificato <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> </xref:System.TimeoutException> un       Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione è stata completata."
    - id: state
      type: System.Object
      description: "Un oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione asincrona"
  overload: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  id: BeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente un&quot;istanza del flusso di lavoro un archivio di istanze in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot;operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> <xref:System.Activities.WorkflowApplication.EndPersist%2A>può essere chiamato dall&quot;interno o dall&quot;esterno del metodo a cui fa riferimento il `callback` parametro.</xref:System.Activities.WorkflowApplication.EndPersist%2A> Se <xref:System.Activities.WorkflowApplication.EndPersist%2A>viene chiamato prima che venga completata l&quot;operazione di persistenza, si blocca fino a quando non viene completata l&quot;operazione di persistenza.</xref:System.Activities.WorkflowApplication.EndPersist%2A> Se l&quot;operazione di persistenza non viene completata entro 30 secondi, <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> </xref:System.TimeoutException> un       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       Questo metodo mantiene un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di persistenza è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Operazione della persistenza asincrona un riferimento."
  overload: System.Activities.WorkflowApplication.BeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginPersist(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente un&quot;istanza del flusso di lavoro un archivio di istanze in modo asincrono utilizzando l&quot;intervallo di timeout specificato, il metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot;operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> <xref:System.Activities.WorkflowApplication.EndPersist%2A>può essere chiamato dall&quot;interno o dall&quot;esterno del metodo a cui fa riferimento il `callback` parametro.</xref:System.Activities.WorkflowApplication.EndPersist%2A> Se <xref:System.Activities.WorkflowApplication.EndPersist%2A>viene chiamato prima che venga completata l&quot;operazione di persistenza, si blocca fino a quando non viene completata l&quot;operazione di persistenza.</xref:System.Activities.WorkflowApplication.EndPersist%2A> Se l&quot;operazione di persistenza non viene completata entro l&quot;intervallo di timeout specificato, <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</xref:System.Activities.WorkflowApplication.EndPersist%2A> </xref:System.TimeoutException> un       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       Questo metodo rende persistente un&quot;istanza di flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di persistenza deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di persistenza è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Operazione della persistenza asincrona un riferimento."
  overload: System.Activities.WorkflowApplication.BeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere un segnalibro utilizzando il valore specificato, un metodo di callback e lo stato."
  remarks: "Per determinare se l&quot;operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> Per impostazione predefinita, l&quot;operazione di ripresa deve essere completata in 30 secondi, altrimenti <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> </xref:System.TimeoutException> un       Questo metodo riprende un segnalibro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Il segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di ripresa è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di ripresa di segnalibro asincrona."
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(String,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, un metodo di callback e lo stato. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  syntax:
    content: public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "Il nome del segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo che viene chiamato al termine dell&quot;operazione asincrona."
    - id: state
      type: System.Object
      description: "Lo stato di esecuzione di un flusso di lavoro che è stato mantenuto dal thread chiamante prima che un&quot;operazione asincrona inizi."
    return:
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere un segnalibro utilizzando il valore specificato, l&quot;intervallo di timeout, metodo di callback e stato."
  remarks: "Per determinare se l&quot;operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> Se l&quot;operazione di ripresa non viene completata entro l&quot;intervallo di timeout specificato <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> </xref:System.TimeoutException> un       Questo metodo riprende un segnalibro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Il segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di ripresa deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di ripresa è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di ripresa di segnalibro asincrona."
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, intervallo di timeout, il metodo di callback e lo stato. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  syntax:
    content: public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "Il nome del segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: timeout
      type: System.TimeSpan
      description: "L&quot;intervallo di tempo durante il quale deve essere ripreso il segnalibro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo che viene chiamato al termine dell&quot;operazione asincrona."
    - id: state
      type: System.Object
      description: "Lo stato di esecuzione di un flusso di lavoro è stato salvato dal thread chiamante prima che un&quot;operazione asincrona inizi."
    return:
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.BeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  id: BeginRun(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginRun(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia o riprende un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot;operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> <xref:System.Activities.WorkflowApplication.EndRun%2A>può essere chiamato dall&quot;interno o dall&quot;esterno del metodo a cui fa riferimento il `callback` parametro.</xref:System.Activities.WorkflowApplication.EndRun%2A> Se <xref:System.Activities.WorkflowApplication.EndRun%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndRun%2A> Per impostazione predefinita, l&quot;operazione di ripresa deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> </xref:System.TimeoutException>       Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginRun (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di ripresa è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di esecuzione asincrona."
  overload: System.Activities.WorkflowApplication.BeginRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginRun(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia o riprende un&quot;istanza del flusso di lavoro in modo asincrono utilizzando l&quot;intervallo di timeout specificato, il metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot;operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> <xref:System.Activities.WorkflowApplication.EndRun%2A>può essere chiamato dall&quot;interno o dall&quot;esterno di riferimento al metodo nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndRun%2A> Se <xref:System.Activities.WorkflowApplication.EndRun%2A>viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.</xref:System.Activities.WorkflowApplication.EndRun%2A> Se l&quot;operazione di ripresa non viene completata entro l&quot;intervallo di timeout specificato <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndRun%2A>.</xref:System.Activities.WorkflowApplication.EndRun%2A> </xref:System.TimeoutException> un       Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di ripresa deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di ripresa è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di esecuzione asincrona."
  overload: System.Activities.WorkflowApplication.BeginRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(Exception,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando l&quot;eccezione specificata, un metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>può essere chiamato dall&quot;interno o dall&quot;esterno del metodo a cui fa riferimento il `callback` parametro.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> Per impostazione predefinita, l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.Exception
      description: "Il motivo per l&quot;istanza del flusso di lavoro è terminato."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;oggetto corrente <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.String,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(String,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, il metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>può essere chiamato dall&quot;interno o dall&quot;esterno di riferimento al metodo nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> Per impostazione predefinita, l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       Questo metodo termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.String
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;oggetto corrente <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando l&quot;eccezione specificata, intervallo di timeout, il metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>può essere chiamato dall&quot;interno o all&quot;esterno del `callback` metodo.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione non completata entro l&quot;intervallo di timeout specificato un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> Questa o qualsiasi altra eccezione che si verificano durante il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>processo viene generato da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.Exception
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo nel quale il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;oggetto corrente <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, l&quot;intervallo di timeout, metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> <xref:System.Activities.WorkflowApplication.EndTerminate%2A>può essere chiamato dall&quot;interno o dall&quot;esterno di riferimento al metodo nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> </xref:System.Activities.WorkflowApplication.EndTerminate%2A> Se l&quot; <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione non viene completata entro l&quot;intervallo di timeout specificato <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</xref:System.Activities.WorkflowApplication.EndTerminate%2A> </xref:System.TimeoutException> un</xref:System.Activities.WorkflowApplication.BeginTerminate%2A>       Questo metodo termina un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: reason
      type: System.String
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo nel quale il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento a asincrona <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione.</xref:System.Activities.WorkflowApplication.BeginTerminate*>"
  overload: System.Activities.WorkflowApplication.BeginTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  id: BeginUnload(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginUnload(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente e consente di eliminare un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> <xref:System.Activities.WorkflowApplication.EndUnload%2A>può essere chiamato dall&quot;interno o dall&quot;esterno di riferimento al metodo nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndUnload%2A> Se <xref:System.Activities.WorkflowApplication.EndUnload%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginUnload%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginUnload%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.EndUnload%2A> Per impostazione predefinita, l&quot; <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginUnload%2A>       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       Questo metodo rende persistente e consente di eliminare un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginUnload (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginUnload*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginUnload*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento a asincrona <xref:System.Activities.WorkflowApplication.BeginUnload*>operazione.</xref:System.Activities.WorkflowApplication.BeginUnload*>"
  overload: System.Activities.WorkflowApplication.BeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: BeginUnload(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente e consente di eliminare un&quot;istanza del flusso di lavoro in modo asincrono utilizzando l&quot;intervallo di timeout specificato, il metodo di callback e lo stato fornito dall&quot;utente."
  remarks: "Per determinare se l&quot; <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> <xref:System.Activities.WorkflowApplication.EndUnload%2A>può essere chiamato dall&quot;interno o dall&quot;esterno di riferimento al metodo nel `callback` parametro.</xref:System.Activities.WorkflowApplication.EndUnload%2A> Se <xref:System.Activities.WorkflowApplication.EndUnload%2A>viene chiamato prima di <xref:System.Activities.WorkflowApplication.BeginUnload%2A>al completamento dell&quot;operazione, si blocca fino a quando il <xref:System.Activities.WorkflowApplication.BeginUnload%2A>al completamento dell&quot;operazione.</xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> </xref:System.Activities.WorkflowApplication.EndUnload%2A> Se l&quot; <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione non viene completata entro l&quot;intervallo di timeout specificato <xref:System.TimeoutException>viene generata da <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</xref:System.Activities.WorkflowApplication.EndUnload%2A> </xref:System.TimeoutException> un</xref:System.Activities.WorkflowApplication.BeginUnload%2A>       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>       Questo metodo rende persistente e scarica un&quot;istanza del flusso di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo nel quale il <xref:System.Activities.WorkflowApplication.BeginTerminate*>operazione deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException> </xref:System.Activities.WorkflowApplication.BeginTerminate*>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando il <xref:System.Activities.WorkflowApplication.BeginUnload*>operazione è stata completata.</xref:System.Activities.WorkflowApplication.BeginUnload*>"
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento a asincrona <xref:System.Activities.WorkflowApplication.BeginUnload*>operazione.</xref:System.Activities.WorkflowApplication.BeginUnload*>"
  overload: System.Activities.WorkflowApplication.BeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Cancel
  id: Cancel
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Cancel()
  nameWithType: WorkflowApplication.Cancel()
  fullName: System.Activities.WorkflowApplication.Cancel()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Annulla l&quot;istanza del flusso di lavoro."
  remarks: "Questo metodo pianifica l&quot;annullamento dell&quot;istanza del flusso di lavoro. Per essere notificato quando l&quot;annullamento è completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestore.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per impostazione predefinita, l&quot;operazione di annullamento deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Cancel is called. When the workflow is cancelled, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#13](~/add/codesnippet/csharp/m-system.activities.work_3_1.cs)]"
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  id: Cancel(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Cancel(TimeSpan)
  nameWithType: WorkflowApplication.Cancel(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Cancel(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Annulla l&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout specificato."
  remarks: "Questo metodo pianifica l&quot;annullamento dell&quot;istanza del flusso di lavoro. Per essere notificato quando l&quot;annullamento è completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestore.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called. When the workflow is cancelled, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  \nWorkflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#13](~/add/codesnippet/csharp/m-system.activities.work_24_1.cs)]"
  syntax:
    content: public void Cancel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di annullamento deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Completed
  id: Completed
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Completed
  nameWithType: WorkflowApplication.Completed
  fullName: System.Activities.WorkflowApplication.Completed
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il &lt;xref:System.Action%601&gt; che è richiamato quando l&quot;istanza del flusso di lavoro viene completato."
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the Completed handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#4](~/add/codesnippet/csharp/p-system.activities.work_7_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationCompletedEventArgs> Completed { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationCompletedEventArgs}
      description: "L&quot;azione che viene richiamato quando l&quot;istanza del flusso di lavoro è stata completata."
  overload: System.Activities.WorkflowApplication.Completed*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  id: CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea un proprietario di istanza predefinito per il flusso di lavoro tramite l&quot;archivio di istanze specificato, l&quot;identità di definizione e il filtro di identità."
  syntax:
    content: public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione del flusso di lavoro."
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "Il filtro di identità."
  overload: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  id: CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Crea un proprietario di istanza predefinito per il flusso di lavoro tramite l&quot;archivio di istanze specificato, l&quot;identità di definizione e intervallo di timeout e filtro di identità."
  syntax:
    content: public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione del flusso di lavoro."
    - id: identityFilter
      type: System.Activities.WorkflowIdentityFilter
      description: "Il filtro di identità."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
  overload: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  id: DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: DeleteDefaultInstanceOwner(InstanceStore)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Elimina un proprietario di istanza predefinito per il flusso di lavoro con archivio di istanze specificato."
  syntax:
    content: public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Elimina un proprietario di istanza predefinito per il flusso di lavoro con intervallo di timeout e l&quot;archivio dell&quot;istanza specificato."
  syntax:
    content: public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
  overload: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: WorkflowApplication.EndCancel(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione di annullamento asincrona in sospeso."
  remarks: "Questo metodo determina se un <xref:System.Activities.WorkflowApplication.BeginCancel%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginCancel%2A> Se viene chiamato prima che venga completata l&quot;operazione di annullamento, si blocca fino al completamento dell&quot;operazione di annullamento.       Questo metodo completa l&quot;operazione di annullamento asincrona usando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndCancel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "L&quot;operazione di annullamento asincrona."
  overload: System.Activities.WorkflowApplication.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  id: EndCreateDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndCreateDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "È in attesa per la creazione del proprietario di istanza predefinito per il completamento."
  syntax:
    content: public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Risultato asincrono."
  overload: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  id: EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndDeleteDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende che l&quot;eliminazione del proprietario di istanza predefinito per il completamento."
  syntax:
    content: public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Risultato asincrono."
  overload: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  id: EndGetInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndGetInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "È in attesa per il recupero dell&quot;istanza per il completamento."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Risultato asincrono."
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "Risultato dell&quot;operazione."
  overload: System.Activities.WorkflowApplication.EndGetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  id: EndGetRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndGetRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "È in attesa per il recupero asincrono del completamento dell&quot;operazione istanza eseguibile."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Risultato asincrono."
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "Risultato dell&quot;operazione."
  overload: System.Activities.WorkflowApplication.EndGetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  id: EndLoad(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndLoad(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoad(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoad(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione di caricamento asincrona in sospeso."
  remarks: "Se questo metodo viene chiamato prima che venga completata l&quot;operazione di caricamento, si blocca fino a quando non è stata completata l&quot;operazione di caricamento.       Questo metodo completa l&quot;operazione di caricamento asincrona usando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndLoad (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "L&quot;operazione di caricamento asincrona."
  overload: System.Activities.WorkflowApplication.EndLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  id: EndLoadRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndLoadRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione asincrona di caricamento istanza eseguibile."
  remarks: "Questo metodo determina se un <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> Se viene chiamato prima che venga completata l&quot;operazione di caricamento, si blocca fino al completamento dell&quot;operazione.       Questo metodo carica flussi di lavoro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndLoadRunnableInstance (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di caricamento asincrona."
  overload: System.Activities.WorkflowApplication.EndLoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  id: EndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.EndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione di persistenza asincrona in sospeso."
  remarks: "Questo metodo determina se un <xref:System.Activities.WorkflowApplication.BeginPersist%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginPersist%2A> Se viene chiamato prima che venga completata l&quot;operazione di persistenza, si blocca fino a quando non è stata completata l&quot;operazione di persistenza.       Questo metodo viene completato asincrona mantenere operazione utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Operazione della persistenza asincrona."
  overload: System.Activities.WorkflowApplication.EndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  id: EndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.EndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende un segnalibro riprendere il completamento dell&quot;operazione."
  remarks: "Questo metodo determina se un <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> Se viene chiamato prima che venga completata l&quot;operazione di caricamento, si blocca fino al completamento dell&quot;operazione.       Questo metodo riprende un segnalibro in modo asincrono utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di ripresa di segnalibro asincrona."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Uno dei valori di enumerazione che indica i risultati di un&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.EndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  id: EndRun(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndRun(IAsyncResult)
  nameWithType: WorkflowApplication.EndRun(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndRun(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende che l&quot;operazione di esecuzione asincrono in sospeso da completare."
  remarks: "Questo metodo determina se un <xref:System.Activities.WorkflowApplication.BeginRun%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginRun%2A> Se viene chiamato prima che venga completata l&quot;operazione di ripresa, si blocca fino al completamento dell&quot;operazione di ripresa.       Questo metodo completa un&quot;operazione di esecuzione asincrona usando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndRun (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "L&quot;operazione di esecuzione asincrona."
  overload: System.Activities.WorkflowApplication.EndRun*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  id: EndTerminate(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndTerminate(IAsyncResult)
  nameWithType: WorkflowApplication.EndTerminate(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndTerminate(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione di interruzione asincrona in sospeso."
  remarks: "Questo metodo può essere chiamato per determinare se un <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginTerminate%2A> Se viene chiamato prima che venga completata l&quot;operazione terminate, si blocca fino al completamento dell&quot;operazione.       Il completamento del metodo asincrono <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>operazione utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> </xref:System.Activities.WorkflowApplication.BeginTerminate%2A> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndTerminate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Operazione di interruzione asincrona."
  overload: System.Activities.WorkflowApplication.EndTerminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  id: EndUnload(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: EndUnload(IAsyncResult)
  nameWithType: WorkflowApplication.EndUnload(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndUnload(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Attende il completamento dell&quot;operazione di scaricamento asincrona in sospeso."
  remarks: "Questo metodo può essere chiamato per determinare se un <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione ha esito positivo.</xref:System.Activities.WorkflowApplication.BeginUnload%2A> Se viene chiamato prima che venga completata l&quot;operazione di scaricamento, si blocca fino al completamento dell&quot;operazione.       Il completamento del metodo asincrono <xref:System.Activities.WorkflowApplication.BeginUnload%2A>operazione utilizzando il <xref:System.IAsyncResult>modello di struttura asincrono.</xref:System.IAsyncResult> </xref:System.Activities.WorkflowApplication.BeginUnload%2A> [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Cenni preliminari sulla programmazione asincrona](http://go.microsoft.com/fwlink/?LinkId=141764)."
  syntax:
    content: public void EndUnload (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "L&quot;operazione di scaricamento asincrona."
  overload: System.Activities.WorkflowApplication.EndUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Extensions
  id: Extensions
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
  fullName: System.Activities.WorkflowApplication.Extensions
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene la raccolta di estensioni per l&quot;istanza del flusso di lavoro corrente."
  syntax:
    content: public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "Una raccolta di oggetti."
  overload: System.Activities.WorkflowApplication.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetBookmarks
  id: GetBookmarks
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetBookmarks()
  nameWithType: WorkflowApplication.GetBookmarks()
  fullName: System.Activities.WorkflowApplication.GetBookmarks()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce la raccolta di segnalibri per l&quot;istanza del flusso di lavoro."
  remarks: "Se questa operazione non completata entro 30 secondi, un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, GetBookmarks is called. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWhat is your name?   \nBookmarkName: UserName - OwnerDisplayName: ReadLine  \nSteve  \nHello, Steve  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/m-system.activities.work_27_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#14](~/add/codesnippet/csharp/m-system.activities.work_27_2.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "Raccolta di sola lettura di segnalibri per l&quot;istanza del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  id: GetBookmarks(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetBookmarks(TimeSpan)
  nameWithType: WorkflowApplication.GetBookmarks(TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetBookmarks(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce la raccolta di segnalibri per l&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout specificato."
  remarks: ''
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nWhat is your name?   \nBookmarkName: UserName - OwnerDisplayName: ReadLine  \nSteve  \nHello, Steve  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/m-system.activities.work_8_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#14](~/add/codesnippet/csharp/m-system.activities.work_8_2.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui questo metodo deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "Raccolta di sola lettura di segnalibri per l&quot;istanza del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  id: GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetInstance(Guid,InstanceStore)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera l&quot;istanza del flusso di lavoro utilizzando l&quot;identificatore dell&quot;istanza specificato e l&quot;archivio di istanze."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "L&quot;identificatore dell&quot;istanza."
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza recuperata."
  overload: System.Activities.WorkflowApplication.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetInstance(Guid,InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera l&quot;istanza del flusso di lavoro utilizzando l&quot;identificatore dell&quot;istanza specificato, l&quot;archivio di istanze e timeout intervallo."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "L&quot;identificatore dell&quot;istanza."
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "Un riferimento all&quot;operazione asincrona."
  overload: System.Activities.WorkflowApplication.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  id: GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetRunnableInstance(InstanceStore)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera l&quot;istanza del flusso di lavoro con archivio di istanze specificato runnable."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro"
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "Istanza eseguibile."
  overload: System.Activities.WorkflowApplication.GetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  id: GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: GetRunnableInstance(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Recupera l&quot;istanza del flusso di lavoro con intervallo di timeout e l&quot;archivio dell&quot;istanza specificato eseguibile."
  syntax:
    content: public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);
    parameters:
    - id: instanceStore
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "L&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro"
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
    return:
      type: System.Activities.WorkflowApplicationInstance
      description: "Istanza eseguibile."
  overload: System.Activities.WorkflowApplication.GetRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Id
  id: Id
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowApplication.Id
  fullName: System.Activities.WorkflowApplication.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene l&quot;identificatore GUID a 128 bit dell&quot;istanza dell&quot;applicazione del flusso di lavoro corrente."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the Id value to the console.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#28](~/add/codesnippet/csharp/p-system.activities.work_3_1.cs)]"
  syntax:
    content: public override Guid Id { get; }
    return:
      type: System.Guid
      description: "Un identificatore GUID a 128 bit."
  overload: System.Activities.WorkflowApplication.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Idle
  id: Idle
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Idle
  nameWithType: WorkflowApplication.Idle
  fullName: System.Activities.WorkflowApplication.Idle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il &lt;xref:System.Action%601&gt; che è richiamato quando l&quot;istanza del flusso di lavoro corrente diventa inattiva."
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the Idle handler of a <xref:System.Activities.WorkflowApplication> instance. In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`. This code example is based off of [How to: Run a Workflow](~/add/includes/ajax-current-ext-md.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/add/includes/ajax-current-ext-md.md). If the Idle handler in that step is modified to contain the code from this example, the following output is displayed.  \n  \n```Output  \nBookmarkName: EnterGuess - OwnerDisplayName: ReadInt  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#2](~/add/codesnippet/csharp/p-system.activities.work_14_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationIdleEventArgs> Idle { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationIdleEventArgs}
      description: "Un&quot;azione che viene eseguito quando un&quot;istanza del flusso di lavoro diventa inattiva."
  overload: System.Activities.WorkflowApplication.Idle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.InstanceStore
  id: InstanceStore
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
  fullName: System.Activities.WorkflowApplication.InstanceStore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta un oggetto che fornisce l&quot;accesso allo stato persistente dell&quot;istanza corrente dell&quot;applicazione del flusso di lavoro."
  remarks: ''
  example:
  - "The following example creates a WorkflowApplication instance and then configures the InstanceStore using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This code example is part of [How to: Create and Run a Long Running Workflow](~/add/includes/ajax-current-ext-md.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CFX_WorkflowApplicationExample#28](~/add/codesnippet/csharp/p-system.activities.work_11_1.cs)]"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }
    return:
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "Un archivio di istanze."
  overload: System.Activities.WorkflowApplication.InstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  id: Load(System.Activities.WorkflowApplicationInstance)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro da un archivio di istanze con l&quot;istanza specificata."
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Guid)
  id: Load(System.Guid)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(Guid)
  nameWithType: WorkflowApplication.Load(Guid)
  fullName: System.Activities.WorkflowApplication.Load(Guid)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica l&quot;istanza del flusso di lavoro specificata in memoria da un archivio di istanze."
  remarks: ''
  example:
  - "The following example calls Load to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#27](~/add/codesnippet/csharp/m-system.activities.work_14_1.cs)]"
  syntax:
    content: public void Load (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Un identificatore univoco globale a 128 bit per l&quot;istanza del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro da un archivio di istanze con mappa di aggiornamento e di istanza specificato."
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  id: Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro da un archivio di istanze con intervallo di timeout e di istanza specificato."
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  id: Load(System.Guid,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(Guid,TimeSpan)
  nameWithType: WorkflowApplication.Load(Guid,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(Guid,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica l&quot;istanza del flusso di lavoro specificata in memoria da un archivio di istanze utilizzando l&quot;intervallo di timeout specificato."
  remarks: ''
  example:
  - "The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#27](~/add/codesnippet/csharp/m-system.activities.work_11_1.cs)]"
  syntax:
    content: public void Load (Guid instanceId, TimeSpan timeout);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Un identificatore univoco globale a 128 bit per l&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento deve essere completata prima che venga annullata l&quot;operazione di caricamento e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  id: Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro da un archivio di istanze con l&quot;istanza specificata, aggiornare l&quot;intervallo di timeout e mappa."
  syntax:
    content: public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Activities.WorkflowApplicationInstance
      description: "L&quot;istanza."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento iniziale deve essere completata prima che l&quot;operazione viene annullata."
  overload: System.Activities.WorkflowApplication.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance
  id: LoadRunnableInstance
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: LoadRunnableInstance()
  nameWithType: WorkflowApplication.LoadRunnableInstance()
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro eseguibile da <xref:System.Activities.WorkflowApplication.InstanceStore*>.</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "Un&quot;istanza eseguibile è un&quot;istanza per il quale un timer o istanza di un blocco scaduto.       Per impostazione predefinita, l&quot;operazione di caricamento deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  syntax:
    content: public void LoadRunnableInstance ();
    parameters: []
  overload: System.Activities.WorkflowApplication.LoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  id: LoadRunnableInstance(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: LoadRunnableInstance(TimeSpan)
  nameWithType: WorkflowApplication.LoadRunnableInstance(TimeSpan)
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Carica un&quot;istanza del flusso di lavoro eseguibile dal <xref:System.Activities.WorkflowApplication.InstanceStore*>utilizzando l&quot;intervallo di timeout specificato.</xref:System.Activities.WorkflowApplication.InstanceStore*>"
  remarks: "Un&quot;istanza eseguibile è un&quot;istanza per il quale un timer o istanza di un blocco scaduto."
  syntax:
    content: public void LoadRunnableInstance (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di caricamento deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.LoadRunnableInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "Da aggiungere."
    - id: callback
      type: System.AsyncCallback
      description: "Da aggiungere."
    - id: state
      type: System.Object
      description: "Da aggiungere."
    return:
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Da aggiungere."
    - id: state
      type: System.Object
      description: "Da aggiungere."
    return:
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Da aggiungere."
    - id: value
      type: System.Object
      description: "Da aggiungere."
    - id: timeout
      type: System.TimeSpan
      description: "Da aggiungere."
    - id: callback
      type: System.AsyncCallback
      description: "Da aggiungere."
    - id: state
      type: System.Object
      description: "Da aggiungere."
    return:
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Da aggiungere."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowApplication.OnNotifyPaused()
  fullName: System.Activities.WorkflowApplication.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.WorkflowApplication.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "Da aggiungere."
    - id: exceptionSource
      type: System.Activities.Activity
      description: "Da aggiungere."
    - id: exceptionSourceInstanceId
      type: System.String
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowApplication.OnRequestAbort(Exception)
  fullName: System.Activities.WorkflowApplication.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.OnUnhandledException
  id: OnUnhandledException
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
  fullName: System.Activities.WorkflowApplication.OnUnhandledException
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il &lt;xref:System.Func%602&gt; che viene richiamato quando l&quot;istanza del flusso di lavoro corrente rileva un&quot;eccezione non gestita."
  remarks: "Entrambi OnUnhandledException e <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>determinano il comportamento di runtime quando un&quot;eccezione non viene gestita nel flusso di lavoro; tuttavia, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>ha la possibilità di lasciare un flusso di lavoro sospeso nell&quot;archivio di persistenza, mentre non OnUnhandledException.</xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> </xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> Il motivo è che cosa accade a un flusso di lavoro sospeso è specifica dell&quot;host, e <xref:System.Activities.WorkflowApplication>non.</xref:System.Activities.WorkflowApplication> Per implementare questa funzionalità utilizzando <xref:System.Activities.WorkflowApplication>, creare una classe personalizzata <xref:System.Activities.Persistence.PersistenceParticipant>che ha questo comportamento.</xref:System.Activities.Persistence.PersistenceParticipant> </xref:System.Activities.WorkflowApplication>"
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the OnUnhandledException handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/p-system.activities.work_10_1.cs)]"
  syntax:
    content: public Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction> OnUnhandledException { get; set; }
    return:
      type: System.Func{System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction}
      description: "Delegato che viene richiamato quando un&quot;istanza del flusso di lavoro rileva un&quot;eccezione non gestita."
  overload: System.Activities.WorkflowApplication.OnUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Persist
  id: Persist
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Persist()
  nameWithType: WorkflowApplication.Persist()
  fullName: System.Activities.WorkflowApplication.Persist()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente un&quot;istanza del flusso di lavoro un archivio di istanze."
  remarks: "Se l&quot;operazione di persistenza non viene completata entro 30 secondi, un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following example calls Persist to persist a workflow instance before the workflow is started. This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#34](~/add/codesnippet/csharp/m-system.activities.work_0_1.cs)]"
  syntax:
    content: public void Persist ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  id: Persist(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Persist(TimeSpan)
  nameWithType: WorkflowApplication.Persist(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Persist(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente un&quot;istanza del flusso di lavoro un archivio di istanze utilizzando l&quot;intervallo di timeout specificato."
  remarks: "Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started. This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#34](~/add/codesnippet/csharp/m-system.activities.work_13_1.cs)]"
  syntax:
    content: public void Persist (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di persistenza deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.PersistableIdle
  id: PersistableIdle
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
  fullName: System.Activities.WorkflowApplication.PersistableIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il <xref:System.Activities.ActivityFunc>che è richiamato quando l&quot;istanza del flusso di lavoro corrente è inattivo e può essere resa persistente.</xref:System.Activities.ActivityFunc>"
  remarks: "Quando un flusso di lavoro diventa inattivo e può essere reso persistente, entrambi <xref:System.Activities.WorkflowApplication.Idle%2A>e PersistableIdle vengono richiamati, in quest&quot;ordine.</xref:System.Activities.WorkflowApplication.Idle%2A> Il gestore PersistableIdle restituisce uno del <xref:System.Activities.PersistableIdleAction>valori di enumerazione di <xref:System.Activities.PersistableIdleAction>, <xref:System.Activities.PersistableIdleAction>, o <xref:System.Activities.PersistableIdleAction>.</xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction> </xref:System.Activities.PersistableIdleAction>"
  example:
  - "The following example handles the PersistableIdle handler and instructs the runtime to persist and unload the workflow.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#26](~/add/codesnippet/csharp/p-system.activities.work_0_1.cs)]"
  syntax:
    content: public Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction> PersistableIdle { get; set; }
    return:
      type: System.Func{System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction}
      description: "Il <xref:System.Activities.ActivityFunc>che è richiamato quando l&quot;istanza del flusso di lavoro corrente è inattivo e può essere resa persistente.</xref:System.Activities.ActivityFunc>"
  overload: System.Activities.WorkflowApplication.PersistableIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  id: ResumeBookmark(System.Activities.Bookmark,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(Bookmark,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere il segnalibro specificato utilizzando il valore specificato. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/84810d78-26f4-4322-9177-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#24](~/add/codesnippet/csharp/84810d78-26f4-4322-9177-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Il segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  id: ResumeBookmark(System.String,System.Object)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(String,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/9a23a0e0-449b-442b-9754-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#22](~/add/codesnippet/csharp/9a23a0e0-449b-442b-9754-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "Il nome del segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  id: ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(Bookmark,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere il segnalibro specificato utilizzando il valore specificato e l&quot;intervallo di timeout. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/b4838449-fded-4383-bd62-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#25](~/add/codesnippet/csharp/b4838449-fded-4383-bd62-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Il segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: timeout
      type: System.TimeSpan
      description: "L&quot;intervallo di tempo durante il quale deve essere ripreso il segnalibro."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  id: ResumeBookmark(System.String,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: ResumeBookmark(String,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia un&quot;operazione per riprendere il segnalibro con il nome specificato, utilizzando l&quot;intervallo di valore e di timeout specificato. Il segnalibro da riprendere viene creato precedentemente da un&quot;attività all&quot;interno dell&quot;istanza del flusso di lavoro."
  remarks: "Il risultato del segnalibro indica se l&quot;operazione di ripresa è riuscita o meno."
  example:
  - "The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>. The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#15](~/add/codesnippet/csharp/13944cca-055e-4dce-9b17-_1.cs)]  \n  \n [!code-cs[CFX_WorkflowApplicationExample#22](~/add/codesnippet/csharp/13944cca-055e-4dce-9b17-_2.cs)]"
  syntax:
    content: public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);
    parameters:
    - id: bookmarkName
      type: System.String
      description: "Il nome del segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "Un oggetto passato come parametro al metodo che viene richiamato quando il segnalibro è ripreso."
    - id: timeout
      type: System.TimeSpan
      description: "L&quot;intervallo di tempo durante il quale deve essere ripreso il segnalibro."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Il risultato dell&quot;operazione di ripresa del segnalibro."
  overload: System.Activities.WorkflowApplication.ResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Run
  id: Run
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Run()
  nameWithType: WorkflowApplication.Run()
  fullName: System.Activities.WorkflowApplication.Run()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizia o riprende l&quot;esecuzione di un&quot;istanza del flusso di lavoro."
  remarks: "Chiamare questo metodo per iniziare l&quot;esecuzione di un&quot;istanza del flusso di lavoro appena creata.       Se l&quot;operazione di esecuzione non viene completata entro 30 secondi, un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to Run. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/m-system.activities.work_5_1.cs)]"
  syntax:
    content: public void Run ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Run*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Run(System.TimeSpan)
  id: Run(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Run(TimeSpan)
  nameWithType: WorkflowApplication.Run(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Run(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizia o riprende l&quot;esecuzione di un&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout specificato."
  remarks: "Si noti che, a differenza di <xref:System.Activities.WorkflowInvoker.Invoke%2A>, questo metodo raggiungerà il timeout solo se il flusso di lavoro non inizia nel periodo di tempo specificato, piuttosto che dover essere completate nel periodo di tempo specificato.</xref:System.Activities.WorkflowInvoker.Invoke%2A> Il motivo è che <xref:System.Activities.WorkflowInvoker.Invoke%2A>esegue il flusso di lavoro in modo sincrono (bloccando il thread host), mentre l&quot;esecuzione viene eseguita in modo asincrono, solo bloccando il thread host per la quantità di tempo impiegato per avviare il flusso di lavoro.</xref:System.Activities.WorkflowInvoker.Invoke%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. When the workflow is completed, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   \nEnding the workflow.   \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  \nWorkflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#9](~/add/codesnippet/csharp/m-system.activities.work_20_1.cs)]"
  syntax:
    content: public void Run (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Chiamare questo metodo per iniziare l&quot;esecuzione di un&quot;istanza del flusso di lavoro appena creata.       Intervallo in cui l&quot;operazione di esecuzione deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Run*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
  fullName: System.Activities.WorkflowApplication.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Activities.WorkflowApplication.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception)
  id: Terminate(System.Exception)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(Exception)
  nameWithType: WorkflowApplication.Terminate(Exception)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro tramite l&quot;eccezione specificata."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per impostazione predefinita, l&quot;operazione Terminate deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  \nException: System.ApplicationException  \nTerminating the workflow.   \nWorkflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#16](~/add/codesnippet/csharp/m-system.activities.work_9_1.cs)]"
  syntax:
    content: public void Terminate (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.String)
  id: Terminate(System.String)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(String)
  nameWithType: WorkflowApplication.Terminate(String)
  fullName: System.Activities.WorkflowApplication.Terminate(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro utilizzando il messaggio di errore specificato."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>       Per impostazione predefinita, l&quot;operazione Terminate deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   \nException: System.Activities.WorkflowApplicationTerminatedException  \nTerminating the workflow.   \nWorkflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#18](~/add/codesnippet/csharp/m-system.activities.work_19_1.cs)]"
  syntax:
    content: public void Terminate (string reason);
    parameters:
    - id: reason
      type: System.String
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  id: Terminate(System.Exception,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(Exception,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(Exception,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout e di eccezione specificato."
  remarks: "Questo metodo pianifica la chiusura del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  \nException: System.ApplicationException  \nTerminating the workflow.   \nWorkflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#17](~/add/codesnippet/csharp/93b3dd11-f70a-4d21-82ce-_1.cs)]"
  syntax:
    content: public void Terminate (Exception reason, TimeSpan timeout);
    parameters:
    - id: reason
      type: System.Exception
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione Terminate deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  id: Terminate(System.String,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Terminate(String,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(String,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(String,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Termina un&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout e di messaggio di errore specificato."
  remarks: "Questo metodo pianifica la chiusura dell&quot;istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare il <xref:System.Activities.WorkflowApplication.OnCompleted%2A>gestire.</xref:System.Activities.WorkflowApplication.OnCompleted%2A>"
  example:
  - "The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>. A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>. After the workflow is started, Terminate is called. When the workflow is terminated, the following output is displayed to the console.  \n  \n```Output  \nStarting the workflow.   \nWorkflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   \nException: System.Activities.WorkflowApplicationTerminatedException  \nTerminating the workflow.   \nWorkflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  \n  \n```  \n  \n [!code-cs[CFX_WorkflowApplicationExample#19](~/add/codesnippet/csharp/m-system.activities.work_7_1.cs)]"
  syntax:
    content: public void Terminate (string reason, TimeSpan timeout);
    parameters:
    - id: reason
      type: System.String
      description: "Il motivo della chiusura dell&quot;istanza del flusso di lavoro."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione Terminate deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unload
  id: Unload
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unload()
  nameWithType: WorkflowApplication.Unload()
  fullName: System.Activities.WorkflowApplication.Unload()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente e scarica un&quot;istanza del flusso di lavoro."
  remarks: "Per impostazione predefinita, l&quot;operazione di scaricamento deve essere completata in 30 secondi o un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>       Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following code example is part of the [NoPersistScope Activity](~/add/includes/ajax-current-ext-md.md) sample. In this example, the workflow is idle and the host application is waiting for user input. If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called. If successful, the workflow is persisted and unloaded from memory.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#20](~/add/codesnippet/csharp/m-system.activities.work_23_1.cs)]"
  syntax:
    content: public void Unload ();
    parameters: []
  overload: System.Activities.WorkflowApplication.Unload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  id: Unload(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unload(TimeSpan)
  nameWithType: WorkflowApplication.Unload(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Unload(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Rende persistente e scarica un&quot;istanza del flusso di lavoro utilizzando l&quot;intervallo di timeout specificato."
  remarks: "Se l&quot;istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore>utilizzato per caricare il flusso di lavoro viene utilizzato per la persistenza.</xref:System.Runtime.DurableInstancing.InstanceStore> Se il flusso di lavoro è stato creato ma non ancora reso persistente, una <xref:System.Activities.WorkflowApplication.InstanceStore%2A>deve essere configurato prima di chiamare questo metodo, altrimenti un <xref:System.InvalidOperationException>viene generata quando viene chiamato questo metodo.</xref:System.InvalidOperationException> </xref:System.Activities.WorkflowApplication.InstanceStore%2A>"
  example:
  - "The following code example is part of the [NoPersistScope Activity](~/add/includes/ajax-current-ext-md.md) sample. In this example, the workflow is idle and the host application is waiting for user input. If the user chooses to unload, Unload is called. If successful, the workflow is persisted and unloaded from memory.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#20](~/add/codesnippet/csharp/m-system.activities.work_26_1.cs)]"
  syntax:
    content: public void Unload (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di scaricamento deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
  overload: System.Activities.WorkflowApplication.Unload*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplication.Unloaded
  id: Unloaded
  parent: System.Activities.WorkflowApplication
  langs:
  - csharp
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
  fullName: System.Activities.WorkflowApplication.Unloaded
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il &lt;xref:System.Action%601&gt; che viene richiamato quando viene scaricato il flusso di lavoro corrente."
  remarks: ''
  example:
  - "The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the Unloaded handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#3](~/add/codesnippet/csharp/p-system.activities.work_12_1.cs)]"
  syntax:
    content: public Action<System.Activities.WorkflowApplicationEventArgs> Unloaded { get; set; }
    return:
      type: System.Action{System.Activities.WorkflowApplicationEventArgs}
      description: "Un&quot;azione che viene richiamata quando un&quot;istanza del flusso di lavoro viene scaricata."
  overload: System.Activities.WorkflowApplication.Unloaded*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: System.Activities.Hosting.WorkflowInstance
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,IDictionary<String,Object>)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  nameWithType: WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
  fullName: System.Activities.WorkflowApplication.WorkflowApplication(Activity,IDictionary<String,Object>,WorkflowIdentity)
- uid: System.Activities.WorkflowApplication.Abort
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort()
  nameWithType: WorkflowApplication.Abort()
  fullName: System.Activities.WorkflowApplication.Abort()
- uid: System.Activities.WorkflowApplication.Abort(System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort(String)
  nameWithType: WorkflowApplication.Abort(String)
  fullName: System.Activities.WorkflowApplication.Abort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.WorkflowApplication.Aborted
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
  fullName: System.Activities.WorkflowApplication.Aborted
- uid: System.Action{System.Activities.WorkflowApplicationAbortedEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationAbortedEventArgs>
  nameWithType: Action<WorkflowApplicationAbortedEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationAbortedEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationAbortedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationAbortedEventArgs
    name: WorkflowApplicationAbortedEventArgs
    nameWithType: WorkflowApplicationAbortedEventArgs
    fullName: WorkflowApplicationAbortedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: AddInitialInstanceValues(IDictionary<XName,Object>)
  nameWithType: WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
  fullName: System.Activities.WorkflowApplication.AddInitialInstanceValues(IDictionary<XName,Object>)
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,Object>
  nameWithType: IDictionary<XName,Object>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCancel(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
- uid: System.Activities.WorkflowIdentityFilter
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentityFilter
  nameWithType: WorkflowIdentityFilter
  fullName: System.Activities.WorkflowIdentityFilter
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,AsyncCallback,Object)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetInstance(Guid,InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginGetRunnableInstance(InstanceStore,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplicationInstance
  parent: System.Activities
  isExternal: false
  name: WorkflowApplicationInstance
  nameWithType: WorkflowApplicationInstance
  fullName: System.Activities.WorkflowApplicationInstance
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(Guid,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,AsyncCallback,Object)
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(Guid,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoad(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginLoadRunnableInstance(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginPersist(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(String,Object,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginResumeBookmark(String,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginRun(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(Exception,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,AsyncCallback,Object)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(String,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginTerminate(String,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload(AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.BeginUnload(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.Cancel
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel()
  nameWithType: WorkflowApplication.Cancel()
  fullName: System.Activities.WorkflowApplication.Cancel()
- uid: System.Activities.WorkflowApplication.Cancel(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel(TimeSpan)
  nameWithType: WorkflowApplication.Cancel(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Cancel(TimeSpan)
- uid: System.Activities.WorkflowApplication.Completed
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Completed
  nameWithType: WorkflowApplication.Completed
  fullName: System.Activities.WorkflowApplication.Completed
- uid: System.Action{System.Activities.WorkflowApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationCompletedEventArgs>
  nameWithType: Action<WorkflowApplicationCompletedEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationCompletedEventArgs
    name: WorkflowApplicationCompletedEventArgs
    nameWithType: WorkflowApplicationCompletedEventArgs
    fullName: WorkflowApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter)
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
  fullName: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(InstanceStore,WorkflowIdentity,WorkflowIdentityFilter,TimeSpan)
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner(InstanceStore)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore)
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: WorkflowApplication.EndCancel(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCancel(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCreateDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndDeleteDefaultInstanceOwner(IAsyncResult)
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndGetRunnableInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoad(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoad(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoad(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoadRunnableInstance(IAsyncResult)
  nameWithType: WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndLoadRunnableInstance(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.EndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndPersist(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.EndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndRun(IAsyncResult)
  nameWithType: WorkflowApplication.EndRun(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndRun(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndTerminate(IAsyncResult)
  nameWithType: WorkflowApplication.EndTerminate(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndTerminate(IAsyncResult)
- uid: System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndUnload(IAsyncResult)
  nameWithType: WorkflowApplication.EndUnload(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.EndUnload(IAsyncResult)
- uid: System.Activities.WorkflowApplication.Extensions
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
  fullName: System.Activities.WorkflowApplication.Extensions
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.WorkflowApplication.GetBookmarks
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks()
  nameWithType: WorkflowApplication.GetBookmarks()
  fullName: System.Activities.WorkflowApplication.GetBookmarks()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BookmarkInfo>
  nameWithType: ReadOnlyCollection<BookmarkInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Hosting.BookmarkInfo
    name: BookmarkInfo
    nameWithType: BookmarkInfo
    fullName: BookmarkInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks(TimeSpan)
  nameWithType: WorkflowApplication.GetBookmarks(TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetBookmarks(TimeSpan)
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance(Guid,InstanceStore)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore)
- uid: System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance(Guid,InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetInstance(Guid,InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance(InstanceStore)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore)
- uid: System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance(InstanceStore,TimeSpan)
  nameWithType: WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
  fullName: System.Activities.WorkflowApplication.GetRunnableInstance(InstanceStore,TimeSpan)
- uid: System.Activities.WorkflowApplication.Id
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Id
  nameWithType: WorkflowApplication.Id
  fullName: System.Activities.WorkflowApplication.Id
- uid: System.Activities.WorkflowApplication.Idle
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Idle
  nameWithType: WorkflowApplication.Idle
  fullName: System.Activities.WorkflowApplication.Idle
- uid: System.Action{System.Activities.WorkflowApplicationIdleEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationIdleEventArgs>
  nameWithType: Action<WorkflowApplicationIdleEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationIdleEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationIdleEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationIdleEventArgs
    name: WorkflowApplicationIdleEventArgs
    nameWithType: WorkflowApplicationIdleEventArgs
    fullName: WorkflowApplicationIdleEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.InstanceStore
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
  fullName: System.Activities.WorkflowApplication.InstanceStore
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance)
- uid: System.Activities.WorkflowApplication.Load(System.Guid)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(Guid)
  nameWithType: WorkflowApplication.Load(Guid)
  fullName: System.Activities.WorkflowApplication.Load(Guid)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,TimeSpan)
- uid: System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(Guid,TimeSpan)
  nameWithType: WorkflowApplication.Load(Guid,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(Guid,TimeSpan)
- uid: System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  nameWithType: WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Load(WorkflowApplicationInstance,DynamicUpdateMap,TimeSpan)
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance()
  nameWithType: WorkflowApplication.LoadRunnableInstance()
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance()
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance(TimeSpan)
  nameWithType: WorkflowApplication.LoadRunnableInstance(TimeSpan)
  fullName: System.Activities.WorkflowApplication.LoadRunnableInstance(TimeSpan)
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplication.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.WorkflowApplication.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndPersist(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndPersist(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.WorkflowApplication.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.WorkflowApplication.OnNotifyPaused
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowApplication.OnNotifyPaused()
  fullName: System.Activities.WorkflowApplication.OnNotifyPaused()
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.WorkflowApplication.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowApplication.OnRequestAbort(Exception)
  fullName: System.Activities.WorkflowApplication.OnRequestAbort(Exception)
- uid: System.Activities.WorkflowApplication.OnUnhandledException
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
  fullName: System.Activities.WorkflowApplication.OnUnhandledException
- uid: System.Func{System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction}
  parent: System
  isExternal: true
  name: Func<WorkflowApplicationUnhandledExceptionEventArgs,UnhandledExceptionAction>
  nameWithType: Func<WorkflowApplicationUnhandledExceptionEventArgs,UnhandledExceptionAction>
  fullName: System.Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs
    name: WorkflowApplicationUnhandledExceptionEventArgs
    nameWithType: WorkflowApplicationUnhandledExceptionEventArgs
    fullName: WorkflowApplicationUnhandledExceptionEventArgs
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.UnhandledExceptionAction
    name: UnhandledExceptionAction
    nameWithType: UnhandledExceptionAction
    fullName: UnhandledExceptionAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.Persist
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist()
  nameWithType: WorkflowApplication.Persist()
  fullName: System.Activities.WorkflowApplication.Persist()
- uid: System.Activities.WorkflowApplication.Persist(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist(TimeSpan)
  nameWithType: WorkflowApplication.Persist(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Persist(TimeSpan)
- uid: System.Activities.WorkflowApplication.PersistableIdle
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
  fullName: System.Activities.WorkflowApplication.PersistableIdle
- uid: System.Func{System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction}
  parent: System
  isExternal: true
  name: Func<WorkflowApplicationIdleEventArgs,PersistableIdleAction>
  nameWithType: Func<WorkflowApplicationIdleEventArgs,PersistableIdleAction>
  fullName: System.Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationIdleEventArgs
    name: WorkflowApplicationIdleEventArgs
    nameWithType: WorkflowApplicationIdleEventArgs
    fullName: WorkflowApplicationIdleEventArgs
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.PersistableIdleAction
    name: PersistableIdleAction
    nameWithType: PersistableIdleAction
    fullName: PersistableIdleAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(Bookmark,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(String,Object)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(Bookmark,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(Bookmark,Object,TimeSpan)
- uid: System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark(String,Object,TimeSpan)
  nameWithType: WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
  fullName: System.Activities.WorkflowApplication.ResumeBookmark(String,Object,TimeSpan)
- uid: System.Activities.WorkflowApplication.Run
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run()
  nameWithType: WorkflowApplication.Run()
  fullName: System.Activities.WorkflowApplication.Run()
- uid: System.Activities.WorkflowApplication.Run(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run(TimeSpan)
  nameWithType: WorkflowApplication.Run(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Run(TimeSpan)
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
  fullName: System.Activities.WorkflowApplication.SupportsInstanceKeys
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(Exception)
  nameWithType: WorkflowApplication.Terminate(Exception)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception)
- uid: System.Activities.WorkflowApplication.Terminate(System.String)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(String)
  nameWithType: WorkflowApplication.Terminate(String)
  fullName: System.Activities.WorkflowApplication.Terminate(String)
- uid: System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(Exception,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(Exception,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(Exception,TimeSpan)
- uid: System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate(String,TimeSpan)
  nameWithType: WorkflowApplication.Terminate(String,TimeSpan)
  fullName: System.Activities.WorkflowApplication.Terminate(String,TimeSpan)
- uid: System.Activities.WorkflowApplication.Unload
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload()
  nameWithType: WorkflowApplication.Unload()
  fullName: System.Activities.WorkflowApplication.Unload()
- uid: System.Activities.WorkflowApplication.Unload(System.TimeSpan)
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload(TimeSpan)
  nameWithType: WorkflowApplication.Unload(TimeSpan)
  fullName: System.Activities.WorkflowApplication.Unload(TimeSpan)
- uid: System.Activities.WorkflowApplication.Unloaded
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
  fullName: System.Activities.WorkflowApplication.Unloaded
- uid: System.Action{System.Activities.WorkflowApplicationEventArgs}
  parent: System
  isExternal: true
  name: Action<WorkflowApplicationEventArgs>
  nameWithType: Action<WorkflowApplicationEventArgs>
  fullName: System.Action<System.Activities.WorkflowApplicationEventArgs>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.WorkflowApplicationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.WorkflowApplicationEventArgs
    name: WorkflowApplicationEventArgs
    nameWithType: WorkflowApplicationEventArgs
    fullName: WorkflowApplicationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplication.#ctor*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: WorkflowApplication
  nameWithType: WorkflowApplication.WorkflowApplication
- uid: System.Activities.WorkflowApplication.Abort*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Abort
  nameWithType: WorkflowApplication.Abort
- uid: System.Activities.WorkflowApplication.Aborted*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Aborted
  nameWithType: WorkflowApplication.Aborted
- uid: System.Activities.WorkflowApplication.AddInitialInstanceValues*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: AddInitialInstanceValues
  nameWithType: WorkflowApplication.AddInitialInstanceValues
- uid: System.Activities.WorkflowApplication.BeginCancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCancel
  nameWithType: WorkflowApplication.BeginCancel
- uid: System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginCreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.BeginCreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginDeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.BeginDeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.BeginGetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetInstance
  nameWithType: WorkflowApplication.BeginGetInstance
- uid: System.Activities.WorkflowApplication.BeginGetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginGetRunnableInstance
  nameWithType: WorkflowApplication.BeginGetRunnableInstance
- uid: System.Activities.WorkflowApplication.BeginLoad*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoad
  nameWithType: WorkflowApplication.BeginLoad
- uid: System.Activities.WorkflowApplication.BeginLoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginLoadRunnableInstance
  nameWithType: WorkflowApplication.BeginLoadRunnableInstance
- uid: System.Activities.WorkflowApplication.BeginPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginPersist
  nameWithType: WorkflowApplication.BeginPersist
- uid: System.Activities.WorkflowApplication.BeginResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginResumeBookmark
  nameWithType: WorkflowApplication.BeginResumeBookmark
- uid: System.Activities.WorkflowApplication.BeginRun*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginRun
  nameWithType: WorkflowApplication.BeginRun
- uid: System.Activities.WorkflowApplication.BeginTerminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginTerminate
  nameWithType: WorkflowApplication.BeginTerminate
- uid: System.Activities.WorkflowApplication.BeginUnload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: BeginUnload
  nameWithType: WorkflowApplication.BeginUnload
- uid: System.Activities.WorkflowApplication.Cancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Cancel
  nameWithType: WorkflowApplication.Cancel
- uid: System.Activities.WorkflowApplication.Completed*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Completed
  nameWithType: WorkflowApplication.Completed
- uid: System.Activities.WorkflowApplication.CreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: CreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.CreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: DeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.DeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndCancel*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCancel
  nameWithType: WorkflowApplication.EndCancel
- uid: System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndCreateDefaultInstanceOwner
  nameWithType: WorkflowApplication.EndCreateDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndDeleteDefaultInstanceOwner
  nameWithType: WorkflowApplication.EndDeleteDefaultInstanceOwner
- uid: System.Activities.WorkflowApplication.EndGetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetInstance
  nameWithType: WorkflowApplication.EndGetInstance
- uid: System.Activities.WorkflowApplication.EndGetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndGetRunnableInstance
  nameWithType: WorkflowApplication.EndGetRunnableInstance
- uid: System.Activities.WorkflowApplication.EndLoad*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoad
  nameWithType: WorkflowApplication.EndLoad
- uid: System.Activities.WorkflowApplication.EndLoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndLoadRunnableInstance
  nameWithType: WorkflowApplication.EndLoadRunnableInstance
- uid: System.Activities.WorkflowApplication.EndPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndPersist
  nameWithType: WorkflowApplication.EndPersist
- uid: System.Activities.WorkflowApplication.EndResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndResumeBookmark
  nameWithType: WorkflowApplication.EndResumeBookmark
- uid: System.Activities.WorkflowApplication.EndRun*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndRun
  nameWithType: WorkflowApplication.EndRun
- uid: System.Activities.WorkflowApplication.EndTerminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndTerminate
  nameWithType: WorkflowApplication.EndTerminate
- uid: System.Activities.WorkflowApplication.EndUnload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: EndUnload
  nameWithType: WorkflowApplication.EndUnload
- uid: System.Activities.WorkflowApplication.Extensions*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Extensions
  nameWithType: WorkflowApplication.Extensions
- uid: System.Activities.WorkflowApplication.GetBookmarks*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetBookmarks
  nameWithType: WorkflowApplication.GetBookmarks
- uid: System.Activities.WorkflowApplication.GetInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetInstance
  nameWithType: WorkflowApplication.GetInstance
- uid: System.Activities.WorkflowApplication.GetRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: GetRunnableInstance
  nameWithType: WorkflowApplication.GetRunnableInstance
- uid: System.Activities.WorkflowApplication.Id*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Id
  nameWithType: WorkflowApplication.Id
- uid: System.Activities.WorkflowApplication.Idle*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Idle
  nameWithType: WorkflowApplication.Idle
- uid: System.Activities.WorkflowApplication.InstanceStore*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplication.InstanceStore
- uid: System.Activities.WorkflowApplication.Load*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Load
  nameWithType: WorkflowApplication.Load
- uid: System.Activities.WorkflowApplication.LoadRunnableInstance*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: LoadRunnableInstance
  nameWithType: WorkflowApplication.LoadRunnableInstance
- uid: System.Activities.WorkflowApplication.OnBeginAssociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowApplication.OnBeginAssociateKeys
- uid: System.Activities.WorkflowApplication.OnBeginPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowApplication.OnBeginPersist
- uid: System.Activities.WorkflowApplication.OnBeginResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowApplication.OnBeginResumeBookmark
- uid: System.Activities.WorkflowApplication.OnDisassociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowApplication.OnDisassociateKeys
- uid: System.Activities.WorkflowApplication.OnEndAssociateKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowApplication.OnEndAssociateKeys
- uid: System.Activities.WorkflowApplication.OnEndPersist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowApplication.OnEndPersist
- uid: System.Activities.WorkflowApplication.OnEndResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowApplication.OnEndResumeBookmark
- uid: System.Activities.WorkflowApplication.OnNotifyPaused*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowApplication.OnNotifyPaused
- uid: System.Activities.WorkflowApplication.OnNotifyUnhandledException*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowApplication.OnNotifyUnhandledException
- uid: System.Activities.WorkflowApplication.OnRequestAbort*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowApplication.OnRequestAbort
- uid: System.Activities.WorkflowApplication.OnUnhandledException*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: OnUnhandledException
  nameWithType: WorkflowApplication.OnUnhandledException
- uid: System.Activities.WorkflowApplication.Persist*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Persist
  nameWithType: WorkflowApplication.Persist
- uid: System.Activities.WorkflowApplication.PersistableIdle*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: PersistableIdle
  nameWithType: WorkflowApplication.PersistableIdle
- uid: System.Activities.WorkflowApplication.ResumeBookmark*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: ResumeBookmark
  nameWithType: WorkflowApplication.ResumeBookmark
- uid: System.Activities.WorkflowApplication.Run*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Run
  nameWithType: WorkflowApplication.Run
- uid: System.Activities.WorkflowApplication.SupportsInstanceKeys*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowApplication.SupportsInstanceKeys
- uid: System.Activities.WorkflowApplication.Terminate*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Terminate
  nameWithType: WorkflowApplication.Terminate
- uid: System.Activities.WorkflowApplication.Unload*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unload
  nameWithType: WorkflowApplication.Unload
- uid: System.Activities.WorkflowApplication.Unloaded*
  parent: System.Activities.WorkflowApplication
  isExternal: false
  name: Unloaded
  nameWithType: WorkflowApplication.Unloaded
