### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ThrowActivity
  id: ThrowActivity
  children:
  - System.Workflow.ComponentModel.ThrowActivity.#ctor
  - System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  - System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.ThrowActivity.Fault
  - System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  - System.Workflow.ComponentModel.ThrowActivity.FaultType
  - System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  - System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: ThrowActivity
  nameWithType: ThrowActivity
  fullName: System.Workflow.ComponentModel.ThrowActivity
  type: Class
  summary: "Modella la generazione di un&quot;eccezione. Questa classe non può essere ereditata."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Lo scopo del ThrowActivity è consentire modelli dichiarativi per la generazione di un&quot;eccezione. Il ThrowActivity è funzionalmente equivalente a un <xref:System.Workflow.Activities.CodeActivity>attività il cui gestore code-beside genera l&quot;eccezione indicata.</xref:System.Workflow.Activities.CodeActivity>"
  example:
  - "The following code shows the use of a single throw activity in a workflow to implement exception handling. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ThrowDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.ThrowActivity), "Resources.Throw.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ThrowActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.Design.ITypeFilterProvider, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.ComponentModel.Design.ITypeFilterProvider
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ThrowActivity()
  nameWithType: ThrowActivity.ThrowActivity()
  fullName: System.Workflow.ComponentModel.ThrowActivity.ThrowActivity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.ComponentModel.ThrowActivity&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code shows the use of a single throw activity in a workflow to implement exception handling. This example includes invoking the constructor. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public ThrowActivity ();
    parameters: []
  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ThrowActivity(String)
  nameWithType: ThrowActivity.ThrowActivity(String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.ThrowActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.ComponentModel.ThrowActivity&quot;> </xref> classe e inizializza il relativo nome."
  syntax:
    content: public ThrowActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attività definita dall&quot;utente."
  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identifier</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.ThrowActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Da aggiungere."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Da aggiungere."
  overload: System.Workflow.ComponentModel.ThrowActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault
  id: Fault
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Fault
  nameWithType: ThrowActivity.Fault
  fullName: System.Workflow.ComponentModel.ThrowActivity.Fault
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ottiene o imposta l&quot;oggetto eccezione che deve essere generata dal <xref href=&quot;System.Workflow.ComponentModel.ThrowActivity&quot;> </xref>."
  remarks: "Proprietà pubblica e a ogni evento di questo tipo è indirettamente accedere mediante la risoluzione di una proprietà di dipendenza corrispondente. Questa proprietà di dipendenza è il campo statico pubblico denominato `XProperty` o `XEvent`, dove X è la proprietà corrispondente."
  syntax:
    content: public Exception Fault { get; set; }
    return:
      type: System.Exception
      description: "Il <xref:System.Exception>associata a questa istanza.</xref:System.Exception>"
  overload: System.Workflow.ComponentModel.ThrowActivity.Fault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  id: FaultProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultProperty
  nameWithType: ThrowActivity.FaultProperty
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che rappresenta il <xref:System.Workflow.ComponentModel.ThrowActivity.Fault*>proprietà per questa istanza.</xref:System.Workflow.ComponentModel.ThrowActivity.Fault*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType
  id: FaultType
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultType
  nameWithType: ThrowActivity.FaultType
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultType
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ottiene o imposta il tipo di eccezione che deve essere generata dal <xref href=&quot;System.Workflow.ComponentModel.ThrowActivity&quot;> </xref>."
  remarks: ''
  example:
  - "The following code shows the usage of a single throw activity within a workflow to implement exception handling. This example shows setting the FaultType to `null`. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public Type FaultType { get; set; }
    return:
      type: System.Type
      description: "Tipo che rappresenta l&quot;errore associato a questa istanza."
  overload: System.Workflow.ComponentModel.ThrowActivity.FaultType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  id: FaultTypeProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultTypeProperty
  nameWithType: ThrowActivity.FaultTypeProperty
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che rappresenta il <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType*>proprietà per questa istanza.</xref:System.Workflow.ComponentModel.ThrowActivity.FaultType*>"
  remarks: "Proprietà pubblica e a ogni evento di questo tipo è indirettamente accedere mediante la risoluzione di una proprietà di dipendenza corrispondente. Questa proprietà di dipendenza è il campo statico pubblico denominato `XProperty` o `XEvent`, dove X è la proprietà corrispondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ThrowActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.ThrowActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Da aggiungere."
  overload: System.Workflow.ComponentModel.ThrowActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Restituisce un valore che indica se l&quot;oggetto specificato <xref:System.Type>possono essere filtrate.</xref:System.Type>"
  syntax:
    content: bool ITypeFilterProvider.CanFilterType (Type type, bool throwOnError);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Per verificare il filtro</xref:System.Type>"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per generare un&quot;eccezione quando il <xref:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType*>viene elaborato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tipo specificato può essere filtrato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ottiene la descrizione per il filtro da visualizzare nella finestra di dialogo del browser classe."
  syntax:
    content: string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente la descrizione del filtro.</xref:System.String>"
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Restituisce il tipo di accesso per la proprietà specificata."
  remarks: "Utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro. Senza questa interfaccia queste informazioni vengono derivate direttamente dai getter/setter di proprietà."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione, se necessario.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> il valore di enumerazione che indica il livello di accesso della proprietà."
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Restituisce il <xref:System.Type>della proprietà specificata.</xref:System.Type>"
  remarks: "Utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione, se necessario.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Type
      description: "Il <xref:System.Type>per la proprietà il cui nome è passato come il <code> propertyName  </code>parametro.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity()
  nameWithType: ThrowActivity.ThrowActivity()
  fullName: System.Workflow.ComponentModel.ThrowActivity.ThrowActivity()
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity(String)
  nameWithType: ThrowActivity.ThrowActivity(String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.ThrowActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.ThrowActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Fault
  nameWithType: ThrowActivity.Fault
  fullName: System.Workflow.ComponentModel.ThrowActivity.Fault
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultProperty
  nameWithType: ThrowActivity.FaultProperty
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultType
  nameWithType: ThrowActivity.FaultType
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultTypeProperty
  nameWithType: ThrowActivity.FaultTypeProperty
  fullName: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ThrowActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.ThrowActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity
  nameWithType: ThrowActivity.ThrowActivity
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Execute
  nameWithType: ThrowActivity.Execute
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Fault
  nameWithType: ThrowActivity.Fault
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultType
  nameWithType: ThrowActivity.FaultType
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Initialize
  nameWithType: ThrowActivity.Initialize
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
