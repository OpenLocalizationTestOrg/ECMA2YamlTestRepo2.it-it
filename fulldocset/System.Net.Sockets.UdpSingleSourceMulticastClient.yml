### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "Un destinatario di client per il traffico multicast da un&quot;unica origine, noto anche come origine specifico Multicast (SSM)."
  remarks: "È necessario conoscere l&quot;indirizzo di gruppo multicast e un indirizzo di origine del mittente.       Oltre a ricevere dati multicast da un mittente specifico, il client di UdpSingleSourceMulticastClient può inoltre inviare dati unicast al mittente.       Per ricevere multicast provenienti da più origini o le origini non sono noti in anticipo, utilizzare la classe UdpSingleSourceMulticastClient."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Crea un nuovo <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> client UDP che è possibile sottoscrivere un indirizzo di gruppo e ricevere datagrammi da un&quot;unica origine."
  remarks: "Il costruttore UdpSingleSourceMulticastClient associa il socket di multicast UDP con un indirizzo di gruppo e una porta, ma non associare o in caso contrario, utilizzare il socket.       Il `groupAddress` parametro può essere IPv4 o IPv6 multicast indirizzo. Tuttavia, la famiglia di indirizzi di `sourceAddress` e `groupAddress` parametri devono essere identico.       Il `localPort` parametro non è necessario specificare una porta inferiore a 1024."
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "Indirizzo di origine mittente può sottoscrivere questo ricevente."
    - id: groupAddress
      type: System.Net.IPAddress
      description: "L&quot;indirizzo di gruppo multicast può sottoscrivere questo ricevente."
    - id: localPort
      type: System.Int32
      description: "La porta locale per il ricevitore da associare."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>e <code>groupAddress</code> deve essere la stessa famiglia di indirizzi."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>è un riferimento null (Nothing in Visual Basic).       - oppure - <code>groupAddress</code> è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>è minore di 0 - oppure - <code>localPort</code> è maggiore di 65.535."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>è minore di 1024."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Associa il socket e inizia un&quot;operazione di join al gruppo multicast per consentire di ricezione dei datagrammi da un indirizzo di origine singolo."
  remarks: "Il metodo BeginJoinGroup associa un socket multicast UDP a una porta locale e viene aggiunto un gruppo multicast per consentire la ricezione dei datagrammi da un indirizzo di origine singolo. Il gruppo multicast, indirizzo di origine singolo, porta locale da associare al vengono specificati l&quot;indirizzo e nel <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>costruttore.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       Il metodo specificato nella `callback` parametro viene richiamato quando viene completata l&quot;operazione per aggiungere il gruppo multicast.       Se richiesto dal runtime, il metodo BeginJoinGroup esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l&quot;accesso, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Un metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast è già stato aggiunto o è in corso un&quot;operazione di join."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Avvia l&quot;operazione di ricezione di un pacchetto dal gruppo multicast unito e richiama il callback specificato quando arriva un pacchetto per il gruppo da un mittente specificato."
  remarks: "Il metodo BeginReceiveFromSource inizia un&quot;operazione di ricezione di un pacchetto UDP dal gruppo multicast unito da un singolo mittente. La porta locale, un gruppo multicast e un indirizzo di origine mittente vengono specificate nel <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>costruttore.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> Il client multicast deve inoltre aver completato un join al gruppo multicast.       Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.       È possibile disporre di un errore socket se un&quot;operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui archiviare i dati ricevuti."
    - id: offset
      type: System.Int32
      description: "Offset, in byte, dall&quot;inizio di `buffer` in cui i dati devono essere archiviati."
    - id: count
      type: System.Int32
      description: "Il numero massimo di byte da ricevere e archiviare nel `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0 - oppure - <code>offset</code> è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>count</code> è minore di 0 - oppure - <code>offset</code> più il conteggio è maggiore della lunghezza del <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket per la ricezione. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Avvia l&quot;operazione di invio di un pacchetto unicast per l&quot;origine specificata in precedenza."
  remarks: "Il metodo BeginSendToSource inizia un&quot;operazione di invio di un pacchetto UDP per l&quot;origine specificata in precedenza.       Alcuni protocolli utilizzano queste informazioni per passare al controllo del flusso di qualità del servizio statistiche o messaggi di ripristino.       Il metodo specificato nella `callback` parametro viene richiamato quando è stato inviato un pacchetto.       Il client è necessario aver completato un join al gruppo multicast.       Se la porta di destinazione specificato nella `remotePort` parametro è minore di 1024, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un       È possibile disporre di un errore socket se un&quot;operazione di invio ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer che contiene i dati da inviare."
    - id: offset
      type: System.Int32
      description: "Offset, in byte, dall&quot;inizio di `buffer` per leggere i dati da inviare."
    - id: count
      type: System.Int32
      description: "Il numero di byte da inviare da di `buffer`."
    - id: remotePort
      type: System.Int32
      description: "La porta remota a cui viene inviato il pacchetto. L&quot;indirizzo remoto specificato da di &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt; costruttore."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0 - oppure - <code>offset</code> è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>count</code> è minore di 0 - oppure - <code>offset</code> più il conteggio è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>remotePort</code> è minore di 0 o maggiore di 65.535."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Esce dal gruppo multicast e rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> classe e <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> sottostante"
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Il metodo Dispose lascia il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>in uno stato inutilizzabile.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>occupata.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       Chiamare sempre il metodo Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>dell&quot;oggetto <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione di join asincrona gruppo a un gruppo multicast."
  remarks: "Il metodo EndJoinGroup completa un&quot;associazione asincrona per un&quot;operazione di join e socket a un gruppo multicast.       Se richiesto dal runtime, il metodo EndJoinGroup esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l&quot;accesso, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di gruppo di join, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione asincrona di join."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione asincrona di ricezione di un pacchetto dal gruppo multicast unito e fornisce le informazioni ricevute."
  remarks: "Il metodo EndReceiveFromSource completa un&quot;operazione asincrona per ricevere un pacchetto da un&quot;unica origine in un gruppo multicast.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di ricezione, una <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Operazione di ricezione del risultato asincrono."
    - id: sourcePort
      type: System.Int32
      description: "L&quot;endpoint di origine da cui è stato ricevuto il pacchetto."
    return:
      type: System.Int32
      description: "Restituisce <xref:System.Int32>.</xref:System.Int32>       La lunghezza, espressa in byte, del messaggio archiviato nel <code> buffer </code> parametro passato per il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>metodo.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione di invio di un pacchetto unicast a una singola origine."
  remarks: "Il metodo EndSendToSource completa un&quot;operazione asincrona per inviare un pacchetto a una singola origine specificata in precedenza.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di ricezione, una <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione di invio asincrona."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta la dimensione, in byte, del buffer di ricezione del <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di ricezione multicast su questo <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> istanza.</xref:System.Net.Sockets.Socket>"
  remarks: "Il `ReceiveBufferSize` proprietà ottiene o imposta la dimensione, in byte, del buffer di ricezione dell&quot;oggetto sottostante <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di ricezione multicast su questo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>istanza.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> In particolare, il `ReceiveBufferSize` proprietà controlla le dimensioni del buffer utilizzato da parte dello stack quando arriva un pacchetto, ma l&quot;applicazione non ha ancora chiamato il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>metodo.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Se questo buffer viene riempito e pacchetti ancora prima l&quot;applicazione chiama il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>e <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>metodi, i pacchetti precedenti verranno eliminati.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> L&quot;applicazione non sarà in grado di ricevere i pacchetti precedenti e riceveranno i pacchetti più recenti quando si chiama il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>metodo.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       Le dimensioni predefinite del buffer di ricezione in Windows sono 8192."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Restituisce <xref:System.Int32>.</xref:System.Int32>       Le dimensioni in byte, del buffer di ricezione."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Le dimensioni del buffer specificata sono minore di 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta la dimensione, in byte, del buffer di invio del <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di invio multicast su questo <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> istanza.</xref:System.Net.Sockets.Socket>"
  remarks: "Ottiene o imposta la dimensione, in byte, del buffer di invio dell&quot;oggetto sottostante di SendBufferSize-proprietà <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di invio multicast su questo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>istanza.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       In Mac OS X, SendBufferSize-proprietà controlla il numero di byte nel buffer in attesa di invio di stack di rete prima di eventuali chiamate aggiuntive da è possibile il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>metodo ha esito negativo.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Le applicazioni in Mac OS X potrebbero essere necessario occuparsi di questa proprietà se si inviano un numero elevato di pacchetti UDP in un intervallo di tempo breve.       In Windows, le chiamate al <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>metodo richiederà più tempo per chiamare il callback in base al valore SendBufferSize-proprietà se il buffer di trasmissione è pieno.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> SendBufferSize-proprietà controlla solo se rimane buffer dell&quot;utente è stata bloccata nella memoria fisica finché non viene completata la trasmissione.       Le dimensioni predefinite del buffer di invio in Windows sono 8192."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Restituisce <xref:System.Int32>.</xref:System.Int32>       Le dimensioni in byte, del buffer di invio."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Le dimensioni del buffer specificata sono minore di 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> è stato eliminato."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
