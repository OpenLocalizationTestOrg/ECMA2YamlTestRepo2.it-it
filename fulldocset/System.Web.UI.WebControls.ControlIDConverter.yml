### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ControlIDConverter
  id: ControlIDConverter
  children:
  - System.Web.UI.WebControls.ControlIDConverter.#ctor
  - System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)
  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ControlIDConverter
  nameWithType: ControlIDConverter
  fullName: System.Web.UI.WebControls.ControlIDConverter
  type: Class
  summary: "Fornisce un convertitore di tipi che recupera un elenco ID dei controlli nel contenitore corrente."
  remarks: "La classe ControlIDConverter deriva il <xref:System.ComponentModel.StringConverter>classe e fornisce un elenco ID di controllo per la visualizzazione in un controllo griglia delle proprietà in ambienti in fase di progettazione.</xref:System.ComponentModel.StringConverter> La classe ControlIDConverter funge anche da classe base per il <xref:System.Web.UI.WebControls.AssociatedControlConverter>e <xref:System.Web.UI.WebControls.ValidatedControlConverter>classi, i convertitori di tipi per i controlli Web e i controlli che supportano gli attributi di proprietà di convalida, rispettivamente.</xref:System.Web.UI.WebControls.ValidatedControlConverter> </xref:System.Web.UI.WebControls.AssociatedControlConverter>       Per ulteriori informazioni sui convertitori di tipi, vedere [procedura: implementare un convertitore di tipi](~/add/includes/ajax-current-ext-md.md) o [conversioni tra tipi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the ControlIDConverter in a class that requires a <xref:System.ComponentModel.TypeConverter> to render the ID of a control. The `DebugInfoControl` is a simple control that prints out some information on a control contained by the current Web Form. Its `ControlID` property is decorated with a <xref:System.ComponentModel.TypeConverterAttribute> that designates the ControlIDConverter as the <xref:System.ComponentModel.TypeConverter> to use for that property. The `DebugInfoControl`overrides the `Render` method to print out information about the target control in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[System.Web.UI.ControlIdConverter_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_289_1.cs)]\n [!code-vb[System.Web.UI.ControlIdConverter_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_289_1.vb)]  \n  \n The following code example demonstrates how the `DebugInfoControl` can be used in a Web Form along with an <xref:System.Web.UI.WebControls.AccessDataSource> control to display information about the <xref:System.Web.UI.WebControls.AccessDataSource> control.  \n  \n [!code-cs[System.Web.UI.ControlIdConverter_1#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_289_2.aspx)]\n [!code-vb[System.Web.UI.ControlIdConverter_1#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_289_2.aspx)]"
  syntax:
    content: 'public class ControlIDConverter : System.ComponentModel.StringConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.StringConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlIDConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ControlIDConverter
  langs:
  - csharp
  name: ControlIDConverter()
  nameWithType: ControlIDConverter.ControlIDConverter()
  fullName: System.Web.UI.WebControls.ControlIDConverter.ControlIDConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.ControlIDConverter&quot;> </xref> classe."
  remarks: >-
    > [!NOTE]

    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.
  syntax:
    content: public ControlIDConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.ControlIDConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)
  id: FilterControl(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ControlIDConverter
  langs:
  - csharp
  name: FilterControl(Control)
  nameWithType: ControlIDConverter.FilterControl(Control)
  fullName: System.Web.UI.WebControls.ControlIDConverter.FilterControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un valore che indica se l&quot;ID di controllo del controllo specificato viene aggiunto per il <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>restituito dal <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*>metodo.</xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  syntax:
    content: protected virtual bool FilterControl (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Istanza del controllo per verificare l&quot;inclusione nella <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.ControlIDConverter.FilterControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce una raccolta di ID dal contenitore all&quot;interno di controllo di <xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> quando viene fornito un contesto di formato."
  remarks: "Il <xref:System.Web.UI.WebControls.ControlIDConverter.FilterControl%2A>metodo viene chiamato su ogni controllo presente nel contenitore.</xref:System.Web.UI.WebControls.ControlIDConverter.FilterControl%2A> Il controllo ID viene aggiunto solo per il <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>Se il metodo restituisce `true`.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato che può essere utilizzato per estrarre informazioni aggiuntive sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro o una proprietà di questo parametro può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Oggetto <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>che contiene un set di stringhe che rappresentano gli ID dei controlli nel contenitore corrente.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Se attualmente è presente alcun controllo, viene restituita una raccolta vuota. Se il contesto è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o non vi è alcun contenitore corrente, quindi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un valore che indica se la raccolta di valori standard restituiti dal <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*>metodo è un elenco esclusivo di valori possibili utilizzando il contesto specificato.</xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*>"
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un valore che indica se questo oggetto supporta un set standard di valori di ID di controllo che possono essere selezionati da un elenco utilizzando il contesto specificato."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*>deve essere chiamato per trovare i valori di ID oggetto supporta un set comune di controllo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*> Questa implementazione restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se il contesto non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.StringConverter
  isExternal: false
  name: System.ComponentModel.StringConverter
- uid: System.Web.UI.WebControls.ControlIDConverter.#ctor
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: ControlIDConverter()
  nameWithType: ControlIDConverter.ControlIDConverter()
  fullName: System.Web.UI.WebControls.ControlIDConverter.ControlIDConverter()
- uid: System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: FilterControl(Control)
  nameWithType: ControlIDConverter.FilterControl(Control)
  fullName: System.Web.UI.WebControls.ControlIDConverter.FilterControl(Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.ControlIDConverter.#ctor*
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: ControlIDConverter
  nameWithType: ControlIDConverter.ControlIDConverter
- uid: System.Web.UI.WebControls.ControlIDConverter.FilterControl*
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: FilterControl
  nameWithType: ControlIDConverter.FilterControl
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValues*
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ControlIDConverter.GetStandardValues
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ControlIDConverter.GetStandardValuesExclusive
- uid: System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported*
  parent: System.Web.UI.WebControls.ControlIDConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ControlIDConverter.GetStandardValuesSupported
