### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.TextEffect
  id: TextEffect
  children:
  - System.Windows.Media.TextEffect.#ctor
  - System.Windows.Media.TextEffect.#ctor(System.Windows.Media.Transform,System.Windows.Media.Brush,System.Windows.Media.Geometry,System.Int32,System.Int32)
  - System.Windows.Media.TextEffect.Clip
  - System.Windows.Media.TextEffect.ClipProperty
  - System.Windows.Media.TextEffect.Clone
  - System.Windows.Media.TextEffect.CloneCurrentValue
  - System.Windows.Media.TextEffect.CreateInstanceCore
  - System.Windows.Media.TextEffect.Foreground
  - System.Windows.Media.TextEffect.ForegroundProperty
  - System.Windows.Media.TextEffect.PositionCount
  - System.Windows.Media.TextEffect.PositionCountProperty
  - System.Windows.Media.TextEffect.PositionStart
  - System.Windows.Media.TextEffect.PositionStartProperty
  - System.Windows.Media.TextEffect.Transform
  - System.Windows.Media.TextEffect.TransformProperty
  langs:
  - csharp
  name: TextEffect
  nameWithType: TextEffect
  fullName: System.Windows.Media.TextEffect
  type: Class
  summary: "Rappresenta un effetto di testo che può essere applicato a oggetti di testo."
  remarks: "L&quot;oggetto TextEffect consente di aggiungere effetti, ad esempio le animazioni, gli oggetti di testo, ad esempio <xref:System.Windows.Controls.TextBlock>, <xref:System.Windows.Documents.TextElement>, e <xref:System.Windows.Documents.FlowDocument>oggetti.</xref:System.Windows.Documents.FlowDocument> </xref:System.Windows.Documents.TextElement> </xref:System.Windows.Controls.TextBlock>"
  example:
  - "The following example shows an individual character being rotated. Each character is rotated independently at 1-second intervals. The example a defines a TextEffect that contains a <xref:System.Windows.Media.RotateTransform> that applies to each character in the <xref:System.Windows.Controls.TextBlock.Text%2A?displayProperty=fullName> property. The example defines the animations for the <xref:System.Windows.Media.RotateTransform.Angle%2A> and <xref:System.Windows.Media.RotateTransform.CenterX%2A> properties of the <xref:System.Windows.Media.RotateTransform> object. A third animation of type <xref:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames> changes the <xref:System.Windows.Media.TextEffect.PositionStart%2A> property from 0 to 12 during the animation sequence, corresponding to the 13-character text string.  \n  \n ![Screenshot of text effect rotating text](~/add/media/texteffect01.jpg \"Screenshot of text effect rotating text\")  \n  \n                  Example of a rotating text effect animation  \n  \n [!code-xml[TextEffectSample#TextEffectEntireSample](~/add/codesnippet/xaml/t-system.windows.media.t_2_1.xaml)]\n [!code-xml[TextEffectSample#TextEffectEntireSample](~/add/codesnippet/xaml/TextEffectSample/Window1.xaml#texteffectentiresample)]"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public sealed class TextEffect : System.Windows.Media.Animation.Animatable
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: TextEffect()
  nameWithType: TextEffect.TextEffect()
  fullName: System.Windows.Media.TextEffect.TextEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how to create a <xref:System.Windows.Media.TextEffect>, set its properties, and add it to the <xref:System.Windows.Media.TextEffectCollection> of the specified text object.  \n  \n [!code-vb[TextOverview#TextEffectSnippet1](~/add/codesnippet/visualbasic/textoverview/texteffect.xaml.vb#texteffectsnippet1)]\n [!code-cs[TextOverview#TextEffectSnippet1](~/add/codesnippet/csharp/TextOverview/TextEffect.xaml.cs#texteffectsnippet1)]"
  syntax:
    content: public TextEffect ();
    parameters: []
  overload: System.Windows.Media.TextEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.#ctor(System.Windows.Media.Transform,System.Windows.Media.Brush,System.Windows.Media.Geometry,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Media.Transform,System.Windows.Media.Brush,System.Windows.Media.Geometry,System.Int32,System.Int32)'
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: TextEffect(Transform,Brush,Geometry,Int32,Int32)
  nameWithType: TextEffect.TextEffect(Transform,Brush,Geometry,Int32,Int32)
  fullName: System.Windows.Media.TextEffect.TextEffect(Transform,Brush,Geometry,Int32,Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> classe specificando i valori delle proprietà di classe."
  remarks: ''
  example:
  - "The following code example shows how to call the TextEffect constructor. Notice that in this case, the `transform` and `clip` parameters are set to `null`, since those parameters values are not needed.  \n  \n [!code-vb[TextOverview#TextEffectSnippet3](~/add/codesnippet/visualbasic/textoverview/texteffect.xaml.vb#texteffectsnippet3)]\n [!code-cs[TextOverview#TextEffectSnippet3](~/add/codesnippet/csharp/TextOverview/TextEffect.xaml.cs#texteffectsnippet3)]"
  syntax:
    content: public TextEffect (System.Windows.Media.Transform transform, System.Windows.Media.Brush foreground, System.Windows.Media.Geometry clip, int positionStart, int positionCount);
    parameters:
    - id: transform
      type: System.Windows.Media.Transform
      description: "Il <xref href=&quot;System.Windows.Media.Transform&quot;> </xref> che viene applicata al <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
    - id: foreground
      type: System.Windows.Media.Brush
      description: "Il <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> da applicare al contenuto del <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
    - id: clip
      type: System.Windows.Media.Geometry
      description: "L&quot;area di visualizzazione di <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
    - id: positionStart
      type: System.Int32
      description: "La posizione iniziale nel testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a."
    - id: positionCount
      type: System.Int32
      description: "Il numero di posizioni nel testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a."
  overload: System.Windows.Media.TextEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.Clip
  id: Clip
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: Clip
  nameWithType: TextEffect.Clip
  fullName: System.Windows.Media.TextEffect.Clip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta l&quot;area di visualizzazione di <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
  remarks: "<a name=&quot;dependencyPropertyInfo_Clip&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.TextEffect.ClipProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.TextEffect.ClipProperty>"
  syntax:
    content: public System.Windows.Media.Geometry Clip { get; set; }
    return:
      type: System.Windows.Media.Geometry
      description: "Il <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref> che definisce l&quot;area di visualizzazione."
  overload: System.Windows.Media.TextEffect.Clip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.ClipProperty
  id: ClipProperty
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: ClipProperty
  nameWithType: TextEffect.ClipProperty
  fullName: System.Windows.Media.TextEffect.ClipProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.TextEffect.Clip*>proprietà di dipendenza.</xref:System.Windows.Media.TextEffect.Clip*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ClipProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.Clone
  id: Clone
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: TextEffect.Clone()
  fullName: System.Windows.Media.TextEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>, eseguendo copie complete dei valori dell&quot;oggetto. Durante la copia delle proprietà di dipendenza, questo metodo copia delle associazioni dati e dei riferimenti di risorsa (), ma non possono risolvere non le animazioni né i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.TextEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.TextEffect
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> era di proprietà<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.TextEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: TextEffect.CloneCurrentValue()
  fullName: System.Windows.Media.TextEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> oggetto, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, data binding e le animazioni non vengono copiate, ma i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.TextEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.TextEffect
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.TextEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: TextEffect.CreateInstanceCore()
  fullName: System.Windows.Media.TextEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.TextEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.Foreground
  id: Foreground
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: Foreground
  nameWithType: TextEffect.Foreground
  fullName: System.Windows.Media.TextEffect.Foreground
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> da applicare al contenuto del <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
  remarks: "<a name=&quot;dependencyPropertyInfo_Foreground&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.TextEffect.ForegroundProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.TextEffect.ForegroundProperty>"
  example:
  - "The following code example shows how to create an animatable <xref:System.Windows.Media.Brush> and set it as the Foreground property value.  \n  \n [!code-vb[TextOverview#TextEffectSnippet1](~/add/codesnippet/visualbasic/textoverview/texteffect.xaml.vb#texteffectsnippet1)]\n [!code-cs[TextOverview#TextEffectSnippet1](~/add/codesnippet/csharp/TextOverview/TextEffect.xaml.cs#texteffectsnippet1)]"
  syntax:
    content: public System.Windows.Media.Brush Foreground { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "Pennello utilizzato per applicare il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
  overload: System.Windows.Media.TextEffect.Foreground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.ForegroundProperty
  id: ForegroundProperty
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: ForegroundProperty
  nameWithType: TextEffect.ForegroundProperty
  fullName: System.Windows.Media.TextEffect.ForegroundProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.TextEffect.Foreground*>proprietà di dipendenza.</xref:System.Windows.Media.TextEffect.Foreground*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.PositionCount
  id: PositionCount
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: PositionCount
  nameWithType: TextEffect.PositionCount
  fullName: System.Windows.Media.TextEffect.PositionCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta la posizione del testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a."
  remarks: "Impostando il valore PositionCount su un numero è maggiore della posizione massima nel testo interessato è valida.      <a name=&quot;dependencyPropertyInfo_PositionCount&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.TextEffect.PositionCountProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.TextEffect.PositionCountProperty>"
  example:
  - "The following code example shows how you can set PositionCount value to the maximum <xref:System.Int32> value to ensure that all characters in the text are affected.  \n  \n [!code-vb[TextOverview#TextEffectSnippet2](~/add/codesnippet/visualbasic/textoverview/texteffect.xaml.vb#texteffectsnippet2)]\n [!code-cs[TextOverview#TextEffectSnippet2](~/add/codesnippet/csharp/TextOverview/TextEffect.xaml.cs#texteffectsnippet2)]"
  syntax:
    content: public int PositionCount { get; set; }
    return:
      type: System.Int32
      description: "Il <xref:System.Int32>valore che rappresenta la posizione del testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a.</xref:System.Int32>"
  overload: System.Windows.Media.TextEffect.PositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.PositionCountProperty
  id: PositionCountProperty
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: PositionCountProperty
  nameWithType: TextEffect.PositionCountProperty
  fullName: System.Windows.Media.TextEffect.PositionCountProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.TextEffect.PositionCount*>proprietà di dipendenza.</xref:System.Windows.Media.TextEffect.PositionCount*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PositionCountProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.PositionStart
  id: PositionStart
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: PositionStart
  nameWithType: TextEffect.PositionStart
  fullName: System.Windows.Media.TextEffect.PositionStart
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta la posizione iniziale nel testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a."
  remarks: "<a name=&quot;dependencyPropertyInfo_PositionStart&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.TextEffect.PositionStartProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.TextEffect.PositionStartProperty>"
  syntax:
    content: public int PositionStart { get; set; }
    return:
      type: System.Int32
      description: "Il <xref:System.Int32>valore che rappresenta la posizione iniziale nel testo che il <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> si applica a.</xref:System.Int32>"
  overload: System.Windows.Media.TextEffect.PositionStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.PositionStartProperty
  id: PositionStartProperty
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: PositionStartProperty
  nameWithType: TextEffect.PositionStartProperty
  fullName: System.Windows.Media.TextEffect.PositionStartProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.TextEffect.PositionStart*>proprietà di dipendenza.</xref:System.Windows.Media.TextEffect.PositionStart*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PositionStartProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.Transform
  id: Transform
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: Transform
  nameWithType: TextEffect.Transform
  fullName: System.Windows.Media.TextEffect.Transform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Media.Transform&quot;> </xref> che viene applicata al <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref>."
  remarks: "<a name=&quot;dependencyPropertyInfo_Transform&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.TextEffect.TransformProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.TextEffect.TransformProperty>"
  example:
  - "In the following markup example, a <xref:System.Windows.Media.TextEffect> is created for a <xref:System.Windows.Controls.TextBlock> object. In this case, the effect is a rotation animation.  \n  \n [!code-xml[TextEffectSample#TextEffectSample1](~/add/codesnippet/xaml/p-system.windows.media.t_2_1.xaml)]\n [!code-xml[TextEffectSample#TextEffectSample1](~/add/codesnippet/xaml/TextEffectSample/Window1.xaml#texteffectsample1)]  \n  \n To view the complete sample, see ."
  syntax:
    content: public System.Windows.Media.Transform Transform { get; set; }
    return:
      type: System.Windows.Media.Transform
      description: "The <xref href=&quot;System.Windows.Media.Transform&quot;></xref> value of the <xref href=&quot;System.Windows.Media.TextEffect&quot;></xref>."
  overload: System.Windows.Media.TextEffect.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.TextEffect.TransformProperty
  id: TransformProperty
  parent: System.Windows.Media.TextEffect
  langs:
  - csharp
  name: TransformProperty
  nameWithType: TextEffect.TransformProperty
  fullName: System.Windows.Media.TextEffect.TransformProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.TextEffect.Transform*>proprietà di dipendenza.</xref:System.Windows.Media.TextEffect.Transform*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TransformProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.TextEffect.#ctor
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: TextEffect()
  nameWithType: TextEffect.TextEffect()
  fullName: System.Windows.Media.TextEffect.TextEffect()
- uid: System.Windows.Media.TextEffect.#ctor(System.Windows.Media.Transform,System.Windows.Media.Brush,System.Windows.Media.Geometry,System.Int32,System.Int32)
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: TextEffect(Transform,Brush,Geometry,Int32,Int32)
  nameWithType: TextEffect.TextEffect(Transform,Brush,Geometry,Int32,Int32)
  fullName: System.Windows.Media.TextEffect.TextEffect(Transform,Brush,Geometry,Int32,Int32)
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.TextEffect.Clip
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Clip
  nameWithType: TextEffect.Clip
  fullName: System.Windows.Media.TextEffect.Clip
- uid: System.Windows.Media.TextEffect.ClipProperty
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: ClipProperty
  nameWithType: TextEffect.ClipProperty
  fullName: System.Windows.Media.TextEffect.ClipProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.TextEffect.Clone
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Clone()
  nameWithType: TextEffect.Clone()
  fullName: System.Windows.Media.TextEffect.Clone()
- uid: System.Windows.Media.TextEffect
  parent: System.Windows.Media
  isExternal: false
  name: TextEffect
  nameWithType: TextEffect
  fullName: System.Windows.Media.TextEffect
- uid: System.Windows.Media.TextEffect.CloneCurrentValue
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: TextEffect.CloneCurrentValue()
  fullName: System.Windows.Media.TextEffect.CloneCurrentValue()
- uid: System.Windows.Media.TextEffect.CreateInstanceCore
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: TextEffect.CreateInstanceCore()
  fullName: System.Windows.Media.TextEffect.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.TextEffect.Foreground
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Foreground
  nameWithType: TextEffect.Foreground
  fullName: System.Windows.Media.TextEffect.Foreground
- uid: System.Windows.Media.TextEffect.ForegroundProperty
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: ForegroundProperty
  nameWithType: TextEffect.ForegroundProperty
  fullName: System.Windows.Media.TextEffect.ForegroundProperty
- uid: System.Windows.Media.TextEffect.PositionCount
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionCount
  nameWithType: TextEffect.PositionCount
  fullName: System.Windows.Media.TextEffect.PositionCount
- uid: System.Windows.Media.TextEffect.PositionCountProperty
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionCountProperty
  nameWithType: TextEffect.PositionCountProperty
  fullName: System.Windows.Media.TextEffect.PositionCountProperty
- uid: System.Windows.Media.TextEffect.PositionStart
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionStart
  nameWithType: TextEffect.PositionStart
  fullName: System.Windows.Media.TextEffect.PositionStart
- uid: System.Windows.Media.TextEffect.PositionStartProperty
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionStartProperty
  nameWithType: TextEffect.PositionStartProperty
  fullName: System.Windows.Media.TextEffect.PositionStartProperty
- uid: System.Windows.Media.TextEffect.Transform
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Transform
  nameWithType: TextEffect.Transform
  fullName: System.Windows.Media.TextEffect.Transform
- uid: System.Windows.Media.TextEffect.TransformProperty
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: TransformProperty
  nameWithType: TextEffect.TransformProperty
  fullName: System.Windows.Media.TextEffect.TransformProperty
- uid: System.Windows.Media.TextEffect.#ctor*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: TextEffect
  nameWithType: TextEffect.TextEffect
- uid: System.Windows.Media.TextEffect.Clip*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Clip
  nameWithType: TextEffect.Clip
- uid: System.Windows.Media.TextEffect.Clone*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Clone
  nameWithType: TextEffect.Clone
- uid: System.Windows.Media.TextEffect.CloneCurrentValue*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: TextEffect.CloneCurrentValue
- uid: System.Windows.Media.TextEffect.CreateInstanceCore*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: TextEffect.CreateInstanceCore
- uid: System.Windows.Media.TextEffect.Foreground*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Foreground
  nameWithType: TextEffect.Foreground
- uid: System.Windows.Media.TextEffect.PositionCount*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionCount
  nameWithType: TextEffect.PositionCount
- uid: System.Windows.Media.TextEffect.PositionStart*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: PositionStart
  nameWithType: TextEffect.PositionStart
- uid: System.Windows.Media.TextEffect.Transform*
  parent: System.Windows.Media.TextEffect
  isExternal: false
  name: Transform
  nameWithType: TextEffect.Transform
