### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  id: ITextRangeProvider
  children:
  - System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.Clone
  - System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  - System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  - System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  - System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  - System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.Select
  langs:
  - csharp
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
  type: Interface
  summary: "Espone metodi e proprietà per supportare l&quot;accesso client di automazione interfaccia utente a un intervallo di testo continuo in un contenitore di testo che implementa <xref href=&quot;System.Windows.Automation.Provider.ITextProvider&quot;> </xref>."
  remarks: "Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.TextPattern>pattern di controllo.</xref:System.Windows.Automation.TextPattern>       Oggetto <xref:System.Windows.Automation.Text.TextPatternRange>può rappresentare un punto di inserimento, un subset o tutto il testo in un <xref:System.Windows.Automation.TextPattern>contenitore.</xref:System.Windows.Automation.TextPattern> </xref:System.Windows.Automation.Text.TextPatternRange>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ITextRangeProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  id: AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Aggiunge alla raccolta di testo evidenziato in un contenitore di testo che supporta più, selezioni non contigue."
  remarks: "Consente di spostare il punto di inserimento nell&quot;area della nuova selezione.       Fornisce un intervallo di testo degenerato sposta il punto di inserimento."
  syntax:
    content: public void AddToSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Se il provider di testo non supporta più selezioni non contigue (vale a dire <xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>deve avere un valore di <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  id: Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce un nuovo <xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;> </xref> identica all&quot;originale <xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;> </xref> e che eredita tutte le proprietà dell&quot;originale."
  remarks: "Il nuovo intervallo può essere modificato in modo indipendente dall&quot;originale."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Nuovo intervallo di testo. Un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) non viene mai restituito."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  id: Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce un valore che indica se l&quot;intervallo (il <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint per il <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint) di un testo intervallo corrisponde a un altro intervallo di testo."
  syntax:
    content: public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);
    parameters:
    - id: range
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Un intervallo di testo da confrontare"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;ampiezza di entrambi gli intervalli di testo è identica. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se l&quot;intervallo da confrontare non proviene dallo stesso provider di testo."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce un valore che specifica se i due intervalli di testo presentano endpoint identici."
  syntax:
    content: public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Il <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> o <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint del chiamante."
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "L&quot;intervallo di destinazione per il confronto."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Il <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> o <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint di destinazione."
    return:
      type: System.Int32
      description: "Restituisce un valore negativo se l&quot;endpoint del chiamante si verifica nel testo prima dell&quot;endpoint di destinazione.       Restituisce zero se l&quot;endpoint del chiamante è nella stessa posizione dell&quot;endpoint di destinazione.       Restituisce un valore positivo se l&quot;endpoint del chiamante si trova nel testo dell&quot;endpoint di destinazione."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se <code> targetRange </code> proviene da un provider di testo diversa."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  id: ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Espande l&quot;intervallo di testo all&quot;unità di testo specificato."
  remarks: "Se l&quot;intervallo è già una quantità esatta delle unità di misura specificata e rimane invariato.       È presente una serie di passaggi coinvolti in background per consentire il <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>metodo venga eseguito correttamente.</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  L&quot;intervallo di testo viene normalizzato; l&quot;intervallo di testo viene compresso in un intervallo degenerato il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint, che rende il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint superfluo.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Questo passaggio è necessario rimuovere l&quot;ambiguità nei casi in cui si estende un intervallo di testo `unit` limiti, ad esempio &quot;{l&quot;U} RL [http://www.microsoft.com](http://www.microsoft.com) è incorporato nel testo&quot; dove &quot;{&quot; e &quot;}&quot; rappresentano il testo di endpoint dell&quot;intervallo.      2.  L&quot;intervallo risultante viene spostato indietro <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>all&quot;inizio dell&quot;oggetto richiesto `unit` limite.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  L&quot;intervallo viene spostato avanti o indietro nel <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>per il numero richiesto di `unit` limiti.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  L&quot;intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint da una richiesta `unit` limite.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;regolazioni di intervallo mediante Move / ExpandToEnclosingUnit&quot;) esempi di regolazione di un intervallo di testo per Move ed ExpandToEnclosingUnit () > [!NOTE] > questi passaggi sono necessari poiché è comune per la lettura del contenuto lette una completa parola, frase o un paragrafo intero al punto di inserimento o da qualsiasi posizione del cursore virtuale.       ExpandToEnclosingUnit rispetta il testo nascosto sia visibile.       ExpandToEnclosingUnit rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit>supportato se il dato <xref:System.Windows.Automation.Text.TextUnit>non è supportata dal controllo.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       L&quot;ordine, da unità più piccolo al più grande, è elencato di seguito.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Unità testuale."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  id: FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce un sottoinsieme di intervallo di testo con il valore di attributo specificato."
  remarks: "Non vi è alcuna differenza tra il testo nascosto e visibile."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);
    parameters:
    - id: attribute
      type: System.Int32
      description: "L&quot;attributo da cercare."
    - id: value
      type: System.Object
      description: "Il valore dell&quot;attributo da cercare. Questo valore deve corrispondere al tipo specificato per l&quot;attributo."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se deve essere restituito l&quot;ultimo intervallo di testo invece del primo; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Un intervallo di testo che presenta un attributo corrispondente e il valore di attributo. in caso contrario null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  id: FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce un sottoinsieme di intervallo di testo che contiene il testo specificato."
  remarks: "Non vi è alcuna differenza tra il testo nascosto e visibile."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);
    parameters:
    - id: text
      type: System.String
      description: "La stringa di testo da cercare."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se deve essere restituito l&quot;ultimo intervallo di testo invece del primo; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il case deve essere ignorato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Un intervallo di testo corrispondente al testo specificato; in caso contrario null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  id: GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Recupera il valore dell&quot;attributo specificato nell&quot;intervallo di testo."
  remarks: "Non vi è alcuna differenza tra il testo nascosto e visibile."
  syntax:
    content: public object GetAttributeValue (int attribute);
    parameters:
    - id: attribute
      type: System.Int32
      description: "Attributo di testo."
    return:
      type: System.Object
      description: "Recupera un oggetto che rappresenta il valore dell&quot;attributo specificato. Ad esempio, `GetAttributeValue(TextPattern.FontNameAttribute)` restituirebbe una stringa che rappresenta il nome del carattere dell&quot;intervallo di testo mentre `GetAttributeValue(TextPattern.IsItalicAttribute)` restituirebbe un valore di tipo <xref:System.Boolean>.</xref:System.Boolean>       Restituisce <xref href=&quot;System.Windows.Automation.TextPattern.MixedAttributeValue&quot;> </xref> se il valore dell&quot;attributo specificato varia nell&quot;intervallo di testo.       Restituisce <xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;> </xref> se l&quot;attributo specificato non è supportata dal provider o il controllo."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se l&quot;attributo specificato non è valido."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  id: GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Recupera una raccolta di rettangoli di delimitazione per ogni riga di testo in un intervallo di testo completamente o parzialmente visibile."
  syntax:
    content: public double[] GetBoundingRectangles ();
    parameters: []
    return:
      type: System.Double[]
      description: "Matrice di rettangoli di delimitazione per ogni riga di testo in un intervallo di testo completo o parziale.       Matrice vuota per un intervallo degenerato.       Matrice vuota per un intervallo di testo che presenta coordinate di schermo che lo collocano completamente, di fuori della visualizzazione o nascosto da una finestra sovrapposta."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  id: GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Recupera una raccolta di tutti gli oggetti incorporati che rientrano nell&quot;intervallo di testo."
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]
      description: "Una raccolta di oggetti figlio che rientrano nell&quot;intervallo. Nella raccolta verranno inclusi anche elementi figlio che si sovrappongono all&quot;intervallo di testo, ma non sono racchiusi completamente.       Restituisce una raccolta vuota se non sono presenti oggetti figlio."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  id: GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Restituisce il controllo più interno che racchiude l&quot;intervallo di testo."
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "Il controllo contenitore, in genere il provider di testo che fornisce l&quot;intervallo di testo. Tuttavia, se il provider di testo supporta elementi figlio, quali tabelle o collegamenti ipertestuali, l&quot;elemento contenitore potrebbe essere un discendente del provider di testo."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  id: GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Recupera il testo normale dell&quot;intervallo."
  remarks: "GetText rispetta il testo nascosto sia visibile.       Se `maxLength` è maggiore della lunghezza dell&quot;intervallo di testo del chiamante, la stringa restituita sarà il testo normale dell&quot;intervallo di testo.       GetText non verranno influenzati dall&quot;ordine degli endpoint nel flusso di testo. Restituisce sempre il testo tra gli endpoint di inizio e di fine dell&quot;intervallo di testo nell&quot;ordine di flusso di testo logico."
  syntax:
    content: public string GetText (int maxLength);
    parameters:
    - id: maxLength
      type: System.Int32
      description: "La lunghezza massima della stringa da restituire. Utilizzare `-1` se è richiesto alcun limite."
    return:
      type: System.String
      description: "Il testo normale dell&quot;intervallo di testo, probabilmente troncato all&quot;oggetto specificato <code> maxLength </code>."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Se <code> maxLength </code> è minore di -1."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  id: Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Sposta l&quot;intervallo di testo, il numero specificato di unità di testo."
  remarks: "Quando è necessario scorrere il contenuto di un intervallo di testo, una serie di passaggi coinvolti in background in ordine per il metodo Move venga eseguito correttamente.      1.  L&quot;intervallo di testo viene normalizzato; l&quot;intervallo di testo viene compresso in un intervallo degenerato il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint, che rende il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint superfluo.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Questo passaggio è necessario rimuovere l&quot;ambiguità nei casi in cui si estende un intervallo di testo `unit` limiti, ad esempio &quot;{l&quot;U} RL [http://www.microsoft.com](http://www.microsoft.com) è incorporato nel testo&quot; dove &quot;{&quot; e &quot;}&quot; rappresentano il testo di endpoint dell&quot;intervallo.      2.  L&quot;intervallo risultante viene spostato indietro <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>all&quot;inizio dell&quot;oggetto richiesto `unit` limite.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  L&quot;intervallo viene spostato avanti o indietro nel <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>per il numero richiesto di `unit` limiti.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  L&quot;intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint da una richiesta `unit` limite.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;regolazioni di intervallo mediante Move / ExpandToEnclosingUnit&quot;) esempi di regolazione di un intervallo di testo per Move ed ExpandToEnclosingUnit () del contenuto testuale (o testo interno) di un contenitore di testo e un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia la visualizzazione controlli e la visualizzazione del contenuto di [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] albero; vengono ignorati i limiti dell&quot;oggetto.       ![Intervalli di testo estesi da oggetti incorporati. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png &quot;Gli intervalli di testo estesi da oggetti incorporati.&quot;)   Esempio di un flusso di testo con oggetti incorporati e il relativo intervallo si estende su Move equivalenti sia nascosti e il testo visibile.       Spostamento rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit>supportato se il dato <xref:System.Windows.Automation.Text.TextUnit>non è supportata dal controllo.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       L&quot;ordine, da unità più piccolo al più grande, è elencato di seguito.      - <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>Il testo non viene modificato in alcun modo, l&quot;intervallo di testo occupa solo una parte diversa del testo.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int Move (System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Il limite di unità di testo."
    - id: count
      type: System.Int32
      description: "Il numero di unità di testo da spostare.       Un valore positivo sposta in avanti l&quot;intervallo di testo, un valore negativo consente di spostare l&quot;intervallo di testo indietro e 0 non ha alcun effetto."
    return:
      type: System.Int32
      description: "Il numero di unità effettivamente spostate. Può essere inferiore al numero richiesto se uno dei nuovi endpoint di intervallo di testo è maggiore o minore rispetto al <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>endpoint.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Sposta un endpoint di un intervallo di testo all&quot;endpoint specificato di un secondo intervallo di testo."
  remarks: "Se l&quot;endpoint spostato interseca l&quot;altro endpoint dell&quot;intervallo di testo stesso, l&quot;altro endpoint viene spostato, inoltre, risultante in un intervallo degenerato e assicurando l&quot;ordinamento corretto degli endpoint (vale a dire <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>è sempre minore o uguale a <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>).</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Endpoint da spostare."
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Un altro intervallo dallo stesso provider di testo."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Un endpoint in altro intervallo."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  id: MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Sposta un endpoint dell&quot;intervallo di testo, il numero specificato di unità di testo all&quot;interno dell&quot;intervallo del documento."
  remarks: "Quando è necessario scorrere il contenuto di un intervallo di testo, è prevista una serie di passaggi dietro le quinte per il <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>metodo venga eseguito correttamente.</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  L&quot;intervallo di testo viene normalizzato; l&quot;intervallo di testo viene compresso in un intervallo degenerato il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint, che rende il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint superfluo.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Questo passaggio è necessario rimuovere l&quot;ambiguità nei casi in cui si estende un intervallo di testo `unit` limiti, ad esempio &quot;{l&quot;U} RL [http://www.microsoft.com](http://www.microsoft.com) è incorporato nel testo&quot; dove &quot;{&quot; e &quot;}&quot; rappresentano il testo di endpoint dell&quot;intervallo.      2.  L&quot;intervallo risultante viene spostato indietro <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>all&quot;inizio dell&quot;oggetto richiesto `unit` limite.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  L&quot;intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint da una richiesta `unit` limite.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;regolazioni di intervallo mediante Move / ExpandToEnclosingUnit&quot;) esempi di regolazione di un intervallo di testo per Move () ed ExpandToEnclosingUnit () MoveEndpointByUnit rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit>supportato se il dato <xref:System.Windows.Automation.Text.TextUnit>non è supportata dal controllo.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       L&quot;ordine, da unità più piccolo al più grande, è elencato di seguito.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Endpoint da spostare."
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Unità testuale per lo spostamento."
    - id: count
      type: System.Int32
      description: "Il numero di unità da spostare. Un valore positivo sposta in avanti dell&quot;endpoint. Un valore negativo comporta lo spostamento indietro. Un valore pari a 0 non ha effetto."
    return:
      type: System.Int32
      description: "Il numero di unità effettivamente spostate, che può essere inferiore al numero richiesto se lo spostamento degli che endpoint si raggiunge l&quot;inizio o alla fine del documento."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  id: RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Rimuove una sezione evidenziata del testo, corrispondente al chiamante <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> e <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint, dalla raccolta di testo evidenziato in un contenitore di testo che supporta più selezioni non contigue."
  remarks: "Il punto di inserimento passerà all&quot;area dell&quot;evidenziazione rimossa.       Fornisce un intervallo di testo degenerato sposterà il punto di inserimento."
  syntax:
    content: public void RemoveFromSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Se il provider di testo non supporta più selezioni non contigue (ad esempio, <xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>deve avere un valore di <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Determina il controllo di testo per lo scorrimento verticale fino a quando l&quot;intervallo di testo è visibile nel riquadro di visualizzazione."
  remarks: "ScrollIntoView rispetta il testo nascosto sia visibile.       Se l&quot;intervallo di testo è nascosta, il controllo testo scorre solo se il testo nascosto presenta un ancoraggio nel riquadro di visualizzazione."
  syntax:
    content: public void ScrollIntoView (bool alignToTop);
    parameters:
    - id: alignToTop
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo di testo deve essere spostato in modo che l&quot;intervallo di testo è allineato al margine superiore del riquadro di visualizzazione; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se deve essere allineato al margine inferiore del riquadro di visualizzazione."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  id: Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Evidenzia il testo nel controllo di testo corrispondente all&quot;intervallo di testo <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> e <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> endpoint."
  remarks: "Se viene specificato un intervallo di testo degenerato, il punto di inserimento passerà al <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>endpoint dell&quot;intervallo di testo.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si verifica quando la selezione di testo non è supportata dal controllo di testo."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Text.TextPatternRangeEndpoint
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextPatternRangeEndpoint
  nameWithType: TextPatternRangeEndpoint
  fullName: System.Windows.Automation.Text.TextPatternRangeEndpoint
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
- uid: System.Windows.Automation.Text.TextUnit
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextUnit
  nameWithType: TextUnit
  fullName: System.Windows.Automation.Text.TextUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  spec.csharp:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: IRawElementProviderSimple[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection
  nameWithType: ITextRangeProvider.AddToSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone
  nameWithType: ITextRangeProvider.Clone
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare
  nameWithType: ITextRangeProvider.Compare
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints
  nameWithType: ITextRangeProvider.CompareEndpoints
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute
  nameWithType: ITextRangeProvider.FindAttribute
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText
  nameWithType: ITextRangeProvider.FindText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue
  nameWithType: ITextRangeProvider.GetAttributeValue
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles
  nameWithType: ITextRangeProvider.GetBoundingRectangles
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren
  nameWithType: ITextRangeProvider.GetChildren
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement
  nameWithType: ITextRangeProvider.GetEnclosingElement
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText
  nameWithType: ITextRangeProvider.GetText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move
  nameWithType: ITextRangeProvider.Move
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange
  nameWithType: ITextRangeProvider.MoveEndpointByRange
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit
  nameWithType: ITextRangeProvider.MoveEndpointByUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection
  nameWithType: ITextRangeProvider.RemoveFromSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView
  nameWithType: ITextRangeProvider.ScrollIntoView
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select
  nameWithType: ITextRangeProvider.Select
