### YamlMime:ManagedReference
items:
- uid: System.Net.Authorization
  id: Authorization
  children:
  - System.Net.Authorization.#ctor(System.String)
  - System.Net.Authorization.#ctor(System.String,System.Boolean)
  - System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  - System.Net.Authorization.Complete
  - System.Net.Authorization.ConnectionGroupId
  - System.Net.Authorization.Message
  - System.Net.Authorization.MutuallyAuthenticated
  - System.Net.Authorization.ProtectionRealm
  langs:
  - csharp
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
  type: Class
  summary: "Contiene un messaggio di autenticazione per un server Internet."
  remarks: "Il <xref:System.Net.AuthenticationManager>restituisce un&quot;istanza della classe di autorizzazione contenente un messaggio di autenticazione.</xref:System.Net.AuthenticationManager> Questo messaggio viene inviato al server Internet per indicare che il client (ad esempio <xref:System.Net.WebRequest>o uno dei relativi discendenti) è autorizzato ad accedere al server.</xref:System.Net.WebRequest>       L&quot;istanza di autorizzazione viene creata dal modulo di autenticazione che il <xref:System.Net.AuthenticationManager>definisce per gestire la richiesta.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public class Authorization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String)
  nameWithType: Authorization.Authorization(String)
  fullName: System.Net.Authorization.Authorization(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una nuova istanza di <xref href=&quot;System.Net.Authorization&quot;> </xref> classe con il messaggio di autorizzazione specificati."
  remarks: "Il <xref:System.Net.Authorization>istanza viene creata con la <xref:System.Net.Authorization.Message%2A>proprietà impostata su `token` e <xref:System.Net.Authorization.Complete%2A>proprietà impostata su `true`.</xref:System.Net.Authorization.Complete%2A> </xref:System.Net.Authorization.Message%2A> </xref:System.Net.Authorization>"
  example:
  - "The following code example shows how to create an <xref:System.Net.Authorization> object. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#3](~/add/codesnippet/csharp/m-system.net.authorizati_0_1.cs)]\n [!code-cpp[System.Net.Authentication#3](~/add/codesnippet/cpp/m-system.net.authorizati_0_1.cpp)]\n [!code-vb[System.Net.Authentication#3](~/add/codesnippet/visualbasic/m-system.net.authorizati_0_1.vb)]"
  syntax:
    content: public Authorization (string token);
    parameters:
    - id: token
      type: System.String
      description: "Messaggio di autorizzazione crittografato previsto dal server."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String,Boolean)
  nameWithType: Authorization.Authorization(String,Boolean)
  fullName: System.Net.Authorization.Authorization(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una nuova istanza di <xref href=&quot;System.Net.Authorization&quot;> </xref> classe con lo stato di messaggio e il completamento di autorizzazione specificati."
  remarks: "Il <xref:System.Net.Authorization>istanza viene creata con la <xref:System.Net.Authorization.Message%2A>proprietà impostata su `token` e <xref:System.Net.Authorization.Complete%2A>proprietà impostata su `finished`.</xref:System.Net.Authorization.Complete%2A> </xref:System.Net.Authorization.Message%2A> </xref:System.Net.Authorization>"
  example:
  - "The following code example creates a new instance of the <xref:System.Net.Authorization> class with the specified authorization message and completion status.  \n  \n [!code-cpp[Authorization_ProtectionRealm#1](~/add/codesnippet/cpp/m-system.net.authorizati_2_1.cpp)]\n [!code-vb[Authorization_ProtectionRealm#1](~/add/codesnippet/visualbasic/m-system.net.authorizati_2_1.vb)]\n [!code-cs[Authorization_ProtectionRealm#1](~/add/codesnippet/csharp/m-system.net.authorizati_2_1.cs)]"
  syntax:
    content: public Authorization (string token, bool finished);
    parameters:
    - id: token
      type: System.String
      description: "Messaggio di autorizzazione crittografato previsto dal server."
    - id: finished
      type: System.Boolean
      description: "Lo stato di completamento del tentativo di autorizzazione. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tentativo di autenticazione è completo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  id: '#ctor(System.String,System.Boolean,System.String)'
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Authorization(String,Boolean,String)
  nameWithType: Authorization.Authorization(String,Boolean,String)
  fullName: System.Net.Authorization.Authorization(String,Boolean,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una nuova istanza di <xref href=&quot;System.Net.Authorization&quot;> </xref> classe con il messaggio di autorizzazione specificato, lo stato di completamento e l&quot;identificatore del gruppo di connessione."
  remarks: ''
  example:
  - "The following code example creates a new instance of the <xref:System.Net.Authorization> class with the specified authorization message, completion status, and connection group identifier.  \n  \n [!code-vb[Authorization_Constructor3#1](~/add/codesnippet/visualbasic/m-system.net.authorizati_1_1.vb)]\n [!code-cpp[Authorization_Constructor3#1](~/add/codesnippet/cpp/m-system.net.authorizati_1_1.cpp)]\n [!code-cs[Authorization_Constructor3#1](~/add/codesnippet/csharp/m-system.net.authorizati_1_1.cs)]"
  syntax:
    content: public Authorization (string token, bool finished, string connectionGroupId);
    parameters:
    - id: token
      type: System.String
      description: "Messaggio di autorizzazione crittografato previsto dal server."
    - id: finished
      type: System.Boolean
      description: "Lo stato di completamento del tentativo di autorizzazione. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tentativo di autenticazione è completo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: connectionGroupId
      type: System.String
      description: "Identificatore univoco che può essere usato per creare connessioni che sono associate solo a questo schema di autenticazione di client-server private."
  overload: System.Net.Authorization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.Complete
  id: Complete
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Complete
  nameWithType: Authorization.Complete
  fullName: System.Net.Authorization.Complete
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene lo stato di completamento dell&quot;autorizzazione."
  remarks: "La proprietà completa è impostata su `true` al termine il processo di autenticazione tra il client e server. Alcuni moduli di autenticazione, ad esempio il modulo di Kerberos, utilizzano più round trip tra client e server per completare il processo di autenticazione. Per mantenere il <xref:System.Net.WebRequest>o discendente che ha avviato il processo di autenticazione venga interrotto durante l&quot;autorizzazione, il modulo di autenticazione imposta la proprietà completa `false`.</xref:System.Net.WebRequest>"
  example:
  - "The following code example uses the Complete property to get the completion status of the authorization. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_1_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_1_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_1_1.vb)]"
  syntax:
    content: public bool Complete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il processo di autenticazione è completo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.ConnectionGroupId
  id: ConnectionGroupId
  parent: System.Net.Authorization
  langs:
  - csharp
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
  fullName: System.Net.Authorization.ConnectionGroupId
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un identificatore univoco per le connessioni specifiche dell&quot;utente."
  remarks: "La proprietà ConnectionGroupId è una stringa univoca che associa una connessione a un&quot;entità di autenticazione specifica. Ad esempio, il modulo di autorizzazione NTLM unisce le informazioni sulle credenziali di autenticazione per una connessione specifica per impedire il riutilizzo non valido della connessione."
  example:
  - "The following code example uses the ConnectionGroupId property to get the group identifier returned by the server. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_3_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_3_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_3_1.vb)]"
  syntax:
    content: public string ConnectionGroupId { get; }
    return:
      type: System.String
      description: "Una stringa univoca che associa una connessione a un&quot;entità di autenticazione."
  overload: System.Net.Authorization.ConnectionGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.Message
  id: Message
  parent: System.Net.Authorization
  langs:
  - csharp
  name: Message
  nameWithType: Authorization.Message
  fullName: System.Net.Authorization.Message
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il messaggio restituito al server in risposta a una richiesta di autenticazione."
  remarks: "La proprietà del messaggio contiene la stringa di autorizzazione che il client restituirà al server quando si accede alle risorse protette. Il contenuto effettivo del messaggio è definito dal tipo di autenticazione che utilizza il client e server. L&quot;autenticazione di base HTTP, ad esempio, utilizza un messaggio diverso rispetto all&quot;autenticazione Kerberos.       Quando un modulo di autenticazione supporta la preautenticazione, la proprietà del messaggio viene inviata con la richiesta iniziale."
  example:
  - "The following code example uses the Message property to get the message returned to the server in response to an authentication challenge. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#5](~/add/codesnippet/csharp/p-system.net.authorizati_2_1.cs)]\n [!code-cpp[System.Net.Authentication#5](~/add/codesnippet/cpp/p-system.net.authorizati_2_1.cpp)]\n [!code-vb[System.Net.Authentication#5](~/add/codesnippet/visualbasic/p-system.net.authorizati_2_1.vb)]"
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "Il messaggio che verrà restituito al server in risposta a una richiesta di autenticazione."
  overload: System.Net.Authorization.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.MutuallyAuthenticated
  id: MutuallyAuthenticated
  parent: System.Net.Authorization
  langs:
  - csharp
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
  fullName: System.Net.Authorization.MutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>valore che indica se l&quot;autenticazione reciproca.</xref:System.Boolean>"
  remarks: "Questa proprietà restituisce `false` se l&quot;autenticazione non è stata completata."
  syntax:
    content: public bool MutuallyAuthenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati autenticati entrambi client e server; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Authorization.MutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Authorization.ProtectionRealm
  id: ProtectionRealm
  parent: System.Net.Authorization
  langs:
  - csharp
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
  fullName: System.Net.Authorization.ProtectionRealm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il prefisso per Uniform Resource Identifier (URI) che possono essere autenticati con la <xref:System.Net.Authorization.Message*>proprietà.</xref:System.Net.Authorization.Message*>"
  remarks: "La proprietà ProtectionRealm contiene un elenco di prefissi URI che il <xref:System.Net.Authorization.Message%2A>proprietà può essere utilizzata per l&quot;autenticazione.</xref:System.Net.Authorization.Message%2A> <xref:System.Net.WebRequest>e i relativi discendenti confrontano un URI a questo elenco per determinare se il <xref:System.Net.Authorization>è valido per un particolare URI.</xref:System.Net.Authorization></xref:System.Net.WebRequest>"
  example:
  - "The following code example gets or sets the prefix for URIs that can be authenticated with the <xref:System.Net.Authorization.Message%2A> property.  \n  \n [!code-cpp[Authorization_ProtectionRealm#1](~/add/codesnippet/cpp/p-system.net.authorizati_0_1.cpp)]\n [!code-vb[Authorization_ProtectionRealm#1](~/add/codesnippet/visualbasic/p-system.net.authorizati_0_1.vb)]\n [!code-cs[Authorization_ProtectionRealm#1](~/add/codesnippet/csharp/p-system.net.authorizati_0_1.cs)]"
  syntax:
    content: public string[] ProtectionRealm { get; set; }
    return:
      type: System.String[]
      description: "Matrice di stringhe che contiene i prefissi URI."
  overload: System.Net.Authorization.ProtectionRealm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Authorization.#ctor(System.String)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String)
  nameWithType: Authorization.Authorization(String)
  fullName: System.Net.Authorization.Authorization(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String,Boolean)
  nameWithType: Authorization.Authorization(String,Boolean)
  fullName: System.Net.Authorization.Authorization(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization(String,Boolean,String)
  nameWithType: Authorization.Authorization(String,Boolean,String)
  fullName: System.Net.Authorization.Authorization(String,Boolean,String)
- uid: System.Net.Authorization.Complete
  parent: System.Net.Authorization
  isExternal: false
  name: Complete
  nameWithType: Authorization.Complete
  fullName: System.Net.Authorization.Complete
- uid: System.Net.Authorization.ConnectionGroupId
  parent: System.Net.Authorization
  isExternal: false
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
  fullName: System.Net.Authorization.ConnectionGroupId
- uid: System.Net.Authorization.Message
  parent: System.Net.Authorization
  isExternal: false
  name: Message
  nameWithType: Authorization.Message
  fullName: System.Net.Authorization.Message
- uid: System.Net.Authorization.MutuallyAuthenticated
  parent: System.Net.Authorization
  isExternal: false
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
  fullName: System.Net.Authorization.MutuallyAuthenticated
- uid: System.Net.Authorization.ProtectionRealm
  parent: System.Net.Authorization
  isExternal: false
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
  fullName: System.Net.Authorization.ProtectionRealm
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Authorization.#ctor*
  parent: System.Net.Authorization
  isExternal: false
  name: Authorization
  nameWithType: Authorization.Authorization
- uid: System.Net.Authorization.Complete*
  parent: System.Net.Authorization
  isExternal: false
  name: Complete
  nameWithType: Authorization.Complete
- uid: System.Net.Authorization.ConnectionGroupId*
  parent: System.Net.Authorization
  isExternal: false
  name: ConnectionGroupId
  nameWithType: Authorization.ConnectionGroupId
- uid: System.Net.Authorization.Message*
  parent: System.Net.Authorization
  isExternal: false
  name: Message
  nameWithType: Authorization.Message
- uid: System.Net.Authorization.MutuallyAuthenticated*
  parent: System.Net.Authorization
  isExternal: false
  name: MutuallyAuthenticated
  nameWithType: Authorization.MutuallyAuthenticated
- uid: System.Net.Authorization.ProtectionRealm*
  parent: System.Net.Authorization
  isExternal: false
  name: ProtectionRealm
  nameWithType: Authorization.ProtectionRealm
