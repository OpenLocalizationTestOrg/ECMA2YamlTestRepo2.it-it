### YamlMime:ManagedReference
items:
- uid: System.Activities.DelegateArgument
  id: DelegateArgument
  children:
  - System.Activities.DelegateArgument.Direction
  - System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  - System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.DelegateArgument.Name
  - System.Activities.DelegateArgument.NameCore
  langs:
  - csharp
  name: DelegateArgument
  nameWithType: DelegateArgument
  fullName: System.Activities.DelegateArgument
  type: Class
  summary: "La classe base astratta che rappresenta un terminale dell&quot;associazione che supporta il flusso di dati in e da un <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  syntax:
    content: 'public abstract class DelegateArgument : System.Activities.LocationReference'
  inheritance:
  - System.Object
  - System.Activities.LocationReference
  implements: []
  inheritedMembers:
  - System.Activities.LocationReference.Type
  - System.Activities.LocationReference.TypeCore
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Direction
  id: Direction
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Direction
  nameWithType: DelegateArgument.Direction
  fullName: System.Activities.DelegateArgument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene un <xref href=&quot;System.Activities.ArgumentDirection&quot;> </xref> che specifica se il <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref> rappresenta il flusso di dati in un <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>, da un <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>, o dentro e fuori un <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: "Uno dei valori di enumerazione che specifica la direzione del flusso di dati tramite il <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  overload: System.Activities.DelegateArgument.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: DelegateArgument.Get(ActivityContext)
  fullName: System.Activities.DelegateArgument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce il valore dell&quot;argomento utilizzando il contesto dell&quot;attività specificato."
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Contesto dell&quot;attività corrente."
    return:
      type: System.Object
      description: "Il valore dell&quot;argomento."
  overload: System.Activities.DelegateArgument.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: DelegateArgument.GetLocation(ActivityContext)
  fullName: System.Activities.DelegateArgument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce il <xref href=&quot;System.Activities.Location&quot;> </xref> del valore a cui fa riferimento il <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  syntax:
    content: public override System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "Contesto dell&quot;attività corrente."
    return:
      type: System.Activities.Location
      description: "Il percorso del valore a cui fa riferimento il <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  overload: System.Activities.DelegateArgument.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Name
  id: Name
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Name
  nameWithType: DelegateArgument.Name
  fullName: System.Activities.DelegateArgument.Name
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta il nome del <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome del <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  overload: System.Activities.DelegateArgument.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.NameCore
  id: NameCore
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: NameCore
  nameWithType: DelegateArgument.NameCore
  fullName: System.Activities.DelegateArgument.NameCore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene il valore di stringa usato da <xref:System.Activities.DelegateArgument.Name*>.</xref:System.Activities.DelegateArgument.Name*>"
  syntax:
    content: protected override string NameCore { get; }
    return:
      type: System.String
      description: "Il nome del <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>."
  overload: System.Activities.DelegateArgument.NameCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.LocationReference
  isExternal: false
  name: System.Activities.LocationReference
- uid: System.Activities.DelegateArgument.Direction
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Direction
  nameWithType: DelegateArgument.Direction
  fullName: System.Activities.DelegateArgument.Direction
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: DelegateArgument.Get(ActivityContext)
  fullName: System.Activities.DelegateArgument.Get(ActivityContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: DelegateArgument.GetLocation(ActivityContext)
  fullName: System.Activities.DelegateArgument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.DelegateArgument.Name
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Name
  nameWithType: DelegateArgument.Name
  fullName: System.Activities.DelegateArgument.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.DelegateArgument.NameCore
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: NameCore
  nameWithType: DelegateArgument.NameCore
  fullName: System.Activities.DelegateArgument.NameCore
- uid: System.Activities.DelegateArgument.Direction*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Direction
  nameWithType: DelegateArgument.Direction
- uid: System.Activities.DelegateArgument.Get*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Get
  nameWithType: DelegateArgument.Get
- uid: System.Activities.DelegateArgument.GetLocation*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: GetLocation
  nameWithType: DelegateArgument.GetLocation
- uid: System.Activities.DelegateArgument.Name*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Name
  nameWithType: DelegateArgument.Name
- uid: System.Activities.DelegateArgument.NameCore*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: NameCore
  nameWithType: DelegateArgument.NameCore
