### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ReadOnlyAttribute
  id: ReadOnlyAttribute
  children:
  - System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.ReadOnlyAttribute.Default
  - System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  - System.ComponentModel.ReadOnlyAttribute.GetHashCode
  - System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  - System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  - System.ComponentModel.ReadOnlyAttribute.No
  - System.ComponentModel.ReadOnlyAttribute.Yes
  langs:
  - csharp
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute
  fullName: System.ComponentModel.ReadOnlyAttribute
  type: Class
  summary: "Specifica se la proprietà a cui è associato questo attributo è di sola lettura o lettura/scrittura. Questa classe non può essere ereditata."
  remarks: "Impostare i membri contrassegnati con il ReadOnlyAttribute `true` o che non dispongono di un `Set` metodo non può essere modificato. Impostare i membri che non dispongono di questo attributo o che sono contrassegnati con il ReadOnlyAttribute `false` sono di lettura/scrittura e possono essere modificate. Il valore predefinito è <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No>      > [!IMPORTANT] > Il <xref:System.ComponentModel.PropertyDescriptor>imposto dalla classe ReadOnlyAttribute nell&quot;ambiente di progettazione e in fase di esecuzione.</xref:System.ComponentModel.PropertyDescriptor> Se si contrassegna una proprietà con il ReadOnlyAttribute impostato su `true`, il valore di questo attributo è impostato sul membro costante <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</xref:System.ComponentModel.ReadOnlyAttribute.Yes> Per una proprietà contrassegnata con il ReadOnlyAttribute impostato su `false`, il valore è <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No> Pertanto, quando si desidera controllare il valore di questo attributo nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>o <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>       Per ulteriori informazioni, vedere [attributi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example marks a property as read-only.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._82_1.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._82_1.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._82_1.cpp)]  \n  \n The next code example shows how to check the value of the ReadOnlyAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \n  \n The example presents two different ways of checking the value of the ReadOnlyAttribute. In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._82_2.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._82_2.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._82_2.cpp)]  \n  \n If you marked a class with the ReadOnlyAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._82_3.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._82_3.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._82_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class ReadOnlyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: ReadOnlyAttribute(Boolean)
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  fullName: System.ComponentModel.ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref> classe."
  remarks: "I membri contrassegnati con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `true` o che non dispongono di un `Set` metodo non può essere modificato.</xref:System.ComponentModel.ReadOnlyAttribute> I membri che non dispongono di questo attributo o che sono contrassegnati con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `false` sono di lettura/scrittura e possono essere modificate.</xref:System.ComponentModel.ReadOnlyAttribute> Il valore predefinito è <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No>      > [!NOTE] > Quando si contrassegna una proprietà con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `true`, il valore di questo attributo è impostato sul membro costante <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</xref:System.ComponentModel.ReadOnlyAttribute.Yes> </xref:System.ComponentModel.ReadOnlyAttribute> Per una proprietà contrassegnata con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `false`, il valore è <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No> </xref:System.ComponentModel.ReadOnlyAttribute> Pertanto, quando si desidera controllare il valore di questo attributo nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>o <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as read-only. This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._35_1.cpp)]\n [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._35_1.vb)]\n [!code-cs[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._35_1.cs)]"
  syntax:
    content: public ReadOnlyAttribute (bool isReadOnly);
    parameters:
    - id: isReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mostrare che la proprietà che a cui è associato questo attributo è di sola lettura; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che la proprietà è di lettura/scrittura."
  overload: System.ComponentModel.ReadOnlyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Default
  id: Default
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Default
  nameWithType: ReadOnlyAttribute.Default
  fullName: System.ComponentModel.ReadOnlyAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica il valore predefinito per il <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref>, ovvero <xref href=&quot;System.ComponentModel.ReadOnlyAttribute.No&quot;> </xref> (ovvero, la proprietà a cui è associato questo attributo è lettura/scrittura). Questo <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> campo è di sola lettura."
  remarks: "Quando si contrassegna una proprietà con questo valore, questo attributo è impostato sul membro costante <xref:System.ComponentModel.ReadOnlyAttribute>.</xref:System.ComponentModel.ReadOnlyAttribute> Pertanto, quando si desidera controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.ReadOnlyAttribute?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute Default;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ReadOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.ReadOnlyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questa istanza e un oggetto specificato sono uguali."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Un altro oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> è uguale a questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ReadOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.ReadOnlyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se questo attributo è il valore predefinito."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;attributo è il valore predefinito per questa classe di attributo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
  fullName: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se la proprietà che a cui è associato questo attributo è di sola lettura."
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is read-only. First, the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.  \n  \n [!code-cs[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.componentmodel._25_1.cs)]\n [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.componentmodel._25_1.cpp)]\n [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._25_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà che a cui è associato questo attributo è di sola lettura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se la proprietà è di lettura/scrittura."
  overload: System.ComponentModel.ReadOnlyAttribute.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.No
  id: No
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: No
  nameWithType: ReadOnlyAttribute.No
  fullName: System.ComponentModel.ReadOnlyAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica che la proprietà che a cui è associato questo attributo è di lettura/scrittura e può essere modificata. Questo <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> campo è di sola lettura."
  remarks: "Questo campo è l&quot;impostazione predefinita per questo attributo.       Quando si contrassegna una proprietà con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `false`, il valore di questo attributo è impostato sul membro costante Nr.</xref:System.ComponentModel.ReadOnlyAttribute> Pertanto, quando si desidera controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo come No."
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute No;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: ReadOnlyAttribute.Yes
  fullName: System.ComponentModel.ReadOnlyAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica che la proprietà che a cui è associato questo attributo è di sola lettura e non può essere modificata in Esplora server. Questo <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> campo è di sola lettura."
  remarks: "Quando si contrassegna una proprietà con il <xref:System.ComponentModel.ReadOnlyAttribute>impostato su `true`, il valore di questo attributo è impostato sul membro costante Sì.</xref:System.ComponentModel.ReadOnlyAttribute> Pertanto, quando si desidera controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo su Sì."
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute Yes;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: ReadOnlyAttribute(Boolean)
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  fullName: System.ComponentModel.ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ReadOnlyAttribute.Default
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Default
  nameWithType: ReadOnlyAttribute.Default
  fullName: System.ComponentModel.ReadOnlyAttribute.Default
- uid: System.ComponentModel.ReadOnlyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute
  fullName: System.ComponentModel.ReadOnlyAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ReadOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.ReadOnlyAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ReadOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.ReadOnlyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
  fullName: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
- uid: System.ComponentModel.ReadOnlyAttribute.No
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: No
  nameWithType: ReadOnlyAttribute.No
  fullName: System.ComponentModel.ReadOnlyAttribute.No
- uid: System.ComponentModel.ReadOnlyAttribute.Yes
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Yes
  nameWithType: ReadOnlyAttribute.Yes
  fullName: System.ComponentModel.ReadOnlyAttribute.Yes
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.Equals*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Equals
  nameWithType: ReadOnlyAttribute.Equals
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ReadOnlyAttribute.GetHashCode
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
