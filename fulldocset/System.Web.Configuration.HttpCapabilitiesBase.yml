### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesBase
  id: HttpCapabilitiesBase
  children:
  - System.Web.Configuration.HttpCapabilitiesBase.#ctor
  - System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  - System.Web.Configuration.HttpCapabilitiesBase.Adapters
  - System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.AOL
  - System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  - System.Web.Configuration.HttpCapabilitiesBase.Beta
  - System.Web.Configuration.HttpCapabilitiesBase.Browser
  - System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  - System.Web.Configuration.HttpCapabilitiesBase.Browsers
  - System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  - System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  - System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  - System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  - System.Web.Configuration.HttpCapabilitiesBase.CDF
  - System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Cookies
  - System.Web.Configuration.HttpCapabilitiesBase.Crawler
  - System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  - System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Frames
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  - System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  - System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  - System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  - System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Id
  - System.Web.Configuration.HttpCapabilitiesBase.Init
  - System.Web.Configuration.HttpCapabilitiesBase.InputType
  - System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.IsColor
  - System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  - System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  - System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  - System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  - System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  - System.Web.Configuration.HttpCapabilitiesBase.Platform
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  - System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.Tables
  - System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Type
  - System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.VBScript
  - System.Web.Configuration.HttpCapabilitiesBase.Version
  - System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Win16
  - System.Web.Configuration.HttpCapabilitiesBase.Win32
  langs:
  - csharp
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
  type: Class
  summary: "Fornisce l&quot;accesso a informazioni dettagliate sulle funzionalità del browser del client."
  remarks: "HttpCapabilitiesBase è la classe base da cui il <xref:System.Web.HttpBrowserCapabilities>viene derivata.</xref:System.Web.HttpBrowserCapabilities> HttpCapabilitiesBase offre un numero elevato di proprietà di sola lettura che forniscono accesso indipendente dai tipi al dizionario delle funzionalità del browser. È possibile accedere la <xref:System.Web.HttpBrowserCapabilities>classe tramite il <xref:System.Web.HttpRequest.Browser%2A>proprietà esposta da ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>proprietà.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>"
  example:
  - "The following example shows how to access information about the browser.  \n  \n [!code-cs[HttpCapabilitiesBase#1](~/add/codesnippet/csharp/t-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase#1](~/add/codesnippet/visualbasic/t-system.web.configurati_61_1.aspx)]"
  syntax:
    content: 'public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IFilterResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> classe."
  syntax:
    content: public HttpCapabilitiesBase ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  id: ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i controlli ActiveX."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports ActiveX controls.  \n  \n [!code-cs[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/csharp/p-system.web.configurati_350_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/visualbasic/p-system.web.configurati_350_1.aspx)]"
  syntax:
    content: public bool ActiveXControls { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i controlli ActiveX. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  id: Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce la raccolta degli adattatori del controllo."
  syntax:
    content: public System.Collections.IDictionary Adapters { get; }
    return:
      type: System.Collections.IDictionary
      description: "Raccolta di adattatori di controllo registrati."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  id: AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usato internamente per aggiungere una voce alla raccolta interna di browser per cui vengono riconosciute le funzionalità."
  syntax:
    content: public void AddBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "Il nome del browser da aggiungere."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  id: AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il client è un browser America Online (AOL)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is an AOL browser.  \n  \n [!code-cs[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/csharp/p-system.web.configurati_269_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/visualbasic/p-system.web.configurati_269_1.aspx)]"
  syntax:
    content: public bool AOL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser è un browser AOL. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  id: BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta la riproduzione di suoni in background tramite la <xref uid=&quot;langword_csharp_&lt;bgsounds&gt;&quot; name=&quot;&lt;bgsounds&gt;&quot; href=&quot;&quot;> </xref> elemento HTML."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports playing background sounds.  \n  \n [!code-cs[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/csharp/p-system.web.configurati_72_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/visualbasic/p-system.web.configurati_72_1.aspx)]"
  syntax:
    content: public bool BackgroundSounds { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta la riproduzione di suoni in background; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  id: Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser è una versione beta."
  remarks: "Browser della versione beta può presentare un comportamento imprevedibile."
  example:
  - "The following code example shows how to determine whether the browser is a beta version.  \n  \n [!code-cs[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/csharp/p-system.web.configurati_76_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/visualbasic/p-system.web.configurati_76_1.aspx)]"
  syntax:
    content: public bool Beta { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser è una versione beta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  id: Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la stringa del browser (se presente) inviata dal browser nel <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> intestazione della richiesta."
  remarks: ''
  example:
  - "The following code example shows how to determine the `User-Agent` request header sent by the browser.  \n  \n [!code-vb[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/visualbasic/p-system.web.configurati_201_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/csharp/p-system.web.configurati_201_1.aspx)]"
  syntax:
    content: public string Browser { get; }
    return:
      type: System.String
      description: "Il contenuto del <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> intestazione della richiesta inviata dal browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  id: BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> oggetto per il browser corrente."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }
    return:
      type: System.Web.Configuration.HttpCapabilitiesProvider
      description: "Il <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> oggetto per il browser corrente."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  id: Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un <xref href=&quot;System.Collections.ArrayList&quot;> </xref> dei browser nel <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>dizionario.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  syntax:
    content: public System.Collections.ArrayList Browsers { get; }
    return:
      type: System.Collections.ArrayList
      description: "Un <xref href=&quot;System.Collections.ArrayList&quot;> </xref> dei browser nel <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>dizionario.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  id: CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i deck contenenti più form, ad esempio schede distinte."
  remarks: "La proprietà CanCombineFormsInDeck si applica solo ai dispositivi mobili compatibili con WML. Se true, l&quot;adapter può restituire più forme dalla stessa pagina come schede di un singolo deck, laddove possibile."
  example:
  - "The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.  \n  \n [!code-cs[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/csharp/p-system.web.configurati_320_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_320_1.aspx)]"
  syntax:
    content: public virtual bool CanCombineFormsInDeck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i deck contenenti più form. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  id: CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il dispositivo browser è in grado di inizializzare una chiamata vocale."
  remarks: "La proprietà CanInitiateVoiceCall si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine whether the browser device is capable of initiating a voice call.  \n  \n [!code-cs[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/csharp/p-system.web.configurati_5_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/visualbasic/p-system.web.configurati_5_1.aspx)]"
  syntax:
    content: public virtual bool CanInitiateVoiceCall { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il dispositivo browser è in grado di inizializzare una chiamata vocale; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  id: CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i contenuti di pagina dopo gli elementi WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "La proprietà CanRenderAfterInputOrSelectElement si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/csharp/def23b48-6df6-4cb2-be79-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/visualbasic/def23b48-6df6-4cb2-be79-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderAfterInputOrSelectElement { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i contenuti di pagina dopo HTML <xref uid=&quot;langword_csharp_&lt;select&gt; &quot; name=&quot;&lt;select&gt; &quot; href=&quot;&quot;> </xref>o <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  id: CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta HTML vuota <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/csharp/p-system.web.configurati_70_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_70_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderEmptySelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta HTML vuota <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  id: CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_INPUT&quot; name=&quot;INPUT&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_SELECT&quot; name=&quot;SELECT&quot; href=&quot;&quot;> </xref> insieme nella stessa scheda."
  remarks: "La proprietà CanRenderInputAndSelectElementsTogether si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/csharp/f29696c5-098f-4bb4-bc52-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/visualbasic/f29696c5-098f-4bb4-bc52-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderInputAndSelectElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi congiuntamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  id: CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> gli elementi che specificano <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> attributi."
  remarks: "La proprietà CanRenderMixedSelects si applica solo ai dispositivi mobili compatibili con WML.       Se `false`, `onpick` valori vengono visualizzati come collegamenti ipertestuali e `value` attributi richiedono un `<do>` elemento per il postback."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/csharp/p-system.web.configurati_159_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_159_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderMixedSelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> gli elementi che specificano <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> attributi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  id: CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> coesistenti nella stessa scheda WML."
  remarks: "La proprietà CanRenderOneventAndPrevElementsTogether si applica solo ai dispositivi mobili compatibili con WML.       Se `false`, gli elementi WML `<onevent>` e `<prev>` coesistenti nella stessa scheda WML non vengono visualizzati correttamente."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/csharp/3effd139-a28b-4ed4-a597-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/visualbasic/3effd139-a28b-4ed4-a597-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderOneventAndPrevElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> coesistenti nella stessa scheda WML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  id: CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta le schede WML per il postback."
  remarks: "La proprietà CanRenderPostBackCards si applica solo ai dispositivi mobili compatibili con gli elementi WML.       Se `false`, postback schede verranno non correttamente il rendering nel browser."
  example:
  - "The following code example shows how to determine whether the browser supports WML cards for postback.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/csharp/p-system.web.configurati_38_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_38_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderPostBackCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta le schede WML per il postback. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  id: CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> gli elementi con un <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> attributo pari a 0."
  remarks: "La proprietà CanRenderSetvarZeroWithMultiSelectionList si applica solo ai dispositivi mobili compatibili con WML.       Se `false`, HTML `<setvar>` gli elementi con un `value` attributo di `0` non verranno visualizzati correttamente."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/csharp/965cbaf2-04ba-434c-aba7-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/visualbasic/965cbaf2-04ba-434c-aba7-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli elementi WML <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> gli elementi con un <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> attributo di <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  id: CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta l&quot;invio di posta elettronica utilizzando il codice HTML <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> elemento per la visualizzazione degli indirizzi elettronici."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports sending e-mail by using the HTML `<mailto>` element for displaying electronic addresses.  \n  \n [!code-vb[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/visualbasic/p-system.web.configurati_221_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/csharp/p-system.web.configurati_221_1.aspx)]"
  syntax:
    content: public virtual bool CanSendMail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta l&quot;invio di posta elettronica utilizzando il codice HTML <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> elemento per la visualizzazione degli indirizzi elettronici; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  id: Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzata internamente per ottenere le funzionalità definite del browser."
  syntax:
    content: public System.Collections.IDictionary Capabilities { get; set; }
    return:
      type: System.Collections.IDictionary
      description: "Le funzionalità definite del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  id: CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta formato CDF (Channel Definition) per il webcasting."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CDF.  \n  \n [!code-vb[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/visualbasic/p-system.web.configurati_293_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/csharp/p-system.web.configurati_293_1.aspx)]"
  syntax:
    content: public bool CDF { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta CDF. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  id: ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione di .NET Framework installata nel client."
  remarks: "La proprietà ClrVersion è supportata solo quando il browser Internet Explorer 5.0 e versioni successive.       Se .NET Framework non è installato nel client, il valore degli elementi di versione restituita è `0, 0,-1,-1`.       Se più di una versione di .NET Framework è installata nel client, la proprietà ClrVersion restituisce la versione più recente."
  syntax:
    content: public Version ClrVersion { get; }
    return:
      type: System.Version
      description: "Common language runtime <xref:System.Version>.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  id: Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i cookie."
  remarks: "La proprietà cookie indica se l&quot;applicazione browser supporta i cookie. Se l&quot;utente abbia disabilitato i cookie nell&quot;applicazione, la proprietà del cookie non essere interessata."
  example:
  - "The following code example shows how to determine whether the browser supports cookies.  \n  \n [!code-vb[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/visualbasic/p-system.web.configurati_7_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/csharp/p-system.web.configurati_7_1.aspx)]"
  syntax:
    content: public bool Cookies { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i cookie. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  id: Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser è spider Web di un motore di ricerca."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a search engine Web crawler.  \n  \n [!code-vb[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/visualbasic/p-system.web.configurati_34_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/csharp/p-system.web.configurati_34_1.aspx)]"
  syntax:
    content: public bool Crawler { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser è un motore di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare."
  syntax:
    content: public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);
    parameters:
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>oggetto da creare.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "Una nuova istanza di <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Il metodo non è stato possibile creare un&quot;istanza di <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  id: DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il numero massimo di pulsanti di invio consentiti per un form."
  remarks: "La proprietà DefaultSubmitButtonLimit principalmente rappresenta il numero di tasti softkey disponibili in un dispositivo mobile compatibili con WML.       Pagine Web Forms per dispositivi mobili possono contenere un <xref:System.Web.UI.MobileControls.SelectionList>oggetto e più <xref:System.Web.UI.MobileControls.Command>controllo.</xref:System.Web.UI.MobileControls.Command> </xref:System.Web.UI.MobileControls.SelectionList> Il DefaultSubmitButtonLimit consente di scegliere quale il <xref:System.Web.UI.MobileControls.Command>controlli devono essere assegnati a un tasto nei dispositivi che dispongono di più tasti softkey.</xref:System.Web.UI.MobileControls.Command>"
  syntax:
    content: public virtual int DefaultSubmitButtonLimit { get; }
    return:
      type: System.Int32
      description: "Il numero massimo di pulsanti di invio consentiti per un form."
  overload: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  id: DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzata internamente per disabilitare l&quot;uso di una chiave di cache ottimizzata."
  syntax:
    content: public void DisableOptimizedCacheKey ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  id: EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il numero di versione di ECMAScript supportata dal browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.  \n  \n [!code-cs[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_75_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_75_1.aspx)]"
  syntax:
    content: public Version EcmaScriptVersion { get; }
    return:
      type: System.Version
      description: "Il numero di versione di ECMAScript supportata dal browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  id: Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i frame HTML."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML frames.  \n  \n [!code-cs[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/csharp/p-system.web.configurati_188_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_188_1.aspx)]"
  syntax:
    content: public bool Frames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i frame. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  id: GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il numero di versione principale del gateway wireless usato per accedere al server, se noto."
  syntax:
    content: public virtual int GatewayMajorVersion { get; }
    return:
      type: System.Int32
      description: "Il numero di versione principale del gateway wireless usato per accedere al server, se noto. Il valore predefinito è <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Impossibile analizzare il numero di versione principale del gateway wireless."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  id: GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il numero di versione secondaria del gateway wireless usato per accedere al server, se noto."
  syntax:
    content: public virtual double GatewayMinorVersion { get; }
    return:
      type: System.Double
      description: "Il numero di versione secondaria del gateway wireless usato per accedere al server, se noto. Il valore predefinito è <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Impossibile analizzare il numero di versione secondaria del gateway wireless."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  id: GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione del gateway wireless usato per accedere al server, se noto."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the gateway is an `UP` gateway.  \n  \n [!code-vb[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_11_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_11_1.aspx)]"
  syntax:
    content: public virtual string GatewayVersion { get; }
    return:
      type: System.String
      description: "Il numero di versione del gateway wireless usato per accedere al server, se noto. Il valore predefinito è <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  id: GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce tutte le versioni di .NET Framework common language runtime vengono installate nel client."
  remarks: "Il metodo GetClrVersions è supportato solo quando il browser Internet Explorer versione 5.0 o versione successiva. Se common language runtime non è installato nel client, la proprietà restituisce una matrice contenente un singolo <xref:System.Version>dell&quot;oggetto con i valori 0, 0, -1, -1.</xref:System.Version>"
  syntax:
    content: public Version[] GetClrVersions ();
    parameters: []
    return:
      type: System.Version[]
      description: "Matrice di <xref:System.Version>oggetti.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  id: GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzato internamente per restituire un&quot;istanza di <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> che rappresenta il browser che ha generato l&quot;oggetto specificato <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);
    parameters:
    - id: configKey
      type: System.String
      description: "Il nome della sezione di configurazione che configura le funzionalità del browser."
    - id: request
      type: System.Web.HttpRequest
      description: "Il <xref href=&quot;System.Web.HttpRequest&quot;> </xref> generato dal browser per cui restituire le funzionalità e che sia in genere corrente <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
    return:
      type: System.Web.Configuration.HttpCapabilitiesBase
      description: "Un&quot;istanza di <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> che rappresenta il browser che ha generato l&quot;oggetto specificato <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  id: HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser ha una dedicata **nuovamente** pulsante."
  remarks: "Se `false`, collegamento potrebbe essere necessario un controllo quando un **nuovamente** pulsante non è disponibile."
  example:
  - "The following code example shows how to determine whether the browser has a dedicated **Back** button.  \n  \n [!code-vb[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/visualbasic/p-system.web.configurati_229_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/csharp/p-system.web.configurati_229_1.aspx)]"
  syntax:
    content: public virtual bool HasBackButton { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser ha una dedicata **nuovamente** pulsante; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  id: HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se la barra di scorrimento di un elemento HTML <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> elemento con un <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> valore dell&quot;attributo <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> viene oscurata durante il rendering."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.  \n  \n [!code-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/visualbasic/35e8f82c-ef59-4da6-a070-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/csharp/35e8f82c-ef59-4da6-a070-_1.aspx)]"
  syntax:
    content: public virtual bool HidesRightAlignedMultiselectScrollbars { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la barra di scorrimento di un elemento HTML <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> elemento con un <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> valore dell&quot;attributo <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> viene oscurata durante il rendering; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  id: HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il nome della classe completo di <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare."
  syntax:
    content: public string HtmlTextWriter { get; set; }
    return:
      type: System.String
      description: "Il nome della classe completo di <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  id: Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene l&quot;identificatore interno del browser come specificato nel file di definizione del browser."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Identificatore interno del browser come specificato nel file di definizione del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  id: Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzato internamente per inizializzare un set di valori interno."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  id: InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il tipo di input supportato dal browser."
  remarks: "I valori restituiti possibili sono:-`virtualKeyboard`      -   `telephoneKeypad`      -   `keyboard`"
  example:
  - "The following code example shows how to determine the type of input support.  \n  \n [!code-cs[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/csharp/p-system.web.configurati_266_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_266_1.aspx)]"
  syntax:
    content: public virtual string InputType { get; }
    return:
      type: System.String
      description: "Il tipo di input supportato dal browser. Il valore predefinito è `telephoneKeypad`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  id: IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser client corrisponde al browser specificato."
  remarks: "Il metodo IsBrowser restituisce inoltre `true` se la definizione del browser client eredita dal browser specificato."
  syntax:
    content: public bool IsBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "Browser specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser client corrisponde al browser specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  id: IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser ha una visualizzazione a colori."
  remarks: ''
  example:
  - "The following code example shows whether the client's browser supports color. The returned value could be used to determine the appropriate image to send to the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/csharp/p-system.web.configurati_262_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_262_1.aspx)]"
  syntax:
    content: public virtual bool IsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser ha una visualizzazione a colori. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  id: IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser è un dispositivo mobile riconosciuto."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is a mobile device.  \n  \n [!code-cs[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/csharp/p-system.web.configurati_270_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/visualbasic/p-system.web.configurati_270_1.aspx)]"
  syntax:
    content: public virtual bool IsMobileDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser è un dispositivo mobile riconosciuto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il valore della funzionalità del browser specificata. In c#, questa proprietà è l&quot;indicizzatore per la classe."
  remarks: "In JScript è possibile utilizzare le proprietà predefinite indicizzate definite da un tipo, ma non è possibile definire in modo esplicito la propria. Tuttavia, specificando il `expando` attributo in una classe fornisce automaticamente una proprietà indicizzata predefinita con un tipo di `Object` e tipo di indice `String`."
  syntax:
    content: public virtual string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Il nome della funzionalità del browser da recuperare."
    return:
      type: System.String
      description: "Funzionalità del browser con il nome della chiave specificato."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  id: JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta Java."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports Java.  \n  \n [!code-cs[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/csharp/p-system.web.configurati_397_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/visualbasic/p-system.web.configurati_397_1.aspx)]"
  syntax:
    content: public bool JavaApplets { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta Java. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  id: JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta JavaScript."
  remarks: "Se il browser supporta JavaScript, ma lo scripting è disabilitato tramite un&quot;impostazione di sicurezza, la proprietà JavaScript restituirà `true` ma lo script non verrà eseguito nel browser."
  example:
  - "The following code example shows how to determine whether the browser supports JavaScript.  \n  \n [!code-vb[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_318_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/csharp/p-system.web.configurati_318_1.aspx)]"
  syntax:
    content: public bool JavaScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta JavaScript. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  id: JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione di JScript supportata dal browser."
  syntax:
    content: public Version JScriptVersion { get; }
    return:
      type: System.Version
      description: "Il <xref:System.Version>di JScript supportata dal browser.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  id: MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione principale (intero) numero di versione del browser."
  remarks: ''
  example:
  - "The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_241_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_241_1.aspx)]"
  syntax:
    content: public int MajorVersion { get; }
    return:
      type: System.Int32
      description: "Il numero di versione principale del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Il valore di versione principale non è un numero intero."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  id: MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la lunghezza massima in caratteri per il <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> attributo di un elemento HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (ancoraggio)."
  syntax:
    content: public virtual int MaximumHrefLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza massima in caratteri per il <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> attributo di un elemento HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (ancoraggio)."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  id: MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la lunghezza massima della pagina, in byte, di cui è possibile visualizzare il browser."
  remarks: "L&quot;elaborazione tramite un gateway intermedio è possibile modificare il numero di byte che raggiungono il browser. ASP.NET non impone questo limite alle dimensioni della pagina.       MaximumRenderedPageSize risulta particolarmente utile quando si lavora con i browser client mobili."
  syntax:
    content: public virtual int MaximumRenderedPageSize { get; }
    return:
      type: System.Int32
      description: "La lunghezza massima della pagina, in byte, di cui è possibile visualizzare il browser. Il valore predefinito è `2000`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  id: MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce la lunghezza massima del testo che consente di visualizzare un&quot;etichetta di tasto softkey."
  remarks: "La proprietà MaximumSoftkeyLabelLength si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine the maximum length of the soft-key label for the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/csharp/p-system.web.configurati_145_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/visualbasic/p-system.web.configurati_145_1.aspx)]"
  syntax:
    content: public virtual int MaximumSoftkeyLabelLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza massima del testo che consente di visualizzare un&quot;etichetta di tasto softkey. Il valore predefinito è <xref uid=&quot;langword_csharp_5&quot; name=&quot;5&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  id: MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene una secondaria (vale a dire decimale) il numero di versione del browser."
  remarks: ''
  example:
  - "The following code example returns the minor version of the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_84_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_84_1.aspx)]"
  syntax:
    content: public double MinorVersion { get; }
    return:
      type: System.Double
      description: "Il numero di versione secondaria del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Il numero di versione secondaria nell&quot;intestazione non è valido."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  id: MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il numero di versione secondario (decimale) del browser sotto forma di stringa."
  syntax:
    content: public string MinorVersionString { get; }
    return:
      type: System.String
      description: "Il numero di versione secondaria del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  id: MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il nome del produttore di un dispositivo mobile, se noto."
  syntax:
    content: public virtual string MobileDeviceManufacturer { get; }
    return:
      type: System.String
      description: "Il nome del produttore di un dispositivo mobile, se noto. Il valore predefinito è <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  id: MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il nome del modello di un dispositivo mobile, se noto."
  syntax:
    content: public virtual string MobileDeviceModel { get; }
    return:
      type: System.String
      description: "Il nome del modello di un dispositivo mobile, se noto. Il valore predefinito è <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  id: MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione di Microsoft HTML (MSHTML) documento oggetto modello (DOM) supportata dal browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_222_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_222_1.aspx)]"
  syntax:
    content: public Version MSDomVersion { get; }
    return:
      type: System.Version
      description: "Il numero della versione del modello DOM di MSHTML supportata dal browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  id: NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il numero di tasti softkey in un dispositivo mobile."
  remarks: "La proprietà NumberOfSoftkeys si applica solo ai dispositivi mobili compatibili con WML.       Tasti softkey sono tasti speciali che l&quot;applicazione in genere possibile eseguire il mapping ad attività personalizzate. Tasto softkey testo viene visualizzato sullo schermo negli angoli in basso a sinistra e in basso a destra."
  syntax:
    content: public virtual int NumberOfSoftkeys { get; }
    return:
      type: System.Int32
      description: "Il numero di tasti softkey supportati in un dispositivo mobile. Il valore predefinito è <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  id: Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il nome della piattaforma che utilizza il client, se noto."
  remarks: "Alcuni dei possibili valori per la proprietà della piattaforma sono i seguenti:- `Unknown`       -    `Win95`       -    `Win98`       -    `Windows NT 5.0` (Windows 2000) - `Windows NT 5.1` (Windows XP) - `WinNT` (tutte le altre versioni di Windows NT):`Win16`      -   `WinCE`      -   `Mac68K`      -   `MacPPC`      -   `UNIX`      -   `WebTV`"
  example:
  - "The following code example shows how to determine whether the browser is running on the Windows NT platform.  \n  \n [!code-cs[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/csharp/p-system.web.configurati_235_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/visualbasic/p-system.web.configurati_235_1.aspx)]"
  syntax:
    content: public string Platform { get; }
    return:
      type: System.String
      description: "Il sistema operativo utilizzato dal client, se noto, in caso contrario il valore è impostato su <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  id: PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il tipo MIME del tipo di contenuto immagine preferito per il browser."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of image typically preferred by a browser.  \n  \n [!code-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_205_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/csharp/p-system.web.configurati_205_1.aspx)]"
  syntax:
    content: public virtual string PreferredImageMime { get; }
    return:
      type: System.String
      description: "Il tipo MIME del tipo di contenuto immagine preferito per il browser. Il valore predefinito è <xref uid=&quot;langword_csharp_image/gif&quot; name=&quot;image/gif&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  id: PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce il tipo MIME del tipo di contenuto preferito per il browser."
  remarks: ''
  example:
  - "The following code example shows how to determine the MIME type typically preferred by the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/csharp/p-system.web.configurati_125_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_125_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingMime { get; }
    return:
      type: System.String
      description: "Il tipo MIME del tipo di contenuto preferito per il browser. Il valore predefinito è <xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  id: PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il nome generale per il tipo di contenuto preferenziale per il browser."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of content that the browser prefers.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/csharp/p-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_61_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingType { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;></xref>or <xref uid=&quot;langword_csharp_chtml10&quot; name=&quot;chtml10&quot; href=&quot;&quot;></xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  id: PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la codifica delle richieste preferenziale per il browser."
  syntax:
    content: public virtual string PreferredRequestEncoding { get; }
    return:
      type: System.String
      description: "La codifica delle richieste preferenziale per il browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  id: PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la codifica delle risposte preferite dal browser."
  syntax:
    content: public virtual string PreferredResponseEncoding { get; }
    return:
      type: System.String
      description: "Codifica delle risposte preferite dal browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  id: RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser esegue il rendering di un&quot;interruzione di riga prima <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "La proprietà RendersBreakBeforeWmlSelectAndInput si applica solo ai dispositivi mobili compatibili con WML.       Se `true`, il contenuto che segue `<select>` o `<input>` elementi verranno inseriti automaticamente in una nuova riga."
  example:
  - "The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/csharp/9303e792-7cc5-4e57-92b0-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/visualbasic/9303e792-7cc5-4e57-92b0-_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser esegue il rendering di un&quot;interruzione di riga prima <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  id: RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser esegue il rendering di un&quot;interruzione di riga dopo elementi voce di elenco."
  remarks: "Se `true`, il contenuto dopo elementi voce di elenco verrà inserito automaticamente in una nuova riga."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after list-item elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/csharp/p-system.web.configurati_162_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/visualbasic/p-system.web.configurati_162_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterHtmlLists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser esegue il rendering di un&quot;interruzione di riga dopo elementi voce di elenco. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  id: RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser esegue il rendering di un&quot;interruzione di riga dopo un HTML autonomo <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (ancoraggio)."
  remarks: "La proprietà RendersBreaksAfterWmlAnchor si applica solo ai dispositivi mobili compatibili con WML.       Se `true`, il contenuto che segue un HTML autonomo `<a>` elemento (ancoraggio) verrà inserito automaticamente in una nuova riga."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_28_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/csharp/p-system.web.configurati_28_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlAnchor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser esegue il rendering di un&quot;interruzione di riga dopo un HTML autonomo <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> elemento (ancoraggio); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  id: RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser esegue il rendering di un&quot;interruzione di riga dopo un elemento HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "La proprietà RendersBreaksAfterWmlInput si applica solo ai dispositivi mobili compatibili con WML.       Se `true`, il contenuto che segue un elemento HTML `<input>` elemento verrà inserito automaticamente in una nuova riga."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/csharp/p-system.web.configurati_299_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/visualbasic/p-system.web.configurati_299_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser esegue il rendering di un&quot;interruzione di riga dopo un elemento HTML <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>elemento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  id: RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser del dispositivo mobile esegue il rendering WML <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-basata su form accettare costrutto come pulsante incorporato anziché come un tasto softkey."
  remarks: "La proprietà RendersWmlDoAcceptsInline si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/visualbasic/p-system.web.configurati_225_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/csharp/p-system.web.configurati_225_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlDoAcceptsInline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser del dispositivo mobile esegue il rendering WML <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-basato su form costrutto di accettazione di un pulsante inline; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  id: RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser esegue il rendering WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi come schede di menu, anziché come una casella combinata."
  remarks: "La proprietà RendersWmlSelectsAsMenuCards si applica solo ai dispositivi mobili compatibili con WML."
  example:
  - "The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_310_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/csharp/p-system.web.configurati_310_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlSelectsAsMenuCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser esegue il rendering WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi come schede di menu; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  id: RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usato internamente per produrre un tag meta richiesto da alcuni browser."
  remarks: "Solo per uso interno. Alcuni browser richiedono un metatag simile al seguente per il browser eseguire il rendering correttamente.      ```   <META NAME=&quot;NAME&quot; CONTENT=&quot;VALUE&quot;>   ```"
  syntax:
    content: public virtual string RequiredMetaTagNameValue { get; }
    return:
      type: System.String
      description: "Un tag meta richiesto da alcuni browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  id: RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede che i due punti nei valori di attributo degli elementi devono essere sostituite con un carattere diverso."
  remarks: "Alcuni browser non riconoscono i due punti nei valori attributo degli elementi. Se `true`, verrà sostituito da un carattere diverso e restituito nei dati di postback."
  example:
  - "The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/csharp/75aeaef6-dcfa-4061-9538-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/visualbasic/75aeaef6-dcfa-4061-9538-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresAttributeColonSubstitution { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede che i due punti nei valori di attributo degli elementi da sostituire con un carattere diverso. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  id: RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede un elemento HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elemento per cui il <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> attributo specificato."
  remarks: "Se `true`, schede di controllo server inseriscono il seguente tag HTML `<head>` elemento di una pagina Web: ```   <META HTTP-EQUIV=&quot;CONTENT-TYPE&quot; CONTENT=&quot;&quot;; CHARSET=&quot;&quot;>   ``` In questo esempio, `CONTENT` è il valore restituito dal <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>, proprietà e `charset` è la codifica dei caratteri utilizzata.</xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>"
  example:
  - "The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_102_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_102_1.aspx)]"
  syntax:
    content: public virtual bool RequiresContentTypeMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede un elemento HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elemento per cui il <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> attributo è specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  id: RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede lo stato del controllo venga mantenuto nelle sessioni."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires control state to be maintained in sessions.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/csharp/p-system.web.configurati_387_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/visualbasic/p-system.web.configurati_387_1.aspx)]"
  syntax:
    content: public bool RequiresControlStateInSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede che lo stato del controllo venga mantenuto nelle sessioni. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  id: RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede un set di caratteri a byte doppio."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires a double-byte character set.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/visualbasic/p-system.web.configurati_51_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/csharp/p-system.web.configurati_51_1.aspx)]"
  syntax:
    content: public virtual bool RequiresDBCSCharacter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede un set di caratteri a byte doppio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  id: RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede messaggi di errore non standard."
  remarks: "Se `true`, il browser visualizza correttamente i messaggi di errore HTTP. Per risolvere il problema, gli adattatori di controllo server generano una pagina di errore personalizzata per il browser."
  example:
  - "The following code example shows how to determine whether the browser requires nonstandard error messages.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/csharp/2ba3dcba-bae8-4562-b395-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/visualbasic/2ba3dcba-bae8-4562-b395-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede messaggi di errore non standard. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  id: RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede che il primo elemento nel corpo di una pagina Web HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Se `true`, schede di controllo server inseriscono un&quot;ulteriore `<br>` elemento immediatamente dopo il `<body>` tag in una pagina Web."
  example:
  - "The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/visualbasic/p-system.web.configurati_195_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/csharp/p-system.web.configurati_195_1.aspx)]"
  syntax:
    content: public virtual bool RequiresLeadingPageBreak { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede che il primo elemento nel corpo di una pagina Web HTML <xref uid=&quot;langword_csharp_BR&quot; name=&quot;BR&quot; href=&quot;&quot;> </xref> elemento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  id: RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> gli elementi di formattazione delle interruzioni di riga."
  remarks: "Se `true`, il browser non visualizzerà correttamente le pagine HTML contenenti `<br>` elemento."
  example:
  - "The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/visualbasic/p-system.web.configurati_224_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/csharp/p-system.web.configurati_224_1.aspx)]"
  syntax:
    content: public virtual bool RequiresNoBreakInFormatting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  id: RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede che le pagine contengano una forma con ottimizzazione per la dimensione di tag di linguaggio di markup."
  remarks: "Se `true`, adattatori del controllo server generano un output minimo per ridurre le dimensioni della pagina risultante.      > [!NOTE] > RequiresOutputOptimization la proprietà restituisce `true` per i browser compatibili con i-mode."
  example:
  - "The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/csharp/p-system.web.configurati_64_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/visualbasic/p-system.web.configurati_64_1.aspx)]"
  syntax:
    content: public virtual bool RequiresOutputOptimization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede che le pagine contengano una forma con ottimizzazione per la dimensione di tag di linguaggio di markup; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  id: RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta la composizione telefonica basata su testo normale o se richiede un markup speciale."
  remarks: "La proprietà RequiresPhoneNumbersAsPlainText si applica solo ai browser per cui il <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>proprietà `true`.</xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/csharp/p-system.web.configurati_169_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/visualbasic/p-system.web.configurati_169_1.aspx)]"
  syntax:
    content: public virtual bool RequiresPhoneNumbersAsPlainText { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta la composizione telefonica basata su testo normale. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  id: RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> valori da una codifica speciale."
  remarks: "HTTP è un protocollo senza stato, e `VIEWSTATE` è un meccanismo utilizzato per rendere permanenti le modifiche di client in più richieste. Ogni controllo in una pagina Web contiene un <xref:System.Web.UI.Control.ViewState%2A>proprietà, che rappresenta un riepilogo di tutte le modifiche apportate dal client.</xref:System.Web.UI.Control.ViewState%2A> In una pagina Web Form, queste modifiche sono codificate nei dati di postback come il `value` di HTML `<input>` elemento con un `type` attributo di `hidden`. Ad esempio: ```   <input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;t0PH_u56?cDxleHQ7P=&quot; />   ``` se `true`, non alfabetici i caratteri di `VIEWSTATE` valore sarà non vengono inviato correttamente dal browser, né da un gateway intermedio. Per risolvere il problema, gli adattatori di controllo server sostituiscono i caratteri non alfabetici il `VIEWSTATE` valore con quelli che non richiedono la codifica nelle richieste HTTP."
  example:
  - "The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/csharp/ded66d43-c984-472a-ab07-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/visualbasic/ded66d43-c984-472a-ab07-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresSpecialViewStateEncoding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> valori appositamente codificato in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  id: RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede URL di azione form univoci."
  remarks: "Riferimenti interni HTML `<form>` elemento costituisce uno per il quale il `action` attributo specifica il proprio URL. Se `true`, FORMACTION non restituiscono i risultati corretti. Ciò è dovuto alla memorizzazione nella cache per il browser o un gateway intermedio. Per risolvere il problema, gli adattatori di controllo server aggiungono una stringa di query predefinito (`__ufps=``uniquefilepathsuffix`) i valori di URL di azione form degli FORMACTION."
  example:
  - "The following code example shows how to determine whether the browser requires unique form-action URLs.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/visualbasic/p-system.web.configurati_74_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/csharp/p-system.web.configurati_74_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueFilePathSuffix { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede URL di azione form univoci; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  id: RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede univoco <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> i valori di più elementi di attributo <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type=\"checkbox\">` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/csharp/p-system.web.configurati_384_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_384_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlCheckboxNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede univoco <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> i valori di più elementi di attributo <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  id: RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser richiede univoco <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> i valori di più elementi di attributo <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/csharp/p-system.web.configurati_285_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_285_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlInputNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser richiede univoco <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> i valori di più elementi di attributo <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  id: RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se i dati di postback inviati dal browser saranno <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser `UrlEncodes` postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/visualbasic/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/csharp/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUrlEncodedPostfieldValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati di postback inviati dal browser verranno <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  id: ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce la profondità dello schermo, in bit per pixel."
  syntax:
    content: public virtual int ScreenBitDepth { get; }
    return:
      type: System.Int32
      description: "Intensità dello schermo, in bit per pixel. Il valore predefinito è <xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  id: ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce l&quot;altezza approssimativa dello schermo in righe di caratteri."
  remarks: "Il valore restituito può essere derivato dalla dimensione dei caratteri presunta e le dimensioni in pixel effettivo della schermata. L&quot;algoritmo per determinare l&quot;altezza utilizza una combinazione delle intestazioni esplicite inviate dal browser, le dimensioni dei caratteri predefinita (da un file. config) e dimensioni specifiche del browser (nuovamente, da un file. config). Alcuni browser possono basarsi su valori predefiniti interni, solo approssimare l&quot;altezza effettiva."
  syntax:
    content: public virtual int ScreenCharactersHeight { get; }
    return:
      type: System.Int32
      description: "Altezza approssimativa dello schermo in righe di caratteri. Il valore predefinito è <xref uid=&quot;langword_csharp_6&quot; name=&quot;6&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  id: ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce la larghezza approssimativa dello schermo, in caratteri."
  remarks: "Il valore restituito può essere derivato dalla dimensione dei caratteri presunta e le dimensioni in pixel effettivo della schermata. L&quot;algoritmo per determinare la larghezza utilizza una combinazione delle intestazioni esplicite inviate dai dispositivi, le dimensioni dei caratteri predefinita (da un file. config) e dimensioni specifico del dispositivo (nuovamente, da un file. config). Questi valori non sono necessariamente esatti (in particolare per i tipi di carattere a larghezza variabile, questi valori sono approssimativi). Alcuni dispositivi possono basarsi su valori predefiniti interni, solo approssimare l&quot;effettiva larghezza."
  syntax:
    content: public virtual int ScreenCharactersWidth { get; }
    return:
      type: System.Int32
      description: "Larghezza approssimativa dello schermo, in caratteri. Il valore predefinito è <xref uid=&quot;langword_csharp_12&quot; name=&quot;12&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  id: ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce l&quot;altezza approssimativa dello schermo, in pixel."
  remarks: "Il valore restituito può essere derivato dalla dimensione dei caratteri presunta e l&quot;altezza di carattere. L&quot;algoritmo per determinare l&quot;altezza in pixel utilizza una combinazione delle intestazioni esplicite inviate dai dispositivi, le dimensioni dei caratteri predefinita (da un file. config) e dimensioni specifico del dispositivo (nuovamente, da un file. config). Questi valori non sono necessariamente esatti. Alcuni dispositivi possono basarsi su valori predefiniti interni, solo approssimare l&quot;altezza effettiva."
  syntax:
    content: public virtual int ScreenPixelsHeight { get; }
    return:
      type: System.Int32
      description: "Altezza approssimativa dello schermo, in pixel. Il valore predefinito è <xref uid=&quot;langword_csharp_72&quot; name=&quot;72&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  id: ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Restituisce la larghezza approssimativa dello schermo, in pixel."
  remarks: "Il valore restituito può essere derivato dalla dimensione dei caratteri presunta e larghezza dei caratteri. L&quot;algoritmo per determinare la larghezza in pixel utilizza una combinazione delle intestazioni esplicite inviate dai dispositivi, le dimensioni dei caratteri predefinita (da un file. config) e dimensioni specifico del dispositivo (nuovamente, da un file. config). Questi valori non sono necessariamente esatti (in particolare per i tipi di carattere a larghezza variabile, questi valori sono approssimativi). Alcuni dispositivi possono basarsi su valori predefiniti interni, solo approssimare l&quot;effettiva larghezza."
  syntax:
    content: public virtual int ScreenPixelsWidth { get; }
    return:
      type: System.Int32
      description: "Larghezza approssimativa dello schermo, in pixel. Il valore predefinito è <xref uid=&quot;langword_csharp_96&quot; name=&quot;96&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  id: SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_ACCESSKEY&quot; name=&quot;ACCESSKEY&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (ancoraggio) e <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "Il `accesskey` attributo estende il controllo del form e i collegamenti in una pagina Web per piattaforme mobili e accessibili tramite l&quot;assegnazione di un tasto softkey o altri controller sul dispositivo per l&quot;interazione con `<a>` (ancoraggio) e `<input>` elementi."
  example:
  - "The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/csharp/p-system.web.configurati_98_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.configurati_98_1.aspx)]"
  syntax:
    content: public virtual bool SupportsAccesskeyAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_accesskey&quot; name=&quot;accesskey&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (ancoraggio) e <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  id: SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> attributo del codice HTML <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_366_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/csharp/p-system.web.configurati_366_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBodyColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> attributo del codice HTML <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> elemento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  id: SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementi per formattare il testo in grassetto."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/visualbasic/p-system.web.configurati_211_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/csharp/p-system.web.configurati_211_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementi per formattare il testo in grassetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  id: SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> valore per il <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "Il `cache-control` valore per il `http-equiv` attributo HTML `<meta>` elementi consente di controllare client la memorizzazione nella cache del contenuto scaricato, incluse le pagine Web. Il frammento HTML seguente viene illustrato un esempio: ```   <META HTTP-EQUIV=&quot;CACHE-CONTROL&quot; CONTENT=&quot;NO-CACHE&quot;/>   ``` se `true`, l&quot;inclusione di questo tag nel `<head>` elemento di una pagina Web deve forzare il browser per ricaricare il contenuto dal server.       Se `false`, adattatori del controllo server aggiungono una stringa di query predefinito (`__ufps=``uniquefilepathsuffix`) in valori di URL di collegamento che è già presente. In questo modo il browser per ricaricare il contenuto dal server.       La proprietà SupportsCacheControlMetaTag si applica anche per il formato dell&quot;intestazione HTTP equivalente:```   CACHE-CONTROL: NO-CACHE   ```"
  example:
  - "The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_207_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_207_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCacheControlMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> valore per il <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  id: SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli script di callback."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports callback scripts.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/visualbasic/p-system.web.configurati_321_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/csharp/p-system.web.configurati_321_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli script di callback. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  id: SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i fogli CSS (Cascading Style)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CSS.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/csharp/p-system.web.configurati_129_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/visualbasic/p-system.web.configurati_129_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCss { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta CSS. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  id: SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "HTML `<div>` elementi vengono utilizzati per raggruppare più elementi HTML in modo che gli stili CSS possono essere applicati a tali nel suo complesso. Il `align` attributo imposta l&quot;allineamento orizzontale di un `<div>` gruppo in una pagina Web."
  example:
  - "The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/csharp/p-system.web.configurati_329_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/visualbasic/p-system.web.configurati_329_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivAlign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  id: SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "HTML `<div>` elementi vengono utilizzati per raggruppare più elementi HTML in modo che gli stili CSS possono essere applicati a tali nel suo complesso. Il `nowrap` attributo specifica che gli elementi contenuti nel `<div>` gruppo deve rimanere adiacente senza ritorni a capo."
  example:
  - "The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/csharp/p-system.web.configurati_108_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/visualbasic/p-system.web.configurati_108_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivNoWrap { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  id: SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta vuoto (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) stringhe nei valori dei cookie."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/csharp/88f116fb-05a4-493a-9e0f-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/visualbasic/88f116fb-05a4-493a-9e0f-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsEmptyStringInCookieValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta vuoto (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) stringhe nei valori dei cookie; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  id: SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/csharp/p-system.web.configurati_306_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_306_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  id: SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/visualbasic/p-system.web.configurati_341_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/csharp/p-system.web.configurati_341_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  id: SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/csharp/p-system.web.configurati_328_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/visualbasic/p-system.web.configurati_328_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  id: SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta l&quot;utilizzo di un&quot;immagine personalizzata invece di un pulsante di invio di form standard."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/csharp/p-system.web.configurati_33_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/visualbasic/p-system.web.configurati_33_1.aspx)]"
  syntax:
    content: public virtual bool SupportsImageSubmit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta l&quot;utilizzo di un&quot;immagine personalizzata invece di un pulsante di invio del modulo standard. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  id: SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i simboli i-mode."
  remarks: "Il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>proprietà si applica solo a-modalità compatibili con i dispositivi.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       Impostare i simboli immagine specifici di i-Phone per i browser compatibili con i-mode, utilizzando il <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>proprietà.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports i-mode symbols.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_346_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_346_1.aspx)]"
  syntax:
    content: public virtual bool SupportsIModeSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i simboli i-mode; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  id: SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "Il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>proprietà si applica solo a-modalità compatibili con i dispositivi.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       Il `istyle` attributo viene utilizzato per impostare lo stile di input di un campo di input di testo nei browser compatibili con i-mode."
  example:
  - "The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/csharp/p-system.web.configurati_164_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/visualbasic/p-system.web.configurati_164_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputIStyle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  id: SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "La proprietà SupportsInputMode si applica solo ai dispositivi compatibili con i-mode.       Il `MODE` attributo viene utilizzato per impostare la modalità di input di un campo di input di testo nei browser compatibili con i-mode."
  example:
  - "The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/csharp/p-system.web.configurati_141_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/visualbasic/p-system.web.configurati_141_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  id: SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementi per formattare il testo in corsivo."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/csharp/p-system.web.configurati_198_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/visualbasic/p-system.web.configurati_198_1.aspx)]"
  syntax:
    content: public virtual bool SupportsItalic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementi per formattare il testo in corsivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  id: SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta gli attributi multimediali J-Phone."
  remarks: "La proprietà SupportsJPhoneMultiMediaAttributes si applica solo ai dispositivi mobili compatibili con J-Phone.       J-Phone è una specifica di linguaggio di markup basata su HTML per i browser compatibili con J-Phone. Se `true`, il browser supporta gli attributi aggiuntivi per HTML `<a>` (ancoraggio) e `<select>` elementi. Gli attributi aggiuntivi supportati sono i seguenti:-`src`      -   `soundstart`      -   `loop`      -   `volume`      -   `vibration`      -   `viblength`"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/csharp/a19a3fd7-eca4-43f9-8389-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/visualbasic/a19a3fd7-eca4-43f9-8389-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneMultiMediaAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta gli attributi multimediali J-Phone. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  id: SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i simboli immagine specifici di J-Phone."
  remarks: "La proprietà Proprietà SupportsJPhoneSymbols si applica solo ai dispositivi mobili compatibili con J-Phone.       Impostare i simboli immagine specifici di J-Phone per i browser compatibili con J-Phone utilizzando il <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>proprietà.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_401_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_401_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i simboli immagine specifici di J-Phone; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  id: SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta una stringa di query nella <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> valore del codice HTML dell&quot;attributo <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: "Se `false`, vengono inviati i parametri di stringa di query nei dati di postback come HTML `<input>` gli elementi con il `type` attributi impostati `hidden`."
  example:
  - "The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/csharp/p-system.web.configurati_376_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/visualbasic/p-system.web.configurati_376_1.aspx)]"
  syntax:
    content: public virtual bool SupportsQueryStringInFormAction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta una stringa di query nella <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> valore del codice HTML dell&quot;attributo <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  id: SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta i cookie in operazioni di reindirizzamento."
  remarks: "Con backup. Browser 4.1 o remota. Browser 3.2, il <xref:System.Web.HttpResponse.Redirect%2A>metodo si comporta come se il valore della proprietà SupportsRedirectWithCookie del <xref:System.Web.HttpBrowserCapabilities>oggetto è `false`, a meno che il <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>proprietà nel <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>sezione di Web. config è stato impostato in modo esplicito su `true`.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.HttpResponse.Redirect%2A>       In ASP.NET 1.1, le opzioni per questa impostazione sono `true` o `false`, ma con ASP.NET 2.0, le scelte sono espanse, e <xref:System.Web.HttpCookieMode>è ora l&quot;impostazione predefinita.</xref:System.Web.HttpCookieMode> Se l&quot;applicazione Web dispone di `cookieless` attributo del `<sessionState>` sezione nel file Web. config impostato un valore booleano, <xref:System.Web.HttpResponse.Redirect%2A>dovrebbe funzionare come previsto per questi browser.</xref:System.Web.HttpResponse.Redirect%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports cookies on redirection.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/visualbasic/p-system.web.configurati_97_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/csharp/p-system.web.configurati_97_1.aspx)]"
  syntax:
    content: public virtual bool SupportsRedirectWithCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta i cookie in operazioni di reindirizzamento. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  id: SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta il <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/csharp/p-system.web.configurati_289_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/visualbasic/p-system.web.configurati_289_1.aspx)]"
  syntax:
    content: public virtual bool SupportsSelectMultiple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> attributo HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  id: SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se la cancellazione di un HTML selezionato <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> elemento viene riflessa nei dati di postback."
  remarks: "Se `false`, il valore di `checked` attributo HTML `<input type=checkbox>` viene omesso nei dati di postback."
  example:
  - "The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_253_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/csharp/p-system.web.configurati_253_1.aspx)]"
  syntax:
    content: public virtual bool SupportsUncheck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la cancellazione di un HTML selezionato <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> elemento viene riflessa nei dati di postback; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  id: SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta la ricezione di XML tramite HTTP."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports receiving XML over HTTP.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/csharp/p-system.web.configurati_261_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/visualbasic/p-system.web.configurati_261_1.aspx)]"
  syntax:
    content: public virtual bool SupportsXmlHttp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta la ricezione di XML tramite HTTP. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  id: System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzata internamente per confrontare i filtri."
  syntax:
    content: int IFilterResolutionService.CompareFilters (string filter1, string filter2);
    parameters:
    - id: filter1
      type: System.String
      description: "Il primo filtro da confrontare."
    - id: filter2
      type: System.String
      description: "Il secondo filtro da confrontare."
    return:
      type: System.Int32
      description: "1 if <code>filter1</code> is a parent of <code>filter2</code>; -1 if <code>filter2</code> is a parent of <code>filter1</code>; 0 if there is no parent-child relationship between <code>filter1</code> and <code>filter2</code>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  id: System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzata internamente per valutare un filtro."
  syntax:
    content: bool IFilterResolutionService.EvaluateFilter (string filterName);
    parameters:
    - id: filterName
      type: System.String
      description: "Il filtro da valutare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il filtro è stato valutato correttamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  id: Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementi."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<table>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/visualbasic/p-system.web.configurati_259_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/csharp/p-system.web.configurati_259_1.aspx)]"
  syntax:
    content: public bool Tables { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta HTML <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  id: TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Utilizzata internamente per ottenere il tipo di oggetto utilizzato per scrivere tag per il browser."
  syntax:
    content: public Type TagWriter { get; }
    return:
      type: System.Type
      description: "Il <xref:System.Type>dell&quot;oggetto utilizzato per scrivere tag per il browser.</xref:System.Type>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Si verifica un errore di analisi."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  id: Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il nome e il principale (intero) numero di versione del browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is Internet Explorer version 6.  \n  \n [!code-cs[HttpCapabilitiesBase.Type#1](~/add/codesnippet/csharp/p-system.web.configurati_44_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Type#1](~/add/codesnippet/visualbasic/p-system.web.configurati_44_1.aspx)]"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "Il nome e il numero di versione principale del browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  id: UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Usata internamente per ottenere un valore che indica se utilizzare una chiave di cache ottimizzata."
  syntax:
    content: public bool UseOptimizedCacheKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare una chiave di cache ottimizzata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  id: VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il browser supporta Visual Basic, Scripting edition (VBScript)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports VBScript.  \n  \n [!code-cs[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/csharp/p-system.web.configurati_206_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_206_1.aspx)]"
  syntax:
    content: public bool VBScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta VBScript. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  id: Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene il numero di versione completo (intero e decimale) del browser sotto forma di stringa."
  remarks: "La proprietà Version restituisce una stringa. In alcuni scenari, la proprietà di versione potrebbe contenere caratteri alfabetici, come nel caso di un browser o nel dispositivo client che è una versione beta, ad esempio &quot;7.0 b&quot;. Per ottenere la versione in modo corretto come tipo di dati che può essere utilizzato in un confronto numerico, concatenare il <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>e <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>i valori delle proprietà.</xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>"
  example:
  - "The following code example shows how to determine the Version of the browser. The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.  \n  \n [!code-vb[HttpCapabilitiesBase.Version#1](~/add/codesnippet/visualbasic/p-system.web.configurati_244_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Version#1](~/add/codesnippet/csharp/p-system.web.configurati_244_1.aspx)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "Numero di versione completo del browser sotto forma di stringa."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Version*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  id: W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene la versione di World Wide Web Consortium (W3C) XML documento oggetto modello (DOM) supportata dal browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_110_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_110_1.aspx)]"
  syntax:
    content: public Version W3CDomVersion { get; }
    return:
      type: System.Version
      description: "Il numero del numero di versione DOM XML W3C supportata dal browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  id: Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il client è un computer basato su Win16."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is running on a Win16-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/csharp/p-system.web.configurati_210_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/visualbasic/p-system.web.configurati_210_1.aspx)]"
  syntax:
    content: public bool Win16 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser è in esecuzione in un computer basato su Win16. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  id: Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un valore che indica se il client è un computer basato su Win32."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a Win32-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/csharp/p-system.web.configurati_30_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/visualbasic/p-system.web.configurati_30_1.aspx)]"
  syntax:
    content: public bool Win32 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il client è un computer basato su Win32. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.HttpUnhandledException
  parent: System.Web
  isExternal: false
  name: HttpUnhandledException
  nameWithType: HttpUnhandledException
  fullName: System.Web.HttpUnhandledException
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesProvider
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesProvider
  nameWithType: HttpCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
- uid: System.Version[]
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version[]
  spec.csharp:
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: Version[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
- uid: System.Web.Configuration.HttpCapabilitiesBase
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser
  nameWithType: HttpCapabilitiesBase.AddBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions
  nameWithType: HttpCapabilitiesBase.GetClrVersions
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init
  nameWithType: HttpCapabilitiesBase.Init
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser
  nameWithType: HttpCapabilitiesBase.IsBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item
  nameWithType: HttpCapabilitiesBase.Item
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
