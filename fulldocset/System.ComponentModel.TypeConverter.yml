### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverter
  id: TypeConverter
  children:
  - System.ComponentModel.TypeConverter.#ctor
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  langs:
  - csharp
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
  type: Class
  summary: "Fornisce una soluzione unica per la conversione di tipi di valori in altri tipi, oltre che per l&quot;accesso a sottoproprietà e valori standard."
  remarks: "Il tipo di convertitore più comune è quello che converte da e verso una rappresentazione di testo. Il convertitore di tipi per una classe è associato alla classe con un <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> A meno che non viene eseguito l&quot;override di questo attributo, tutte le classi che ereditano da questa classe utilizzano lo stesso convertitore come classe base.      > [!NOTE] > Per scopi di tipo generale del sistema, non accedere a un convertitore di tipi direttamente. In alternativa, accedere al convertitore appropriato tramite <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> Per ulteriori informazioni, vedere gli esempi di codice forniti.       **Nota** per XAML, un processore XAML cerca il <xref:System.ComponentModel.TypeConverterAttribute>direttamente, anziché passare attraverso <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeConverterAttribute> Per i casi in cui si desidera un <xref:System.ComponentModel.TypeDescriptor>istanza dal codice o in cui si crea un&quot;istanza condivisa in WPF risorse, è possibile crearlo direttamente senza fare riferimento <xref:System.ComponentModel.TypeDescriptor>o un altro sistema di reflection e tipo di supporto.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor>       Le classi derivate da TypeConverter fa spesso riferimento come parte delle modalità in cui un processore XAML converte un valore di attributo o l&quot;inizializzazione di testo dal markup (ad esempio una stringa) e genera un oggetto per una rappresentazione in fase di esecuzione. Gli autori dei tipi personalizzati che prevede di supportare un comportamento di conversione di tipi per XAML, in genere implementano una classe TypeConverter che supporta i propri univoco `ConvertFrom` comportamento da una stringa. Questo comportamento consente la conversione di tipo dalla stringa fornita come valore di attributo XAML e fornisce un processore XAML con il supporto necessario per creare un oggetto dalla stringa, in modo che l&quot;oggetto può essere prodotta in un oggetto grafico analizzato. Vengono indicati i tipi personalizzati o i membri di tipi personalizzati applicando <xref:System.ComponentModel.TypeConverterAttribute>alle definizioni, con l&quot;attributo che fa riferimento l&quot;implementazione personalizzata di TypeConverter.</xref:System.ComponentModel.TypeConverterAttribute> Per ulteriori informazioni, vedere [convertitori di tipi per XAML Panoramica](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to create an instance of a type converter and bind it to a class. The class implementing the converter, `MyClassConverter`, must inherit from the TypeConverter class.  \n  \n [!code-cpp[Classic TypeConverter Example#1](~/add/codesnippet/cpp/t-system.componentmodel._43_1.cpp)]\n [!code-cs[Classic TypeConverter Example#1](~/add/codesnippet/csharp/t-system.componentmodel._43_1.cs)]\n [!code-vb[Classic TypeConverter Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._43_1.vb)]  \n  \n When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property. The next code example requires that an enumeration called `MyPropertyEnum` has been declared.  \n  \n [!code-cpp[Classic TypeConverter Example#2](~/add/codesnippet/cpp/t-system.componentmodel._43_2.cpp)]\n [!code-cs[Classic TypeConverter Example#2](~/add/codesnippet/csharp/t-system.componentmodel._43_2.cs)]\n [!code-vb[Classic TypeConverter Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._43_2.vb)]  \n  \n Another common type converter usage is to convert an object to a string. The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.  \n  \n [!code-cpp[Classic TypeConverter Example#3](~/add/codesnippet/cpp/t-system.componentmodel._43_3.cpp)]\n [!code-cs[Classic TypeConverter Example#3](~/add/codesnippet/csharp/t-system.componentmodel._43_3.cs)]\n [!code-vb[Classic TypeConverter Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._43_3.vb)]  \n  \n You can also use a type converter to convert a value from its name, as shown in the next code example.  \n  \n [!code-cpp[Classic TypeConverter Example#4](~/add/codesnippet/cpp/t-system.componentmodel._43_4.cpp)]\n [!code-cs[Classic TypeConverter Example#4](~/add/codesnippet/csharp/t-system.componentmodel._43_4.cs)]\n [!code-vb[Classic TypeConverter Example#4](~/add/codesnippet/visualbasic/t-system.componentmodel._43_4.vb)]  \n  \n In the following code example, you can use a type converter to print out the set of standard values that the object supports.  \n  \n [!code-cpp[Classic TypeConverter Example#5](~/add/codesnippet/cpp/t-system.componentmodel._43_5.cpp)]\n [!code-cs[Classic TypeConverter Example#5](~/add/codesnippet/csharp/t-system.componentmodel._43_5.cs)]\n [!code-vb[Classic TypeConverter Example#5](~/add/codesnippet/visualbasic/t-system.componentmodel._43_5.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TypeConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> classe."
  syntax:
    content: public TypeConverter ();
    parameters: []
  overload: System.ComponentModel.TypeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  id: CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce se il convertitore può convertire un oggetto del tipo specificato per il tipo del convertitore."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`. Non restituisce mai `true`."
  syntax:
    content: public bool CanConvertFrom (Type sourceType);
    parameters:
    - id: sourceType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo a cui si desidera eseguire la conversione.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se il convertitore può convertire un oggetto del tipo specificato per il tipo del convertitore, utilizzando il contesto specificato."
  remarks: "Se implementato in questa classe, questo metodo restituisce `false`, a meno che `sourceType` è un <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: sourceType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo a cui si desidera eseguire la conversione.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  id: CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se il convertitore può convertire l&quot;oggetto nel tipo specificato."
  remarks: "Se `destinationType` è una stringa, l&quot;implementazione predefinita di <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>restituisce sempre `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public bool CanConvertTo (Type destinationType);
    parameters:
    - id: destinationType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo a cui si desidera convertire.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se il convertitore può convertire l&quot;oggetto nel tipo specificato, utilizzando il contesto specificato."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       Se `destinationType` è una stringa, l&quot;implementazione predefinita di <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>restituisce sempre `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: destinationType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo a cui si desidera convertire.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  id: ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato per il tipo del convertitore."
  syntax:
    content: public object ConvertFrom (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte l&quot;oggetto specificato nel tipo del convertitore, utilizzando le informazioni di contesto e le impostazioni cultura specificate."
  remarks: "Gli autori dei tipi personalizzati che prevede di supportare un comportamento di conversione di tipi per XAML, in genere implementano un <xref:System.ComponentModel.TypeConverter>classe che supporta il comportamento di ConvertFrom da una stringa.</xref:System.ComponentModel.TypeConverter> Questo comportamento consente la conversione di tipo dalla stringa fornita come valore di attributo XAML e fornisce un processore XAML con il supporto necessario per creare un oggetto dalla stringa, in modo che l&quot;oggetto può essere prodotta in un oggetto grafico analizzato. Vengono indicati i tipi personalizzati o i membri di tipi personalizzati applicando <xref:System.ComponentModel.TypeConverterAttribute>alle definizioni, che fa riferimento l&quot;oggetto personalizzato con l&quot;attributo <xref:System.ComponentModel.TypeConverter>implementazione.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.TypeConverterAttribute>       Per XAML, non in genere forniscono implementazioni di diramazione in base a `culture`. In questo modo XAML è precompilato in un contesto dell&quot;ambiente di sviluppo e le informazioni specifiche delle impostazioni cultura per runtime XAML non è pertinente per la conversione di tipi XAML. Per ulteriori informazioni, vedere [convertitori di tipi per XAML Panoramica](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Il <xref:System.Globalization.CultureInfo>da utilizzare come impostazioni cultura correnti.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  id: ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte la stringa specificata per il tipo del convertitore, utilizzando le impostazioni cultura invarianti."
  remarks: "L&quot;implementazione predefinita restituisce sempre `null`."
  syntax:
    content: public object ConvertFromInvariantString (string text);
    parameters:
    - id: text
      type: System.String
      description: "Il <xref:System.String>da convertire.</xref:System.String>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il testo convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte la stringa specificata per il tipo del convertitore, utilizzando le impostazioni cultura invarianti e il contesto specificato."
  remarks: "Se la stringa non può essere convertita nell&quot;oggetto appropriato, viene generata un&quot;eccezione. L&quot;implementazione predefinita restituisce sempre `null`.       Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`."
  syntax:
    content: public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: text
      type: System.String
      description: "Il <xref:System.String>da convertire.</xref:System.String>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il testo convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il testo specificato in un oggetto."
  remarks: "L&quot;implementazione predefinita restituisce sempre `null`."
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public object ConvertFromString (string text);
    parameters:
    - id: text
      type: System.String
      description: "La rappresentazione testo dell&quot;oggetto da convertire."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il testo convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La stringa non può essere convertita nell&quot;oggetto appropriato."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il testo specificato in un oggetto, utilizzando il contesto specificato."
  remarks: "Se la stringa non può essere convertita nell&quot;oggetto appropriato, viene generata un&quot;eccezione. L&quot;implementazione predefinita restituisce sempre `null`.       Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: text
      type: System.String
      description: "Il <xref:System.String>da convertire.</xref:System.String>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il testo convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il testo specificato in un oggetto, utilizzando le informazioni di contesto e le impostazioni cultura specificate."
  remarks: "Se la stringa non può essere convertita nell&quot;oggetto appropriato, viene generata un&quot;eccezione. L&quot;implementazione predefinita restituisce sempre `null`.       Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene passato l&quot;oggetto corrente vengono utilizzate impostazioni cultura."
    - id: text
      type: System.String
      description: "Il <xref:System.String>da convertire.</xref:System.String>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il testo convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte l&quot;oggetto valore specificato nel tipo specificato, usando gli argomenti."
  remarks: "Il tipo da convertire da e verso più comune è un oggetto stringa. Questa implementazione chiama <xref:System.Object.ToString%2A>sull&quot;oggetto, se l&quot;oggetto è valido e se il tipo di destinazione è una stringa.</xref:System.Object.ToString%2A>"
  syntax:
    content: public object ConvertTo (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Il <xref:System.Type>per convertire il `value` parametro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte l&quot;oggetto valore specificato nel tipo specificato, utilizzando le informazioni di contesto e le impostazioni cultura specificate."
  remarks: "Per convertire i tipi più comuni sono in e da un oggetto stringa. Questa implementazione chiama <xref:System.Object.ToString%2A>per l&quot;oggetto se l&quot;oggetto è valido e se il tipo di destinazione è una stringa.</xref:System.Object.ToString%2A>       Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       Gli autori dei tipi personalizzati che prevede di supportare un comportamento di conversione di tipi per XAML, in genere implementano un <xref:System.ComponentModel.TypeConverter>classe che supporta <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>comportamento da una stringa.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter> I convertitori di tipi potrebbero anche implementare ConvertTo per il supporto della serializzazione XAML.       Alcuni scenari di serializzazione di XAML non sarà possibile indirizzare in modo adeguato con <xref:System.ComponentModel.TypeConverter>da solo.</xref:System.ComponentModel.TypeConverter> In questi casi, potrebbe essere necessario definire anche un <xref:System.Windows.Markup.ValueSerializer>che gestisce i casi di serializzazione che sarebbero altrimenti gestiti da ConvertTo.</xref:System.Windows.Markup.ValueSerializer> Per ulteriori informazioni, vedere <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  syntax:
    content: public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene passato l&quot;oggetto corrente vengono utilizzate impostazioni cultura."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Il <xref:System.Type>per convertire il `value` parametro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  id: ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato in una rappresentazione di stringa di impostazioni cultura invarianti."
  remarks: "Il `context` parametro può essere utilizzato per estrarre informazioni aggiuntive sull&quot;ambiente dal quale viene richiamato il convertitore. Può trattarsi di `null`, eseguire sempre un controllo. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       A seconda dell&quot;implementazione del formattatore di valori, potrebbe essere possibile passare la stringa restituita al formattatore di valori per ricreare un&quot;istanza dell&quot;oggetto."
  syntax:
    content: public string ConvertToInvariantString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta il valore convertito.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato in una rappresentazione di stringa di impostazioni cultura invarianti, utilizzando il contesto specificato."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       A seconda dell&quot;implementazione del formattatore di valori, potrebbe essere possibile passare la stringa restituita al formattatore di valori per ricreare un&quot;istanza dell&quot;oggetto."
  syntax:
    content: public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta il valore convertito.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato in una rappresentazione di stringa."
  remarks: "A seconda dell&quot;implementazione del formattatore di valori, potrebbe essere possibile passare la stringa restituita al formattatore di valori per ricreare un&quot;istanza dell&quot;oggetto."
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public string ConvertToString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.String
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato in una rappresentazione di stringa, utilizzando il contesto specificato."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       A seconda dell&quot;implementazione del formattatore di valori, potrebbe essere possibile passare la stringa restituita al formattatore di valori per ricreare un&quot;istanza dell&quot;oggetto."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.String
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte il valore specificato in una rappresentazione di stringa, utilizzando le informazioni di contesto e le impostazioni cultura specificate."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       A seconda dell&quot;implementazione del formattatore di valori, potrebbe essere possibile passare la stringa restituita al formattatore di valori per ricreare un&quot;istanza dell&quot;oggetto."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene passato l&quot;oggetto corrente vengono utilizzate impostazioni cultura."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire.</xref:System.Object>"
    return:
      type: System.String
      description: "Un <xref:System.Object>che rappresenta il valore convertito.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile eseguire la conversione."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  id: CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Consente di ricreare un <xref:System.Object>dato un set di valori di proprietà per l&quot;oggetto.</xref:System.Object>"
  remarks: "Utilizzare questo metodo per gli oggetti che non sono modificabili, ma per cui si desidera fornire proprietà modificabili.       Il dizionario fornito dal `propertyValues` parametro dispone di una serie di coppie nome/valore, una per ogni proprietà restituita da <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</xref:System.ComponentModel.TypeConverter.GetProperties%2A>"
  syntax:
    content: public object CreateInstance (System.Collections.IDictionary propertyValues);
    parameters:
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>che rappresenta un dizionario di nuovi valori della proprietà.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il dato <xref:System.Collections.IDictionary>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non può essere creato.</xref:System.Collections.IDictionary> </xref:System.Object> Questo metodo restituisce sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Crea un&quot;istanza del tipo che questo <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> è associato, utilizzando il contesto specificato, dato un set di valori di proprietà per l&quot;oggetto."
  remarks: "Utilizzare questo metodo per gli oggetti che non sono modificabili, ma per cui si desidera fornire proprietà modificabili."
  syntax:
    content: public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di nuovi valori della proprietà.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il dato <xref:System.Collections.IDictionary>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non può essere creato.</xref:System.Collections.IDictionary> </xref:System.Object> Questo metodo restituisce sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un&quot;eccezione da generare quando non è possibile eseguire una conversione."
  syntax:
    content: protected Exception GetConvertFromException (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non è disponibile.</xref:System.Object>"
    return:
      type: System.Exception
      description: "Un <xref:System.Exception>che rappresenta l&quot;eccezione da generare quando non è possibile eseguire una conversione.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertFromException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Viene generata automaticamente da questo metodo."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un&quot;eccezione da generare quando non è possibile eseguire una conversione."
  syntax:
    content: protected Exception GetConvertToException (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da convertire o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non è disponibile.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo di conversione ha tentato di convertire in.</xref:System.Type>"
    return:
      type: System.Exception
      description: "Un <xref:System.Exception>che rappresenta l&quot;eccezione da generare quando non è possibile eseguire una conversione.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertToException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Viene generata automaticamente da questo metodo."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  id: GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce se la modifica di un valore di questo oggetto richiede una chiamata al <xref:System.ComponentModel.TypeConverter.CreateInstance*>metodo per creare un nuovo valore.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  syntax:
    content: public bool GetCreateInstanceSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la modifica di una proprietà dell&quot;oggetto richiede una chiamata a <xref:System.ComponentModel.TypeConverter.CreateInstance*>per creare un nuovo valore; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce se la modifica di un valore di questo oggetto richiede una chiamata a <xref:System.ComponentModel.TypeConverter.CreateInstance*>per creare un nuovo valore, utilizzando il contesto specificato.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`."
  syntax:
    content: public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la modifica di una proprietà dell&quot;oggetto richiede una chiamata a <xref:System.ComponentModel.TypeConverter.CreateInstance*>per creare un nuovo valore; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di proprietà per il tipo di matrice specificato dal parametro value."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `null`.       Per impostazione predefinita, un tipo non restituisce le proprietà. Una semplice implementazione di questo metodo può chiamare <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>per il tipo di dati corretto.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Un <xref:System.Object>che specifica il tipo di matrice per cui ottenere le proprietà.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> con le proprietà esposte per questo tipo di dati o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esistono proprietà."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di proprietà per il tipo di matrice specificato dal parametro value, utilizzando il contesto specificato."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       Se implementato in questa classe, questo metodo restituisce sempre `null`.       Per impostazione predefinita, un tipo non restituisce le proprietà. Una semplice implementazione di questo metodo può chiamare <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>per il tipo di dati corretto.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Un <xref:System.Object>che specifica il tipo di matrice per cui ottenere le proprietà.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> con le proprietà esposte per questo tipo di dati o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esistono proprietà."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di proprietà per il tipo di matrice specificato dal parametro del valore, utilizzando il contesto specificato e attributi."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `null`."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Un <xref:System.Object>che specifica il tipo di matrice per cui ottenere le proprietà.</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che viene utilizzata come filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> con le proprietà esposte per questo tipo di dati o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esistono proprietà."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  id: GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questo oggetto supporta proprietà."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`."
  syntax:
    content: public bool GetPropertiesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetProperties*>deve essere chiamato per individuare le proprietà di questo oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questo oggetto supporta proprietà, utilizzando il contesto specificato."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`."
  syntax:
    content: public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetProperties*>deve essere chiamato per individuare le proprietà di questo oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  id: GetStandardValues
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di valori standard dal contesto predefinito per il tipo di dati che per cui è progettato questo convertitore."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `null`."
  syntax:
    content: public System.Collections.ICollection GetStandardValues ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Oggetto <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>contenente un set standard di valori validi, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il tipo di dati non supporta un set standard di valori.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di valori standard per il tipo di dati che è progettato questo convertitore per quando viene fornito un contesto di formato."
  remarks: "Quando implementato in <xref:System.ComponentModel.TypeConverter>, questo metodo restituisce sempre `null`.</xref:System.ComponentModel.TypeConverter>"
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato che può essere utilizzato per estrarre informazioni aggiuntive sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro o una proprietà di questo parametro può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Oggetto <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>che contiene un set standard di valori validi, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il tipo di dati non supporta un set standard di valori.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  id: GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se la raccolta di valori standard restituiti dal <xref:System.ComponentModel.TypeConverter.GetStandardValues*>rappresenta un elenco esclusivo.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`.       Se l&quot;elenco è esclusivo, come in un tipo di dati di enumerazione, nessun altro valore è valido. Se l&quot;elenco è esclusivo, non possono esistere altri valori validi oltre all&quot;elenco di valori standard di <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>metodo fornisce.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> Se i valori sono esclusivi, l&quot;elenco restituito dal <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>non deve consentire questi valori da modificare.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public bool GetStandardValuesExclusive ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>restituito da <xref:System.ComponentModel.TypeConverter.GetStandardValues*>rappresenta un elenco completo dei valori possibili. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se sono possibili altri valori.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se la raccolta di valori standard restituiti dal <xref:System.ComponentModel.TypeConverter.GetStandardValues*>è un elenco esclusivo di valori possibili utilizzando il contesto specificato.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`.       Se l&quot;elenco è esclusivo, come in un tipo di dati di enumerazione, nessun altro valore è valido. Se l&quot;elenco è esclusivo, non possono esistere altri valori validi oltre all&quot;elenco di valori standard di <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>metodo fornisce.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> Se i valori sono esclusivi, l&quot;elenco restituito dal <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>non deve consentire questi valori da modificare.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>restituito da <xref:System.ComponentModel.TypeConverter.GetStandardValues*>rappresenta un elenco completo dei valori possibili. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se sono possibili altri valori.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  id: GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questo oggetto supporta un set standard di valori selezionabili da un elenco."
  syntax:
    content: public bool GetStandardValuesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetStandardValues*>deve essere chiamato per individuare un set comune di valori supportati dall&quot;oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questo oggetto supporta un set standard di valori selezionabili da un elenco utilizzando il contesto specificato."
  remarks: "Se implementato in questa classe, questo metodo restituisce sempre `false`.       Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`."
  syntax:
    content: public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetStandardValues*>deve essere chiamato per individuare un set comune di valori supportati dall&quot;oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se l&quot;oggetto valore specificato è valido per questo tipo."
  remarks: "A partire da [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A>metodo intercetta le eccezioni dal <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>metodi.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.IsValid%2A> Se il tipo di valore di input determina <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>per restituire `false`, o se il valore di input a causa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>per generare un&quot;eccezione, il <xref:System.ComponentModel.TypeConverter.IsValid%2A>restituisce `false`.</xref:System.ComponentModel.TypeConverter.IsValid%2A> </xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       Per abilitare il comportamento legacy, inserire le righe seguenti nel file di configurazione dell&quot;applicazione, ad esempio, application1.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  syntax:
    content: public bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Oggetto da testare la validità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore specificato è valido per questo oggetto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se l&quot;oggetto valore specificato è valido per questo tipo e per il contesto specificato."
  remarks: "Utilizzare il `context` parametro per estrarre ulteriori informazioni sull&quot;ambiente dal quale viene richiamato il convertitore. Questo parametro può essere `null`, pertanto sempre la verifica. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       A partire da [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], il metodo IsValid intercetta le eccezioni dal <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>metodi.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> Se il tipo di valore di input determina <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>per restituire `false`, o se il valore di input a causa <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>per generare un&quot;eccezione, il metodo IsValid restituisce `false`.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       Per abilitare il comportamento legacy, inserire le righe seguenti nel file di configurazione dell&quot;applicazione, ad esempio, application1.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>per testare la validità.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore specificato è valido per questo oggetto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  id: SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Consente di ordinare una raccolta di proprietà."
  remarks: "Tutte le proprietà nella raccolta che non sono già nella matrice di nomi vengono aggiunti in ordine alfabetico alla fine. Se il `names` parametro è una matrice vuota o `null`, tutte le proprietà nella raccolta vengono ordinate in ordine alfabetico."
  syntax:
    content: protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);
    parameters:
    - id: props
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che dispone delle proprietà da ordinare."
    - id: names
      type: System.String[]
      description: "Una matrice di nomi nell&quot;ordine desiderato per le proprietà da visualizzare nella raccolta."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che contiene le proprietà ordinate."
  overload: System.ComponentModel.TypeConverter.SortProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.TypeConverter.#ctor
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.#ctor*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter.TypeConverter
- uid: System.ComponentModel.TypeConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeConverter.CanConvertFrom
- uid: System.ComponentModel.TypeConverter.CanConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeConverter.CanConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeConverter.ConvertFrom
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString
  nameWithType: TypeConverter.ConvertFromInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertFromString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString
  nameWithType: TypeConverter.ConvertFromString
- uid: System.ComponentModel.TypeConverter.ConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeConverter.ConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString
  nameWithType: TypeConverter.ConvertToInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertToString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString
  nameWithType: TypeConverter.ConvertToString
- uid: System.ComponentModel.TypeConverter.CreateInstance*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance
  nameWithType: TypeConverter.CreateInstance
- uid: System.ComponentModel.TypeConverter.GetConvertFromException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException
  nameWithType: TypeConverter.GetConvertFromException
- uid: System.ComponentModel.TypeConverter.GetConvertToException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException
  nameWithType: TypeConverter.GetConvertToException
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: TypeConverter.GetCreateInstanceSupported
- uid: System.ComponentModel.TypeConverter.GetProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties
  nameWithType: TypeConverter.GetProperties
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: TypeConverter.GetPropertiesSupported
- uid: System.ComponentModel.TypeConverter.GetStandardValues*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeConverter.GetStandardValues
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeConverter.GetStandardValuesSupported
- uid: System.ComponentModel.TypeConverter.IsValid*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid
  nameWithType: TypeConverter.IsValid
- uid: System.ComponentModel.TypeConverter.SortProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties
  nameWithType: TypeConverter.SortProperties
