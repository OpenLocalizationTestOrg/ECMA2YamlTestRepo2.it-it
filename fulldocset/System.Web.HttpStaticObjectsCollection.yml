### YamlMime:ManagedReference
items:
- uid: System.Web.HttpStaticObjectsCollection
  id: HttpStaticObjectsCollection
  children:
  - System.Web.HttpStaticObjectsCollection.#ctor
  - System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)
  - System.Web.HttpStaticObjectsCollection.Count
  - System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)
  - System.Web.HttpStaticObjectsCollection.GetEnumerator
  - System.Web.HttpStaticObjectsCollection.GetObject(System.String)
  - System.Web.HttpStaticObjectsCollection.IsReadOnly
  - System.Web.HttpStaticObjectsCollection.IsSynchronized
  - System.Web.HttpStaticObjectsCollection.Item(System.String)
  - System.Web.HttpStaticObjectsCollection.NeverAccessed
  - System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)
  - System.Web.HttpStaticObjectsCollection.SyncRoot
  langs:
  - csharp
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
  type: Class
  summary: "Fornisce una raccolta di oggetti con ambito applicazione per il <xref:System.Web.HttpApplicationState.StaticObjects*>proprietà.</xref:System.Web.HttpApplicationState.StaticObjects*>"
  syntax:
    content: 'public sealed class HttpStaticObjectsCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.#ctor
  id: '#ctor'
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: HttpStaticObjectsCollection()
  nameWithType: HttpStaticObjectsCollection.HttpStaticObjectsCollection()
  fullName: System.Web.HttpStaticObjectsCollection.HttpStaticObjectsCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> classe."
  syntax:
    content: public HttpStaticObjectsCollection ();
    parameters: []
  overload: System.Web.HttpStaticObjectsCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpStaticObjectsCollection.CopyTo(Array,Int32)
  fullName: System.Web.HttpStaticObjectsCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Copia i membri di un <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> in una matrice."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Object> array of the required size and copies an existing <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection into it.  \n  \n [!code-vb[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_1_1.vb)]\n [!code-cs[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_1_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Matrice in cui copiare la <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> in."
    - id: index
      type: System.Int32
      description: "Il membro della raccolta in cui ha inizio la copia."
  overload: System.Web.HttpStaticObjectsCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.Count
  id: Count
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpStaticObjectsCollection.Count
  fullName: System.Web.HttpStaticObjectsCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il numero di oggetti nella raccolta."
  remarks: ''
  example:
  - "The code in the following example executes only if the number of objects in the collection exceeds five.  \n  \n [!code-cs[Classic HttpStaticObjectsCollection.Count Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_1_1.cs)]\n [!code-vb[Classic HttpStaticObjectsCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_1_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di oggetti nella raccolta."
  overload: System.Web.HttpStaticObjectsCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)
  id: Deserialize(System.IO.BinaryReader)
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: Deserialize(BinaryReader)
  nameWithType: HttpStaticObjectsCollection.Deserialize(BinaryReader)
  fullName: System.Web.HttpStaticObjectsCollection.Deserialize(BinaryReader)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea un <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> oggetto da un file binario che è stata scritta usando il <xref:System.Web.HttpStaticObjectsCollection.Serialize*>metodo.</xref:System.Web.HttpStaticObjectsCollection.Serialize*>"
  remarks: "Il metodo di deserializzazione viene utilizzato per leggere il contenuto di un <xref:System.Web.HttpStaticObjectsCollection>oggetto archiviato in un percorso di archiviazione creato dal <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A>metodo.</xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> </xref:System.Web.HttpStaticObjectsCollection> Per serializzare un <xref:System.Web.HttpStaticObjectsCollection>, utilizzare il <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A>metodo.</xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  syntax:
    content: public static System.Web.HttpStaticObjectsCollection Deserialize (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Il <xref:System.IO.BinaryReader>usato per leggere la raccolta serializzata da un flusso o con codifica stringa.</xref:System.IO.BinaryReader>"
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "Un <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> popolato con il contenuto da un file binario scritto utilizzando il <xref:System.Web.HttpStaticObjectsCollection.Serialize*>metodo.</xref:System.Web.HttpStaticObjectsCollection.Serialize*>"
  overload: System.Web.HttpStaticObjectsCollection.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpStaticObjectsCollection.GetEnumerator()
  fullName: System.Web.HttpStaticObjectsCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce un enumeratore di dizionario utilizzato per scorrere le coppie chiave-valore contenute nella raccolta."
  remarks: ''
  example:
  - "The following example creates an enumerator for the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection.  \n  \n [!code-cs[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_2_1.cs)]\n [!code-vb[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_2_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Enumeratore per la raccolta."
  overload: System.Web.HttpStaticObjectsCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.GetObject(System.String)
  id: GetObject(System.String)
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: GetObject(String)
  nameWithType: HttpStaticObjectsCollection.GetObject(String)
  fullName: System.Web.HttpStaticObjectsCollection.GetObject(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce l&quot;oggetto con il nome specificato dalla raccolta. Questa proprietà è un&quot;alternativa per il <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> della funzione di accesso."
  remarks: ''
  example:
  - "The following example returns an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.  \n  \n [!code-cs[Classic HttpStaticObjectsCollection.GetObject Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_0_1.cs)]\n [!code-vb[Classic HttpStaticObjectsCollection.GetObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_0_1.vb)]"
  syntax:
    content: public object GetObject (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome tra maiuscole e minuscole dell&quot;oggetto da restituire."
    return:
      type: System.Object
      description: "Un oggetto dalla raccolta."
  overload: System.Web.HttpStaticObjectsCollection.GetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpStaticObjectsCollection.IsReadOnly
  fullName: System.Web.HttpStaticObjectsCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la raccolta è di sola lettura."
  remarks: ''
  example:
  - "The code in the following example executes only if the collection is read-only.  \n  \n [!code-vb[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_3_1.vb)]\n [!code-cs[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_3_1.cs)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Restituisce sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpStaticObjectsCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpStaticObjectsCollection.IsSynchronized
  fullName: System.Web.HttpStaticObjectsCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la raccolta è sincronizzata (vale a dire, thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "In questa implementazione, questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpStaticObjectsCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpStaticObjectsCollection.Item(String)
  fullName: System.Web.HttpStaticObjectsCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto con il nome specificato dalla raccolta."
  remarks: ''
  example:
  - "The following example retrieves an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.  \n  \n [!code-vb[Classic HttpStaticObjectsCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_2_1.vb)]\n [!code-cs[Classic HttpStaticObjectsCollection.this Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_2_1.cs)]"
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome tra maiuscole e minuscole dell&quot;oggetto da ottenere."
    return:
      type: System.Object
      description: "Un oggetto dalla raccolta."
  overload: System.Web.HttpStaticObjectsCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.NeverAccessed
  id: NeverAccessed
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: NeverAccessed
  nameWithType: HttpStaticObjectsCollection.NeverAccessed
  fullName: System.Web.HttpStaticObjectsCollection.NeverAccessed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore booleano che indica se la raccolta ha avuto accesso prima."
  syntax:
    content: public bool NeverAccessed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> non è mai stato eseguito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpStaticObjectsCollection.NeverAccessed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)
  id: Serialize(System.IO.BinaryWriter)
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: Serialize(BinaryWriter)
  nameWithType: HttpStaticObjectsCollection.Serialize(BinaryWriter)
  fullName: System.Web.HttpStaticObjectsCollection.Serialize(BinaryWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il contenuto della raccolta in un <xref:System.IO.BinaryWriter>oggetto.</xref:System.IO.BinaryWriter>"
  remarks: "È possibile utilizzare il metodo di serializzazione per scrivere il contenuto di un <xref:System.Web.HttpStaticObjectsCollection>l&quot;oggetto in un <xref:System.IO.BinaryWriter>oggetto.</xref:System.IO.BinaryWriter> </xref:System.Web.HttpStaticObjectsCollection> Per recuperare un serializzato <xref:System.Web.HttpStaticObjectsCollection>oggetto, usare il <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A>metodo.</xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  syntax:
    content: public void Serialize (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Il <xref:System.IO.BinaryWriter>utilizzato per scrivere la raccolta serializzata in un flusso o con codifica stringa.</xref:System.IO.BinaryWriter>"
  overload: System.Web.HttpStaticObjectsCollection.Serialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpStaticObjectsCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.HttpStaticObjectsCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpStaticObjectsCollection.SyncRoot
  fullName: System.Web.HttpStaticObjectsCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  remarks: "Codice di programma deve in genere eseguite operazioni sincronizzate nella radice di sincronizzazione di una raccolta, non direttamente sulla raccolta stessa. In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti. In particolare, mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente l&quot;oggetto raccolta.       L&quot;oggetto restituito in questa implementazione è il <xref:System.Web.HttpStaticObjectsCollection>stesso.</xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - "The following example creates an object used to synchronize access to the <xref:System.Web.HttpStaticObjectsCollection>.  \n  \n [!code-vb[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_0_1.vb)]\n [!code-cs[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_0_1.cs)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Corrente <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref>."
  overload: System.Web.HttpStaticObjectsCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpStaticObjectsCollection.#ctor
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: HttpStaticObjectsCollection()
  nameWithType: HttpStaticObjectsCollection.HttpStaticObjectsCollection()
  fullName: System.Web.HttpStaticObjectsCollection.HttpStaticObjectsCollection()
- uid: System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpStaticObjectsCollection.CopyTo(Array,Int32)
  fullName: System.Web.HttpStaticObjectsCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpStaticObjectsCollection.Count
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Count
  nameWithType: HttpStaticObjectsCollection.Count
  fullName: System.Web.HttpStaticObjectsCollection.Count
- uid: System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Deserialize(BinaryReader)
  nameWithType: HttpStaticObjectsCollection.Deserialize(BinaryReader)
  fullName: System.Web.HttpStaticObjectsCollection.Deserialize(BinaryReader)
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Web.HttpStaticObjectsCollection.GetEnumerator
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpStaticObjectsCollection.GetEnumerator()
  fullName: System.Web.HttpStaticObjectsCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.HttpStaticObjectsCollection.GetObject(System.String)
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: GetObject(String)
  nameWithType: HttpStaticObjectsCollection.GetObject(String)
  fullName: System.Web.HttpStaticObjectsCollection.GetObject(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpStaticObjectsCollection.IsReadOnly
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpStaticObjectsCollection.IsReadOnly
  fullName: System.Web.HttpStaticObjectsCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpStaticObjectsCollection.IsSynchronized
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpStaticObjectsCollection.IsSynchronized
  fullName: System.Web.HttpStaticObjectsCollection.IsSynchronized
- uid: System.Web.HttpStaticObjectsCollection.Item(System.String)
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Item(String)
  nameWithType: HttpStaticObjectsCollection.Item(String)
  fullName: System.Web.HttpStaticObjectsCollection.Item(String)
- uid: System.Web.HttpStaticObjectsCollection.NeverAccessed
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: NeverAccessed
  nameWithType: HttpStaticObjectsCollection.NeverAccessed
  fullName: System.Web.HttpStaticObjectsCollection.NeverAccessed
- uid: System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Serialize(BinaryWriter)
  nameWithType: HttpStaticObjectsCollection.Serialize(BinaryWriter)
  fullName: System.Web.HttpStaticObjectsCollection.Serialize(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Web.HttpStaticObjectsCollection.SyncRoot
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HttpStaticObjectsCollection.SyncRoot
  fullName: System.Web.HttpStaticObjectsCollection.SyncRoot
- uid: System.Web.HttpStaticObjectsCollection.#ctor*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection.HttpStaticObjectsCollection
- uid: System.Web.HttpStaticObjectsCollection.CopyTo*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpStaticObjectsCollection.CopyTo
- uid: System.Web.HttpStaticObjectsCollection.Count*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Count
  nameWithType: HttpStaticObjectsCollection.Count
- uid: System.Web.HttpStaticObjectsCollection.Deserialize*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Deserialize
  nameWithType: HttpStaticObjectsCollection.Deserialize
- uid: System.Web.HttpStaticObjectsCollection.GetEnumerator*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpStaticObjectsCollection.GetEnumerator
- uid: System.Web.HttpStaticObjectsCollection.GetObject*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: GetObject
  nameWithType: HttpStaticObjectsCollection.GetObject
- uid: System.Web.HttpStaticObjectsCollection.IsReadOnly*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpStaticObjectsCollection.IsReadOnly
- uid: System.Web.HttpStaticObjectsCollection.IsSynchronized*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpStaticObjectsCollection.IsSynchronized
- uid: System.Web.HttpStaticObjectsCollection.Item*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Item
  nameWithType: HttpStaticObjectsCollection.Item
- uid: System.Web.HttpStaticObjectsCollection.NeverAccessed*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: NeverAccessed
  nameWithType: HttpStaticObjectsCollection.NeverAccessed
- uid: System.Web.HttpStaticObjectsCollection.Serialize*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: Serialize
  nameWithType: HttpStaticObjectsCollection.Serialize
- uid: System.Web.HttpStaticObjectsCollection.SyncRoot*
  parent: System.Web.HttpStaticObjectsCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HttpStaticObjectsCollection.SyncRoot
