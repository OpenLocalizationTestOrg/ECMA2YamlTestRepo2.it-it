### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  id: ImpersonateOnSerializingReplyMessageProperty
  children:
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  langs:
  - csharp
  name: ImpersonateOnSerializingReplyMessageProperty
  nameWithType: ImpersonateOnSerializingReplyMessageProperty
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  type: Class
  summary: "Una classe helper per abilitare la rappresentazione durante la serializzazione del corpo del messaggio di risposta."
  syntax:
    content: 'public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea una copia della proprietà del messaggio."
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "La copia della proprietà del messaggio."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  id: Name
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene il nome della proprietà del messaggio."
  syntax:
    content: public static string Name { get; }
    return:
      type: System.String
      description: "Il nome della proprietà del messaggio."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  id: StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: StartImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Avvia una rappresentazione con il contesto del chiamante se la rappresentazione è abilitata nel servizio e imposta l&quot;entità appropriata nel thread in base della configurazione del servizio."
  syntax:
    content: public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);
    parameters:
    - id: impersonationContext
      type: System.IDisposable
      description: "Quando termina, questo metodo contiene il contesto rappresentato. Questo parametro viene trattato come non inizializzato."
    - id: originalPrincipal
      type: System.Security.Principal.IPrincipal
      description: "Quando termina, questo metodo contiene il server principale originale sul thread prima di chiamare questo metodo. Questo parametro viene trattato come non inizializzato."
    - id: isThreadPrincipalSet
      type: System.Boolean
      description: "Quando termina, questo metodo contiene un valore che indica se l&quot;entità è stata impostata sul thread da questo metodo. Questo parametro restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se non disponibile per rappresentare il contesto dell&quot;operazione. Questo parametro viene trattato come non inizializzato."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  id: StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: StopImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ripristina la rappresentazione e imposta il server principale originale specificato sul thread."
  syntax:
    content: public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);
    parameters:
    - id: impersonationContext
      type: System.IDisposable
      description: "Per ripristinare il contesto di rappresentazione."
    - id: originalPrincipal
      type: System.Security.Principal.IPrincipal
      description: "Il server principale originale per impostare sul thread."
    - id: isThreadPrincipalSet
      type: System.Boolean
      description: "Un valore che indica se l&quot;entità di thread è stata impostata durante la rappresentazione. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;entità è stata impostata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene il <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> proprietà dal messaggio specificato."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Il messaggio da cui estrarre la proprietà."
    - id: property
      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
      description: "Quando termina, questo metodo contiene il <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> proprietà estratto dal messaggio."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà è stata trovata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene il <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> proprietà di specificato <xref:System.ServiceModel.Channels.MessageProperties>oggetto...</xref:System.ServiceModel.Channels.MessageProperties>"
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "L&quot;oggetto delle proprietà di messaggio da cui estrarre la proprietà."
    - id: property
      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
      description: "Quando termina, questo metodo contiene il <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> proprietà estratto dal messaggio."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà è stata trovata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StartImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StopImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  parent: System.ServiceModel.Security
  isExternal: false
  name: ImpersonateOnSerializingReplyMessageProperty
  nameWithType: ImpersonateOnSerializingReplyMessageProperty
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StartImpersonation
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StopImpersonation
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet
