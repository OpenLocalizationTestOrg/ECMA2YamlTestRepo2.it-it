### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent
  id: WebAuthenticationSuccessAuditEvent
  children:
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent
  type: Class
  summary: "Fornisce informazioni sugli eventi di autenticazione ha esito positivo."
  remarks: "Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management>dello spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell&quot;applicazione e i tipi di provider responsabili dell&quot;elaborazione dei dati.</xref:System.Web.Management> Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.       Nell&quot;elenco seguente descrive le funzionalità per i quali ASP.NET genera eventi di tipo WebAuthenticationSuccessAuditEvent.      > [!NOTE] > Per impostazione predefinita, ASP.NET è configurato per l&quot;accesso solo condizioni di errore di controllo come esito positivo di registrazione potrebbe esaurire le risorse di sistema.  È sempre possibile configurare il sistema per registrare le condizioni di esito positivo.      -Autenticazione basata su form. Vengono controllate le condizioni di esito positivo. Riusciti includono il nome utente è stato autenticato. Se si specifica, invece, non include il nome utente, poiché possono in genere il risultato di un ticket che non hanno superato la decrittografia o la convalida. Entrambi contengono l&quot;indirizzo IP del client. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>      -L&quot;appartenenza. Vengono controllate le condizioni di esito positivo. Controlli con esito positivo e negativo contengono il nome utente che è stato tentato. Nessuna forma di controllo conterrà la password è stata tentata, perché ciò comporterebbe il rischio di conservare una password valida nel log. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       Quando viene generato un WebAuthenticationSuccessAuditEvent, per impostazione predefinita viene aggiornato il contatore delle prestazioni di autenticazione riusciti gli eventi generati. Per visualizzare questo contatore delle prestazioni in Monitor di sistema (PerfMon), il **Aggiungi contatori** finestra selezionare **ASP.NET** nel **oggetto prestazione** elenco a discesa, selezionare il contatore delle prestazioni generati eventi di autenticazione riuscita e fare clic sul **Aggiungi** pulsante. Per ulteriori informazioni, vedere [mediante Monitor (PerfMon) con le applicazioni ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) su MSDN.      > [!NOTE] > Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di derivazione da di <xref:System.Web.Management.WebBaseEvent>classe, vedere l&quot;esempio fornito in questo argomento.</xref:System.Web.Management.WebBaseEvent>"
  example:
  - "This code example has two parts: a configuration-file excerpt, followed by code that shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n This following is an excerpt of the configuration file's `provider` and `eventMappings` sections. They are already set by default. The only thing you need to do is to provide the setup for the `rules` element in the `healthMonitoring` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <providers>  \n      // Configure the provider to process   \n      // the health events.  \n      <add name=\"EventLogProvider\"  \n         type=\"System.Web.Management.EventLogWebEventProvider,  \n         System.Web,Version=2.0.3600.0,Culture=neutral,  \n         PublicKeyToken=b03f5f7f11d50a3a\"/>  \n    </providers>  \n  \n    <eventMappings>  \n       <clear />  \n       // Configure the custom event   \n       // to handle the audit events.   \n        <add name=\"SampleWebAuthenticationSuccessAuditEvent\"   \n          type=\"SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  \n          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   \n          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL\" />  \n  \n     </eventMappings>  \n     <rules>  \n       <clear/>  \n       // Establish the connection between custom event   \n       // and the provider that must process it.  \n      <add name=\"Log Authentication Success Audits\"   \n        eventName=\"SampleWebAuthenticationFailureAuditEvent\"  \n        provider=\"EventLogProvider\"   \n        profile=\"Custom\" />\\  \n     </rules>  \n  \n</healthMonitoring>  \n```  \n  \n The following code shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._10_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._10_1.cs)]"
  syntax:
    content: 'public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  - System.Web.Management.WebSuccessAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza il <xref href=&quot;System.Web.Management.WebAuthenticationSuccessAuditEvent&quot;> </xref> classe utilizzando i parametri forniti."
  remarks: "Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un&quot;istanza di un <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>oggetto, ma è possibile chiamare questo costruttore quando si implementa un tipo di evento che eredita da questa classe.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > WebAuthenticationSuccessAuditEvent il costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il costruttore WebAuthenticationSuccessAuditEvent quando si deriva dalla <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>classe.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/visualbasic/f06e0196-5c99-4ca7-a77b-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/csharp/f06e0196-5c99-4ca7-a77b-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "Descrizione dell&quot;evento."
    - id: eventSource
      type: System.Object
      description: "Oggetto che rappresenta l&quot;origine dell&quot;evento."
    - id: eventCode
      type: System.Int32
      description: "Il codice associato all&quot;evento. Quando si implementa un evento personalizzato, il codice dell&quot;evento deve essere maggiore di <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: nameToAuthenticate
      type: System.String
      description: "Il nome dell&quot;utente autenticato."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza il <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> classe utilizzando i parametri forniti."
  remarks: "Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un&quot;istanza di un <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>oggetto, ma è possibile chiamare questo costruttore quando si implementa un tipo di evento che eredita da questa classe.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > WebAuthenticationSuccessAuditEvent il costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il costruttore WebAuthenticationSuccessAuditEvent quando si deriva dalla <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>classe.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/afac7708-6243-4126-b8c9-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/afac7708-6243-4126-b8c9-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "Descrizione dell&quot;evento."
    - id: eventSource
      type: System.Object
      description: "Oggetto che rappresenta l&quot;origine dell&quot;evento."
    - id: eventCode
      type: System.Int32
      description: "Il codice associato all&quot;evento. Quando si implementa un evento personalizzato, il codice dell&quot;evento deve essere maggiore di <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "Il <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> valore che specifica l&quot;identificatore dettagliato per l&quot;evento."
    - id: nameToAuthenticate
      type: System.String
      description: "Il nome dell&quot;utente autenticato."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  id: NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Ottiene il nome dell&quot;utente autenticato."
  remarks: "Solo i controlli riusciti includono il nome dell&quot;utente autenticato. I controlli di un errore non includono il nome utente, poiché possono in genere il risultato di convalida o la decrittografia non riuscita."
  example:
  - "The following code example shows how to use the NameToAuthenticate property.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/p-system.web.management._21_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/p-system.web.management._21_1.cs)]"
  syntax:
    content: public string NameToAuthenticate { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;utente autenticato."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: System.Web.Management.WebSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
