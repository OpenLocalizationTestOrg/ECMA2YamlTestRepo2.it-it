### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  id: WorkflowPersistenceService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  langs:
  - csharp
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  type: Class
  summary: "La classe base astratta dalla quale persistenza tutti vengono derivati i servizi."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Quando si verificano determinate condizioni mentre il flusso di lavoro è in esecuzione, il motore di runtime del flusso di lavoro mantiene informazioni sullo stato relative all&quot;istanza del flusso di lavoro. Può verificarsi la persistenza, ad esempio, quando finisce una transazione atomica, quando l&quot;istanza del flusso di lavoro diventa inattiva, quando l&quot;host chiama <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName>nell&quot;istanza del flusso di lavoro, o quando un&quot;istanza del flusso di lavoro viene terminata o si conclude.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName> Quando la semantica del motore di runtime del flusso di lavoro stabilisce che deve verificarsi la persistenza, il motore di runtime del flusso di lavoro chiama i metodi forniti da un servizio di persistenza per salvare le informazioni sullo stato relative all&quot;istanza del flusso di lavoro. Analogamente, quando il motore di runtime del flusso di lavoro deve ripristinare un&quot;istanza del flusso di lavoro persistente in precedenza, chiama i metodi vengono forniti dal servizio di persistenza per caricare queste informazioni sullo stato. Il motore di runtime del flusso di lavoro gestisce tutta la semantica su quando eseguire la persistenza. Il servizio di persistenza gestisce operazioni di salvataggio e caricamento delle informazioni di stato del flusso di lavoro a o da un archivio dati.       È possibile creare un servizio di persistenza derivando una classe dalla classe WorkflowPersistenceService.  È possibile aggiungere il servizio di persistenza al motore di runtime del flusso di lavoro chiamando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>o creando una voce appropriata nel file di configurazione dell&quot;applicazione.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Il <xref:System.Workflow.Runtime.WorkflowRuntime>deve contenere solo un servizio di persistenza.</xref:System.Workflow.Runtime.WorkflowRuntime> Windows Workflow Foundation fornisce la <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>classe, un servizio di persistenza out-of-box, che è possibile utilizzare così come sono oppure estendere.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>       Il motore di runtime del flusso di lavoro utilizza la semantica per il blocco di informazioni sullo stato del flusso di lavoro per l&quot;utilizzo in ambienti in cui i servizi di persistenza che vengono eseguiti in processi diversi possono avere accesso a un unico archivio dati. La classe WorkflowPersistenceService offre la possibilità di supportare questa funzionalità del motore di runtime del flusso di lavoro fornendo un parametro per <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>che specifica se le informazioni sullo stato di un&quot;istanza del flusso di lavoro devono essere sbloccate nell&quot;archivio dati, fornendo un metodo <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>per sbloccare precedentemente bloccato le informazioni sullo stato del flusso di lavoro.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> In un servizio di persistenza che implementa il blocco, una chiamata a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>deve bloccare le informazioni sullo stato per un&quot;istanza del flusso di lavoro.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>       Il servizio di persistenza deve generare un <xref:System.Workflow.Runtime.Hosting.PersistenceException>Se non è possibile salvare le informazioni sullo stato nell&quot;archivio dati o caricare informazioni sullo stato dall&quot;archivio dati.</xref:System.Workflow.Runtime.Hosting.PersistenceException> Questo comportamento è previsto il motore di runtime del flusso di lavoro.       Per i servizi che utilizzano un archivio durevole per salvare le informazioni sullo stato del flusso di lavoro viene fornito un meccanismo di batch. È importante in questi casi mantenere la coerenza tra l&quot;archivio durevole utilizzato dal servizio di persistenza e lo stato interno del motore di runtime del flusso di lavoro. È possibile aggiungere la funzionalità definita dall&quot; <xref:System.Workflow.Runtime.IPendingWork>interfaccia al servizio e partecipare all&quot;inclusione in batch delle transazioni del flusso di lavoro fornita dal <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>aggiungendo modifiche all&quot;archivio dati come elementi di lavoro a <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.IPendingWork> L&quot;archivio durevole deve implementare il <xref:System.Transactions.IEnlistmentNotification>interfaccia, in modo che le informazioni del flusso di lavoro non sono persistente in modo non corretto in caso di un rollback della transazione.</xref:System.Transactions.IEnlistmentNotification> Per ulteriori informazioni, vedere <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>o <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowPersistenceService&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`). This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.  For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \n  \n [!code-cs[WF_Samples#161](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#161)]\n [!code-vb[WF_Samples#161](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#161)]"
  syntax:
    content: protected WorkflowPersistenceService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  id: GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Recupera il form predefinito serializzato del <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  syntax:
    content: protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> è richiesto il cui formato serializzato."
    return:
      type: System.Byte[]
      description: "Il form predefinito serializzato del <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  id: GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Indica se l&quot;attività specificata è bloccata."
  syntax:
    content: protected static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;attività radice dell&quot;istanza del flusso di lavoro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;attività specificata è bloccata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  id: GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Recupera la chiusura o sospensione informazioni dell&quot;attività specificato."
  syntax:
    content: protected static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;attività radice dell&quot;istanza del flusso di lavoro."
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene la chiusura o sospensione informazioni.</xref:System.String>"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  id: GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Recupera lo stato del flusso di lavoro."
  syntax:
    content: protected static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;attività radice dell&quot;istanza del flusso di lavoro."
    return:
      type: System.Workflow.Runtime.WorkflowStatus
      description: "Oggetto <xref href=&quot;System.Workflow.Runtime.WorkflowStatus&quot;> </xref> valore di enumerazione che indica lo stato del flusso di lavoro."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  id: LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, carica l&quot;ambito completato specificato in memoria."
  remarks: "Il motore di runtime del flusso di lavoro Usa LoadCompletedContextActivity per implementare la compensazione. È necessario ripristinare una copia identica dell&quot;ambito completato. A tale scopo, è necessario ripristinare un valido <xref:System.IO.Stream>dalla rappresentazione dell&quot;ambito completato nei dati di archivio.</xref:System.IO.Stream> Quindi è necessario passare questo <xref:System.IO.Stream>a uno dei metodi di overload <xref:System.Workflow.ComponentModel.Activity.Load%2A>per eseguire la deserializzazione dell&quot;ambito.</xref:System.Workflow.ComponentModel.Activity.Load%2A> </xref:System.IO.Stream>       Se il servizio di persistenza non è possibile caricare l&quot;ambito completato dall&quot;archivio dati, è necessario generare un <xref:System.Workflow.Runtime.Hosting.PersistenceException>con un messaggio appropriato.</xref:System.Workflow.Runtime.Hosting.PersistenceException>"
  example:
  - "The following example demonstrates an implementation of the `LoadCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: scopeId
      type: System.Guid
      description: "Il <xref:System.Guid>dell&quot;ambito completato.</xref:System.Guid>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> che rappresenta l&quot;attività che racchiude l&quot;ambito completato."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> che rappresenta l&quot;ambito completato."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  id: LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, carica lo stato specificato dell&quot;istanza del flusso di lavoro in memoria."
  remarks: "È necessario ripristinare una copia identica dell&quot;attività. A tale scopo, è necessario ripristinare un valido <xref:System.IO.Stream>dalla rappresentazione dell&quot;istanza del flusso di lavoro nell&quot;archivio dati; quindi è necessario passare <xref:System.IO.Stream>a uno di overload <xref:System.Workflow.ComponentModel.Activity.Load%2A>metodi per deserializzare il flusso di lavoro stato dell&quot;istanza.</xref:System.Workflow.ComponentModel.Activity.Load%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Se il servizio di persistenza non può caricare lo stato dell&quot;istanza del flusso di lavoro dall&quot;archivio dati, è necessario generare un <xref:System.Workflow.Runtime.Hosting.PersistenceException>con un messaggio appropriato.</xref:System.Workflow.Runtime.Hosting.PersistenceException>       Il motore di runtime del flusso di lavoro implementa la semantica di blocco per limitare l&quot;accesso a uno stato dell&quot;istanza del flusso di lavoro che viene salvato in un archivio dati. Accessibili dai servizi di persistenza in esecuzione in più processi. La semantica di blocco è progettata per impedire a servizi di persistenza eseguite in due processi diversi da caricare la stessa istanza del flusso di lavoro in memoria contemporaneamente. A seconda del tipo di ambiente che il servizio di persistenza è progettato per supportare, è possibile scegliere se supportare questa funzionalità. Se si sceglie di supportare la semantica di blocco della fase di esecuzione e se questo stato dell&quot;istanza del flusso di lavoro è stato bloccato in precedenza da un altro processo, è necessario generare un <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> In caso contrario, è necessario bloccare l&quot;accesso allo stato dell&quot;istanza del flusso di lavoro nell&quot;archivio dati. Lo stato dell&quot;istanza del flusso di lavoro può essere sbloccato da una chiamata a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>o una chiamata a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>con il parametro di sblocco impostato su `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>"
  example:
  - "The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#266](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#266)]\n [!code-vb[WF_Samples#266](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#266)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Il <xref:System.Guid>dell&quot;attività radice dell&quot;istanza del flusso di lavoro.</xref:System.Guid>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> che rappresenta l&quot;attività radice dell&quot;istanza del flusso di lavoro."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  id: RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Ripristina il <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> dal form serializzato."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: activityBytes
      type: System.Byte[]
      description: "Il formato serializzato di <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Esterna <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>, contenente il <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> da ripristinare."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "La versione ripristinata <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  id: SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, Salva l&quot;ambito completato specificato in un archivio dati."
  remarks: "Il motore di runtime del flusso di lavoro Salva lo stato delle attività di ambito completato per implementare la compensazione. È necessario chiamare uno degli overload <xref:System.Workflow.ComponentModel.Activity.Save%2A>metodi per serializzare `activity` in un <xref:System.IO.Stream>; è quindi possibile scegliere anche di elaborare il <xref:System.IO.Stream>prima della scrittura nell&quot;archivio dati.</xref:System.IO.Stream> </xref:System.IO.Stream> </xref:System.Workflow.ComponentModel.Activity.Save%2A> Tuttavia, quando il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, è necessario ripristinare una copia identica dell&quot;attività.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>       È necessario essere in grado di associare l&quot;ambito completato con l&quot;istanza del flusso di lavoro di inclusione per contrassegnare l&quot;ambito come non necessari nell&quot;archivio dati quando l&quot;istanza del flusso di lavoro viene completato o è terminato. Pertanto, è necessario salvare anche il <xref:System.Guid>dell&quot;istanza del flusso di lavoro associato all&quot;ambito completato, questo può essere ottenuto dal <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>proprietà del <xref:System.Workflow.Runtime.WorkflowInstance>associato `activity`.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> </xref:System.Guid>       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>accetta il <xref:System.Guid>dell&quot;ambito completato come parametro.</xref:System.Guid></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> Pertanto, è necessario salvare anche il <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A>proprietà associata `activity`.</xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> Questa proprietà può essere fatto riferimento tramite il <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>campo `activity`.</xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>       Se si implementa un servizio di persistenza che utilizza un archivio durevole, per mantenere la coerenza con lo stato interno del motore di runtime del flusso di lavoro, è opportuno che partecipino delle transazioni del flusso di lavoro per rinviare l&quot;effettiva scrittura nell&quot;archivio durevole fino a un flusso di lavoro punto di commit di invio in batch. Per partecipare all&quot;inclusione in batch, aggiungere un elemento di lavoro per il <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>proprietà che rappresenta le modifiche in sospeso al database e implementare il <xref:System.Workflow.Runtime.IPendingWork>interfaccia nel servizio di persistenza.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>       Se non è possibile salvare l&quot;ambito completato nell&quot;archivio dati, è necessario generare un <xref:System.Workflow.Runtime.Hosting.PersistenceException>con un messaggio di errore appropriato.</xref:System.Workflow.Runtime.Hosting.PersistenceException>"
  example:
  - "The following example demonstrates an implementation of the `SaveCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#268](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#268)]\n [!code-vb[WF_Samples#268](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#268)]"
  syntax:
    content: protected abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> che rappresenta l&quot;ambito completato."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  id: SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, Salva lo stato dell&quot;istanza del flusso di lavoro in un archivio dati."
  remarks: "È necessario chiamare uno degli overload <xref:System.Workflow.ComponentModel.Activity.Save%2A>metodi per serializzare `rootActivity` in un <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Workflow.ComponentModel.Activity.Save%2A> È quindi possibile scegliere anche di elaborare il <xref:System.IO.Stream>prima della scrittura nell&quot;archivio dati.</xref:System.IO.Stream> Tuttavia, quando il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, è necessario ripristinare una copia identica dell&quot;attività radice.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> Se non è possibile salvare lo stato dell&quot;istanza del flusso di lavoro all&quot;archivio dati, è necessario generare un <xref:System.Workflow.Runtime.Hosting.PersistenceException>con un messaggio di errore appropriato.</xref:System.Workflow.Runtime.Hosting.PersistenceException>       Il motore di runtime del flusso di lavoro fornisce semantica di blocco per limitare l&quot;accesso a uno stato dell&quot;istanza del flusso di lavoro che viene salvato nell&quot;archivio dati. L&quot;accesso può essere eseguito dai servizi di persistenza in esecuzione in più host e che puntano allo stesso archivio dati. La semantica di blocco è progettata per impedire a servizi di persistenza eseguite in due runtime del flusso di lavoro diversi, il caricamento la stessa istanza del flusso di lavoro in memoria contemporaneamente. A seconda del tipo di servizio di persistenza è progettato per supportare l&quot;ambiente, è possibile scegliere se supportare questa funzionalità. Se si sceglie di supportare la semantica di blocco della fase di esecuzione, quindi, se un servizio di persistenza tenta di salvare uno stato dell&quot;istanza del flusso di lavoro che è stato precedentemente bloccato da un altro servizio di persistenza, è necessario generare un <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> Se `unlock` è `true`, è necessario sbloccare l&quot;accesso allo stato dell&quot;istanza del flusso di lavoro dopo il salvataggio.       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>accetta il <xref:System.Guid>dell&quot;istanza del flusso di lavoro come parametro.</xref:System.Guid></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> Pertanto, è necessario salvare questo <xref:System.Guid>.</xref:System.Guid> È inoltre possibile utilizzare questo <xref:System.Guid>per associare l&quot;istanza del flusso di lavoro con gli stati salvati degli ambiti completati.</xref:System.Guid> Questa operazione è necessaria perché è necessario essere in grado di contrassegnare questi ambiti completati come non necessari quando l&quot;istanza del flusso di lavoro viene completato.       Il motore di runtime del flusso di lavoro chiama SaveWorkflowInstanceState un&quot;ultima volta quando l&quot;istanza del flusso di lavoro è stata completata o terminata. Pertanto, se <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A>è uguale a <xref:System.Workflow.Runtime.WorkflowStatus>o <xref:System.Workflow.Runtime.WorkflowStatus>, è possibile eliminare l&quot;istanza del flusso di lavoro e tutti i relativi ambiti completati dall&quot;archivio dati.</xref:System.Workflow.Runtime.WorkflowStatus> </xref:System.Workflow.Runtime.WorkflowStatus> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> In alternativa, è possibile sottoscrivere il <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>gli eventi per determinare quando è possibile eliminare i record associati all&quot;istanza del flusso di lavoro.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> Se si elimina effettivamente il record dall&quot;archivio dati dipende dall&quot;implementazione.       Se si implementa un servizio di persistenza che utilizza un archivio durevole, quindi, per mantenere la coerenza con lo stato interno del motore di runtime del flusso di lavoro, è necessario partecipare nella transazione del flusso di lavoro per rinviare l&quot;effettiva scrittura nell&quot;archivio durevole fino a un flusso di lavoro punto di commit di invio in batch. Per partecipare all&quot;inclusione in batch, aggiungere un elemento di lavoro che rappresenta le modifiche in sospeso all&quot;archivio durevole il <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>proprietà e per implementare il <xref:System.Workflow.Runtime.IPendingWork>interfaccia nel servizio di persistenza.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>"
  example:
  - "The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#264](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#264)]\n [!code-vb[WF_Samples#264](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#264)]"
  syntax:
    content: protected abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;attività radice dell&quot;istanza del flusso di lavoro."
    - id: unlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza del flusso di lavoro non deve essere bloccato. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;istanza del flusso di lavoro deve essere bloccato."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  id: UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Determina se un flusso di lavoro deve essere scaricato quando è inattivo."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `UnloadOnIdle` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#270](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#270)]\n [!code-vb[WF_Samples#270](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#270)]"
  syntax:
    content: protected abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> che rappresenta l&quot;ambito completato."
    return:
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, il motore di runtime del flusso di lavoro viene scaricato il flusso di lavoro quando diventa inattiva."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  id: UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando sottoposto a override in una classe derivata, sblocca lo stato dell&quot;istanza del flusso di lavoro."
  remarks: "Questo metodo è astratto, pertanto non contiene un&quot;implementazione predefinita per bloccare e sbloccare.       Durante l&quot;implementazione di un servizio di persistenza personalizzato, se si desidera implementare uno schema di blocco è necessario eseguire l&quot;override di questo metodo e forniscono un meccanismo di blocco-sblocco nel <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>metodo in base al valore del parametro di sblocco.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>"
  example:
  - "The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#267](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#267)]\n [!code-vb[WF_Samples#267](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#267)]"
  syntax:
    content: protected abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;attività radice dell&quot;istanza del flusso di lavoro."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
- uid: System.Workflow.Runtime.WorkflowStatus
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowStatus
  nameWithType: WorkflowStatus
  fullName: System.Workflow.Runtime.WorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked
  nameWithType: WorkflowPersistenceService.GetIsBlocked
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle
  nameWithType: WorkflowPersistenceService.UnloadOnIdle
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState
