### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  id: AtomicComposition
  children:
  - System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor
  - System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.Complete
  - System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose
  - System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)
  - System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)
  langs:
  - csharp
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
  type: Class
  summary: "Rappresenta una singola operazione di composizione per la composizione transazionale."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  syntax:
    content: 'public class AtomicComposition : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: AtomicComposition()
  nameWithType: AtomicComposition.AtomicComposition()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AtomicComposition()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.AtomicComposition&quot;> </xref> classe."
  syntax:
    content: public AtomicComposition ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: '#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)'
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: AtomicComposition(AtomicComposition)
  nameWithType: AtomicComposition.AtomicComposition(AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AtomicComposition(AtomicComposition)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.AtomicComposition&quot;> </xref> classe con l&quot;elemento padre specificato <xref href=&quot;System.ComponentModel.Composition.Hosting.AtomicComposition&quot;> </xref>."
  syntax:
    content: public AtomicComposition (System.ComponentModel.Composition.Hosting.AtomicComposition outerAtomicComposition);
    parameters:
    - id: outerAtomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "L&quot;elemento padre di questa operazione di composizione."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)
  id: AddCompleteAction(System.Action)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: AddCompleteAction(Action)
  nameWithType: AtomicComposition.AddCompleteAction(Action)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Aggiunge un&quot;azione da eseguire al completamento dell&quot;operazione di composizione."
  syntax:
    content: public void AddCompleteAction (Action completeAction);
    parameters:
    - id: completeAction
      type: System.Action
      description: "L&quot;azione da eseguire."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)
  id: AddRevertAction(System.Action)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: AddRevertAction(Action)
  nameWithType: AtomicComposition.AddRevertAction(Action)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Aggiunge un&quot;azione da eseguire se l&quot;intera operazione di composizione avrà esito negativo."
  syntax:
    content: public void AddRevertAction (Action revertAction);
    parameters:
    - id: revertAction
      type: System.Action
      description: "L&quot;azione da eseguire."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete
  id: Complete
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: Complete()
  nameWithType: AtomicComposition.Complete()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Contrassegna come completata questa operazione di composizione."
  remarks: "Se questo <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>è nidificato, azioni di completamento non verranno eseguite fino a quando non sia stata completata l&quot;operazione di composizione padre.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition>"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: Dispose()
  nameWithType: AtomicComposition.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.ComponentModel.Composition.Hosting.AtomicComposition&quot;> </xref> classe e contrassegnare questa operazione di composizione come non riuscita."
  remarks: "Chiamare `Dispose` quando si è terminato di utilizzare <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition> Il `Dispose` metodo lascia la <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>in uno stato inutilizzabile.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition> Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>in modo da garbage collector di recuperare la memoria che di <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>occupata.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition> </xref:System.ComponentModel.Composition.Hosting.AtomicComposition>       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre `Dispose` prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>dell&quot;oggetto `Finalize` metodo.</xref:System.ComponentModel.Composition.Hosting.AtomicComposition>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AtomicComposition.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.ComponentModel.Composition.Hosting.AtomicComposition&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: AtomicComposition.SetValue(Object,Object)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(Object,Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Salva una coppia chiave-valore nella transazione per tenere traccia dello stato provvisorio."
  syntax:
    content: public void SetValue (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Chiave da salvare."
    - id: value
      type: System.Object
      description: "Valore da salvare."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)
  id: TryGetValue``1(System.Object,``0@)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: TryGetValue(Object,T)
  nameWithType: AtomicComposition.TryGetValue(Object,T)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue(Object,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public bool TryGetValue<T> (object key, out T value);
    parameters:
    - id: key
      type: System.Object
      description: "Da aggiungere."
    - id: value
      type: T
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)
  id: TryGetValue``1(System.Object,System.Boolean,``0@)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  langs:
  - csharp
  name: TryGetValue(Object,Boolean,T)
  nameWithType: AtomicComposition.TryGetValue(Object,Boolean,T)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue(Object,Boolean,T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public bool TryGetValue<T> (object key, bool localAtomicCompositionOnly, out T value);
    parameters:
    - id: key
      type: System.Object
      description: "Da aggiungere."
    - id: localAtomicCompositionOnly
      type: System.Boolean
      description: "Da aggiungere."
    - id: value
      type: T
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AtomicComposition()
  nameWithType: AtomicComposition.AtomicComposition()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AtomicComposition()
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AtomicComposition(AtomicComposition)
  nameWithType: AtomicComposition.AtomicComposition(AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AtomicComposition(AtomicComposition)
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AddCompleteAction(Action)
  nameWithType: AtomicComposition.AddCompleteAction(Action)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(Action)
- uid: System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AddRevertAction(Action)
  nameWithType: AtomicComposition.AddRevertAction(Action)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(Action)
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: Complete()
  nameWithType: AtomicComposition.Complete()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete()
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: Dispose()
  nameWithType: AtomicComposition.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose()
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AtomicComposition.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: AtomicComposition.SetValue(Object,Object)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(Object,Object)
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: TryGetValue(Object,T)
  nameWithType: AtomicComposition.TryGetValue(Object,T)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue(Object,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: TryGetValue(Object,Boolean,T)
  nameWithType: AtomicComposition.TryGetValue(Object,Boolean,T)
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue(Object,Boolean,T)
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AddCompleteAction
  nameWithType: AtomicComposition.AddCompleteAction
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: AddRevertAction
  nameWithType: AtomicComposition.AddRevertAction
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: Complete
  nameWithType: AtomicComposition.Complete
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: Dispose
  nameWithType: AtomicComposition.Dispose
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: SetValue
  nameWithType: AtomicComposition.SetValue
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue<T>*
  parent: System.ComponentModel.Composition.Hosting.AtomicComposition
  isExternal: false
  name: TryGetValue<T>
  nameWithType: AtomicComposition.TryGetValue<T>
