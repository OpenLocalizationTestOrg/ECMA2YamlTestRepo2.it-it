### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeClientStream
  id: AnonymousPipeClientStream
  children:
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.Finalize
  - System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  - System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeClientStream
  nameWithType: AnonymousPipeClientStream
  fullName: System.IO.Pipes.AnonymousPipeClientStream
  type: Class
  summary: "Espone il lato client di un flusso unnamed pipe, che supporta sincrone e asincrone di lettura e operazioni di scrittura."
  remarks: "Le unnamed pipe consentono di fornire sicuro e proteggere la comunicazione interprocesso tra padre e figlio processi. La classe AnonymousPipeClientStream consente a un processo figlio per connettersi e scambiare informazioni con un processo padre.       Le unnamed pipe sono senza nome pipe unidirezionali che in genere trasferiscono dati tra processi padre e figlio. Le unnamed pipe sono sempre locali. non possono essere utilizzati in una rete. Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>le modalità di lettura.</xref:System.IO.Pipes.PipeTransmissionMode>       Il lato client di un&quot;unnamed pipe deve essere creato da un handle di pipe fornito dal lato server chiamando il <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>metodo.</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> La stringa viene quindi passata come parametro durante la creazione del processo client. Dal processo client, viene passata al costruttore AnonymousPipeClientStream come il `pipeHandleAsString` parametro.      > [!NOTE] > Per [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] e [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], un massimo di 10 pipe possa connettersi contemporaneamente attraverso la rete."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an AnonymousPipeClientStream object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which is started by the server process. Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_0_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_0_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_0_1.vb)]"
  syntax:
    content: 'public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> classe con la rappresentazione di stringa specificata dell&quot;handle di pipe."
  remarks: "Per i costruttori senza un <xref:System.IO.Pipes.PipeDirection>parametro, la direzione predefinita è <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.  \n  \n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_0_1.vb)]\n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_0_1.cs)]"
  syntax:
    content: public AnonymousPipeClientStream (string pipeHandleAsString);
    parameters:
    - id: pipeHandleAsString
      type: System.String
      description: "Stringa che rappresenta l&quot;handle di pipe."
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>pipeHandleAsString</code>non è un handle di pipe valido."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> classe dall&quot;handle specificato."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/visualbasic/9fcf339c-5c1c-4422-821c-_1.vb)]\n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/add/codesnippet/csharp/9fcf339c-5c1c-4422-821c-_1.cs)]"
  syntax:
    content: public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Handle sicuro per la pipe che questo <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> sarà incapsulato dall&quot;oggetto."
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle </code>non è un handle valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o, ad esempio un errore del disco.       - oppure - il flusso è stato chiuso."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: AnonymousPipeClientStream(PipeDirection,String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> classe con la direzione della pipe specificato e una rappresentazione di stringa dell&quot;handle di pipe."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/9b07c766-36fc-4774-abaa-_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/9b07c766-36fc-4774-abaa-_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/9b07c766-36fc-4774-abaa-_1.vb)]"
  syntax:
    content: public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: pipeHandleAsString
      type: System.String
      description: "Stringa che rappresenta l&quot;handle di pipe."
  overload: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeHandleAsString</code>è un handle non valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeHandleAsString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeClientStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che il <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> istanza venga recuperata tramite garbage collection."
  syntax:
    content: ~AnonymousPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeClientStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta la modalità di lettura per il <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> oggetto."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>in modalità lettura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process. The <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_2_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_2_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_2_1.vb)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "The <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref> for the <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref> object."
  overload: System.IO.Pipes.AnonymousPipeClientStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La modalità di trasmissione non è valida. Per le unnamed pipe, solo <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> è supportato."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La modalità di trasmissione è <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La connessione è interrotta oppure si verifica un altro errore dei / o."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene la modalità di trasmissione della pipe supportata dalla pipe corrente."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>in modalità lettura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the TransmissionMode is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_3_1.cs)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_3_1.cpp)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_3_1.vb)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Il <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> supportata dalla pipe corrente."
  overload: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,SafePipeHandle)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream(PipeDirection,String)
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(PipeDirection,String)
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeClientStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeClientStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: AnonymousPipeClientStream
  nameWithType: AnonymousPipeClientStream.AnonymousPipeClientStream
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeClientStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeClientStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeClientStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeClientStream.TransmissionMode
