### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.SecurityIdentifier
  id: SecurityIdentifier
  children:
  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.AccountDomainSid
  - System.Security.Principal.SecurityIdentifier.BinaryLength
  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.GetHashCode
  - System.Security.Principal.SecurityIdentifier.IsAccountSid
  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  - System.Security.Principal.SecurityIdentifier.MinBinaryLength
  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.ToString
  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  - System.Security.Principal.SecurityIdentifier.Value
  langs:
  - csharp
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
  type: Class
  summary: "Rappresenta un identificatore di sicurezza (SID) e fornisce le operazioni di confronto e di marshalling per i SID."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable<System.Security.Principal.SecurityIdentifier>
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements:
  - System.IComparable<System.Security.Principal.SecurityIdentifier>
  inheritedMembers:
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizzando un numero intero che rappresenta il formato binario di un ID di sicurezza (SID)."
  syntax:
    content: public SecurityIdentifier (IntPtr binaryForm);
    parameters:
    - id: binaryForm
      type: System.IntPtr
      description: "Valore intero che rappresenta il formato binario di un SID."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizzando l&quot;identificatore specificato di sicurezza (SID) in formato di definizione del linguaggio SDDL (Security Descriptor)."
  syntax:
    content: public SecurityIdentifier (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: "Stringa SDDL per il SID utilizzato per creare il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizzando una rappresentazione binaria specificata di un identificatore di sicurezza (SID)."
  syntax:
    content: public SecurityIdentifier (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "Matrice di byte che rappresenta il SID."
    - id: offset
      type: System.Int32
      description: "Offset di byte da utilizzare come indice iniziale in `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizzando il tipo di identificatore (SID) noto specificato e il SID di dominio."
  syntax:
    content: public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);
    parameters:
    - id: sidType
      type: System.Security.Principal.WellKnownSidType
      description: "Uno dei valori di enumerazione. Questo valore non deve essere <xref href=&quot;System.Security.Principal.WellKnownSidType&quot;> </xref>."
    - id: domainSid
      type: System.Security.Principal.SecurityIdentifier
      description: "The domain SID. This value is required for the following <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values. This parameter is ignored for any other <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values.  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  id: AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce la parte di identificatore (SID) di account dominio sicurezza dal SID rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto se il SID rappresenta un SID di account di Windows. Se il SID non rappresenta un SID di account di Windows, questa propriet√† restituisce <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "Il SID di dominio account parte dal SID rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> SID di account oggetto se il SID rappresenta una finestra; in caso contrario, restituisce <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  overload: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  id: BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce la lunghezza, in byte, dell&quot;identificatore di sicurezza (SID) rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  syntax:
    content: public int BinaryLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza, espressa in byte, del SID rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  id: CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Confronta l&quot;oggetto corrente <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto con l&quot;oggetto specificato <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  syntax:
    content: public int CompareTo (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "Oggetto da confrontare con l&quot;oggetto corrente."
    return:
      type: System.Int32
      description: "Numero con segno che indica i valori relativi di questa istanza e <code> sid </code>.       <table><thead><tr><th> Valore restituito       </th><th> Descrizione       </th></tr></thead><tbody><tr><td> Minore di zero       </td><td> Questa istanza √® minore di <code> sid </code>.       </td></tr><tr><td> Zero       </td><td> Questa istanza √® uguale a <code> sid </code>.       </td></tr><tr><td> Maggiore di zero       </td><td> Questa istanza √® maggiore di <code> sid </code>.       </td></tr></tbody></table>"
  overload: System.Security.Principal.SecurityIdentifier.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® uguale all&quot;oggetto specificato."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da confrontare con questa <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> o </code> √® un oggetto con lo stesso tipo sottostante e valore di questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  id: Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Indica se l&quot;oggetto specificato <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® uguale all&quot;oggetto corrente <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  syntax:
    content: public bool Equals (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "Oggetto da confrontare con l&quot;oggetto corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore di <code> sid </code> √® uguale al valore dell&quot;oggetto corrente <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Copia la rappresentazione binaria dell&quot;identificatore specificato di sicurezza (SID) rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe a una matrice di byte."
  syntax:
    content: public void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "Matrice di byte per ricevere il SID copiato."
    - id: offset
      type: System.Int32
      description: "Offset di byte da utilizzare come indice iniziale in `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Funge da funzione hash per l&quot;oggetto corrente <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto. Il metodo GetHashCode √® adatto per algoritmi hash e dati strutture come una tabella hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Un valore hash per l&quot;oggetto corrente <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  id: IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce un valore che indica se l&quot;ID di sicurezza (SID) rappresentato da questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® un SID di account Windows valido."
  syntax:
    content: public bool IsAccountSid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il SID √® rappresentato da questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® un SID di account Windows valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce un valore che indica se l&quot;ID di sicurezza (SID) rappresentato da questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® dello stesso dominio come il SID specificato."
  syntax:
    content: public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "Il SID da confrontare con questa <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il SID √® rappresentato da questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto √® nello stesso dominio di <code> sid </code> SID; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce un valore che indica se il tipo specificato √® un tipo di conversione valida per il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe."
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> targetType </code> √® un tipo di conversione valida per il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  id: IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce un valore che indica se il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto corrisponde al tipo di identificatore (SID) di sicurezza noti specificato."
  syntax:
    content: public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);
    parameters:
    - id: type
      type: System.Security.Principal.WellKnownSidType
      description: "Un valore da confrontare con il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> type </code> √® il tipo di SID per il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  id: MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce la dimensione massima, in byte, della rappresentazione binaria dell&quot;identificatore di sicurezza."
  syntax:
    content: public static readonly int MaxBinaryLength;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  id: MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce la dimensione minima, in byte, della rappresentazione binaria dell&quot;identificatore di sicurezza."
  syntax:
    content: public static readonly int MinBinaryLength;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Confronta due <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> gli oggetti per determinare se sono uguali. Sono considerati uguali se hanno la stessa rappresentazione canonica di quello restituito dal <xref:System.Security.Principal.SecurityIdentifier.Value*>propriet√† o se sono entrambi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.SecurityIdentifier.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "L&quot;operando a sinistra da usare per il confronto di uguaglianza. Questo parametro pu√≤ essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "L&quot;operando destro da utilizzare per il confronto di uguaglianza. Questo parametro pu√≤ essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Confronta due <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> gli oggetti per determinare se non sono uguali. Sono considerati non uguali se hanno rappresentazioni nome canonico diverso da quello restituito dal <xref:System.Security.Principal.SecurityIdentifier.Value*>propriet√† o se uno degli oggetti √® <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e l&quot;altro non lo √®.</xref:System.Security.Principal.SecurityIdentifier.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "L&quot;operando a sinistra da usare per il confronto di disuguaglianza. Questo parametro pu√≤ essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "L&quot;operando destro da utilizzare per il confronto di disuguaglianza. Questo parametro pu√≤ essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.ToString
  id: ToString
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce l&quot;ID di sicurezza (SID), nel formato di definizione del linguaggio SDDL (Security Descriptor), per l&quot;account rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto. Un esempio del formato SDDL √® S-1-5-9."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Il SID, in formato SDDL, per l&quot;account rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Converte il nome dell&quot;account rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto in un altro <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-tipo derivato."
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Il tipo di destinazione per la conversione da <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>. Il tipo di destinazione deve essere un tipo che viene considerato valido dal <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>metodo.</xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>"
    return:
      type: System.Security.Principal.IdentityReference
      description: "L&quot;identit√† convertito."
  overload: System.Security.Principal.SecurityIdentifier.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType </code>non √® un <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> tipo."
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Impossibile convertire alcuni o tutti i riferimenti di identit√†."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "√à stato restituito un codice di errore Win32."
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Value
  id: Value
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Restituisce una stringa in caratteri maiuscoli definizione linguaggio SDDL (Security Descriptor) per l&quot;identificatore di sicurezza (SID) rappresentato da questo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "Stringa SDDL in caratteri maiuscoli per il SID rappresentato dal <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  overload: System.Security.Principal.SecurityIdentifier.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Principal.IdentityReference
  isExternal: false
  name: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
- uid: System.Security.Principal.WellKnownSidType
  parent: System.Security.Principal
  isExternal: false
  name: WellKnownSidType
  nameWithType: WellKnownSidType
  fullName: System.Security.Principal.WellKnownSidType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.ToString
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
- uid: System.Security.Principal.SecurityIdentifier.Value
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
- uid: System.Security.Principal.SecurityIdentifier.#ctor*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo
  nameWithType: SecurityIdentifier.CompareTo
- uid: System.Security.Principal.SecurityIdentifier.Equals*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals
  nameWithType: SecurityIdentifier.Equals
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm
  nameWithType: SecurityIdentifier.GetBinaryForm
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode
  nameWithType: SecurityIdentifier.GetHashCode
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid
  nameWithType: SecurityIdentifier.IsAccountSid
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid
  nameWithType: SecurityIdentifier.IsEqualDomainSid
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType
  nameWithType: SecurityIdentifier.IsValidTargetType
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown
  nameWithType: SecurityIdentifier.IsWellKnown
- uid: System.Security.Principal.SecurityIdentifier.op_Equality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality
  nameWithType: SecurityIdentifier.op_Equality
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality
  nameWithType: SecurityIdentifier.op_Inequality
- uid: System.Security.Principal.SecurityIdentifier.ToString*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityIdentifier.ToString
- uid: System.Security.Principal.SecurityIdentifier.Translate*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate
  nameWithType: SecurityIdentifier.Translate
- uid: System.Security.Principal.SecurityIdentifier.Value*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
