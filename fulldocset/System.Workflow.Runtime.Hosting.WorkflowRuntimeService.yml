### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  id: WorkflowRuntimeService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  langs:
  - csharp
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  type: Class
  summary: "Rappresenta la classe base astratta dalla quale vengono derivati i servizi di base del motore di runtime del flusso di lavoro."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Servizi che derivano dalla classe WorkflowRuntimeService possono essere avviati e interrotto dal motore di runtime del flusso di lavoro. L&quot;ordine in cui i servizi di avvio o l&quot;arresto, tuttavia, è indeterminato e i servizi possono richiedere il supporto di altri servizi per correttamente l&quot;inizializzazione quando vengono avviati e, al contrario, possono richiedere il supporto di altri servizi al fine di correttamente la chiusura quando vengono arrestati. Per risolvere questo problema, il motore di runtime del flusso di lavoro fornisce meccanismi a due fasi per l&quot;avvio e arresto di servizi. Quando <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>viene chiamato, il flusso di lavoro motore di runtime richiama il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo per ognuno dei servizi che derivano dalla classe WorkflowRuntimeService.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>  Dopo l&quot;avvio di tutti questi servizi, il motore di runtime del flusso di lavoro genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento che determina il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>metodo da richiamare per ogni servizio motore di runtime del flusso di lavoro.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Il servizio può eseguire l&quot;override di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>(metodo) deve far parte di questo processo in due fasi.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> Analogamente, quando <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>viene chiamato, il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>(metodo), il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento e <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>metodo forniscono questo meccanismo a due fasi.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  La proprietà State contiene un <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>valore che indica se il servizio è in corso l&quot;avvio o l&quot;arresto o completamente avviato o arrestato.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>       Servizi che derivano dalla classe WorkflowRuntimeService possono generare l&quot; <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>evento quando si verifica una condizione che provoca un&quot;eccezione non gestita chiamando <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>       Servizi derivati dalla <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, la <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e la <xref:System.Workflow.Runtime.Tracking.TrackingService>classe deriva dalla classe WorkflowRuntimeService.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRuntimeService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando viene implementato in una classe derivata, Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> classe."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>viene inizializzato su <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>"
  syntax:
    content: protected WorkflowRuntimeService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Started&quot;> </xref> evento."
  remarks: "Il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>implementa un meccanismo di avvio a due fasi in modo che i servizi motore di runtime del flusso di lavoro possono eseguire qualsiasi inizializzazione che dipende da altri servizi dopo che il motore di runtime del flusso di lavoro ha richiamato il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo per tutti i relativi servizi motore di runtime del flusso di lavoro.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Dopo l&quot;esecuzione del flusso di lavoro è stato chiamato motore il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo di tutti i relativi servizi motore di runtime del flusso di lavoro, genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> È possibile eseguire l&quot;override del metodo OnStarted per fornire qualsiasi funzionalità di avvio conclusiva richiesta del servizio quando il <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>viene generato l&quot;evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Il meccanismo di sottoscrizione e annullamento della sottoscrizione di <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>internamente viene gestito l&quot;evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>      > [!NOTE] > Se il servizio viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>dopo che il motore di runtime del flusso di lavoro è già stato avviato, il motore di runtime del flusso di lavoro chiamerà <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>sul servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Tuttavia, in questo caso, il <xref:System.Workflow.Runtime.WorkflowRuntime.Started>già verificato l&quot;evento, di conseguenza, il servizio debba eseguire qualsiasi inizializzazione che normalmente eseguirebbe in OnStarted all&quot;interno di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>(metodo).</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> È possibile testare <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>per determinare se il motore di runtime del flusso di lavoro è stato avviato.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>è impostato su <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>prima che venga richiamato OnStarted.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  L&quot;implementazione predefinita di OnStarted non esegue alcuna azione."
  syntax:
    content: protected virtual void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  id: OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Stopped&quot;> </xref> evento."
  remarks: "Il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>implementa un meccanismo di arresto a due fasi in modo che i servizi motore di runtime del flusso di lavoro di mantenere alcune funzionalità dopo la loro <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo viene richiamato dal motore di runtime del flusso di lavoro in modo che possano, se necessario, supportare la chiusura di altri servizi.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Dopo l&quot;esecuzione del flusso di lavoro è stato chiamato motore il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo di tutti i relativi servizi motore di runtime del flusso di lavoro, genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> È possibile eseguire l&quot;override del metodo OnStopped per fornire qualsiasi funzionalità di chiusura conclusiva richiesta del servizio quando il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>viene generato l&quot;evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> Il meccanismo di sottoscrizione e annullamento della sottoscrizione di <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>internamente viene gestito l&quot;evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>      > [!NOTE] > Se il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>mentre è in esecuzione il motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro chiamerà <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>sul servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Tuttavia, in questo caso, il metodo OnStopped non essere chiamato per il servizio. Pertanto, il servizio debba eseguire operazioni di chiusura conclusive che normalmente eseguirebbe in OnStopped all&quot;interno di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> È possibile testare <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>per determinare se il motore di runtime del flusso di lavoro è in esecuzione.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>è impostato su <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>prima che venga richiamato OnStopped.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  L&quot;implementazione predefinita di OnStopped non esegue alcuna azione."
  syntax:
    content: protected virtual void OnStopped ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  id: RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Genera il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&quot;> </xref> evento."
  remarks: "Il servizio può chiamare RaiseServicesExceptionNotHandledEvent per generare il <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>evento quando viene rilevata un&quot;eccezione che non può gestire durante l&quot;esecuzione.</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> È necessario passare il <xref:System.Guid>dell&quot;istanza del flusso di lavoro associato all&quot;eccezione non gestita.</xref:System.Guid> Ad esempio, è possibile passare un servizio timer di <xref:System.Guid>associato al timer per il quale si è verificata l&quot;eccezione.</xref:System.Guid>"
  syntax:
    content: protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "Eccezione non gestita."
    - id: instanceId
      type: System.Guid
      description: "Il <xref:System.Guid>dell&quot;istanza del flusso di lavoro associato all&quot;eccezione non gestita.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  id: Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Ottiene il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> per questo servizio."
  remarks: "Il motore di runtime del flusso di lavoro imposta questa proprietà prima di chiamare <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>nel servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>"
  syntax:
    content: protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "Il <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> oggetto."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando sottoposto a override in una classe derivata, avvia il servizio e modifica di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>a <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Inizio viene richiamato dal motore di runtime del flusso di lavoro in tutti i servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe quando <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>viene chiamato.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Inizio viene anche richiamato dal motore di runtime del flusso di lavoro quando un servizio motore di runtime del flusso di lavoro viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>dopo l&quot;avvio del motore di runtime del flusso di lavoro.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> L&quot;implementazione predefinita di inizio rileva se il servizio è stato avviato e utilizza queste informazioni per generare l&quot;eccezione adatta se il servizio viene avviato mentre è già in esecuzione.       È possibile fornire funzionalità aggiuntive per il servizio venga avviato dal motore di runtime del flusso di lavoro eseguendo l&quot;override di questo metodo. Non c&quot;è garanzia su quale, se presente, servizi verranno eseguito quando il motore di runtime del flusso di lavoro chiama l&quot;avvio del servizio. Pertanto, in metodo di avvio, è necessario eseguire solo un&quot;inizializzazione che non dipende da funzionalità fornite da altri servizi. Ciò include la funzionalità fornita da servizi di base, ad esempio il servizio Utilità di pianificazione. Il motore di runtime del flusso di lavoro genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>evento dopo aver chiamato il metodo di avvio di tutti i relativi flussi di lavoro servizi motore di runtime.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Se il servizio richiede ulteriori inizializzazioni dopo l&quot;avvio di tutti i servizi motore di runtime del flusso di lavoro, è possibile eseguire l&quot;override di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>metodo per eseguire tale inizializzazione quando viene generato l&quot;evento di inizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>      > [!NOTE] > Se il servizio viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>dopo che il motore di runtime del flusso di lavoro è già stato avviato, il motore di runtime del flusso di lavoro chiamerà l&quot;avvio del servizio.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Tuttavia, in questo caso, il <xref:System.Workflow.Runtime.WorkflowRuntime.Started>già verificato l&quot;evento, di conseguenza, il servizio debba eseguire qualsiasi inizializzazione che normalmente eseguirebbe in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>all&quot;interno del metodo di avvio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> È possibile testare <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>per determinare se il motore di runtime del flusso di lavoro è stato avviato.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Inizio deve essere chiamato solo dal motore di runtime del flusso di lavoro."
  example:
  - "The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  This example is from the Termination Tracking Service SDK sample.  For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#112](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#112)]\n [!code-vb[WF_Samples#112](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#112)]"
  syntax:
    content: protected virtual void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) - oppure - il servizio è già stato avviato.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  id: State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Ottiene lo stato del <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>."
  remarks: "Il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>implementa meccanismi a due fasi per l&quot;avvio e arresto del servizio motore di runtime del flusso di lavoro.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> La prima fase del meccanismo di avvio inizia quando il motore di runtime del flusso di lavoro chiama l&quot;implementazione del <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo per il servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> Questo metodo deve chiamare l&quot;implementazione di base di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, che imposta lo stato per <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> La seconda fase si verifica dopo l&quot;avvio del motore di runtime del flusso di lavoro tutti i relativi servizi motore di runtime del flusso di lavoro quando genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> Il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà lo stato su <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Il meccanismo a due fasi per l&quot;arresto del servizio motore di runtime del flusso di lavoro inizia quando il motore di runtime del flusso di lavoro chiama l&quot;implementazione del <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo per il servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Questo metodo deve chiamare l&quot;implementazione di base di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, che imposta lo stato per <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Dopo aver arrestato tutti i relativi servizi motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> Il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà lo stato su <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  syntax:
    content: protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }
    return:
      type: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
      description: "Uno del <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref> valori."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Quando sottoposto a override in una classe derivata, arresta il servizio e modifica di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>a <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Arresto viene richiamato dal motore di runtime del flusso di lavoro in tutti i servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe quando <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>viene chiamato.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Arresto viene anche richiamato dal motore di runtime del flusso di lavoro quando un servizio motore di runtime del flusso di lavoro viene rimosso dal motore di runtime del flusso di lavoro da una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> L&quot;implementazione predefinita di arresto rileva se il servizio è stato avviato e utilizza queste informazioni per generare l&quot;eccezione adatta se il servizio viene arrestato prima che venga avviato.       È possibile fornire funzionalità aggiuntive per il servizio venga arrestato dal motore di runtime del flusso di lavoro eseguendo l&quot;override di questo metodo. Non c&quot;è garanzia su quale, se disponibile, venga arrestato o eseguito quando viene chiamato sul servizio. Il motore di runtime del flusso di lavoro genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>evento dopo aver chiamato il metodo di arresto di tutti i relativi flussi di lavoro servizi motore di runtime.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> Il servizio debba mantenere alcune funzionalità residue per supportare altri servizi fino a quando tutti i servizi di motore runtime del flusso di lavoro sono stati i metodi stop richiamati dal motore di runtime del flusso di lavoro. Se il servizio deve mantenere tali funzionalità, è possibile eseguire l&quot;override di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>metodo per eseguire operazioni aggiuntive necessarie per completare l&quot;arresto del servizio quando il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>viene generato l&quot;evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>      > [!NOTE] > Se il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>mentre è in esecuzione il motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro chiamerà arresto del servizio.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Tuttavia, in questo caso, il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>(metodo) non verrà chiamato per il servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Pertanto, il servizio debba eseguire qualsiasi funzionalità di chiusura aggiuntiva che normalmente eseguirebbe in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>all&quot;interno del metodo di arresto.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> È possibile testare <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>per determinare se il motore di runtime del flusso di lavoro è in esecuzione.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Arresto deve essere chiamato solo dal motore di runtime del flusso di lavoro."
  syntax:
    content: protected virtual void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic).</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>       - oppure - il servizio non è ancora stato avviato."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowRuntimeServiceState
  nameWithType: WorkflowRuntimeServiceState
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted
  nameWithType: WorkflowRuntimeService.OnStarted
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped
  nameWithType: WorkflowRuntimeService.OnStopped
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start
  nameWithType: WorkflowRuntimeService.Start
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop
  nameWithType: WorkflowRuntimeService.Stop
