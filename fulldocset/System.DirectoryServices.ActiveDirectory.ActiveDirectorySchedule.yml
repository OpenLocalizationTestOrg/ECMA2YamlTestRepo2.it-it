### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  id: ActiveDirectorySchedule
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  langs:
  - csharp
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  type: Class
  summary: "La classe ActiveDirectorySchedule rappresenta la pianificazione settimanale di una replica di servizi di dominio Active Directory."
  syntax:
    content: public class ActiveDirectorySchedule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> classe."
  syntax:
    content: public ActiveDirectorySchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> classe, utilizzando l&quot;oggetto specificato <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> oggetto."
  syntax:
    content: public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);
    parameters:
    - id: schedule
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
      description: "Oggetto <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> oggetto che viene copiato in questo oggetto."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schedule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  id: RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Ottiene o imposta una matrice tridimensionale che indica il momento nell&quot;arco della settimana che l&quot;origine è disponibile per la replica."
  syntax:
    content: public bool[,,] RawSchedule { get; set; }
    return:
      type: System.Boolean[,,]
      description: "Una matrice tridimensionale di <xref:System.Boolean>elementi in cui l&quot;elemento è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se l&quot;origine è disponibile per la replica durante l&quot;intervallo di 15 minuti specifico.</xref:System.Boolean> L&quot;elemento è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;origine non è disponibile per la replica.       La matrice è nella forma RawSchedule [&lt;giorno della settimana&gt;, &lt;ora&gt;, &lt;15 minuti di intervallo&gt;]. Tutti questi valori sono in base zero e la settimana inizia alle 00:00 del mattino domenica, Coordinated Universal Time.       Di seguito sono i valori validi per il giorno della settimana.       <table><thead><tr><th> Valore di giorno della settimana       </th><th> Indicato giorno della settimana.       </th></tr></thead><tbody><tr><td> 0       </td><td> Domenica       </td></tr><tr><td> 1       </td><td> Lunedì       </td></tr><tr><td> 2       </td><td> Martedì       </td></tr><tr><td> 3       </td><td> Mercoledì       </td></tr><tr><td> 4       </td><td> Giovedì       </td></tr><tr><td> 5       </td><td> Venerdì       </td></tr><tr><td> 6       </td><td> Sabato       </td></tr></tbody></table>       L&quot;ora sia in base zero specificato nel formato 24 ore. Ad esempio, 2 P.M. verrebbe specificata come 14. I valori validi sono 0 e 23.       L&quot;intervallo di 15 minuti Specifica il blocco di 15 minuti entro un&quot;ora che l&quot;origine è disponibile per la replica. Nella tabella seguente identifica i valori possibili per l&quot;intervallo di 15 minuti.       <table><thead><tr><th> intervallo di&15; minuti       </th><th> Descrizione       </th></tr></thead><tbody><tr><td> 0       </td><td> L&quot;origine è disponibile per la replica da 0 a 14 minuti dopo l&quot;ora.       </td></tr><tr><td> 1       </td><td> L&quot;origine è disponibile per la replica da 15 a 29 minuti dopo l&quot;ora.       </td></tr><tr><td> 2       </td><td> L&quot;origine è disponibile per la replica da 30 a 44 minuti dopo l&quot;ora.       </td></tr><tr><td> 3       </td><td> L&quot;origine è disponibile per la replica da 45 a 59 minuti dopo l&quot;ora.       </td></tr></tbody></table>       Nell&quot;esempio c# seguente viene illustrato come utilizzare questa proprietà per determinare se l&quot;origine è disponibile per la replica alle 15:50 Coordinated Universal Time martedì.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];   ```Nell&quot;esempio c# seguente viene illustrato come utilizzare questa proprietà per calcolare l&quot;intervallo di 15 minuti in fase di esecuzione dividendo i minuti per 15.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];   ```"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  id: ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Reimposta l&quot;intera pianificazione non disponibile."
  syntax:
    content: public void ResetSchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aggiunge un intervallo di tempo per ogni giorno della settimana per la pianificazione."
  remarks: "Tutti i parametri in questo metodo sono inclusivi.       Questo metodo è cumulativo e non rimuove le informazioni di pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato sarà comunque cumulativo. Per cancellare la pianificazione, utilizzare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metodo.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora prima che l&quot;origine sarà disponibile per la replica."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti prima che l&quot;origine sarà disponibile per la replica."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora finale che l&quot;origine sarà disponibile per la replica."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti finale che l&quot;origine sarà disponibile per la replica."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aggiunge un intervallo di tempo per un solo giorno per la pianificazione."
  remarks: "Tutti i parametri in questo metodo sono inclusivi.       Questo metodo è cumulativo e non rimuove le informazioni di pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato sarà comunque cumulativo. Per cancellare la pianificazione, utilizzare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metodo.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: day
      type: System.DayOfWeek
      description: "Uno del <xref:System.DayOfWeek>membri che specifica il giorno della settimana in cui l&quot;origine sarà disponibile per la replica.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora prima che l&quot;origine sarà disponibile per la replica."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti prima che l&quot;origine sarà disponibile per la replica."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora finale che l&quot;origine sarà disponibile per la replica."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti finale che l&quot;origine sarà disponibile per la replica."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;ora di inizio è successiva all&quot;ora di fine."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Uno o più parametri non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aggiunge un intervallo di tempo per più giorni per la pianificazione."
  remarks: "Tutti i parametri in questo metodo sono inclusivi.       Questo metodo è cumulativo e non rimuove le informazioni di pianificazione esistente. Se una pianificazione esistente e la nuova pianificazione si sovrappongono, il risultato sarà comunque cumulativo. Per cancellare la pianificazione, utilizzare il <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metodo.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: days
      type: System.DayOfWeek[]
      description: "Uno del <xref:System.DayOfWeek>membri che specifica il giorno della settimana in cui l&quot;origine sarà disponibile per la replica.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora prima che l&quot;origine sarà disponibile per la replica."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti prima che l&quot;origine sarà disponibile per la replica."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membri che specifica l&quot;ora finale che l&quot;origine sarà disponibile per la replica."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Uno del <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membri che specifica l&quot;intervallo di 15 minuti finale che l&quot;origine sarà disponibile per la replica."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;ora di inizio è successiva all&quot;ora di fine."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Uno o più parametri non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[,,]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[,,]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DirectoryServices.ActiveDirectory.HourOfDay
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: HourOfDay
  nameWithType: HourOfDay
  fullName: System.DirectoryServices.ActiveDirectory.HourOfDay
- uid: System.DirectoryServices.ActiveDirectory.MinuteOfHour
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: MinuteOfHour
  nameWithType: MinuteOfHour
  fullName: System.DirectoryServices.ActiveDirectory.MinuteOfHour
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek[]
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek[]
  spec.csharp:
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: DayOfWeek[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule
  nameWithType: ActiveDirectorySchedule.ResetSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule
  nameWithType: ActiveDirectorySchedule.SetDailySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule
  nameWithType: ActiveDirectorySchedule.SetSchedule
