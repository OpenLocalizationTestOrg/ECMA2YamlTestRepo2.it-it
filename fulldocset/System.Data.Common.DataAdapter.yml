### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "Rappresenta un set di comandi SQL e una connessione al database vengono utilizzate per compilare il <xref href=&quot;System.Data.DataSet&quot;> </xref> e aggiornare l&quot;origine dati."
  remarks: "DataAdapter funge da ponte tra un <xref:System.Data.DataSet>e un&quot;origine dati per il recupero e il salvataggio dei dati.</xref:System.Data.DataSet> DataAdapter fornisce questo bridge eseguendo il mapping <xref:System.Data.Common.DataAdapter.Fill%2A>, che modifica i dati in <xref:System.Data.DataSet>affinché corrispondano ai dati nell&quot;origine dati di <xref:System.Data.IDataAdapter.Update%2A>, che modifica i dati nell&quot;origine dati corrispondono ai dati in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.IDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.Fill%2A>       Se ci si connette a un database di SQL Server, è possibile aumentare le prestazioni complessive utilizzando il <xref:System.Data.SqlClient.SqlDataAdapter>insieme a essa associati <xref:System.Data.SqlClient.SqlCommand>e <xref:System.Data.SqlClient.SqlConnection>oggetti.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> Per le origini dati OLE DB supportati, utilizzare DataAdapter con l&quot;identificatore associato <xref:System.Data.OleDb.OleDbCommand>e <xref:System.Data.OleDb.OleDbConnection>oggetti.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> Per le origini di dati supportato da ODBC, utilizzare DataAdapter con l&quot;identificatore associato <xref:System.Data.Odbc.OdbcCommand>e <xref:System.Data.Odbc.OdbcConnection>oggetti.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> Per i database Oracle, utilizzare DataAdapter con l&quot;identificatore associato <xref:System.Data.OracleClient.OracleCommand>e <xref:System.Data.OracleClient.OracleConnection>oggetti.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       Quando viene creata un&quot;istanza di DataAdapter, le proprietà di lettura/scrittura vengono impostate sui valori iniziali. Per un elenco di questi valori, vedere il costruttore di DataAdapter."
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe."
  remarks: "Quando un&quot;istanza di <xref:System.Data.Common.DataAdapter>viene creato, le seguenti proprietà vengono impostate sui valori iniziali di esempio di lettura/scrittura.</xref:System.Data.Common.DataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|   | <xref:System.Data.Common.DataAdapter.TableMappings%2A>| Una matrice di oggetti <xref:System.Data.Common.DataAdapter.TableMappings%2A>. |       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe da un oggetto esistente dello stesso tipo."
  remarks: "Questo overload del metodo di <xref:System.Data.Common.DataAdapter>costruttore è progettato per l&quot;uso da un provider di dati .NET Framework, quando si implementa un costruttore simile da utilizzare in un&quot;implementazione di clone.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "Oggetto <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> oggetto utilizzato per creare il nuovo <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta un valore che indica se <> </> *> viene chiamato su un <xref href=&quot;System.Data.DataRow&quot;> </xref> dopo l&quot;aggiunta al <xref href=&quot;System.Data.DataTable&quot;> </xref> durante un&quot;operazione del * *riempimento** operazioni."
  remarks: "Se `false`, <xref:System.Data.DataRow.AcceptChanges%2A>non viene chiamato, e le righe appena aggiunte sono considerate come righe inserite.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Data.DataRow.AcceptChanges*>viene chiamato sul <xref href=&quot;System.Data.DataRow&quot;> </xref>; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataRow.AcceptChanges*> Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta se <> </> *> viene chiamato durante una <> </> *>."
  remarks: "Durante una chiamata al `Update` metodo di un `DataAdapter`, il database può inviare dati all&quot;applicazione di ADO.NET come parametri di output o come il primo record restituito di un set di risultati. ADO.NET può recuperare questi valori e aggiornare le colonne corrispondenti nel <xref:System.Data.DataRow>in corso l&quot;aggiornamento.</xref:System.Data.DataRow> Per impostazione predefinita, le chiamate ADO.NET il `AcceptChanges` metodo il `DataRow` dopo l&quot;aggiornamento. Tuttavia, se si desidera unire la riga aggiornata eseguire il backup in un altro <xref:System.Data.DataTable>, si consiglia di mantenere intatto il valore originale di una colonna chiave primaria.</xref:System.Data.DataTable> Ad esempio, una colonna chiave primaria corrispondente a una colonna a incremento automatico del database, ad esempio una colonna identity, può contenere nuovi valori che sono assegnati per il database che non corrispondono ai valori originali assegnati nel `DataRow`. Per impostazione predefinita, `AcceptChanges` viene chiamato in modo implicito dopo un aggiornamento e i valori originali della riga, che potrebbe essere stato <xref:System.Data.DataColumn.AutoIncrement%2A>i valori assegnati da ADO.NET, vengono persi.</xref:System.Data.DataColumn.AutoIncrement%2A> È possibile mantenere i valori originali di `DataRow` impedendo `ADO.NET` dalla chiamata `AcceptChanges` dopo aver eseguito un aggiornamento su una riga, impostando la proprietà AcceptChangesDuringUpdate su `false`, che consente di mantenere i valori originali.      > [!NOTE] > Impostazione di `AcceptChangesDuringUpdate` proprietà `false` si applica a tutte le modifiche di dati, non solo consente di inserire. Se si desidera modificare o eliminare righe nello stesso aggiornamento e, se si desidera eliminare la chiamata a `AcceptChanges` solo per gli inserimenti, quindi anziché impostare `AccceptChangesDuringUpdate` a `false`, utilizzare un gestore eventi per il `RowUpdated` evento del `DataAdapter`. Nel gestore eventi è possibile verificare il <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>per determinare se la modifica dei dati è un&quot;operazione di inserimento e `true`, impostare la <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>proprietà del <xref:System.Data.Common.RowUpdatedEventArgs>per <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> Per ulteriori informazioni e un esempio, vedere [il recupero dei valori di identità o contatore](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> viene chiamato durante un <> </> *>; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Crea una copia di questa istanza di <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  remarks: "Questo metodo è deprecato. Il <xref:System.Data.Common.DataAdapter.%23ctor%2A>deve essere utilizzato costruttore anziché di questo metodo.</xref:System.Data.Common.DataAdapter.%23ctor%2A>       Tutti i comandi di <xref:System.Data.Common.DataAdapter.TableMappings%2A>, <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>e <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>vengono clonati.</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> Tuttavia, le connessioni per i comandi non vengono copiate, ma condiviso. Di conseguenza, il duplicato <xref:System.Data.Common.DataAdapter>può essere utilizzata con la stessa connessione originale.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "Istanza duplicata di <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta un valore che specifica se generare un&quot;eccezione in caso di errore rilevato durante un aggiornamento di riga."
  remarks: "Se `ContinueUpdateOnError` è impostato su `true`, quando si verifica un errore durante l&quot;aggiornamento di una riga, viene generata alcuna eccezione. L&quot;aggiornamento della riga è stata ignorata e le informazioni sull&quot;errore viene inseriti nella <xref:System.Data.DataRow.RowError%2A>proprietà della riga di errore.</xref:System.Data.DataRow.RowError%2A> Il <xref:System.Data.Common.DataAdapter>continua ad aggiornare le righe successive.</xref:System.Data.Common.DataAdapter>       Se `ContinueUpdateOnError` è impostato su `false`, viene generata un&quot;eccezione quando si verifica un errore durante l&quot;aggiornamento di una riga."
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per continuare l&quot;aggiornamento senza generare un&quot;eccezione. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Una nuova raccolta di mapping di tabella."
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.IDisposable.Dispose%2A>metodo e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Data.Common.DataAdapter>riferimenti.</xref:System.Data.Common.DataAdapter> Questo metodo richiama il `Dispose` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge o aggiorna righe nel <xref href=&quot;System.Data.DataSet&quot;> </xref> affinché corrispondano a quelle nell&quot;origine dati."
  remarks: "Il metodo di riempimento recupera le righe dall&quot;origine dati utilizzando l&quot;istruzione SELECT specificata da un oggetto associato <xref:System.Data.IDbDataAdapter.SelectCommand%2A>proprietà.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> L&quot;oggetto connessione associato con l&quot;istruzione SELECT deve essere valido, ma non devono essere aperte. Se la connessione viene chiusa prima che venga chiamato riempimento, verrà aperta per recuperare i dati, quindi chiusa. Se la connessione è aperta prima di chiamata riempimento, rimane aperto.       Quindi l&quot;operazione di riempimento, le righe vengono aggiunte alla destinazione <xref:System.Data.DataTable>gli oggetti di <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable>oggetti se non sono già presenti.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Quando si creano <xref:System.Data.DataTable>oggetti, l&quot;operazione di riempimento consente di creare solo i metadati dei nomi di colonna.</xref:System.Data.DataTable> Tuttavia, se il <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Se il `SelectCommand` restituisce i risultati di un OUTER JOIN, il `DataAdapter` non è stato impostato un <xref:System.Data.DataTable.PrimaryKey%2A>valore per il <xref:System.Data.DataTable>.</xref:System.Data.DataTable> risultante</xref:System.Data.DataTable.PrimaryKey%2A> È necessario definire in modo esplicito la chiave primaria per garantire che le righe duplicate vengano risolte correttamente. Per ulteriori informazioni, vedere [la definizione di chiavi primarie](~/add/includes/ajax-current-ext-md.md).       Se l&quot;adattatore dati di rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, utilizzando il modello &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; e così via.</xref:System.Data.DataTable> Se i dati in ingresso contengano colonne senza nome, questi vengono collocati nel <xref:System.Data.DataSet>secondo il criterio &quot;Column1&quot;, &quot;Column2&quot; e così via.</xref:System.Data.DataSet> Quando più set di risultati vengono aggiunti per il <xref:System.Data.DataSet>ogni set di risultati viene inserito in una tabella separata.</xref:System.Data.DataSet> Set di risultati aggiuntivi sono denominati aggiungendo i valori integrali per il nome della tabella specificato (ad esempio, &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; e così via). Le applicazioni che utilizzano nomi di colonna e tabella è necessario assicurarsi che non si verifichino conflitti con questi modelli di denominazione.       Quando l&quot;istruzione SELECT utilizzata per popolare il <xref:System.Data.DataSet>restituisce più risultati, ad esempio istruzioni batch SQL, se uno dei risultati contiene un errore, tutti i risultati successivi vengono ignorati e non aggiunti a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       È possibile utilizzare il metodo di riempimento più volte nella stessa <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Se esiste una chiave primaria, le righe in ingresso vengono unite con le righe corrispondenti che esistono già. Se è presente alcuna chiave primaria, le righe in ingresso vengono aggiunti a <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Quando si gestiscono istruzioni SQL batch che restituiscono più risultati, l&quot;implementazione di <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>per il Provider di dati .NET Framework per OLE DB consente di recuperare informazioni sullo schema solo per il primo risultato.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Per recuperare informazioni sullo schema per più risultati, utilizzare <xref:System.Data.Common.DbDataAdapter.Fill%2A>con il <xref:System.Data.MissingSchemaAction>impostato su `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Oggetto <xref href=&quot;System.Data.DataSet&quot;> </xref> per inserire i record e, se necessario, dello schema."
    return:
      type: System.Int32
      description: "Il numero di righe correttamente aggiunte o aggiornate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge o aggiorna righe nel <xref href=&quot;System.Data.DataTable&quot;> </xref> affinché corrispondano a quelle nell&quot;origine dati mediante il <xref href=&quot;System.Data.DataTable&quot;> </xref> nome e il valore specificato <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> per inserire i record."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Un&quot;istanza di <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il numero di righe correttamente aggiunte o aggiornate nel <xref href=&quot;System.Data.DataTable&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge o aggiorna righe in un intervallo specificato nella raccolta di <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetti affinché corrispondano a quelle nell&quot;origine dati."
  remarks: "Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Una raccolta di <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetti da inserire i record."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Un&quot;istanza di <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "Indice in base zero del record iniziale."
    - id: maxRecords
      type: System.Int32
      description: "Numero intero che indica il numero massimo di record."
    return:
      type: System.Int32
      description: "Il numero di righe correttamente aggiunte o aggiornate nel <xref href=&quot;System.Data.DataTable&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge o aggiorna righe in un intervallo specificato nel <xref href=&quot;System.Data.DataSet&quot;> </xref> affinché corrispondano a quelle nell&quot;origine dati mediante il <xref href=&quot;System.Data.DataSet&quot;> </xref> e <xref href=&quot;System.Data.DataTable&quot;> </xref> nomi."
  remarks: "Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni."
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Oggetto <xref href=&quot;System.Data.DataSet&quot;> </xref> per inserire i record."
    - id: srcTable
      type: System.String
      description: "Stringa che indica il nome della tabella di origine."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Un&quot;istanza di <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "Indice in base zero del record iniziale."
    - id: maxRecords
      type: System.Int32
      description: "Numero intero che indica il numero massimo di record."
    return:
      type: System.Int32
      description: "Il numero di righe correttamente aggiunte o aggiornate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Quando si verifica un errore durante un&quot;operazione di compilazione."
  remarks: "Il **FillError** evento consente di determinare se l&quot;operazione di riempimento deve continuare dopo l&quot;errore si verifica. Esempi di quando il **FillError** evento può verificarsi sono: - i dati aggiunti a un `DataSet` non può essere convertito in un tipo common language runtime senza perdita di precisione.      -La riga aggiunta contiene dati che viola un vincolo che deve essere applicato a un `DataColumn` nel `DataSet`."
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta il <xref href=&quot;System.Data.LoadOption&quot;> </xref> che determina come l&quot;adattatore riempie il <xref href=&quot;System.Data.DataTable&quot;> </xref> dal <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge un <xref href=&quot;System.Data.DataTable&quot;> </xref> specificata <xref href=&quot;System.Data.DataSet&quot;> </xref> e configura lo schema in modo che corrisponda a quello nell&quot;origine dati in base all&quot;opzione <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "Il metodo FillSchema recupera lo schema dall&quot;origine dati utilizzando <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> L&quot;oggetto connessione associato il <xref:System.Data.IDbDataAdapter.SelectCommand%2A>deve essere valido, ma non deve essere aperto.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Se la connessione viene chiusa prima che venga chiamato FillSchema, viene aperta per recuperare i dati e quindi viene chiusa. Se la connessione è aperta prima di chiamata FillSchema, rimane aperto.       Un&quot;operazione FillSchema aggiunge <xref:System.Data.DataTable>destinazione <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Aggiunge quindi le colonne per la <xref:System.Data.DataColumnCollection>del <xref:System.Data.DataTable>e configura gli elementi seguenti <xref:System.Data.DataColumn>proprietà, se sono presenti nell&quot;origine dati:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> È necessario impostare <xref:System.Data.DataColumn.AutoIncrementStep%2A>e <xref:System.Data.DataColumn.AutoIncrementSeed%2A>separatamente.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema configura anche il <xref:System.Data.DataTable.PrimaryKey%2A>e <xref:System.Data.DataTable.Constraints%2A>proprietà secondo le regole seguenti: - se uno o più colonne chiave primaria vengono restituite da <xref:System.Data.IDbDataAdapter.SelectCommand%2A>vengono utilizzati come colonne chiave primaria per <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Se viene restituita alcuna colonna di chiave primaria, ma sono colonne univoche, le colonne univoche vengono utilizzate come chiave primaria se e solo se tutte le colonne univoche sono ammessi valori null. Se una o più colonne ammettono valori null, un <xref:System.Data.UniqueConstraint>viene aggiunto per il <xref:System.Data.ConstraintCollection>, ma la <xref:System.Data.DataTable.PrimaryKey%2A>non è impostata.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      -Se vengono restituite sia colonne chiave primaria che colonne univoche, le colonne chiave primaria vengono utilizzate come colonne chiave primaria per <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Archivio dati sottostante può consentire gli attributi di colonna che non sono supportati in un <xref:System.Data.DataColumn>, alcuni attributi di colonna non corretta conversione.</xref:System.Data.DataColumn> Ad esempio, [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] consente a una colonna identity con un tipo di dati tinyint mentre un <xref:System.Data.DataColumn>consente solo Int16, Int32 e Int64 per avere la <xref:System.Data.DataColumn.AutoIncrement%2A>set di proprietà.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`Ignora senza avvisare i casi in cui il <xref:System.Data.DataColumn>non può eseguire un mirroring accurato dell&quot;origine dati e non genera eccezioni.</xref:System.Data.DataColumn>       Si noti che le chiavi primarie e i vincoli unique vengono aggiunti il <xref:System.Data.ConstraintCollection>in base alle regole precedenti, ma altri vincoli non vengono aggiunti i tipi.</xref:System.Data.ConstraintCollection>       Se il cluster univoco viene definito l&quot;indice in una colonna o colonne in una tabella di SQL Server e il vincolo di chiave primaria è definito in un set diverso di colonne, quindi verranno restituiti i nomi delle colonne nell&quot;indice cluster. Per restituire il nome o i nomi delle colonne chiave primaria, utilizzare un hint per la query con l&quot;istruzione SELECT che specifica il nome dell&quot;indice di chiave primaria. Per ulteriori informazioni sulla specifica di hint per la query, vedere [Hint per la Query (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Se il <xref:System.Data.Common.DataAdapter>rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot; e così via.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> Se i dati in ingresso contengano colonne senza nome, questi vengono collocati nel <xref:System.Data.DataSet>secondo il criterio &quot;Column1&quot;, &quot;Column2&quot; e così via.</xref:System.Data.DataSet> Quando più set di risultati vengono aggiunti per il <xref:System.Data.DataSet>ogni set di risultati viene inserito in una tabella separata.</xref:System.Data.DataSet> Set di risultati aggiuntivi sono denominati aggiungendo i valori integrali per il nome della tabella specificato (ad esempio, &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; e così via). Le applicazioni che utilizzano nomi di colonna e tabella è necessario assicurarsi che non si verifichino conflitti con questi modelli di denominazione.       FillSchema non restituisce alcuna riga. Utilizzare il <xref:System.Data.Common.DataAdapter.Fill%2A>metodo per aggiungere righe a un <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > Quando si gestiscono istruzioni SQL batch che restituiscono più risultati, l&quot;implementazione di <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>per il Provider di dati .NET Framework per OLE DB consente di recuperare informazioni sullo schema solo per il primo risultato.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Per recuperare informazioni sullo schema per più risultati, utilizzare <xref:System.Data.Common.DbDataAdapter.Fill%2A>con il <xref:System.Data.MissingSchemaAction>impostato su `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Il <xref href=&quot;System.Data.DataSet&quot;> </xref> in cui inserire lo schema dall&quot;origine dati."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uno del <xref href=&quot;System.Data.SchemaType&quot;> </xref> valori."
    return:
      type: System.Data.DataTable[]
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetto che contiene informazioni sullo schema restituite dall&quot;origine dati."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge un <xref href=&quot;System.Data.DataTable&quot;> </xref> specificata <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Il <xref href=&quot;System.Data.DataTable&quot;> </xref> da soddisfare con le <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uno del <xref href=&quot;System.Data.SchemaType&quot;> </xref> valori."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Il <xref href=&quot;System.Data.IDataReader&quot;> </xref> da utilizzare come origine dei dati durante la compilazione di <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> oggetto che contiene informazioni sullo schema restituite dall&quot;origine dati."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aggiunge un <xref href=&quot;System.Data.DataTable&quot;> </xref> specificata <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Il <xref href=&quot;System.Data.DataTable&quot;> </xref> da soddisfare con le <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uno del <xref href=&quot;System.Data.SchemaType&quot;> </xref> valori."
    - id: srcTable
      type: System.String
      description: "Il nome della tabella di origine da utilizzare per il mapping di tabella."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Il <xref href=&quot;System.Data.IDataReader&quot;> </xref> da utilizzare come origine dei dati durante la compilazione di <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable[]
      description: "Un riferimento a una raccolta di <xref href=&quot;System.Data.DataTable&quot;> </xref> gli oggetti che sono stati aggiunti per il <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene i parametri impostati dall&quot;utente durante l&quot;esecuzione di un&quot;istruzione SQL SELECT."
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "Matrice di <xref href=&quot;System.Data.IDataParameter&quot;> </xref> gli oggetti che contiene i parametri impostati dall&quot;utente."
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica se un <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> è stato creato."
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> è stato creato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina l&quot;azione da intraprendere quando i dati in arrivo non dispongono di una tabella o una colonna corrispondente."
  remarks: "La <xref:System.Data.Common.DataAdapter.TableMappings%2A>proprietà fornisce il mapping master tra i record restituiti e <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "Uno del <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore impostato non è incluso il <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina l&quot;azione da intraprendere quando <xref href=&quot;System.Data.DataSet&quot;> </xref> dello schema non corrisponde ai dati in ingresso."
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "Uno del <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore impostato non è incluso il <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Richiamato quando si verifica un errore durante un <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Reimposta <> </> *> ai relativi allo stato predefinito e cause &lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt; rispettare <> </> *>."
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene o imposta se la <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> metodo deve restituire valori specifici del provider oppure valori comuni conformi a CLS."
  remarks: "Il valore predefinito è `false`."
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> metodo deve restituire valori specifici del provider; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per restituire valori comuni conformi a CLS."
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se il <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>proprietà deve essere mantenuta.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>proprietà è persistente; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se il <xref:System.Data.Common.DataAdapter.FillLoadOption*>proprietà deve essere mantenuta.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Data.Common.DataAdapter.FillLoadOption*>proprietà è persistente; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se uno o più <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> presenti oggetti e deve essere resa persistente."
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uno o più <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> sono presenti oggetti; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica come una tabella di origine viene mappata a una tabella di set di dati."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Data.Common.DataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDataAdapter>interfaccia.</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       Per ulteriori informazioni, vedere <xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "Una raccolta che fornisce il mapping master tra i record restituiti e <xref href=&quot;System.Data.DataSet&quot;> </xref>. Il valore predefinito è una raccolta vuota."
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene una raccolta che fornisce il mapping master tra una tabella di origine e un <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Quando si risolvono le modifiche, <xref:System.Data.Common.DataAdapter>viene utilizzato l&quot; <xref:System.Data.Common.DataTableMappingCollection>insieme di associare i nomi delle colonne utilizzate dall&quot;origine dei dati con i nomi di colonna utilizzata da <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataTableMappingCollection> </xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Una raccolta che fornisce il mapping master tra i record restituiti e <xref href=&quot;System.Data.DataSet&quot;> </xref>. Il valore predefinito è una raccolta vuota."
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Chiama le rispettive istruzioni INSERT, UPDATE o DELETE per ogni inseriti, aggiornati o eliminati riga nell&quot;oggetto specificato <xref href=&quot;System.Data.DataSet&quot;> </xref> da un <xref href=&quot;System.Data.DataTable&quot;> </xref> denominato &quot;Table&quot;."
  remarks: "L&quot;aggiornamento viene eseguito dalla riga. Per ogni riga inserita, modificata ed eliminata, il metodo di aggiornamento determina il tipo di modifica che è stata eseguita su di esso (Insert, Update o Delete). A seconda del tipo di modifica, il `Insert`, `Update,` o `Delete` modello di comando viene eseguito per propagare la riga modificata l&quot;origine dati. Quando un&quot;applicazione chiama il metodo di aggiornamento, il <xref:System.Data.Common.DataAdapter>esamina il <xref:System.Data.DataRow.RowState%2A>, proprietà ed esegue le istruzioni INSERT, UPDATE o DELETE necessarie in modo iterativo per ogni riga, in base all&quot;ordine degli indici configurati nella <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DataAdapter> Ad esempio, aggiornamento potrebbe eseguire un&quot;istruzione DELETE, seguita da un&quot;istruzione INSERT e quindi un&quot;altra istruzione DELETE, a causa di ordinamento delle righe in <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Si noti che queste istruzioni non vengono eseguite come un processo batch. ogni riga viene aggiornata singolarmente. Un&quot;applicazione può chiamare il <xref:System.Data.DataSet.GetChanges%2A>in situazioni in cui è necessario controllare la sequenza di tipi di istruzione (ad esempio, inserire prima dell&quot;aggiornamento).</xref:System.Data.DataSet.GetChanges%2A> Per ulteriori informazioni, vedere [l&quot;aggiornamento di origini dati con DataAdapter](~/add/includes/ajax-current-ext-md.md).       Se le istruzioni INSERT, UPDATE o DELETE non sono state specificate, il metodo Update genererà un&quot;eccezione. Tuttavia, è possibile creare un <xref:System.Data.SqlClient.SqlCommandBuilder>o <xref:System.Data.OleDb.OleDbCommandBuilder>oggetto per generare automaticamente le istruzioni SQL per gli aggiornamenti a tabella singola, se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Quindi, generate da tutte le istruzioni SQL aggiuntive non si imposta la **CommandBuilder**. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Il metodo Update recupera le righe dalla tabella elencata nel primo mapping prima di eseguire un aggiornamento. Aggiorna quindi la riga utilizzando il valore di <xref:System.Data.IDbCommand.UpdatedRowSource%2A>proprietà.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> Tutte le eventuali righe restituite vengono ignorate.       Dopo che tutti i dati vengono caricati nuovamente il <xref:System.Data.DataSet>, il <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>viene generato l&quot;evento, consentendo all&quot;utente di controllare il riconciliato <xref:System.Data.DataSet>riga e le eventuali parametri di output restituiti dal comando.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Dopo una riga viene aggiornata correttamente, vengono accettate le modifiche di tale riga.       Quando si utilizza l&quot;aggiornamento, l&quot;ordine di esecuzione è il seguente: 1.  I valori di <xref:System.Data.DataRow>vengono spostati i valori dei parametri.</xref:System.Data.DataRow>      2.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Esegue il comando.      4.  Se il comando è impostato su `FirstReturnedRecord`, quindi il primo risultato restituito è inserito in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se sono presenti parametri di output, vengono inseriti in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>viene chiamato.</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> Questo caso verrà generato sia il <xref:System.Data.DataTable.RowChanging?displayProperty=fullName>e <xref:System.Data.DataTable.RowChanged?displayProperty=fullName>gli eventi per l&quot;aggiornamento <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataTable.RowChanged?displayProperty=fullName> </xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       Ogni comando associato <xref:System.Data.Common.DataAdapter>in genere è una raccolta di parametri associata a esso.</xref:System.Data.Common.DataAdapter> I parametri sono mappati alla riga corrente tramite il `SourceColumn` e `SourceVersion` le proprietà di un provider di dati `Parameter` classe. `SourceColumn`fa riferimento a un <xref:System.Data.DataTable>colonna che il <xref:System.Data.Common.DataAdapter>riferimenti per ottenere i valori dei parametri per la riga corrente.</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`fa riferimento al nome della colonna non mappata prima i mapping delle tabelle sono stati applicati. Se `SourceColumn` fa riferimento a una colonna inesistente, l&quot;azione eseguita dipende da uno dei seguenti <xref:System.Data.MissingMappingAction>valori.</xref:System.Data.MissingMappingAction>      | Valore di enumerazione | Azione eseguita |   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| Utilizzare i nomi delle colonne di origine e i nomi delle tabelle di <xref:System.Data.DataSet>se è presente alcun mapping. |   | `MissingMappingAction.Ignore`| Oggetto <xref:System.SystemException>viene generato.</xref:System.SystemException> </xref:System.Data.DataSet> Quando i mapping sono impostate esplicitamente, un mapping mancante per un parametro di input è in genere il risultato di un errore. |   | `MissingMappingAction.Error`| Viene generato un <xref:System.SystemException>. |       Il `SourceColumn` proprietà viene utilizzata anche per il mapping del valore per l&quot;output o i parametri di input/output del `DataSet`.</xref:System.SystemException> Se fa riferimento a una colonna inesistente, viene generata un&quot;eccezione.       Il `SourceVersion` proprietà di un provider di dati .NET `Parameter` classe determina se utilizzare la versione Original, Current o Proposed del valore della colonna. Questa funzionalità viene spesso utilizzata per includere i valori originali nella clausola WHERE di un&quot;istruzione UPDATE per verificare la presenza di eventuali violazioni alla concorrenza ottimistica.       Chiamare il <xref:System.Data.DataSet.AcceptChanges%2A>metodo o al <xref:System.Data.DataTable.AcceptChanges%2A>metodo verrà eseguito il commit di tutte le modifiche apportate <xref:System.Data.DataSet>o <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> Se uno di questi metodi vengono chiamato prima di <xref:System.Data.Common.DbDataAdapter.Update%2A>metodo viene chiamato, nessuna modifica verrà eseguito il commit quando il <xref:System.Data.Common.DbDataAdapter.Update%2A>metodo viene chiamato, a meno che non sono state apportate altre modifiche <xref:System.Data.DataSet.AcceptChanges%2A>o <xref:System.Data.DataTable.AcceptChanges%2A>è stato chiamato.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > Se si verifica un errore durante l&quot;aggiornamento di una riga, viene generata un&quot;eccezione e l&quot;esecuzione dell&quot;aggiornamento non è più disponibile. Per continuare l&quot;operazione di aggiornamento senza generare eccezioni quando viene rilevato un errore, impostare il <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>proprietà `true` prima di chiamare <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> È anche possibile rispondere agli errori in una riga all&quot;interno di `RowUpdated` evento di un oggetto DataAdapter. Per continuare l&quot;operazione di aggiornamento senza generare un&quot;eccezione all&quot;interno di `RowUpdated` evento, impostare la <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>proprietà del <xref:System.Data.Common.RowUpdatedEventArgs>per <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> Per ogni colonna che viene propagata all&quot;onUpdate di origine di dati, è necessario aggiungere un parametro per il `InsertCommand`, `UpdateCommand`, o `DeleteCommand`. Il `SourceColumn` proprietà del parametro deve essere impostata sul nome della colonna. Questa impostazione indica che il valore del parametro non è impostato manualmente, ma da cui proviene la colonna specifica nella riga attualmente elaborata."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Il <xref href=&quot;System.Data.DataSet&quot;> </xref> utilizzato per aggiornare l&quot;origine dati."
    return:
      type: System.Int32
      description: "Il numero di righe aggiornate correttamente dal <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La tabella di origine non è valida."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Un tentativo di eseguire un&quot;istruzione INSERT, UPDATE o DELETE ha effetto su alcun record."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
