### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  id: DispatcherUnhandledExceptionFilterEventArgs
  children:
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  langs:
  - csharp
  name: DispatcherUnhandledExceptionFilterEventArgs
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot;> </xref> evento."
  remarks: "Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento si verifica quando il codice in esecuzione tramite il <xref:System.Windows.Threading.Dispatcher>genera un&quot;eccezione che non è gestita.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>       Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento viene generato in primo luogo e se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>il DispatcherUnhandledExceptionFilterEventArgs è impostata su `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>non verrà generato l&quot;evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>"
  syntax:
    content: 'public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Threading.DispatcherEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherEventArgs.Dispatcher
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  id: Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Ottiene l&quot;eccezione generata durante l&quot;esecuzione di codice tramite il dispatcher."
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "L&quot;eccezione."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  id: RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Ottiene o imposta se l&quot;eccezione deve essere rilevata e i gestori eventi chiamati."
  remarks: "Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  Il <xref:System.Windows.Threading.Dispatcher.UnhandledException>viene generato per primo e se RequestCatch sul <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>è impostata su `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>non verrà generato l&quot;evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> </xref:System.Windows.Threading.Dispatcher.UnhandledException>       Un gestore precedente nell&quot;evento multicast potrà avere già impostato questa proprietà `false`, che indica che l&quot;eccezione non sarà rilevata.  Il comportamento di &quot;non si rilevano&quot; sostituiranno tutte le altre perché implica molto probabilmente uno scenario di debug."
  syntax:
    content: public bool RequestCatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledException&quot;> </xref> deve essere generato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.  Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherEventArgs
  isExternal: false
  name: System.Windows.Threading.DispatcherEventArgs
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
