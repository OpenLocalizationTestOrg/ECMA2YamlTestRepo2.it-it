### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "Supporta il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllare e fornisce un&quot;interfaccia per i controlli con associazione a dati per eseguire operazioni sui dati con oggetti business e dati."
  remarks: "La classe ObjectDataSourceView è progettata principalmente per essere utilizzato dai controlli con associazione a dati e non come oggetto programmabile nel codice della pagina.       La classe ObjectDataSourceView implementa le funzionalità per il <xref:System.Web.UI.WebControls.ObjectDataSource>controllare, tra cui la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operazioni di ordinamento, filtro e gestione delle impostazioni mantenute in stato di visualizzazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Per ogni istanza di viene creato un oggetto di ObjectDataSourceView la <xref:System.Web.UI.WebControls.ObjectDataSource>classe in fase di esecuzione.</xref:System.Web.UI.WebControls.ObjectDataSource> Le chiamate alle operazioni sui dati dell&quot;istanza del <xref:System.Web.UI.WebControls.ObjectDataSource>classe vengono gestite dall&quot;istanza dell&quot;oggetto ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource> Gli sviluppatori di pagine non accedono all&quot;istanza della classe ObjectDataSourceView direttamente. Gli sviluppatori di controlli è possibile creare controlli di dati personalizzato estendendo il <xref:System.Web.UI.WebControls.ObjectDataSource>e classi ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource>       La classe ObjectDataSourceView esegue operazioni di dati mediante la chiamata di metodi su oggetti di dati aziendali o tramite reflection. In fase di esecuzione, il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo crea un&quot;istanza del tipo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>proprietà, quindi chiama il metodo appropriato per l&quot;operazione di dati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> L&quot;oggetto di un&quot;istanza non memorizzati nella cache in memoria il ObjectDataSourceView. L&quot;oggetto viene creato e distrutto per ogni chiamata al metodo dati. Se il metodo è `static` (`Shared` in Visual Basic), non viene creata un&quot;istanza, ma viene ancora chiamato il metodo di operazione di dati.       Il ObjectDataSourceView non è direttamente esposto agli sviluppatori di pagine per il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo.</xref:System.Web.UI.WebControls.ObjectDataSource> Al contrario, le proprietà e metodi di ObjectDataSourceView sono accessibili tramite <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> Ad esempio, il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>di ObjectDataSourceView proprietà è impostata tramite l&quot;impostazione della <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>proprietà di <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## Il recupero di dati, l&quot;operazione più semplice che esegue una vista origine dati è il recupero dei dati dall&quot;archivio dati sottostante utilizzando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo che recupera un <xref:System.Collections.IEnumerable>raccolta di elementi di dati.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> I metodi di recupero di dati seguenti, proprietà ed eventi sono implementati dall&quot;oggetto ObjectDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.ObjectDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo - il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>proprietà - il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>evento - il <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>evento # # l&quot;aggiornamento di dati ObjectDataSourceView l&quot;oggetto supporta gli aggiornamenti dei dati chiamando un metodo dell&quot;oggetto business o i dati che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controlli con associazione a dati che eseguono automaticamente gli aggiornamenti, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>controlli, passano i relativi parametri in un <xref:System.Collections.Specialized.IOrderedDictionary>interfaccia per il ObjectDataSourceView e l&quot;oggetto visualizzazione unisce questi parametri a tutti i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       I metodi di aggiornamento seguenti, proprietà ed eventi implementati dal ObjectDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.ObjectDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metodo - il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>- proprietà il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>evento - il <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento # # inserimento di dati ObjectDataSourceView l&quot;oggetto supporta l&quot;inserimento di nuove righe di dati chiamando un metodo dell&quot;oggetto business o i dati che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controlli con associazione a dati che eseguono automaticamente comandi di inserimento, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passano i relativi parametri in un <xref:System.Collections.Specialized.IOrderedDictionary>interfaccia per il ObjectDataSourceView e l&quot;oggetto visualizzazione unisce questi parametri a tutti i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Inserimento riportati di seguito metodi, proprietà e gli eventi vengono implementati dal ObjectDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.ObjectDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>metodo - il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>- proprietà il <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>evento - il <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento # # l&quot;eliminazione di dati ObjectDataSourceView l&quot;oggetto supporta l&quot;eliminazione dei dati chiamando un metodo dell&quot;oggetto business o i dati che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controlli con associazione a dati che eseguono automaticamente eliminazioni, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passano i relativi parametri in un <xref:System.Collections.Specialized.IOrderedDictionary>interfaccia per il ObjectDataSourceView e l&quot;oggetto visualizzazione unisce questi parametri a tutti i parametri in di <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Eliminazione riportati di seguito metodi, proprietà e gli eventi vengono implementati dal ObjectDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.ObjectDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metodo - il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>- proprietà il <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>- proprietà il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>evento - il <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>evento # # il recupero di operazioni di filtro e ordinamento dei dati è più potente, quando è possibile filtrare i dati in modo dinamico.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Il filtro è supportato solo per il <xref:System.Web.UI.WebControls.ObjectDataSource>controllare se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataTable>o <xref:System.Data.DataSet>oggetto.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> È possibile utilizzare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>le proprietà per applicare i filtri dinamici per il recupero dei dati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Queste proprietà sono implementate dall&quot;oggetto ObjectDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.ObjectDataSource>controllo per i controlli associati a dati e ad altri chiamanti.</xref:System.Web.UI.WebControls.ObjectDataSource>       È possibile ordinare i dati recuperati con il <xref:System.Web.UI.WebControls.ObjectDataSource>ordinando i dati in memoria dopo averli recuperati.</xref:System.Web.UI.WebControls.ObjectDataSource> L&quot;ordinamento è supportato solo per il <xref:System.Web.UI.WebControls.ObjectDataSource>controllare se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataTable>o <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>proprietà restituisce sempre `true`, in quanto il ObjectDataSourceView non è possibile determinare il tipo restituito per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo senza chiamare il metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> Il <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>sintassi della proprietà è lo stesso come per un <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>proprietà.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## Visualizzazione dello stato di ObjectDataSourceView di rilevamento implementa il <xref:System.Web.UI.IStateManager>interfaccia e utilizza lo stato per tenere traccia di stato nelle richieste di pagine di visualizzazione.</xref:System.Web.UI.IStateManager> Implementazione del <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>vengono forniti metodi per abilitare la traccia dello stato di visualizzazione per il controllo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> classe."
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView>costruttore viene chiamato dal <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>per restituire una nuova istanza di una vista origine dati con l&quot;oggetto specificato `viewName` parametro.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo è associato a un solo <xref:System.Web.UI.WebControls.ObjectDataSourceView>in qualsiasi momento e denomina sempre la visualizzazione `DefaultView`, nonostante questa limitazione di denominazione venga imposta dal <xref:System.Web.UI.WebControls.ObjectDataSource>controllo, non il <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> È possibile eseguire l&quot;override di <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>metodo per supportare visualizzazioni con una convenzione di denominazione diversa.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       Il <xref:System.Web.HttpContext>oggetto che viene passato per `context` viene utilizzato dalla vista origine dati per accedere agli oggetti parametro, ad esempio <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "Il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> è associato."
    - id: name
      type: System.String
      description: "Un nome univoco per la vista origine dati, all&quot;interno dell&quot;ambito del controllo origine dati che ne è proprietario."
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta l&quot;operazione di eliminazione."
  remarks: "La proprietà restituisce CanDelete `true`, se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Un&quot;operazione di eliminazione potrebbe avere esito negativo se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. L&quot;eliminazione non è supportata se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>proprietà è una stringa vuota (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta l&quot;operazione di inserimento."
  remarks: "La proprietà restituisce CanInsert `true`, se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Un&quot;operazione di inserimento potrebbe avere esito negativo se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Inserimento non è supportato se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà è una stringa vuota.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta il paging dei dati recuperati."
  remarks: "La proprietà CanPage indica se il <xref:System.Web.UI.WebControls.ObjectDataSourceView>oggetto supporta il paging.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Per informazioni su come è supportato il paging <xref:System.Web.UI.WebControls.ObjectDataSourceView>vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se il <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>è impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta il recupero del numero totale di righe di dati, oltre al set di dati."
  remarks: "La proprietà restituisce CanRetrieveTotalRowCount `true`, se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Il metodo che restituisce il conteggio deve restituire il numero totale di righe che possono essere di paging, non il numero di righe in una pagina. Controlli con associazione a dati utilizzano il numero totale di righe che possono essere trasferite per determinare come eseguire il rendering di controlli di spostamento. Quanti pulsanti pager numerico, ad esempio, eseguire il rendering in un <xref:System.Web.UI.WebControls.GridView>pager di controllo.</xref:System.Web.UI.WebControls.GridView> Per ulteriori informazioni sul supporto di paging, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       Durante una chiamata a viene controllata la proprietà CanRetrieveTotalRowCount il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>metodo per assicurarsi che il controllo origine dati supporta tutte le funzionalità richieste impostando le varie <xref:System.Web.UI.DataSourceSelectArguments>proprietà.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta una visualizzazione ordinata dell&quot;origine dati sottostante."
  remarks: "Poiché il <xref:System.Web.UI.WebControls.ObjectDataSource>supporta solo l&quot;ordinamento dei dati di controllo quando il <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo restituisce un <xref:System.Data.DataSet>, <xref:System.Data.DataView>, o <xref:System.Data.DataTable>dell&quot;oggetto, l&quot;oggetto visualizzazione non è possibile determinare se l&quot;ordinamento è supportato fino a quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo viene chiamato e restituisce.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Per questo motivo, la proprietà CanSort restituisce sempre `true`."
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo supporta l&quot;operazione di aggiornamento."
  remarks: "La proprietà restituisce CanUpdate `true`, se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Un&quot;operazione di aggiornamento potrebbe avere esito negativo se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. L&quot;aggiornamento non è supportato se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà è una stringa vuota (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che determina il modo in <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo esegue aggiornamenti ed eliminazioni quando i dati in una riga nell&quot;archivio dati sottostante durante la fase dell&quot;operazione."
  remarks: "La proprietà ConflictDetection determina se i parametri per i valori vecchi e nuovi vengono applicati per la `Update` metodo. Ad esempio, se il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>proprietà restituisce un <xref:System.Data.DataTable>oggetto con le colonne `Name` e `Number`, e la proprietà ConflictDetection è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per `Name` e `Number` per il `Update` (metodo).</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Se è impostata la proprietà ConflictDetection il <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati con i nomi `Name`, `Number`, `original_Name`, e `original_Name`.</xref:System.Web.UI.ConflictOptions> (Il nome esatto dei parametri per i valori originali dipende il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Il <xref:System.Web.UI.WebControls.ObjectDataSourceView>determina se il metodo specificato nella <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>proprietà presenta parametri corrispondenti.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Controllo della concorrenza è una tecnica utilizzata per controllare la modalità di lettura e modifica nell&quot;archivio quando più client accedono e modificano gli stessi dati dati dagli archivi dati. Ad esempio, un client legge i dati e visualizza all&quot;utente, mentre un altro client legge gli stessi dati e presenta a un altro utente. Se entrambi gli utenti di aggiornano i dati e inviano per l&quot;archiviazione dei dati, potrebbero verificarsi risultati imprevisti, poiché entrambi i client potrebbero fornire valori diversi per gli stessi dati. Questa viene considerata un conflitto. Impostando la proprietà ConflictDetection sul <xref:System.Web.UI.ConflictOptions>valore, il `Update` metodo può confrontare i valori vecchi e nuovi per l&quot;origine dei dati per rilevare i conflitti e gestirli, in base alle esigenze.</xref:System.Web.UI.ConflictOptions>       Il valore della ConflictDetection proprietà è archiviato nella vista stato."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uno del <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> valori passati a un&quot;operazione di aggiornamento, insert o delete vengono automaticamente convertiti da <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per il <xref href=&quot;System.DBNull.Value&quot;> </xref> valore."
  remarks: "Conversione non `null` per il <xref:System.DBNull.Value?displayProperty=fullName>valore può causare errori in fase di esecuzione.</xref:System.DBNull.Value?displayProperty=fullName> Utilizzare la proprietà ConvertNullToDBNull per indicare se il <xref:System.Web.UI.WebControls.Parameter>valori passati a un aggiornamento, inserimento o un&quot;operazione di eliminazione vengono automaticamente convertiti da `null` per il <xref:System.DBNull.Value?displayProperty=fullName>valore.</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> in <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> gli oggetti passati al <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene convertito automaticamente nel <xref href=&quot;System.DBNull.Value&quot;> </xref> valore; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome di una classe che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo utilizza per un parametro in un&quot;operazione di dati. Il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo utilizza la classe specificata anziché il <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> gli oggetti nelle raccolte di parametri diversi."
  remarks: "Anziché specificare diversi parametri che vengono passati al `Select`, `Update`, `Insert`, e `Delete` metodi, è possibile creare un oggetto che consente di aggregare i diversi elementi. Questo oggetto viene passato ai metodi, anziché i parametri diversi. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "Un nome di classe parziale o completo che identifica il tipo dell&quot;oggetto che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> può utilizzare come parametro per un <> </> *>, <> </> *>, o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>operazione.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di eliminazione chiamando il metodo dell&quot;oggetto business che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>proprietà utilizzando l&quot;oggetto specificato <code> keys </code> e <code> oldValues </code> raccolte.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Il valore predefinito è -1, il che significa che un numero sconosciuto di righe sono stato eliminato. Per restituire un valore diverso, impostare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto del <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>gestore dell&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Il numero di righe interessate è in genere restituito dal `Delete` metodo per l&quot;oggetto business e tale valore è disponibile il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parametro del <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>gestore dell&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Le chiamate al metodo elimina il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>, passando il `keys` e `oldValues` raccolte.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>dei valori di chiave utilizzati per identificare l&quot;elemento da eliminare.</xref:System.Collections.IDictionary> Questi parametri vengono utilizzati con la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>proprietà per eseguire l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>che contiene i valori non chiave aggiuntivi utilizzati per individuare l&quot;elemento nell&quot;origine dati.</xref:System.Collections.IDictionary> I valori di riga vengono passati al metodo solo se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "Il numero di righe eliminate; in caso contrario, -1 se il numero non è noto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Gestire l&quot;evento Deleted per esaminare i valori di un valore restituito e i parametri di output o per determinare se è stata generata un&quot;eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> Il valore restituito, i parametri di output e le proprietà di gestione delle eccezioni sono disponibili le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto richiama per eliminare i dati."
  remarks: "Il metodo identificato dalla proprietà DeleteMethod può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l&quot;oggetto business viene creato ed eliminato ogni volta che viene chiamato il metodo specificato dalla proprietà DeleteMethod. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento da utilizzare con l&quot;oggetto business prima di chiamare il metodo specificato dalla proprietà DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento che viene generato dopo che viene chiamato il metodo specificato dalla proprietà DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> Se il metodo è un `static` (`Shared` in Visual Basic) (metodo), l&quot;oggetto business mai creato e non sarà possibile gestire questi eventi.       Se l&quot;oggetto business che il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo implementa più di un metodo o funzione con lo stesso nome (overload), il controllo origine dati tenta di richiamare più appropriato in base a un set di condizioni, inclusi i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>insieme non corrispondono a quelle della firma del metodo DeleteMethod, l&quot;origine dati genera un&quot;eccezione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       Il valore della proprietà è DeleteMethod archiviati nella visualizzazione stato.       Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "Una stringa che rappresenta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene utilizzato per eliminare i dati. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "I nomi e i tipi dei parametri contenuti nella raccolta DeleteParameters devono corrispondere i nomi e i tipi dei parametri del metodo specificato da di <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>firma della proprietà specificati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> I nomi di parametro sono interessati i <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>proprietà e sono tra maiuscole e minuscole.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Quando si lavora con i controlli con associazione a dati che forniscono parametri, ad esempio <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>controllo unisce automaticamente i parametri specificati in modo esplicito nella raccolta con i parametri forniti dal controllo con associazione a dati.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati dal metodo specificato per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Gestire l&quot;evento di eliminazione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.ObjectDataSource>controllo esegue il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> I parametri sono disponibili come un <xref:System.Collections.IDictionary>raccolta a cui si accede tramite il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il controllo origine dati supporta il paging il set di dati recuperati."
  remarks: "Il paging dal <xref:System.Web.UI.WebControls.ObjectDataSourceView>controllo viene gestito impostando EnablePaging, <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>le proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceView>e definendo un `Select` metodo nell&quot;oggetto business con i parametri appropriati.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Quando EnablePaging è impostata `true`, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>raccolta include due parametri aggiuntivi per la prima riga richiesta e il numero di righe richiesto.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Questi due parametri sono denominati come definito per il <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> Il `Select` metodo deve restituire il numero richiesto di righe a partire dall&quot;indice specificato. Poiché i dati potrebbero non essere divisi in modo uniforme le dimensioni di pagina, l&quot;ultima pagina potrebbe contenere un numero inferiore di righe. Di conseguenza, il numero di righe richiesto è effettivamente il numero massimo di righe restituite.       Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>proprietà è selezionata, durante una chiamata al <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>metodo per assicurarsi che il controllo origine dati supporta tutte le funzionalità richieste impostando le varie <xref:System.Web.UI.DataSourceSelectArguments>proprietà.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       Quando è abilitato il paging sul controllo con associazione a dati associato, il controllo con associazione a dati chiama il `Select` metodo con l&quot;indice iniziale e il numero di righe che sono necessari. Inoltre, se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>è impostata, il controllo associato a dati chiama il metodo prima del rendering dei controlli pager.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Ad esempio, se un <xref:System.Web.UI.WebControls.GridView>controllo paging è abilitato con una dimensione di pagina pari a 5 e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>restituisce 20, verranno visualizzate solo 4 pagine nel pager.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       Il valore della EnablePaging è archiviato nella vista stato."
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se il controllo origine dati supporta il paging dei dati recupera; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di eliminazione utilizzando la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>(metodo) e il valore specificato <code> keys </code> e <code> oldValues </code> insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "La <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa il metodo ExecuteDelete ereditato per eliminare i dati da un archivio dati sottostante tramite un oggetto business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteDelete direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       Prima di eseguita l&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       Per eseguire un&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView>utilizza la reflection per chiamare il metodo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>proprietà e i relativi parametri di `keys` e `oldValues` raccolte e quindi viene eseguita tale</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore e per eseguire la post-elaborazione."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>di parametri utilizzati con la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>proprietà per eseguire l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>che contiene i valori di riga vengono valutati solo se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Il numero di righe eliminate; in caso contrario, -1 se il numero non è noto. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>restituisce proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore e non i valori vengono passati il <code> oldValues </code> insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di inserimento chiamando il metodo dell&quot;oggetto business che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà utilizzando l&quot;oggetto specificato <code> values </code> insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "La <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa il metodo ExecuteInsert ereditato per inserire dati in un archivio dati sottostante tramite un oggetto business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteInsert direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Prima di eseguita l&quot;istruzione insert, la <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Per eseguire un&quot;operazione di inserimento, la <xref:System.Web.UI.WebControls.ObjectDataSourceView>controllo utilizza la reflection per chiamare il metodo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>proprietà e i relativi parametri il `values` insieme e quindi viene eseguita tale</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> È possibile gestire questo evento per esaminare i valori restituiti, i codici di errore ed eseguire la post-elaborazione.       Per ulteriori informazioni sulla restituzione del numero di righe inserite, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>di parametri utilizzati con la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà per eseguire l&quot;operazione di inserimento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il numero di righe inserite; in caso contrario, -1 se il numero non è noto. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>restituisce proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o vuoto."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera i dati dall&quot;oggetto identificato dal <> </> *> proprietà chiamando il metodo è identificata dal <> </> *> proprietà e passando i valori nel <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "La <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa il metodo ExecuteSelect ereditato per recuperare i dati tramite un oggetto business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteSelect direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Il metodo specificato può avere una firma di metodo, ma deve restituire uno dei tipi per il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo elencati nella tabella seguente per chiamata abbia esito positivo.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Tipo restituito | Azione |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| Il <xref:System.Collections.IEnumerable>viene restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Un <xref:System.Data.DataView>verrà creato utilizzando il <xref:System.Data.DataTable>e restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| Il primo <xref:System.Data.DataTable>il <xref:System.Data.DataSet>viene estratto e un <xref:System.Data.DataView>viene creata e restituita dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| L&quot;oggetto è stato eseguito il wrapping in un elemento <xref:System.Collections.IEnumerable>e restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Prima di eseguita il recupero di dati, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima dell&quot;operazione.       Per eseguire un&quot;operazione di selezione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView>controllo utilizza la reflection per chiamare il metodo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>proprietà e i relativi parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>insieme, quindi viene eseguita tale</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore e per eseguire la post-elaborazione.       Se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataSet>oggetto e la memorizzazione nella cache è abilitata, il <xref:System.Web.UI.WebControls.ObjectDataSourceView>Recupera i dati e Salva i dati nella cache durante l&quot;operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> La cache viene creata, annullata o aggiornata in base al comportamento di memorizzazione nella cache che viene specificato tramite la combinazione del <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       Se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataSet>oggetto e un <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>proprietà è stata specificata, viene valutato insieme a eventuali fornito <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>proprietà e il filtro risultante viene applicato all&quot;elenco di dati durante il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Per informazioni sulla restituzione del numero di righe selezionate, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizzato per operazioni di richiesta dei dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Oggetto <xref:System.Collections.IEnumerable>elenco di righe di dati.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di aggiornamento chiamando il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà e utilizzando i parametri forniti nel <code> keys </code>, <code> values </code>, o <code> oldValues </code> raccolte.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "La <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa il metodo ExecuteUpdate ereditato per aggiornare i dati utilizzando un oggetto business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteUpdate direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       I valori contenuti nel `keys` e `values` raccolte vengono valutate e unite ai valori che sono contenuti il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> Se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i valori contenuti nel `oldValues` raccolta formattati con il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>proprietà e vengono unite anche.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Prima di eseguita l&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima dell&quot;aggiornamento. Per eseguire un&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.ObjectDataSourceView>utilizza la reflection per chiamare il metodo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>proprietà e i relativi parametri di `keys` insieme e quindi viene eseguita tale</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> È possibile gestire questo evento per esaminare i valori restituiti, i codici di errore ed eseguire la post-elaborazione.       Per ulteriori informazioni sulla restituzione del numero di righe aggiornate, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>di chiavi primarie da utilizzare con il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se non sono presenti chiavi associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>di valori da utilizzare con il <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>che rappresenta i valori originali nell&quot;archivio dati sottostante.</xref:System.Collections.IDictionary> Se non esistono parametri associati alla query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il numero di righe aggiornate; o -1, se il numero non è noto. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>restituisce proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un&quot;espressione di filtro che viene applicata quando il metodo dell&quot;oggetto business che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>proprietà viene chiamata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo supporta il filtraggio dei dati solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataSet>, <xref:System.Data.DataView>, o <xref:System.Data.DataTable>oggetto.</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       La sintassi utilizzata per la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà è un&quot;espressione di tipo stringa di formato.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> La sintassi dell&quot;espressione di filtro è la stessa sintassi è accettata dal <xref:System.Data.DataView.RowFilter%2A>proprietà perché l&quot;espressione di filtro è applicata al <xref:System.Data.DataView.RowFilter%2A>proprietà del <xref:System.Data.DataView>oggetto restituito dall&quot;esecuzione di <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>(metodo).</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (Per ulteriori informazioni, vedere <xref:System.Data.DataColumn.Expression%2A>.)</xref:System.Data.DataColumn.Expression%2A> Se si aggiungono parametri per il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>insieme, è anche possibile includere segnaposto della stringa di formato, ad esempio `&quot;{0}&quot;`, nell&quot;espressione per sostituire i valori dei parametri.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> I segnaposto vengono sostituiti in base all&quot;indice del parametro di <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       È possibile includere parametri di <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Se il tipo del parametro è di tipo stringa o carattere, racchiuderlo tra virgolette singole. Virgolette non sono necessari se il parametro è un tipo numerico. La <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>raccolta contiene i parametri che vengono valutati per i segnaposto nella <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       Il valore della FilterExpression proprietà è archiviato nella vista stato.      > [!IMPORTANT] > È consigliabile convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell&quot;espressione di filtro e si applica al <xref:System.Data.DataView>oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà come misura di sicurezza per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima dell&quot;esecuzione del filtraggio.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un&quot;espressione di filtro applicata quando vengono recuperati utilizzando il metodo dell&quot;oggetto business identificato le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stata impostata la proprietà FilterExpression e <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>metodo non restituisce un <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di filtro."
  remarks: "Gestire il <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>evento per eseguire le operazioni di convalida sui valori dei parametri di filtro prima di <xref:System.Web.UI.WebControls.ObjectDataSource>controllo esegue un&quot;operazione di filtro.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> È possibile annullare il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operazione impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>oggetto `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> L&quot;evento viene generato solo se il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell&quot;espressione di filtro e si applica al <xref:System.Data.DataView>oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà come misura di sicurezza per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima dell&quot;esecuzione del filtraggio.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene una raccolta di parametri associati a un segnaposto di parametri in di <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>stringa.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo supporta il filtraggio dei dati solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo restituisce un <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, o <xref:System.Data.DataView>oggetto.</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       I parametri nella raccolta FilterParameters sono associati ai parametri specificati nella <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> I segnaposto di parametri che vengono specificati nel <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>proprietà corrispondono agli oggetti parametro nella raccolta FilterParameters quando il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>proprietà viene chiamata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene un set di parametri associati ai segnaposto di parametro, vedere il <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <> </> *> proprietà è stata impostata e <> </> *> metodo non restituisce un <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di inserimento chiamando il metodo dell&quot;oggetto business che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà utilizzando l&quot;oggetto specificato <code> values </code> insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Il valore predefinito è -1, il che significa che è stato inserito un numero sconosciuto di righe. Per restituire un valore diverso, impostare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto del <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Il numero di righe interessate è in genere restituito dal `Insert` metodo per l&quot;oggetto business e tale valore è disponibile il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto del <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Le chiamate del metodo Insert di <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>, passando il `values` insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>raccolta di parametri utilizzati con la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà per eseguire l&quot;operazione di inserimento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il numero di righe inserite; in caso contrario, -1 se il numero non è noto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>restituisce proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Gestire l&quot;evento Inserted per esaminare i valori di un valore restituito e i parametri di output o per determinare se è stata generata un&quot;eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> Il valore restituito, i parametri di output e le proprietà di gestione delle eccezioni sono disponibili le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Gestire l&quot;evento di inserimento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.ObjectDataSource>controllo esegue il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> I parametri sono disponibili come un <xref:System.Collections.IDictionary>raccolta a cui si accede tramite il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto richiama per inserire i dati."
  remarks: "Il metodo identificato dalla proprietà InsertMethod può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l&quot;oggetto business viene creato ed eliminato ogni volta che viene chiamato il metodo specificato dalla proprietà InsertMethod. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento da utilizzare con l&quot;oggetto business prima di chiamare il metodo specificato dalla proprietà InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento che viene generato dopo che viene chiamato il metodo specificato dalla proprietà InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` viene chiamato solo se l&quot;oggetto business implementa il <xref:System.IDisposable>interfaccia.)</xref:System.IDisposable> Se il metodo è un `static` (`Shared` in Visual Basic) (metodo), l&quot;oggetto business mai creato e non sarà possibile gestire questi eventi.       Se l&quot;oggetto business che il <xref:System.Web.UI.WebControls.ObjectDataSource>oggetto implementa più di un metodo o funzione con lo stesso nome (overload), il controllo origine dati tenta di richiamare più appropriato in base a un set di condizioni, inclusi i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>insieme non corrispondono a quelli del metodo specificato dalla firma della proprietà InsertMethod, l&quot;origine dati genera un&quot;eccezione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       Il valore della proprietà è InsertMethod archiviati nella visualizzazione stato.       Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "Una stringa che rappresenta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene utilizzato per inserire dati. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "I nomi e i tipi dei parametri contenuti nella raccolta InsertParameters devono corrispondere i nomi e i tipi dei parametri del metodo specificato da di <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>firma della proprietà specificati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Quando si lavora con i controlli con associazione a dati che forniscono parametri, ad esempio <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>controllo unisce automaticamente i parametri specificati in modo esplicito nella raccolta con i parametri forniti dal controllo con associazione a dati.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto Salva le modifiche apportate allo stato di visualizzazione."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se la vista origine dati è contrassegnata per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ripristina lo stato di visualizzazione per la vista origine dati viene salvato in precedenza."
  remarks: "Questo metodo viene utilizzato principalmente dall&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice.  Tuttavia, gli sviluppatori di controlli possono eseguire l&quot;override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Il metodo LoadViewState Ripristina le informazioni sullo stato di visualizzazione per il <xref:System.Web.UI.WebControls.ObjectDataSourceView>oggetto da una richiesta di pagina precedente salvata dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Oggetto che rappresenta il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> ripristinare lo stato."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del parametro del metodo di recupero dei dati che viene utilizzato per indicare il numero di record da recuperare per supporto di paging dell&quot;origine dati."
  remarks: "La proprietà MaximumRowsParameterName viene utilizzata per supportare il paging dell&quot;origine dati. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       Il valore della MaximumRowsParameterName proprietà è archiviato nella vista stato."
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "Il nome del parametro del metodo utilizzato per indicare il numero di record da recuperare. Il valore predefinito è `&quot;maximumRows&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto crea un&quot;istanza del tipo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Gestire l&quot;evento ObjectCreated per chiamare altri metodi nell&quot;oggetto business, impostare le proprietà, o per eseguire altri inizializzazione specifica per l&quot;oggetto business prima di <xref:System.Web.UI.WebControls.ObjectDataSource>chiamate di controllo di `Data` metodi per l&quot;oggetto business.</xref:System.Web.UI.WebControls.ObjectDataSource> Un riferimento all&quot;oggetto avviene mediante il <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se il metodo identificato per eseguire l&quot;operazione di dati è `static` (`Shared` in Visual Basic), il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>e ObjectCreated mai generati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto crea un&quot;istanza del tipo identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo chiama automaticamente il costruttore predefinito di un oggetto business per creare un&quot;istanza di tramite reflection.</xref:System.Web.UI.WebControls.ObjectDataSource> Gestire l&quot;evento ObjectCreating chiamare in modo esplicito un altro costruttore e per impostare l&quot;istanza dell&quot;oggetto risultante per la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>proprietà dell&quot;oggetto associato <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Se il metodo identificato per eseguire l&quot;operazione di dati è `static` (`Shared` in Visual Basic), il ObjectCreating e <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>mai vengono generati eventi.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto elimina un&quot;istanza di un oggetto che ha creato."
  remarks: "L&quot;evento ObjectDisposing viene generato prima che venga eliminata l&quot;istanza dell&quot;oggetto business. Se l&quot;oggetto business implementa il <xref:System.IDisposable>interfaccia, il <xref:System.IDisposable.Dispose%2A>metodo viene chiamato dopo ObjectDisposing l&quot;evento viene generato.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       Gestire l&quot;evento ObjectDisposing per chiamare altri metodi per l&quot;oggetto e impostare le proprietà o per eseguire la pulitura specifica per l&quot;oggetto prima che l&quot;oggetto viene eliminato. Un riferimento all&quot;oggetto avviene mediante il <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se il metodo identificato per eseguire l&quot;operazione di dati è `static` (`Shared` in Visual Basic), l&quot;evento ObjectDisposing non viene mai generato."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una stringa di formato da applicare ai nomi dei parametri per i valori originali che vengono passati al <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metodi."
  remarks: "La stringa di formato OldValuesParameterFormatString viene applicata alle chiavi primarie solo, ad esempio quelle che vengono identificati con il `DataKeyNames` proprietà di un controllo con associazione a dati o eliminare e aggiornare gli scenari, in cui il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e il set di valori originali che vengono passati al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Due scenari comuni in cui è possibile modificare la proprietà OldValuesParameterFormatString sono i seguenti: - per distinguere tra i valori vecchi e nuovi aggiornamenti. Quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono aggiunti i valori originali e quelli nuovi per il <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Senza la stringa di formattazione, verranno creati due parametri con lo stesso nome per ogni campo dati. Se si modifica il nome del parametro del valore originale, è possibile confrontare i dati di origine dei dati per rilevare i conflitti e confrontare i valori di chiave.      -Alcune finestre di progettazione visiva implementano uno schema di denominazione specifico per le chiavi e i valori originali.       Il valore di OldValuesParameterFormatString viene archiviato nello stato di visualizzazione."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta una stringa di formato applicata ai nomi di qualsiasi <code> oldValues </code> passato per il <> </> *> o <> </> *> metodo. Il valore predefinito è &quot;{0}&quot;, ovvero che il nome del parametro è semplicemente il nome del campo."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto è stata completata un&quot;operazione di eliminazione."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnDeleted consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto tenta un&quot;operazione di eliminazione."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnDeleting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto tenta un&quot;operazione di filtraggio."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnFiltering consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto è stata completata un&quot;operazione di inserimento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnInserted consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto tenta un&quot;operazione di inserimento."
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>metodo viene chiamato solo se il metodo identificato per eseguire l&quot;operazione di dati non è `static` (`Shared` in Visual Basic).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnInserting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> crea un&quot;istanza dell&quot;oggetto identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Viene chiamato il metodo OnObjectCreated, solo se il metodo identificato per eseguire l&quot;operazione di dati non è `static` (`Shared` in Visual Basic).       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       Il metodo OnObjectCreated consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto crea un&quot;istanza di un oggetto business per eseguire un&quot;operazione di dati."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnObjectCreating consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto elimina un tipo istanziato."
  remarks: "Il OnObjectDisposing viene chiamato quando viene eliminata l&quot;istanza di un oggetto che è stato creato per eseguire un&quot;operazione di dati. Il `Dispose` metodo viene chiamato solo se il tipo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>implementa proprietà di <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnObjectDisposing consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto è stata completata un&quot;operazione di recupero di dati."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnSelected consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto tenta un&quot;operazione di recupero di dati."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnSelecting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto è stata completata un&quot;operazione di aggiornamento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo su aggiornato consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto tenta un&quot;operazione di aggiornamento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnUpdating consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Un <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene una o imposta un valore che indica quali informazioni sulle impostazioni cultura viene utilizzati quando la conversione di valori stringa ai tipi di proprietà effettivo per costruire un oggetto del tipo indicato <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "Le informazioni sulle impostazioni cultura. Il valore predefinito è <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva le modifiche apportate allo stato di visualizzazione per il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto dopo il postback quando la pagina al server."
  remarks: "Il metodo SaveViewState viene utilizzato principalmente dagli sviluppatori di controlli.       Lo stato di visualizzazione è costituito da tutti i valori delle proprietà di un controllo server. Questi valori vengono inseriti automaticamente nella <xref:System.Web.UI.Control.ViewState%2A>proprietà per il controllo server, che è un&quot;istanza della <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Il <xref:System.Web.UI.Control.ViewState%2A>valore viene quindi inserito in un oggetto stringa dopo la fase di salvataggio dello stato del ciclo di vita del controllo server.</xref:System.Web.UI.Control.ViewState%2A>       Quando viene salvato lo stato di visualizzazione, il contenuto dello stato di visualizzazione viene restituito al client come una variabile che viene archiviata in un elemento HTML `Hidden` elemento. Quando si creano controlli server personalizzati, è possibile migliorare l&quot;efficienza eseguendo l&quot;override del metodo SaveViewState e modificando il `ViewState` proprietà del controllo server. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "L&quot;oggetto che contiene le modifiche per il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> stato visualizzazione; in caso contrario <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se non è alcuno stato di visualizzazione associato all&quot;oggetto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera i dati dall&quot;oggetto identificato dal <> </> *> proprietà chiamando il metodo è identificata dal <> </> *> proprietà e passando i valori nel <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "Le chiamate del metodo Select il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>passando il `arguments` parametro.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizzato per operazioni di richiesta dei dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Un <xref:System.Collections.IEnumerable>elenco di righe di dati.</xref:System.Collections.IEnumerable> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <code> arguments </code> passato selezionare metodo specificare che l&quot;origine dati deve eseguire alcune operazioni aggiuntive durante il recupero dei dati per consentire lo spostamento o l&quot;ordinamento dei dati recuperati, ma il controllo origine dati non supporta la funzionalità richiesta."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controllo richiama per recuperare il conteggio delle righe."
  remarks: "Il SelectCountMethod identifica un metodo dell&quot;oggetto business che viene utilizzato per recuperare il numero totale di righe per supportare il paging dell&quot;origine dati. La proprietà SelectCountMethod viene valutata solo se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>è impostata su `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> Per informazioni su come è supportato il paging <xref:System.Web.UI.WebControls.ObjectDataSourceView>vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Il valore della SelectCountMethod proprietà è archiviato nella vista stato."
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "Una stringa che rappresenta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene utilizzato per recuperare il conteggio delle righe. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di recupero di dati è stata completata."
  remarks: "Gestire l&quot;evento selezionati per esaminare i valori di un valore restituito e i parametri di output o per determinare se è stata generata un&quot;eccezione dopo un&quot;operazione di recupero di dati è stata completata. Il valore restituito, i parametri di output e le proprietà di gestione delle eccezioni sono disponibili le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di recupero di dati."
  remarks: "Gestire l&quot;evento di selezione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.ObjectDataSource>controllo esegue l&quot;operazione di recupero di dati.</xref:System.Web.UI.WebControls.ObjectDataSource> I parametri sono disponibili come un <xref:System.Collections.IDictionary>raccolta a cui si accede tramite il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controllo richiama per recuperare i dati."
  remarks: "Il metodo specificato può contenere qualsiasi metodo di firma, ma deve restituire uno dei tipi elencati nella tabella riportata di seguito per consentire al controllo <xref:System.Web.UI.WebControls.ObjectDataSource>chiamata abbia esito positivo | Tipo restituito | Azione |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| Il <xref:System.Collections.IEnumerable>viene restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Un <xref:System.Data.DataView>verrà creato utilizzando il <xref:System.Data.DataTable>e restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| Il primo <xref:System.Data.DataTable>il <xref:System.Data.DataSet>viene estratto e un <xref:System.Data.DataView>viene creata e restituita dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| L&quot;oggetto è stato eseguito il wrapping in un elemento <xref:System.Collections.IEnumerable>e restituito dal metodo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Il metodo identificato dalla proprietà SelectMethod può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo).</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> Se è un metodo di istanza, l&quot;oggetto business viene creato ed eliminato ogni volta che viene chiamato il metodo SelectMethod. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento da utilizzare con l&quot;oggetto business prima di chiamare il metodo specificato dalla proprietà SelectMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento che viene generato dopo che viene chiamato il metodo specificato dalla proprietà SelectMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` viene chiamato solo se l&quot;oggetto business implementa il <xref:System.IDisposable>interfaccia.)</xref:System.IDisposable> Se il metodo è un `static` (`Shared` in Visual Basic) (metodo), l&quot;oggetto business mai creato e non sarà possibile gestire questi eventi.       Se l&quot;oggetto business che il <xref:System.Web.UI.WebControls.ObjectDataSource>controllo implementa più di un metodo o funzione con lo stesso nome (overload), il controllo origine dati tenta di richiamare più appropriato in base a un set di condizioni, inclusi i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>insieme non corrispondono a quelle della firma del metodo specificato dalla proprietà SelectMethod, l&quot;origine dati genera un&quot;eccezione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "Una stringa che rappresenta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene utilizzato per recuperare i dati. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "I nomi e i tipi dei parametri contenuti nella raccolta SelectParameters devono corrispondere i nomi e i tipi dei parametri del metodo specificato da di <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>firma della proprietà specificati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Quando si lavora con i controlli con associazione a dati che forniscono parametri, ad esempio <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>controllo unisce automaticamente i parametri specificati in modo esplicito nella raccolta con i parametri forniti dal controllo con associazione a dati.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati dal metodo specificato per il <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del parametro del metodo di recupero dei dati che consente di specificare un&quot;espressione di ordinamento per il supporto di ordinamento dell&quot;origine dati."
  remarks: "La proprietà SortParameterName è utilizzata per supportare l&quot;ordinamento di origine dati. Quando un <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>proprietà è impostata sul <xref:System.Web.UI.DataSourceSelectArguments>dell&quot;oggetto e passato al <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metodo, la proprietà SortParameterName identifica il nome del parametro del metodo specificato da di <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>proprietà dell&quot;oggetto business che accetta il valore di espressione di ordinamento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       Il valore della SortParameterName è archiviato nella vista stato."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Il nome del parametro del metodo utilizzato per indicare il parametro che accetta il valore di espressione di ordinamento. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del parametro del metodo di recupero dei dati che viene utilizzato per indicare l&quot;indice integer del primo record da recuperare dal set di risultati per supporto di paging dell&quot;origine dati."
  remarks: "La proprietà anche StartRowIndexParameterName deve essere impostata per attivare il paging. Per informazioni su come il paging è supportato dall&quot; <xref:System.Web.UI.WebControls.ObjectDataSourceView>oggetto, vedere <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Il valore dell&quot;anche StartRowIndexParameterName proprietà è archiviato nella vista stato."
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "Il nome del parametro del metodo di oggetto business utilizzato per indicare il primo record da recuperare. Il valore predefinito è &quot;startRowIndex&quot;."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se la vista origine dati è contrassegnata per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Oggetto che rappresenta il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> ripristinare lo stato."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "L&quot;oggetto che contiene le modifiche per il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> stato visualizzazione; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.ObjectDataSourceView>esegue il cast dell&quot;istanza di un <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto per rilevare le modifiche allo stato di visualizzazione in modo che possano essere archiviate nel <xref:System.Web.UI.Control.ViewState*>oggetto per il controllo e mantenute nelle richieste della stessa pagina.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "Il metodo TrackViewState viene utilizzato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome della classe che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controllo."
  remarks: "Per creare un&quot;istanza dell&quot;oggetto che il <xref:System.Web.UI.WebControls.ObjectDataSource>associato il controllo, il controllo utilizza la reflection per caricare il tipo identificato dal nome del tipo in fase di esecuzione.</xref:System.Web.UI.WebControls.ObjectDataSource> Pertanto, il valore della proprietà TypeName può essere un tipo parziale per il codice che si trova nella directory Bin o App_Code o un nome completo del tipo per il codice che è registrato nella global assembly cache. Se si utilizza la global assembly cache, è necessario aggiungere il riferimento appropriato per il `assemblies` sezione del file di configurazione Machine. config o Web. config."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Un nome di classe parziale o completo che identifica il tipo dell&quot;oggetto che il <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> rappresenta. Il valore predefinito è una stringa vuota."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di aggiornamento chiamando il metodo che è identificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà e utilizzando i parametri forniti nel <code> keys </code>, <code> values </code>, o <code> oldValues </code> raccolte.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Il valore predefinito è -1, il che significa che un numero sconosciuto di righe sono stato aggiornato. Per restituire un valore diverso, impostare il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto del <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Il numero di righe interessate è in genere restituito dal `Update` metodo per l&quot;oggetto business e tale valore è disponibile il <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>proprietà del <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parametro del <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Le chiamate al metodo Update di <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>, passando il `keys`, `values`, e `oldValues` parametri.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>dei valori di chiave utilizzati per identificare l&quot;elemento da aggiornare.</xref:System.Collections.IDictionary> Questi parametri vengono utilizzati con il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà per eseguire l&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>di nuovi valori da applicare all&quot;origine dati.</xref:System.Collections.IDictionary> Questi parametri vengono utilizzati con il metodo specificato dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se non esistono parametri associati al metodo, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Oggetto <xref:System.Collections.IDictionary>che contiene i valori non chiave aggiuntivi utilizzati per individuare l&quot;elemento nell&quot;origine dati.</xref:System.Collections.IDictionary> I valori di riga vengono passati al metodo delete, solo se il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "Il numero di righe aggiornate; in caso contrario, -1 se il numero non è noto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Gestire l&quot;evento aggiornato per esaminare i valori di un valore restituito e i parametri di output o per determinare se è stata generata un&quot;eccezione dopo un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operazione è stata completata.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> Il valore restituito, i parametri di output e le proprietà di gestione delle eccezioni sono disponibili le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oggetto richiama per aggiornare i dati."
  remarks: "Il <xref:System.Web.UI.WebControls.ObjectDataSourceView>oggetto presuppone che il metodo identificato dalla proprietà UpdateMethod esegue un aggiornamento alla volta, anziché in un batch.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       Il metodo può essere un metodo di istanza o un `static` (`Shared` in Visual Basic) (metodo). Se è un metodo di istanza, l&quot;oggetto business viene creato ed eliminato ogni volta che viene chiamato il metodo specificato dalla proprietà UpdateMethod. È possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento da utilizzare con l&quot;oggetto business prima di chiamare il metodo specificato dalla proprietà UpdateMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> È anche possibile gestire il <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento che viene generato dopo che viene chiamato il metodo UpdateMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` viene chiamato solo se l&quot;oggetto business implementa il <xref:System.IDisposable>interfaccia.)</xref:System.IDisposable> Se il metodo è un `static` (`Shared` in Visual Basic) (metodo), l&quot;oggetto business mai creato e non sarà possibile gestire questi eventi.       Se l&quot;oggetto business che il <xref:System.Web.UI.WebControls.ObjectDataSource>oggetto implementa più di un metodo o funzione con lo stesso nome (overload), il controllo origine dati tenta di richiamare più appropriato in base a un set di condizioni, inclusi i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se i parametri di <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>insieme non corrispondono a quelle della firma del metodo specificato dalla proprietà UpdateMethod, l&quot;origine dati genera un&quot;eccezione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       Il valore della proprietà è UpdateMethod archiviati nella visualizzazione stato."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "Una stringa che rappresenta il nome del metodo o funzione che la <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> viene utilizzato per aggiornare i dati. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>metodo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "I nomi e i tipi dei parametri contenuti nella raccolta UpdateParameters devono corrispondere i nomi e i tipi dei parametri del metodo specificato da di <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>firma della proprietà specificati.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> I nomi di parametro sono interessati i <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>proprietà e sono tra maiuscole e minuscole.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Quando si lavora con i controlli con associazione a dati che forniscono parametri, ad esempio <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>controllo unisce automaticamente i parametri specificati in modo esplicito nella raccolta con i parametri forniti dal controllo con associazione a dati.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>proprietà.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Gestire l&quot;evento di aggiornamento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.ObjectDataSource>controllo esegue il <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operazione.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> I parametri sono disponibili come un <xref:System.Collections.IDictionary>insieme, a cui accede il <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>proprietà, che viene esposto dal <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>oggetto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
