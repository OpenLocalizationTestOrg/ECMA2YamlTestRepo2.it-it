### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> evento."
  remarks: "Un KeyPressEventArgs specifica il carattere che è costituito da quando l&quot;utente preme un tasto. Ad esempio, quando l&quot;utente preme MAIUSC + K, la proprietà <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>restituisce k in maiuscolo.       Oggetto <xref:System.Windows.Forms.Control.KeyPress>evento si verifica quando l&quot;utente preme un tasto.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Due eventi strettamente correlati all&quot; <xref:System.Windows.Forms.Control.KeyPress>evento sono <xref:System.Windows.Forms.Control.KeyUp>e <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> Il <xref:System.Windows.Forms.Control.KeyDown>evento precede ogni <xref:System.Windows.Forms.Control.KeyPress>evento quando l&quot;utente preme un tasto e un <xref:System.Windows.Forms.Control.KeyUp>evento si verifica quando l&quot;utente rilascia un tasto.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Quando l&quot;utente tiene premuto un tasto, duplicare <xref:System.Windows.Forms.Control.KeyDown>e <xref:System.Windows.Forms.Control.KeyPress>gli eventi si verificano ogni volta che il carattere è ripetuto.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Una <xref:System.Windows.Forms.Control.KeyUp>evento viene generato al momento di versione.</xref:System.Windows.Forms.Control.KeyUp>       Con ogni <xref:System.Windows.Forms.Control.KeyPress>evento, che viene passato un KeyPressEventArgs.</xref:System.Windows.Forms.Control.KeyPress> Oggetto <xref:System.Windows.Forms.KeyEventArgs>viene passato a ogni <xref:System.Windows.Forms.Control.KeyDown>e <xref:System.Windows.Forms.Control.KeyUp>evento.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> Oggetto <xref:System.Windows.Forms.KeyEventArgs>Specifica se insieme a un&quot;altra chiave sono stati premuti i tasti di modifica (CTRL, MAIUSC o ALT).</xref:System.Windows.Forms.KeyEventArgs> (Queste informazioni modificatore possono anche essere ottenute tramite il <xref:System.Windows.Forms.Control.ModifierKeys%2A>proprietà la <xref:System.Windows.Forms.Control>classe.)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       Impostare <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>a `true` per annullare il `KeyPress` evento.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> In questo modo il controllo di elaborare la pressione del tasto.      > [!NOTE] > Alcuni controlli elaborerà alcune sequenze di tasti <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> Ad esempio, <xref:System.Windows.Forms.RichTextBox>Elabora il tasto INVIO prima <xref:System.Windows.Forms.Control.KeyPress>viene chiamato.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> In questi casi, è possibile annullare il <xref:System.Windows.Forms.Control.KeyPress>evento e deve annullare la sequenza di tasti da <xref:System.Windows.Forms.Control.KeyDown>invece.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       Per informazioni sul modello di eventi, vedere [eventi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> classe."
  remarks: "Utilizzare il <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>proprietà da ottenere lo stato corrente dei tasti di modifica.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Il carattere ASCII corrispondente al tasto premuto."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> evento è stato gestito."
  remarks: "Se l&quot;evento non viene gestita, verrà inviato al sistema operativo per l&quot;elaborazione predefinita. Impostare Handled `true` per annullare il `KeyPress` evento."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;evento è gestito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta il carattere corrispondente al tasto premuto."
  remarks: "Utilizzare la proprietà KeyChar per le sequenze di tasti di esempio in fase di esecuzione e modificarle in circostanze speciali in fase di esecuzione. Ad esempio, è possibile utilizzare KeyChar per disabilitare le sequenze di tasti non numerico quando l&quot;utente immette un codice postale, modificare alfabetiche tutti in maiuscolo in un campo di immissione dati, o monitorare la tastiera o altri dispositivi di input per determinate combinazioni di tasti.       È possibile ottenere o impostare le chiavi seguenti: - a-z, a-Z.      -CTRL.      -Segni di punteggiatura.      -Numero di chiavi, sia nella parte superiore della tastiera e del tastierino numerico.      -IMMETTERE.       È possibile ottenere o impostare le chiavi seguenti:-chiave scheda.      -INSERT e DELETE.      -HOME.      -END.      -PGSU e PGGIÙ.      F1, F2.      -ALT.      -Tasti di direzione.      > [!NOTE] > Per informazioni su come rilevare eventuali chiavi non carattere indicate in precedenza, vedere la <xref:System.Windows.Forms.KeyEventArgs>classe.</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "Carattere ASCII che viene composto. Ad esempio, se l&quot;utente preme MAIUSC + K, questa proprietà restituisce k in maiuscolo."
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
