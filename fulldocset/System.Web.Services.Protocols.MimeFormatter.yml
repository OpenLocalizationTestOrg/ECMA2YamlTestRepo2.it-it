### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "Fornisce una classe base astratta per tutti i reader e writer per servizi Web e client implementati tramite HTTP, ma senza SOAP."
  remarks: "Lettori e writer del servizio web di serializzare e deserializzare, rispettivamente, tra gli oggetti restituiti o parametri dei metodi Web e i flussi di richiesta o risposta HTTP. La classe MimeFormatter stabilisce un&quot;interfaccia comune e funzionalità per le classi di reader e writer, nei client sia sul lato servizio.       La classe MimeFormatter supporta le implementazioni di .NET Framework dei servizi Web tramite le operazioni HTTP-GET e HTTP-POST. Nelle operazioni HTTP-GET i parametri della richiesta vengono codificati della richiesta HTTP URL Uniform Resource Locator (). Nelle operazioni HTTP-POST, i parametri della richiesta vengono codificati nel corpo della richiesta HTTP, come con un form HTML. Con entrambe le implementazioni, il valore restituito viene visualizzato nel corpo della risposta HTTP come un documento XML non SOAP.       Uno sviluppatore non in genere necessario utilizzare direttamente MimeFormatter o le relative classi discendenti. Al contrario, quando lo strumento Wsdl.exe genera il codice proxy client secondo le implementazioni HTTP-GET o HTTP-POST, viene applicato il <xref:System.Web.Services.Protocols.HttpMethodAttribute>a ciascun metodo Web e imposta dell&quot;attributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>le proprietà nel tipo appropriato derivato dalla classe MimeFormatter.</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute> Nel server, vengono utilizzati i tipi derivati appropriati in base alle impostazioni in un file di configurazione di ASP.NET (Web. config). Sul client i tipi derivati appropriati sono determinati da WSDL."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> classe."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Crea e inizializza un&quot;istanza di una classe concreta derivata da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "CreateInstance (metodo) crea un&quot;istanza della classe derivata e richiama l&quot;implementazione della classe derivata della classe astratta <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance (metodo) viene richiamato in fase di che elaborazione di una richiesta o risposta.       Un inizializzatore è un oggetto passato come parametro per il <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> L&quot;inizializzatore passato come parametro al metodo CreateInstance viene ottenuto da un&quot;altra istanza della classe derivata, richiamando il <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metodo durante l&quot;inizializzazione del client o servizio.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo, derivato da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, di cui creare un&quot;istanza."
    - id: initializer
      type: System.Object
      description: "Oggetto utilizzato per inizializzare l&quot;istanza ottenuto in precedenza tramite l&quot;implementazione della classe derivata di <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando sottoposto a override in una classe derivata, restituisce un inizializzatore per il metodo specificato."
  remarks: "Un inizializzatore è un oggetto passato come parametro per il <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Implementazione di una classe derivata del metodo di istanza GetInitializer viene richiamata durante l&quot;inizializzazione del client o del servizio. Successivamente, al momento che dell&quot;elaborazione di una richiesta o risposta, l&quot;oggetto dell&quot;inizializzatore viene passato al <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>metodo, che consente di creare un&quot;istanza di un altro oggetto della classe derivata e quindi al <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo per inizializzare tale</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> statico L&quot;altro oggetto esegue la lettura o scrittura effettiva."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Oggetto <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> che specifica il metodo Web per il quale viene ottenuto l&quot;inizializzatore."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene l&quot;inizializzatore per il metodo specificato.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Restituisce un inizializzatore per il metodo specificato."
  remarks: "Un inizializzatore è un oggetto passato come parametro per il <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Il metodo statico di GetInitializer richiama della classe derivata <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metodo, in modo implicito la creazione di un&quot;istanza della classe derivata.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Al momento che dell&quot;elaborazione di una richiesta o risposta, l&quot;oggetto dell&quot;inizializzatore viene passato al <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo di un&quot;altra istanza della classe derivata.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> L&quot;oggetto di quest&quot;ultimo esegue la lettura o scrittura effettiva."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo, derivato da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, - per cui viene ottenuto un inizializzatore."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Oggetto <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> che specifica il metodo Web per il quale viene ottenuto l&quot;inizializzatore."
    return:
      type: System.Object
      description: "Oggetto <xref:System.Object>oggetto che contiene l&quot;inizializzatore per il metodo specificato.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando sottoposto a override in una classe derivata, restituisce una matrice di inizializzatore di oggetti corrispondenti a una matrice di input di definizioni di metodo."
  remarks: "Un inizializzatore è un oggetto passato come parametro per il <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Richiama il metodo di istanza GetInitializers il <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>il metodo di istanza per ogni metodo Web di input.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Pertanto, un&quot;istanza di una classe derivata da <xref:System.Web.Services.Protocols.MimeFormatter>è già stato creato.</xref:System.Web.Services.Protocols.MimeFormatter> Al momento che dell&quot;elaborazione di una richiesta o risposta, l&quot;inizializzatore viene passato al <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo di un&quot;altra istanza della classe derivata.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> L&quot;oggetto di quest&quot;ultimo esegue la lettura o scrittura effettiva."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Matrice di metodi Web in cui, per ogni metodo, viene ottenuto l&quot;oggetto dell&quot;indice corrispondente nella matrice dell&quot;inizializzatore restituito."
    return:
      type: System.Object[]
      description: "Una matrice di oggetti inizializzatore corrispondente alla matrice di input di definizioni di metodo."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Restituisce una matrice di inizializzatore di oggetti corrispondenti in una matrice di definizioni di metodo di input per una classe derivata da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "Un inizializzatore è un oggetto passato come parametro per il <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metodo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Il GetInitializersmethod statici determina il richiamo del <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>appartenenti alla classe derivata specificata dal metodo di `type` parametro.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo, derivato da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, per cui gli inizializzatori vengono ottenute."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Matrice di tipo <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> che specifica i metodi Web per cui vengono ottenuti gli inizializzatori."
    return:
      type: System.Object[]
      description: "Matrice di oggetti inizializzatore corrispondente nella matrice di definizioni di metodo di input per una classe derivata da <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando sottoposto a override in una classe derivata, Inizializza un&quot;istanza."
  remarks: "Il metodo Initialize viene richiamato al momento del che elaborazione di una richiesta o risposta; Tuttavia, l&quot;inizializzatore viene ottenuto chiamando il <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metodo in un&quot;altra istanza durante l&quot;inizializzazione del client o del servizio.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "Un oggetto di un tipo appropriato per la particolare classe che implementa il metodo."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
