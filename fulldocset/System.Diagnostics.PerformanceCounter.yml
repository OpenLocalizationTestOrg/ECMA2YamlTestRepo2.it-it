### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounter
  id: PerformanceCounter
  children:
  - System.Diagnostics.PerformanceCounter.#ctor
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.BeginInit
  - System.Diagnostics.PerformanceCounter.CategoryName
  - System.Diagnostics.PerformanceCounter.Close
  - System.Diagnostics.PerformanceCounter.CloseSharedResources
  - System.Diagnostics.PerformanceCounter.CounterHelp
  - System.Diagnostics.PerformanceCounter.CounterName
  - System.Diagnostics.PerformanceCounter.CounterType
  - System.Diagnostics.PerformanceCounter.Decrement
  - System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  - System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceCounter.EndInit
  - System.Diagnostics.PerformanceCounter.Increment
  - System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceCounter.InstanceLifetime
  - System.Diagnostics.PerformanceCounter.InstanceName
  - System.Diagnostics.PerformanceCounter.MachineName
  - System.Diagnostics.PerformanceCounter.NextSample
  - System.Diagnostics.PerformanceCounter.NextValue
  - System.Diagnostics.PerformanceCounter.RawValue
  - System.Diagnostics.PerformanceCounter.ReadOnly
  - System.Diagnostics.PerformanceCounter.RemoveInstance
  langs:
  - csharp
  name: PerformanceCounter
  nameWithType: PerformanceCounter
  fullName: System.Diagnostics.PerformanceCounter
  type: Class
  summary: "Rappresenta un componente contatore delle prestazioni di Windows NT."
  remarks: "The PerformanceCounter component can be used for both reading existing predefined or custom counters and publishing (writing) performance data to custom counters.  \n  \n There are numerous predefined counters listed in the Windows Performance Monitor's [Add Counters dialog box](http://go.microsoft.com/fwlink/p/?LinkId=257854). To learn about the .NET Framework performance counters, see [Performance Counters](~/add/includes/ajax-current-ext-md.md).  \n  \n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n> [!IMPORTANT]\n>  In versions 1.0 and 1.1 of the .NET Framework, this class requires immediate callers to be fully trusted. Starting with the .NET Framework version 2.0, this class requires <xref:System.Diagnostics.PerformanceCounterPermission> for specific actions. It is strongly recommended that <xref:System.Diagnostics.PerformanceCounterPermission> not be granted to semi-trusted code.  The ability to read and write performance counters allows code to perform actions such as enumerating executing processes and obtaining information about them.  \n>   \n>  In addition, passing a PerformanceCounter object to less-trusted code can create a security issue. Never pass performance counter objects, such as a <xref:System.Diagnostics.PerformanceCounterCategory> or PerformanceCounter, to less trusted code.  \n  \n To read from a performance counter, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and, optionally, the <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method to take a performance counter reading.  \n  \n To publish performance counter data, create one or more custom counters using the <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> method, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> and, optionally, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, or <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods, or set the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property to change the value of your custom counter.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, and <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  \n  \n The counter is the mechanism by which performance data is collected. The registry stores the names of all the counters, each of which is related to a specific area of system functionality. Examples include a processor's busy time, memory usage, or the number of bytes received over a network connection.  \n  \n Each counter is uniquely identified through its name and its location. In the same way that a file path includes a drive, a directory, one or more subdirectories, and a file name, counter information consists of four elements: the computer, the category, the category instance, and the counter name.  \n  \n The counter information must include the category, or performance object, that the counter measures data for. A computer's categories include physical components, such as processors, disks, and memory. There are also system categories, such as processes and threads. Each category is related to a functional element within the computer and has a set of standard counters assigned to it. These objects are listed in the Performance object drop-down list of the Add Counters dialog box within the Windows 2000 System Monitor, and you must include them in the counter path. Performance data is grouped by the category to which is it related.  \n  \n In certain cases, several copies of the same category can exist. For example, several processes and threads run simultaneously, and some computers contain more than one processor. The category copies are called category instances, and each instance has a set of standard counters assigned to it. If a category can have more than one instance, an instance specification must be included in the counter information.  \n  \n To obtain performance data for counters that required an initial or previous value for performing the necessary calculation, call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method twice and use the information returned as your application requires.  \n  \n> [!NOTE]\n>  Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see [\\&lt;performanceCounters\\&gt;](../Topic/%3CperformanceCounters%3E%20Element.md)."
  example:
  - "The following code example demonstrates the use of the PerformanceCounter class to create and use an <xref:System.Diagnostics.PerformanceCounterType> counter type. The example creates categories, sets up counters, collects data from the counters, and calls the <xref:System.Diagnostics.CounterSampleCalculator> class to interpret the performance counter data. The intermediate and final results are displayed in the console window. For additional examples of other performance counter types, see the <xref:System.Diagnostics.PerformanceCounterType> enumeration.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_0_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_0_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza un&quot;istanza nuova, di sola lettura di <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> (classe), senza associare l&quot;istanza con qualsiasi sistema o di un contatore delle prestazioni personalizzato."
  remarks: "Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà su una stringa vuota (&quot;&quot;) e imposta il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà per il computer locale (&quot;.&quot;).</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore non inizializza il contatore delle prestazioni, in modo che non associa l&quot;istanza di un contatore esistente sul computer locale. Per puntare a un determinato contatore delle prestazioni, impostare il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>e, facoltativamente, il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>prima di leggere le altre proprietà o il tentativo di lettura da un contatore.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Per scrivere in un contatore delle prestazioni, impostare il <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>proprietà `false`.</xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>      > [!NOTE] > L&quot;attributo <xref:System.Security.Permissions.HostProtectionAttribute>applicato a questo membro è il seguente valore della proprietà <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>: <xref:System.Security.Permissions.HostProtectionResource>| <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A></xref:System.Security.Permissions.HostProtectionAttribute> Il <xref:System.Security.Permissions.HostProtectionAttribute>non influiscono sulle applicazioni desktop (che in genere vengono avviate facendo doppio clic su un&quot;icona, digitando un comando o immettendo un URL in un browser).</xref:System.Security.Permissions.HostProtectionAttribute> Per ulteriori informazioni, vedere la <xref:System.Security.Permissions.HostProtectionAttribute>classe o [programmazione in SQL Server e attributi di protezione Host](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/m-system.diagnostics.per_15_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/m-system.diagnostics.per_15_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/m-system.diagnostics.per_15_1.vb)]"
  syntax:
    content: public PerformanceCounter ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza un&quot;istanza nuova, di sola lettura di <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e lo associa al sistema specificato o al contatore delle prestazioni personalizzato nel computer locale. Il costruttore richiede che la categoria dispone di una singola istanza."
  remarks: "Le stringhe dei parametri non sono rilevanti.       Utilizzare questo overload per accedere a un contatore del computer locale che appartiene a una categoria che contiene un&quot;istanza di categoria del contatore di prestazioni single. Se si tenta di utilizzare questo costruttore per questo punto <xref:System.Diagnostics.PerformanceCounter>istanza a una categoria che contiene più istanze, il costruttore genera un&quot;eccezione.</xref:System.Diagnostics.PerformanceCounter> Questo overload può accedere qualsiasi di sola lettura o lettura/scrittura, contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter>istanza creata utilizzando questo overload non è possibile scrivere il contatore, anche se il contatore stesso è lettura/scrittura.</xref:System.Diagnostics.PerformanceCounter>       Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>proprietà ai valori passati, imposta la <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà nel computer locale, &quot;.&quot; e imposta il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà in una stringa vuota (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore inizializza il contatore delle prestazioni e associa l&quot;istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa per la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
    - id: counterName
      type: System.String
      description: "Il nome del contatore delle prestazioni."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>counterName</code> è una stringa vuota (&quot;&quot;).       - oppure - la categoria specificata non esiste.       - oppure - la categoria specificata è contrassegnata come multi-istanza e richiede il contatore delle prestazioni deve essere creato con un nome di istanza.       - oppure - <code>categoryName</code> e <code>counterName</code> sono stati localizzati in diverse lingue."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova, sola lettura o lettura/scrittura istanza il <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e lo associa al sistema specificato o al contatore delle prestazioni personalizzato nel computer locale. Il costruttore richiede che la categoria contengono una singola istanza."
  remarks: "Le stringhe dei parametri non sono rilevanti.       Utilizzare questo overload per accedere in sola lettura o lettura/scrittura del contatore nel computer locale che appartiene a una categoria che contiene un&quot;istanza di categoria del contatore di prestazioni single. Se si tenta di utilizzare questo costruttore per questo punto <xref:System.Diagnostics.PerformanceCounter>istanza a una categoria che contiene più istanze, il costruttore genera un&quot;eccezione.</xref:System.Diagnostics.PerformanceCounter>       Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>proprietà ai valori passati, imposta la <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà nel computer locale, &quot;.&quot; e imposta il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà in una stringa vuota (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore inizializza il contatore delle prestazioni e associa l&quot;istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa per la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se l&quot;istanza del contatore delle prestazioni che si sceglie non è valido, chiamare il costruttore genera un&quot;eccezione.      > [!NOTE] > È possibile utilizzare questo overload per connettersi a un contatore di sistema, ma non è possibile scrivere in un contatore di sistema. Pertanto, l&quot;impostazione `readOnly` a `false` quando ci si connette a un contatore di sistema induce il costruttore generare un&quot;eccezione.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  example:
  - "The following code example creates an instance of the <xref:System.Diagnostics.PerformanceCounter> class. The example passes in category names, counter names, and a flag value indicating that the counter is not read-only. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/cpp/edd71a17-4ee7-4e9f-af30-_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/csharp/edd71a17-4ee7-4e9f-af30-_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/visualbasic/edd71a17-4ee7-4e9f-af30-_1.vb)]"
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
    - id: counterName
      type: System.String
      description: "Il nome del contatore delle prestazioni."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per accedere al contatore in modalità di sola lettura (anche se il contatore stesso potrebbe essere di lettura/scrittura); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per accedere al contatore in modalità lettura/scrittura."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <code> categoryName </code> è una stringa vuota (&quot;&quot;).       - o - <code> counterName </code> è una stringa vuota (&quot;&quot;).       - oppure - la categoria specificata non esiste. (if <code>readOnly</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>).       - oppure - la categoria specificata non è una categoria personalizzata di .NET Framework (se <code> readOnly </code> è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - oppure - la categoria specificata è contrassegnata come multi-istanza e richiede il contatore delle prestazioni deve essere creato con un nome di istanza.       - oppure - <code> categoryName </code> e <code> counterName </code> sono stati localizzati in diverse lingue."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza un&quot;istanza nuova, di sola lettura di <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e lo associa al sistema specificato o all&quot;istanza di contatore e categoria di prestazioni personalizzati nel computer locale."
  remarks: "Le stringhe dei parametri non sono rilevanti.       Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà sui valori passare e imposta il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà nel computer locale, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore inizializza il contatore delle prestazioni e associa l&quot;istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa per la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se si sceglie l&quot;istanza del contatore delle prestazioni non è valido, chiamare il costruttore genera un&quot;eccezione.       Questo overload può accedere qualsiasi di sola lettura o lettura/scrittura, contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter>istanza creata utilizzando questo overload non è possibile scrivere il contatore, anche se il contatore stesso è lettura/scrittura.</xref:System.Diagnostics.PerformanceCounter>       Per creare un&quot;istanza di una categoria di prestazioni, specificare un `instanceName` sul <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>costruttore.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se l&quot;istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all&quot;istanza esistente della categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
    - id: counterName
      type: System.String
      description: "Il nome del contatore delle prestazioni."
    - id: instanceName
      type: System.String
      description: "Il nome dell&quot;istanza di categoria del contatore delle prestazioni o una stringa vuota (&quot;&quot;), se la categoria contiene una singola istanza."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>counterName</code> è una stringa vuota (&quot;&quot;).       - oppure - la categoria specificata non è valida.       - oppure - la categoria specificata è contrassegnata come multi-istanza e richiede il contatore delle prestazioni deve essere creato con un nome di istanza.       - oppure - <code>instanceName</code> più di 127 caratteri.       - oppure - <code>categoryName</code> e <code>counterName</code> sono stati localizzati in diverse lingue."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova, sola lettura o lettura/scrittura istanza il <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e lo associa al sistema specificato o all&quot;istanza di contatore e categoria di prestazioni personalizzati nel computer locale."
  remarks: "Le stringhe dei parametri non sono rilevanti.       Utilizzare questo overload per accedere a un contatore delle prestazioni in una sola lettura o in modalità lettura/scrittura.       Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà ai valori passati e il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà nel computer locale, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore inizializza il contatore delle prestazioni e associa l&quot;istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa per la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se l&quot;istanza del contatore delle prestazioni che si sceglie non è valido, chiamare il costruttore genera un&quot;eccezione.      > [!NOTE] > È possibile utilizzare questo overload per connettersi a un contatore di sistema, ma non è possibile scrivere in un contatore di sistema. Pertanto, l&quot;impostazione `readOnly` a `false` quando ci si connette a un contatore di sistema induce il costruttore generare un&quot;eccezione.       Per creare un&quot;istanza di una categoria di prestazioni, specificare un `instanceName` sul <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>costruttore.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se l&quot;istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all&quot;istanza esistente della categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
    - id: counterName
      type: System.String
      description: "Il nome del contatore delle prestazioni."
    - id: instanceName
      type: System.String
      description: "Il nome dell&quot;istanza di categoria del contatore delle prestazioni o una stringa vuota (&quot;&quot;), se la categoria contiene una singola istanza."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per accedere a un contatore in modalità di sola lettura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per accedere a un contatore in modalità lettura/scrittura."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>counterName</code> è una stringa vuota (&quot;&quot;).       oppure l&quot;autorizzazione di lettura/scrittura impostazione richiesto non è valido per questo contatore.       - oppure - la categoria specificata non esiste (se <code>readOnly</code> è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).       - oppure - la categoria specificata non è una categoria personalizzata di .NET Framework (se <code>readOnly</code> è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - oppure - la categoria specificata è contrassegnata come multi-istanza e richiede il contatore delle prestazioni deve essere creato con un nome di istanza.       - oppure - <code>instanceName</code> più di 127 caratteri.       - oppure - <code>categoryName</code> e <code>counterName</code> sono stati localizzati in diverse lingue."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza un&quot;istanza nuova, di sola lettura di <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e la associa di sistema specificato o di prestazioni personalizzati contatore categoria istanza e, nel computer specificato."
  remarks: "Le stringhe dei parametri non sono rilevanti.       Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>le proprietà per i valori passati pollici</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Questo costruttore inizializza il contatore delle prestazioni e associa l&quot;istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer specificato. I valori che si passa per la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>proprietà devono puntare a un contatore delle prestazioni esistente.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se si sceglie l&quot;istanza del contatore delle prestazioni non è valido, chiamare il costruttore genera un&quot;eccezione. Questo overload può accedere qualsiasi di sola lettura o lettura/scrittura, contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter>istanza creata utilizzando questo overload non è possibile scrivere il contatore, anche se il contatore stesso è lettura/scrittura.</xref:System.Diagnostics.PerformanceCounter>      > [!NOTE] > Ai contatori delle prestazioni remoto non è possibile scrivere. Nessun overload che consente di specificare un&quot;istanza di lettura/scrittura del <xref:System.Diagnostics.PerformanceCounter>classe che si connette a un computer remoto.</xref:System.Diagnostics.PerformanceCounter>       Per creare un&quot;istanza di una categoria di prestazioni, specificare un `instanceName` sul <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>costruttore.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se l&quot;istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all&quot;istanza esistente della categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore.      > [!NOTE] > In Windows Vista, quando il computer remoto è un membro di un gruppo di lavoro, potrebbe essere necessario disabilitare il controllo dell&quot;account utente in modo che l&quot;account utente locale non è filtrata e può essere elevato a un account di amministratore. Per motivi di sicurezza, la disabilitazione dell&quot;account deve essere strettamente. Per informazioni sulla disattivazione di controllo dell&quot;account utente, vedere [controllo Account utente e WMI](http://go.microsoft.com/fwlink/?LinkId=91617)."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
    - id: counterName
      type: System.String
      description: "Il nome del contatore delle prestazioni."
    - id: instanceName
      type: System.String
      description: "Il nome dell&quot;istanza di categoria del contatore delle prestazioni o una stringa vuota (&quot;&quot;), se la categoria contiene una singola istanza."
    - id: machineName
      type: System.String
      description: "Il computer in cui esiste il contatore delle prestazioni e la categoria associata."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>è una stringa vuota (&quot;&quot;).       - oppure - <code>counterName</code> è una stringa vuota (&quot;&quot;).       oppure l&quot;autorizzazione di lettura/scrittura impostazione richiesto non è valido per questo contatore.       - oppure - il contatore non esiste nel computer specificato.       - oppure - la categoria specificata è contrassegnata come multi-istanza e richiede il contatore delle prestazioni deve essere creato con un nome di istanza.       - oppure - <code>instanceName</code> più di 127 caratteri.       - oppure - <code>categoryName</code> e <code>counterName</code> sono stati localizzati in diverse lingue."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> machineName </code> parametro non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  id: BeginInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Avvia l&quot;inizializzazione di un <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza utilizzata in un form o da un altro componente. L&quot;inizializzazione avviene in fase di esecuzione."
  remarks: "Il [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] ambiente di progettazione questo metodo per avviare l&quot;inizializzazione di un componente che viene utilizzato in un form o da un altro componente. Il <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>metodo termina l&quot;inizializzazione.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A> Utilizzo di BeginInit e <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>metodi evita l&quot;utilizzo del componente di prima che venga inizializzato completamente.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A>"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  id: CategoryName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il nome della categoria del contatore delle prestazioni per il contatore delle prestazioni."
  remarks: "CategoryName viene visualizzato nel `Performance Object` campo snap di MMC di gestione del contatore delle prestazioni per `Add Counter` la finestra di dialogo.       Un contatore delle prestazioni consente di monitorare il comportamento di una categoria o oggetto delle prestazioni, in un computer. Le categorie includono i componenti fisici (ad esempio processori, dischi e memoria) e gli oggetti di sistema (ad esempio i processi e thread). Contatori di sistema che sono correlati allo stesso oggetto delle prestazioni sono raggruppati in una categoria che indica il comune stato attivo. Quando si crea un&quot;istanza di <xref:System.Diagnostics.PerformanceCounter>(classe), si indica dapprima la categoria a cui il componente interagisce e quindi si sceglie un contatore di tale categoria.</xref:System.Diagnostics.PerformanceCounter>       Ad esempio, una categoria di contatori di Windows è la categoria di memoria. All&quot;interno di questa categoria i contatori di sistema di tenere traccia dei dati di memoria, ad esempio il numero di byte disponibili e il numero di byte memorizzati nella cache. Se si desidera utilizzare i byte nella cache nell&quot;applicazione, si creerà un&quot;istanza di <xref:System.Diagnostics.PerformanceCounter>componente, connetterla alla categoria di memoria e quindi scegliere il contatore appropriato (in questo caso, memorizzato nella cache byte) di tale categoria.</xref:System.Diagnostics.PerformanceCounter>       Anche se il sistema rende molte altre categorie di contatori disponibili, le categorie che è probabile che interagiscono con più di frequente sono le categorie di Cache, memoria, gli oggetti, disco fisico, processo, processore, Server, sistema e Thread."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the CategoryName, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_6_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_6_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_6_1.vb)]"
  syntax:
    content: public string CategoryName { get; set; }
    return:
      type: System.String
      description: "Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni."
  overload: System.Diagnostics.PerformanceCounter.CategoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La proprietà CategoryName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Close
  id: Close
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Chiude il contatore delle prestazioni e libera tutte le risorse allocate da questa istanza del contatore delle prestazioni."
  remarks: "Quando si associa <xref:System.Diagnostics.PerformanceCounter>istanza con un contatore delle prestazioni che si trova nel server, il sistema inizializza l&quot;istanza e alloca memoria per contenere le informazioni di esempio di contatore.</xref:System.Diagnostics.PerformanceCounter> Il metodo Close libera le risorse allocate dall&quot;oggetto."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  id: CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Libera dello stato libreria condivisa del contatore delle prestazioni allocato dai contatori."
  syntax:
    content: public static void CloseSharedResources ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  id: CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene la descrizione per questo contatore delle prestazioni."
  remarks: "La finestra di dialogo Aggiungi contatori di MMC Gestione contatore delle prestazioni snap-in, viene visualizzato il testo di CounterHelp quando un utente seleziona un contatore nell&quot;elenco di contatori e fa clic sul pulsante di descrizione.       Quando si crea un nuovo contatore, usare il testo CounterHelp per descrivere le in modo che l&quot;utente può determinare se il contatore alla schermata del Monitor di sistema.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  syntax:
    content: public string CounterHelp { get; }
    return:
      type: System.String
      description: "Descrizione dell&quot;articolo o quantità che il contatore delle prestazioni."
  overload: System.Diagnostics.PerformanceCounter.CounterHelp*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza non è associata a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterName
  id: CounterName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il nome del contatore delle prestazioni che è associato a questo <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza."
  remarks: "È possibile ottenere un elenco di contatori esistenti disponibili da Gestione di Windows sulle prestazioni del [la finestra di dialogo Aggiungi contatori](http://go.microsoft.com/fwlink/p/?LinkId=257854)."
  example:
  - "The following code example shows how to set the CounterName property to a typical counter name.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_4_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_4_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_4_1.vb)]"
  syntax:
    content: public string CounterName { get; set; }
    return:
      type: System.String
      description: "Il nome del contatore, che in genere descrive la quantità da contare. Questo nome viene visualizzato nell&quot;elenco dei contatori di MMC Gestione contatore delle prestazioni snap-in della finestra di dialogo Aggiungi contatori."
  overload: System.Diagnostics.PerformanceCounter.CounterName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È il valore di CounterName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterType
  id: CounterType
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene il tipo di contatore del contatore delle prestazioni associati."
  remarks: "Il <xref:System.Diagnostics.PerformanceCounterType>enumerazione contiene i tipi di contatori delle prestazioni che è possibile interagire.</xref:System.Diagnostics.PerformanceCounterType> Alcuni tipi di contatori rappresentano valori calcolati, ad esempio la media delle misurazioni contatore ottenuto dal sistema. Altri tipi rappresentano valori non elaborati o non calcolati. La tabella seguente illustra i tipi di contatore interagirà con più di frequente.      | Responsabilità del contatore | Valore di PerformanceCounterType | Esempio |   |------------------------------|----------------------------------|-------------|   | Mantenere un semplice conteggio di elementi o operazioni. | `NumberOfItems32`| Tenere traccia del numero di ordini ricevuti come intero a 32 bit. |   | Mantenere un semplice conteggio maggiore capacità. | `NumberOfItems64`| Tenere traccia del numero di ordini per un sito con volumi molto elevati, archiviato come valore intero a 64 bit. |   | Tenere traccia del numero di elementi o operazioni al secondo. | `RateOfCountsPerSecond32`| Gli ordini ricevuti al secondo in un sito di rilevamento. |   | Tenere traccia di un numero maggiore di elementi o operazioni al secondo. | `RateOfCountsPerSecond64`| La registrazione degli ordini ricevuti al secondo in un sito con un elevato volume. |   | Calcolare il tempo medio per eseguire un processo o per l&quot;elaborazione di un elemento | `AverageTimer32`| Calcolare il tempo medio richiesto per elaborare un ordine. |       Quando si crea un contatore di tipo che richiede l&quot;utilizzo di un contatore di base corrispondente, è necessario dichiarare il contatore e la base di <xref:System.Diagnostics.CounterCreationDataCollection>passato il <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName>(metodo).</xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> </xref:System.Diagnostics.CounterCreationDataCollection>      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  syntax:
    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> che descrive il modo il contatore interagisce con un&quot;applicazione di monitoraggio e la natura dei valori che contiene (ad esempio, calcolata o non calcolato)."
  overload: System.Diagnostics.PerformanceCounter.CounterType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Decrement
  id: Decrement
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Decrementa il contatore delle prestazioni associato uno mediante un&quot;operazione atomica efficiente."
  remarks: "È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.      > [!NOTE] > Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e decremento utilizzano i blocchi per aggiornare il valore del contatore.</xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ciò consente di mantenere il valore del contatore accurate in scenari multithread o multiprocesso, ma comporta una riduzione delle prestazioni. Se non è necessaria l&quot;accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>proprietà direttamente per fino a un 5 volte miglioramento delle prestazioni.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Tuttavia, negli scenari multithreading, alcuni aggiornamenti per il valore del contatore potrebbero ignorati, generando dati non accurati.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria."
  syntax:
    content: public long Decrement ();
    parameters: []
    return:
      type: System.Int64
      description: "Il valore del contatore decrementato."
  overload: System.Diagnostics.PerformanceCounter.Decrement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il contatore è di sola lettura, pertanto l&quot;applicazione non è possibile ridurlo.       - oppure - l&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  id: DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Specifica le dimensioni, in byte, della memoria globale condivisa dai contatori delle prestazioni. La dimensione predefinita è 524.288 byte."
  syntax:
    content: public static int DefaultFileMappingSize;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Diagnostics.PerformanceCounter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.EndInit
  id: EndInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Termina l&quot;inizializzazione di un <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza che viene utilizzata in un form o da un altro componente. L&quot;inizializzazione avviene in fase di esecuzione."
  remarks: "Il [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] ambiente di progettazione questo metodo per terminare l&quot;inizializzazione di un componente che viene utilizzato in un form o da un altro componente. Il <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>metodo avvia l&quot;inizializzazione.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> Utilizzo di <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>EndInit metodi e impedisce il componente venga utilizzato prima che il completamento dell&quot;inizializzazione.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Incrementa il contatore delle prestazioni associati di uno mediante un&quot;operazione atomica efficiente."
  remarks: "È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.      > [!NOTE] > L&quot;incremento, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>utilizzano i blocchi per aggiornare il valore del contatore.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> Ciò consente di mantenere il valore del contatore accurate in scenari multithread o multiprocesso, ma comporta una riduzione delle prestazioni. Se non è necessaria l&quot;accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>proprietà direttamente per fino a un 5 volte miglioramento delle prestazioni.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Tuttavia, negli scenari multithreading, alcuni aggiornamenti per il valore del contatore potrebbero ignorati, generando dati non accurati.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria."
  syntax:
    content: public long Increment ();
    parameters: []
    return:
      type: System.Int64
      description: "Il valore del contatore incrementato."
  overload: System.Diagnostics.PerformanceCounter.Increment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il contatore è di sola lettura, pertanto l&quot;applicazione non è possibile incrementare il.       - oppure - l&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Incrementa o decrementa il valore del contatore delle prestazioni associati da un importo specificato mediante un&quot;operazione atomica efficiente."
  remarks: "È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.      > [!NOTE] > Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, IncrementBy, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>utilizzano i blocchi per aggiornare il valore del contatore.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ciò consente di mantenere il valore del contatore accurate in scenari multithread o multiprocesso, ma comporta una riduzione delle prestazioni. Se non è necessaria l&quot;accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>proprietà direttamente per fino a un 5 volte miglioramento delle prestazioni.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Tuttavia, negli scenari multithreading, alcuni aggiornamenti per il valore del contatore potrebbero ignorati, generando dati non accurati.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria."
  example:
  - "The following code example demonstrates how to use the IncrementBy method to add increments to a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long IncrementBy (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Il valore di incremento. (Un valore negativo decrementa il contatore.)"
    return:
      type: System.Int64
      description: "Il nuovo valore del contatore."
  overload: System.Diagnostics.PerformanceCounter.IncrementBy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il contatore è di sola lettura, pertanto l&quot;applicazione non è possibile incrementare il.       - oppure - l&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  id: InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta la durata di un processo."
  remarks: "Se la categoria del contatore delle prestazioni viene creata con .NET Framework versione 1.0 o 1.1, viene utilizzata la memoria globale condivisa e il valore per InstanceLifetime deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.      > [!NOTE] > Se il valore della <xref:System.Diagnostics.PerformanceCounter.CounterType%2A>proprietà è <xref:System.Diagnostics.PerformanceCounterCategoryType>il valore InstanceLifetime per il contatore delle prestazioni deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounterCategoryType> </xref:System.Diagnostics.PerformanceCounter.CounterType%2A>"
  syntax:
    content: public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }
    return:
      type: System.Diagnostics.PerformanceCounterInstanceLifetime
      description: "Uno del <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore impostato non è membro il <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> enumerazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "InstanceLifetime viene impostato dopo la <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> è stata inizializzata."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  id: InstanceName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta un nome di istanza per questo contatore delle prestazioni."
  remarks: "> [!NOTE]\n>  Instance names must be shorter than 128 characters in length.  \n  \n In some situations, categories are subdivided into instances, which track data about multiple occurrences of the object that a category relates to. Instances apply to the category as whole, rather than to individual counters. Every counter within a category has each instance defined for the category. For example, the Process category contains instances named Idle and System. Every counter within the Process category thus contains data for each instance, showing information about either idle processes or system processes.  \n  \n Many categories do not contain multiple instances, so you can leave this property empty to indicate that no instance is associated with the category.  \n  \n If this <xref:System.Diagnostics.PerformanceCounter> instance points to a noncustom category, you can choose from only the existing category instances. You can create new category instances only in custom categories, which allow you to define as many counters and category instances as you need.  \n  \n To create a performance category instance, specify an `instanceName` on the <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> constructor. If the category instance specified by `instanceName` already exists the new object will reference the existing category instance.  \n  \n> [!NOTE]\n>  Do not use the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\" in the instance name. If any of these characters are used, the Performance Console (see [Runtime Profiling](~/add/includes/ajax-current-ext-md.md)) may not correctly display the instance values.  \n  \n If the instance name is automatically generated and might contain the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\", use the character mapping in the following table.  \n  \n|Character|Mapped character|  \n|---------------|----------------------|  \n|(|[|  \n|)|]|  \n|#|_|  \n|\\|_|  \n|/|_|  \n  \n The <xref:System.AppDomain.FriendlyName%2A> property of the <xref:System.AppDomain> object obtained from the <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> property is a common source of instance names that can contain invalid characters."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and InstanceName property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_0_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_0_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: public string InstanceName { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;istanza di categoria del contatore delle prestazioni o una stringa vuota (&quot;&quot;), se il contatore è un contatore a istanza singola."
  overload: System.Diagnostics.PerformanceCounter.InstanceName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.MachineName
  id: MachineName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il nome del computer per questo contatore delle prestazioni"
  remarks: "È possibile scrivere valori solo per i contatori che si trovano nel computer locale. Tuttavia, è possibile leggere i valori del contatore da qualsiasi computer nell&quot;organizzazione per il quale si dispone dei privilegi di accesso.       Quando si imposta la proprietà MachineName in modo che punti a un computer remoto, il <xref:System.Diagnostics.PerformanceCounter>istanza tenta di aprire il contatore in tale computer.</xref:System.Diagnostics.PerformanceCounter> Se il contatore non esiste, l&quot;impostazione di questa proprietà genera un&quot;eccezione."
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "Il server sul quale risiede il contatore delle prestazioni e la categoria associata."
  overload: System.Diagnostics.PerformanceCounter.MachineName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il formato MachineName non è valido."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextSample
  id: NextSample
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene un campione del contatore e restituisce il valore non elaborato o non calcolato."
  remarks: "Questo metodo viene in genere utilizzato per i contatori che contengono valori non calcolati.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  example:
  - "The following code example demonstrates how to use the NextSample method to obtain the next uncalculated value of a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_13_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_13_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_13_1.vb)]"
  syntax:
    content: public System.Diagnostics.CounterSample NextSample ();
    parameters: []
    return:
      type: System.Diagnostics.CounterSample
      description: "Oggetto <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> che rappresenta il valore non elaborato successivo che il sistema Ottiene per questo contatore."
  overload: System.Diagnostics.PerformanceCounter.NextSample*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextValue
  id: NextValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene un campione del contatore e restituisce il valore calcolato."
  remarks: "> [!NOTE]> Se il valore calcolato di un contatore dipende da due letture del contatore, la prima operazione di lettura restituisce 0,0. Reimpostare le proprietà del contatore delle prestazioni per specificare un diverso contatore è equivalente alla creazione di un nuovo contatore delle prestazioni e la prima operazione di lettura utilizzando le nuove proprietà restituirà 0,0. Il ritardo consigliato tra le chiamate al metodo NextValue è&1; secondo, per consentire al contatore di eseguire la lettura incrementale successiva.      > [!NOTE] > Per leggere i contatori delle prestazioni, è necessario disporre di privilegi amministrativi. In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  example:
  - "The following code example creates an <xref:System.Diagnostics.PerformanceCounterType> counter and uses the NextValue method to display the counter's values over a time period.  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/m-system.diagnostics.per_12_1.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/m-system.diagnostics.per_12_1.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_12_1.vb)]"
  syntax:
    content: public float NextValue ();
    parameters: []
    return:
      type: System.Single
      description: "Il valore calcolato successivo che il sistema Ottiene per questo contatore."
  overload: System.Diagnostics.PerformanceCounter.NextValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;istanza non è correttamente associato a un contatore delle prestazioni."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il valore non elaborato o non calcolato di questo contatore."
  remarks: "Se si tenta di impostare questa proprietà su un valore che è troppo grande per il tipo di contatore è una dimensione a 32 bit, la proprietà tronca il valore a 32 bit. Durante la lettura dei contatori personalizzati nel computer locale, uso di RawValue proprietà anziché un valore calcolato può produrre un miglioramento significativo delle prestazioni in scenari in cui il valore non elaborato è sufficiente.       Se il contatore che si sta leggendo è di sola lettura, il recupero della proprietà RawValue campione del contatore nel momento in cui la proprietà viene chiamata. Questa azione equivale a effettuare una chiamata iniziale per il <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>metodo.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A> Se si chiama successivamente <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, è possibile eseguire calcoli sui valori restituiti da entrambe le chiamate.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A>       Poiché i contatori di sistema sono di sola lettura, è possibile ottenere ma non impostare i relativi valori non elaborati.      > [!NOTE] > Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>utilizzano i blocchi per aggiornare il valore del contatore.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ciò consente di mantenere il valore del contatore accurate in scenari multithread o multiprocesso, ma comporta una riduzione delle prestazioni. Se non è necessaria l&quot;accuratezza che interlocked operazioni forniscono, è possibile aggiornare la proprietà RawValue direttamente per fino a un 5 volte miglioramento delle prestazioni.  Tuttavia, negli scenari multithreading, alcuni aggiornamenti per il valore del contatore potrebbero ignorati, generando dati non accurati.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.      > [!NOTE] > Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.   >> Per evitare di dover elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.   >> In Windows Vista, il controllo dell&quot;Account utente (UAC) determina i privilegi di un utente. Si è un membro del gruppo Administrators predefinito, vengono assegnati due token di accesso in fase di esecuzione: un token di accesso utente standard e un token di accesso di amministratore. Per impostazione predefinita, viene assegnato il ruolo dell&quot;utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è necessario elevare i privilegi da utente standard ad amministratore. È possibile farlo quando si avvia un&quot;applicazione facendo clic sull&quot;icona dell&quot;applicazione e indicando che si desidera eseguire come amministratore."
  example:
  - "The following example uses the <xref:System.Diagnostics.CounterSample> class to display the value of the RawValue property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long RawValue { get; set; }
    return:
      type: System.Int64
      description: "Il valore non elaborato del contatore."
  overload: System.Diagnostics.PerformanceCounter.RawValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si sta tentando di impostare il valore del contatore non elaborati, ma il contatore è di sola lettura.       - oppure - l&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Codice che è in esecuzione senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  id: ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta un valore che indica se questo <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza è in modalità di sola lettura."
  remarks: "Per un contatore di sistema, ReadOnly deve sempre essere `true`. Impossibile scrivere in un contatore di sistema."
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se il <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza è in modalità di sola lettura (anche se il contatore stesso è un contatore personalizzato di .NET Framework). <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se è in modalità lettura/scrittura. Il valore predefinito è il valore impostato dal costruttore."
  overload: System.Diagnostics.PerformanceCounter.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  id: RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Elimina l&quot;istanza di categoria specificata per il <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> oggetto <xref:System.Diagnostics.PerformanceCounter.InstanceName*>proprietà.</xref:System.Diagnostics.PerformanceCounter.InstanceName*>"
  remarks: "È possibile rimuovere un&quot;istanza solo per un contatore personalizzato. Tutti i contatori di sistema sono di sola lettura, pertanto il tentativo di rimuovere uno di essi genera un&quot;eccezione.      > [!NOTE] > Per evitare una possibile race condition quando viene rilasciata la memoria condivisa per un contatore delle prestazioni, è consigliabile che il metodo RemoveInstance essere chiamato dal <xref:System.AppDomain.DomainUnload>gestore dell&quot;evento.</xref:System.AppDomain.DomainUnload>       Per creare un&quot;istanza di una categoria di prestazioni, specificare un `instanceName` sul <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>costruttore.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se l&quot;istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all&quot;istanza esistente della categoria.      > [!NOTE] > Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>proprietà <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorie di contatori delle prestazioni create con versioni precedenti utilizzano memoria condivisa globale e il valore per cui <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se la categoria non viene utilizzata da applicazioni in esecuzione nelle versioni 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria."
  syntax:
    content: public void RemoveInstance ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.RemoveInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo contatore è di sola lettura, pertanto non è possibile rimuovere le istanze che sono associate alla categoria.       - oppure - l&quot;istanza non è correttamente associato a un contatore delle prestazioni.       - o - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>è impostata su <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizzando il protocollo shared memory.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Si è verificato un errore quando si accede a un&quot;API di sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La piattaforma è Windows 98 o Windows Millennium Edition (Me), che non supporta i contatori delle prestazioni."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Diagnostics.PerformanceCounter.#ctor
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
- uid: System.Diagnostics.PerformanceCounter.EndInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
- uid: System.Diagnostics.PerformanceCounter.Increment
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounterInstanceLifetime
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterInstanceLifetime
  nameWithType: PerformanceCounterInstanceLifetime
  fullName: System.Diagnostics.PerformanceCounterInstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.PerformanceCounter.NextValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.PerformanceCounter.RawValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
- uid: System.Diagnostics.PerformanceCounter.#ctor*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter
  nameWithType: PerformanceCounter.PerformanceCounter
- uid: System.Diagnostics.PerformanceCounter.BeginInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit
  nameWithType: PerformanceCounter.BeginInit
- uid: System.Diagnostics.PerformanceCounter.CategoryName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close
  nameWithType: PerformanceCounter.Close
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources
  nameWithType: PerformanceCounter.CloseSharedResources
- uid: System.Diagnostics.PerformanceCounter.CounterHelp*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement
  nameWithType: PerformanceCounter.Decrement
- uid: System.Diagnostics.PerformanceCounter.Dispose*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose
  nameWithType: PerformanceCounter.Dispose
- uid: System.Diagnostics.PerformanceCounter.EndInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit
  nameWithType: PerformanceCounter.EndInit
- uid: System.Diagnostics.PerformanceCounter.Increment*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment
  nameWithType: PerformanceCounter.Increment
- uid: System.Diagnostics.PerformanceCounter.IncrementBy*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy
  nameWithType: PerformanceCounter.IncrementBy
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample
  nameWithType: PerformanceCounter.NextSample
- uid: System.Diagnostics.PerformanceCounter.NextValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue
  nameWithType: PerformanceCounter.NextValue
- uid: System.Diagnostics.PerformanceCounter.RawValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance
  nameWithType: PerformanceCounter.RemoveInstance
