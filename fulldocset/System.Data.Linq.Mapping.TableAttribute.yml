### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.TableAttribute
  id: TableAttribute
  children:
  - System.Data.Linq.Mapping.TableAttribute.#ctor
  - System.Data.Linq.Mapping.TableAttribute.Name
  langs:
  - csharp
  name: TableAttribute
  nameWithType: TableAttribute
  fullName: System.Data.Linq.Mapping.TableAttribute
  type: Class
  summary: "Definisce una classe come classe di entità che è associata a una tabella di database."
  remarks: "Usare questo attributo per definire una classe come classe di entità che è associata a una tabella di database o una vista. [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]considera le classi con l&quot;attributo TableAttribute come classi persistenti.       [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]supporta solo i mapping di singole tabelle. Vale a dire, una classe di entità deve essere mappata a esattamente una tabella di database e non mappare una tabella di database a più classi contemporaneamente.       È possibile utilizzare il <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>proprietà dell&quot;attributo TableAttribute per specificare un nome per la tabella ed è possibile utilizzare facoltativamente il nome dello schema per qualificare un nome di tabella.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Se non si specifica un nome utilizzando il <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>proprietà, il nome della tabella viene considerato lo stesso nome della classe.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>      ## Specificazione dello schema nomi è facoltativamente possibile utilizzare il nome dello schema per qualificare un nome di tabella. Per impostazione predefinita, il token a sinistra del primo punto nella <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>stringa viene considerata il nome dello schema.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> Il resto del nome viene considerato il nome della tabella. Il provider di racchiude tra virgolette il nome della tabella come appropriato. Ad esempio, il [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] provider per SQL Server assicura che tra parentesi quadre sono utilizzate almeno in cui sono necessarie.      > [!NOTE] > In alcuni casi, è necessario indicare in modo esplicito gli attributi perché il provider SQL Server non è possibile inserire le virgolette automaticamente. Nella tabella seguente vengono illustrati alcuni esempi.      | Case | Esempio: Nome dell&quot;identificatore | Esempio: Prevista stringa negli attributi | In caso contrario... |   |----------|------------------------------|--------------------------------------------|----------------|   | Nome dello schema contiene un punto | Schema: &quot;b&quot;<br /><br /> Tabella: &quot;C&quot; | &quot; [B]. C &quot;| Si presuppone che il primo periodo di separare il nome dello schema dal nome della tabella. |   | Nome dello schema o tabella inizia con `@`| &quot; @SomeName&quot;|&quot; [@SomeName]&quot;| Si presuppone che sia un nome di parametro. |   | Schema inizia con `[` e finisce con `]`| &quot; [Schema.Table]&quot;|&quot; [[Schema]. [Tabella]]] &quot;| L&quot;identificatore non racchiusi tra virgolette è simile a un identificatore tra virgolette. |   | La tabella inizia con `[` e finisce con `]`| &quot; [Tabella] &quot;|&quot; [[Tabella]]] &quot;| L&quot;identificatore non racchiusi tra virgolette è simile a un identificatore tra virgolette. |"
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class TableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Linq.Mapping.TableAttribute&quot;> </xref> classe."
  syntax:
    content: public TableAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.TableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene o imposta il nome della tabella o della vista."
  remarks: "Se non si specifica un nome con nome, il nome della tabella è considerato identico al nome di classe.      > [!NOTE] > Facoltativamente, è possibile utilizzare un nome di schema per qualificare il nome della tabella (ad esempio, Schema3.Table5). Per impostazione predefinita, il token a sinistra del primo punto nella stringa del nome viene considerato come il nome dello schema e il resto è il nome della tabella.       Nell&quot;esempio seguente, il nome di tabella predefinito `Customer`, viene modificato in `Customers`."
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Per impostazione predefinita, il valore è identico al nome della classe."
  overload: System.Data.Linq.Mapping.TableAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute
  nameWithType: TableAttribute.TableAttribute
- uid: System.Data.Linq.Mapping.TableAttribute.Name*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
