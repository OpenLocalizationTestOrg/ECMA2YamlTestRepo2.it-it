### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.TableAttribute
  id: TableAttribute
  children:
  - System.Data.Linq.Mapping.TableAttribute.#ctor
  - System.Data.Linq.Mapping.TableAttribute.Name
  langs:
  - csharp
  name: "TableAttribute"
  nameWithType: TableAttribute
  fullName: System.Data.Linq.Mapping.TableAttribute
  type: Class
  summary: Designates a class as an entity class that is associated with a database table.
  remarks: "Use this attribute to designate a class as an entity class that is associated with a database table or view. [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] treats classes that have the TableAttribute attribute as persistent classes.  \n  \n [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] supports only single-table mapping. That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.  \n  \n You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the TableAttribute attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name. If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.  \n  \n## Schema-qualified Names  \n You can optionally use the schema name to qualify a table name. By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name. The remainder of the name is considered to be the table name. The provider quotes the table name as appropriate. For example, the [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.  \n  \n> [!NOTE]\n>  In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote. The following table shows some examples.  \n  \n|Case|Example: Identifier Name|Example: Expected String in Attributes|Otherwiseâ€¦|  \n|----------|------------------------------|--------------------------------------------|----------------|  \n|Schema name contains a period|Schema: \"A.B\"<br /><br /> Table: \"C\"|\"[A.B].C\"|The first period is assumed to separate the schema name from the table name.|  \n|Schema/Table name starts with `@`|\"@SomeName\"|\"[@SomeName]\"|Assumed to be a parameter name.|  \n|Schema starts with `[` and ends with `]`|\"[Schema.Table]\"|\"[[Schema].[Table]]]\"|The unquoted identifier resembles a quoted identifier.|  \n|Table starts with `[` and ends with `]`|\"[Table]\"|\"[[Table]]]\"|The unquoted identifier resembles a quoted identifier.|"
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/VisualBasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/CSharp/customize/Program.cs#1)]
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class TableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: "TableAttribute()"
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute"></see> class.
  syntax:
    content: public TableAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.TableAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: "Name"
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Gets or sets the name of the table or view.
  remarks: "If you do not specify a name by using Name, the table name is assumed to be the same as the class name.  \n  \n> [!NOTE]\n>  You can optionally use a schema name to qualify the table name (for example, Schema3.Table5). By default, the token to the left of the first period in the Name string is considered to be the schema name, and the rest to be the table name.  \n  \n In the following example, the default table name, `Customer`, is changed to `Customers`."
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/VisualBasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/CSharp/customize/Program.cs#1)]
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "By default, the value is the same as the name of the class."
  overload: System.Data.Linq.Mapping.TableAttribute.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: "System.Attribute"
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: "TableAttribute()"
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: "Name"
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: "TableAttribute"
  nameWithType: TableAttribute.TableAttribute
- uid: System.Data.Linq.Mapping.TableAttribute.Name*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: "Name"
  nameWithType: TableAttribute.Name
