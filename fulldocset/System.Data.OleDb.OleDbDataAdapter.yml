### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataAdapter
  id: OleDbDataAdapter
  children:
  - System.Data.OleDb.OleDbDataAdapter.#ctor
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  - System.Data.OleDb.OleDbDataAdapter.InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.RowUpdated
  - System.Data.OleDb.OleDbDataAdapter.RowUpdating
  - System.Data.OleDb.OleDbDataAdapter.SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  - System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
  type: Class
  summary: "Rappresenta un set di comandi dati e una connessione al database vengono utilizzate per compilare il <xref href=&quot;System.Data.DataSet&quot;> </xref> e aggiornare l&quot;origine dati."
  remarks: "OleDbDataAdapter funge da ponte tra un <xref:System.Data.DataSet>e origine dati per il recupero e il salvataggio dei dati.</xref:System.Data.DataSet> OleDbDataAdapter fornisce questo bridge utilizzando <xref:System.Data.Common.DbDataAdapter.Fill%2A>per caricare i dati dall&quot;origine dati nel <xref:System.Data.DataSet>e l&quot;utilizzo di <xref:System.Data.Common.DbDataAdapter.Update%2A>per inviare le modifiche apportate nel <xref:System.Data.DataSet>fino all&quot;origine dati.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Quando è pieno OleDbDataAdapter un <xref:System.Data.DataSet>, creerà le tabelle e colonne appropriate per i dati restituiti se non esiste già.</xref:System.Data.DataSet> Tuttavia, le informazioni sulla chiave primarie non è incluso nello schema creato in modo implicito, a meno che la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>proprietà è impostata su <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Può inoltre essere OleDbDataAdapter creare lo schema di <xref:System.Data.DataSet>incluse informazioni sulla chiave primarie, prima di inserire i dati mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.DataSet> Per ulteriori informazioni, vedere [aggiungendo i vincoli esistenti a un set di dati](~/add/includes/ajax-current-ext-md.md).       Si noti che alcuni provider OLE DB, tra cui il provider MSDataShape, non restituiscono informazioni sulla chiave primarie o tabella di base. Pertanto, OleDbDataAdapter non è possibile impostare correttamente la <xref:System.Data.DataTable.PrimaryKey%2A>proprietà in qualsiasi <xref:System.Data.DataTable>.</xref:System.Data.DataTable> creato</xref:System.Data.DataTable.PrimaryKey%2A> In questi casi è necessario specificare esplicitamente le chiavi primarie per le tabelle in <xref:System.Data.DataSet>.</xref:System.Data.DataSet>       OleDbDataAdapter include anche il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DataAdapter.TableMappings%2A>proprietà per il caricamento e l&quot;aggiornamento dei dati.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       Quando si crea un&quot;istanza di OleDbDataAdapter, proprietà vengono impostate sui valori iniziali. Per un elenco di questi valori, vedere il costruttore di OleDbDataAdapter."
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, OleDbDataAdapter and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_7_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_7_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> classe."
  remarks: "Quando si crea un&quot;istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le seguenti proprietà di lettura/scrittura vengono impostate per i seguenti valori iniziali.</xref:System.Data.OleDb.OleDbDataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_28_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_28_1.cs)]"
  syntax:
    content: public OleDbDataAdapter ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  id: '#ctor(System.Data.OleDb.OleDbCommand)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> come il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>proprietà.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Questa implementazione del <xref:System.Data.OleDb.OleDbDataAdapter>costruttore imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>proprietà sul valore specificato nel `selectCommand` parametro.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter>       Quando si crea un&quot;istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le seguenti proprietà di lettura/scrittura vengono impostate per i seguenti valori iniziali.</xref:System.Data.OleDb.OleDbDataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_17_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_17_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OleDb.OleDbCommand
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> che è una stored procedure o un&quot;istruzione SELECT e viene impostato come il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> classe con un <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Questa implementazione del <xref:System.Data.OleDb.OleDbDataAdapter>apre e chiude un <xref:System.Data.OleDb.OleDbConnection>Se non è già aperto.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataAdapter> Ciò può risultare utile in un&quot;applicazione che deve chiamare il <xref:System.Data.Common.DbDataAdapter.Fill%2A>metodo per due o più <xref:System.Data.OleDb.OleDbDataAdapter>oggetti.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Se il <xref:System.Data.OleDb.OleDbConnection>è già aperto, è necessario chiamare esplicitamente <xref:System.Data.OleDb.OleDbConnection.Close%2A>o **Dispose** per chiudere tale</xref:System.Data.OleDb.OleDbConnection.Close%2A> </xref:System.Data.OleDb.OleDbConnection>       Quando si crea un&quot;istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le seguenti proprietà di lettura/scrittura vengono impostate per i seguenti valori iniziali.</xref:System.Data.OleDb.OleDbDataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/visualbasic/f3cd089b-2d52-49c5-b101-_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/csharp/f3cd089b-2d52-49c5-b101-_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Stringa che rappresenta un&quot;istruzione SQL SELECT o una stored procedure da utilizzare per il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OleDb.OleDbConnection
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> che rappresenta la connessione."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> classe con un <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Questo overload del metodo di <xref:System.Data.OleDb.OleDbDataAdapter>costruttore utilizza il `selectConnectionString` parametro da impostare il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>proprietà.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter> Tuttavia, non si apra la connessione. È comunque necessario aprire in modo esplicito la connessione.       Quando si crea un&quot;istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le seguenti proprietà di lettura/scrittura vengono impostate per i seguenti valori iniziali.</xref:System.Data.OleDb.OleDbDataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_4_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_4_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Stringa che rappresenta un&quot;istruzione SQL SELECT o una stored procedure da utilizzare per il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "La stringa di connessione."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Da aggiungere."
    - id: command
      type: System.Data.IDbCommand
      description: "Da aggiungere."
    - id: statementType
      type: System.Data.StatementType
      description: "Da aggiungere."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Da aggiungere."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Da aggiungere."
    - id: command
      type: System.Data.IDbCommand
      description: "Da aggiungere."
    - id: statementType
      type: System.Data.StatementType
      description: "Da aggiungere."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Da aggiungere."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure per l&quot;eliminazione di record dal set di dati."
  remarks: "Durante il <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente <xref:System.Data.DataSet>DeleteCommand può essere generato automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>proprietà e utilizzare <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando DeleteCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>non verrà duplicato.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> DeleteCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per eliminare i record nell&quot;origine dati che corrispondono alle righe eliminate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  id: Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Aggiunge o aggiorna righe in un <xref href=&quot;System.Data.DataTable&quot;> </xref> affinché corrispondano a quelle in un oggetto ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> mediante l&quot;oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> e gli oggetti ADO."
  remarks: "Il collegamento tra oggetti ADO (ActiveX Data) e ADO.NET è un&quot;operazione unidirezionale in cui è possibile copiare dati da ADO per il <xref:System.Data.DataSet>, ma tutti gli aggiornamenti per i dati devono essere gestiti da ADO.NET.</xref:System.Data.DataSet>       Questo overload del metodo Fill non chiude l&quot;input `Recordset` al completamento dell&quot;operazione di riempimento.       Quando si gestiscono istruzioni SQL batch che restituiscono più risultati, questa implementazione di riempimento e <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>per il Provider di dati OLE DB.NET Framework consente di recuperare informazioni sullo schema solo per il primo risultato.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       L&quot;operazione di riempimento, le righe vengono aggiunte alla destinazione specificata <xref:System.Data.DataTable>oggetto di <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable>dell&quot;oggetto se non già esiste.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Quando si crea un <xref:System.Data.DataTable>dell&quot;oggetto, l&quot;operazione di riempimento crea in genere solo i metadati dei nomi di colonna.</xref:System.Data.DataTable> Tuttavia, se il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       È possibile utilizzare il metodo di riempimento più volte nella stessa <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Se esiste una chiave primaria, le righe in ingresso vengono unite con le righe corrispondenti che esistono già. Se è presente alcuna chiave primaria, le righe in ingresso vengono aggiunti a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Se le informazioni sulla chiave primarie è presente, tutte le righe duplicate sono risolte e visualizzate una sola volta in <xref:System.Data.DataTable>che corrisponde a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Informazioni sulla chiave primarie possono essere impostate mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, specificando il <xref:System.Data.DataTable.PrimaryKey%2A>proprietà del <xref:System.Data.DataTable>, o impostando la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>proprietà `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Se il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>restituisce i risultati di un OUTER JOIN, il `DataAdapter` non è stato impostato un <xref:System.Data.DataTable.PrimaryKey%2A>valore per risultante <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> È necessario definire in modo esplicito la chiave primaria per assicurarsi che le righe duplicate vengano risolte correttamente. Per ulteriori informazioni, vedere [la definizione di chiavi primarie](~/add/includes/ajax-current-ext-md.md).       Per funzionare correttamente con il Provider di dati .NET Framework per OLE DB, `AddWithKey` richiede che il provider OLE DB nativo Ottiene informazioni sulla chiave primarie obbligatori impostando la proprietà DBPROP_UNIQUEROWS e quindi determina quali colonne sono primarie colonne chiave esaminando siano il `IColumnsRowset`. In alternativa l&quot;utente può impostare in modo esplicito i vincoli di chiave primari in ogni <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Ciò assicura che i record in ingresso che corrispondono ai record esistenti siano aggiornati anziché aggiunti.       Se il <xref:System.Data.OleDb.OleDbDataAdapter>rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot; e così via.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Vengono aggiunti i nomi di colonna vuota il <xref:System.Data.DataTable>, utilizzando una stringa vuota per la prima colonna, seguito da &quot;1&quot;, &quot;2&quot;, &quot;3&quot; e così via per le colonne vuote successive.</xref:System.Data.DataTable>       I valori in ADO `Recordset` o `Record` gli oggetti vengono convertiti in tipi di common language runtime per l&quot;archiviazione in <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!CAUTION] > Questo overload del metodo Fill non chiama in modo implicito `Close` per l&quot;oggetto ADO quando l&quot;operazione di riempimento è stata completata. Pertanto, chiamare sempre il metodo `Close` quando si è terminato di utilizzare ADO `Recordset` o `Record` oggetti. Ciò assicura che la connessione a un&quot;origine dati sottostante viene rilasciata in modo tempestivo e si evita anche possibili violazioni di accesso a causa di oggetti ADO non gestiti viene recuperati da garbage collection quando esistono ancora riferimenti.       Quando si chiama il `TableMappings.Add` metodo su un `DataAdapter` e si mappa in modo esplicito il parametro di tabella di origine a una stringa vuota, il set di dati viene compilato correttamente utilizzando la tabella di origine, ma il set di dati verrà popolato con dati. Ad esempio, nell&quot;esempio seguente, `rDataSet` verrà popolato con dati.      ```   rAdapter.TableMappings.Add(&quot;source table&quot;, &quot;&quot;);   rAdapter.Fill(rDataSet, &quot;source table&quot;);      ```Questo esempio viene illustrato come è possibile ignorare un risultato quando si gestiscono più risultati.       Nell&quot;esempio seguente viene utilizzato un <xref:System.Data.OleDb.OleDbDataAdapter>per riempire un <xref:System.Data.DataTable>mediante un oggetto ADO `Recordset`.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Questo esempio si presuppone che sia stato creato un oggetto ADO `Recordset`.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable(&quot;Customers&quot;)        custTable.Columns.Add(&quot;CustomerID&quot;, Type.GetType(&quot;System.String&quot;))        custTable.Columns.Add(&quot;CompanyName&quot;, Type.GetType(&quot;System.String&quot;))        custDS.Tables.Add(custTable)        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable(&quot;Customers&quot;);        custTable.Columns.Add(&quot;CustomerID&quot;, typeof(String));        custTable.Columns.Add(&quot;CompanyName&quot;, typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> per inserire i record e, se necessario, dello schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Int32
      description: "Il numero di righe aggiornate correttamente per il <xref href=&quot;System.Data.DataTable&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  id: Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Aggiunge o aggiorna righe nel <xref href=&quot;System.Data.DataSet&quot;> </xref> affinché corrispondano a quelle in un oggetto ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> mediante l&quot;oggetto <xref href=&quot;System.Data.DataSet&quot;> </xref>, oggetto ADO e il nome di tabella di origine."
  remarks: "Il collegamento tra oggetti ADO (ActiveX Data) e ADO.NET è un&quot;operazione unidirezionale in cui è possibile copiare dati da ADO per il <xref:System.Data.DataSet>, ma tutti gli aggiornamenti per i dati devono essere gestiti da ADO.NET.</xref:System.Data.DataSet>       Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>metodo scorre più risultati chiamando il `NextRecordset` metodo il `Recordset`, chiusura input `Recordset` al completamento del <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>operazione.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>aggiunge le righe nella destinazione specificata <xref:System.Data.DataTable>oggetto di <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable>dell&quot;oggetto se non già esiste.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Quando si crea un <xref:System.Data.DataTable>oggetto, il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>operazione crea in genere solo i metadati dei nomi di colonna.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Tuttavia, se il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Se le informazioni sulla chiave primarie è presente, tutte le righe duplicate sono risolte e visualizzate una sola volta in <xref:System.Data.DataTable>che corrisponde a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Informazioni sulla chiave primarie possono essere impostate mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, specificando il <xref:System.Data.DataTable.PrimaryKey%2A>proprietà del <xref:System.Data.DataTable>, o impostando la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>proprietà `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Per funzionare correttamente con il Provider di dati .NET Framework per OLE DB, `AddWithKey` richiede il provider OLE DB nativo ottenere informazioni sulla chiave primarie obbligatori impostando la proprietà DBPROP_UNIQUEROWS e quindi determinare quali colonne sono primarie colonne chiave esaminando siano il **IColumnsRowset**. In alternativa l&quot;utente può impostare in modo esplicito i vincoli di chiave primari in ogni <xref:System.Data.DataTable>.</xref:System.Data.DataTable> In questo modo si garantisce che i record in ingresso che corrispondono ai record esistenti siano aggiornati anziché aggiunti.       Se il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>restituisce i risultati di un OUTER JOIN, il `DataAdapter` non è stato impostato un <xref:System.Data.DataTable.PrimaryKey%2A>valore per risultante <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> È necessario definire in modo esplicito la chiave primaria per assicurarsi che le righe duplicate vengano risolte correttamente. Per ulteriori informazioni, vedere [la definizione di chiavi primarie](~/add/includes/ajax-current-ext-md.md).       Se il `Recordset` viene chiuso prima di avviare il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>operazione, non verranno generati errori.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> È necessario per la gestione di più risultati, poiché le query che non restituiscono righe sono indicate da un oggetto chiuso `Recordset`. Il <xref:System.Data.OleDb.OleDbDataAdapter>chiama semplicemente `NextRecordset` su chiuso `Recordset` e continua l&quot;elaborazione.</xref:System.Data.OleDb.OleDbDataAdapter>       Se si verifica un errore durante il popolamento di set di dati, le righe aggiunte prima occorrenza dell&quot;errore restano nella <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Il resto dell&quot;operazione viene interrotta.       Se il <xref:System.Data.Common.DbDataAdapter>oggetto rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot; e così via.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Se i dati in ingresso contengano colonne senza nome, questi vengono collocati nel <xref:System.Data.DataSet>secondo il criterio &quot;Column1&quot;, &quot;Column2&quot; e così via.</xref:System.Data.DataSet> Quando più set di risultati vengono aggiunti per il <xref:System.Data.DataSet>ogni set di risultati viene inserito in una tabella separata.</xref:System.Data.DataSet> Set di risultati aggiuntivi sono denominati aggiungendo i valori integrali per il nome della tabella specificato (ad esempio, &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; e così via.). Le applicazioni che utilizzano nomi di colonna e tabella devono assicurarsi che non si verifichino conflitti con questi modelli di denominazione.       I valori in ADO `Recordset` o `Record` gli oggetti vengono convertiti in tipi di common language runtime per l&quot;archiviazione in <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!NOTE] > Questo overload del metodo di <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>metodo chiama in modo implicito `Close` per l&quot;oggetto ADO quando l&quot;operazione di riempimento è stata completata.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       Nell&quot;esempio seguente viene utilizzato un <xref:System.Data.OleDb.OleDbDataAdapter>per riempire un <xref:System.Data.DataSet>mediante un oggetto ADO `Recordset` che rappresenta un oggetto ADO `Record` oggetto.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> Questo esempio si presuppone che sia stato creato un oggetto ADO `RecordSet` e `Record` oggetto.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, &quot;Customers&quot;)        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, &quot;Customers&quot;);        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Oggetto <xref href=&quot;System.Data.DataSet&quot;> </xref> per inserire i record e, se necessario, dello schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    - id: srcTable
      type: System.String
      description: "La tabella di origine utilizzata per i mapping di tabella."
    return:
      type: System.Int32
      description: "Il numero di righe correttamente aggiunte o aggiornate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>. Non include righe interessate da istruzioni che non restituiscono righe."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "La tabella di origine non è valida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per inserire nuovi record nell&quot;origine dati."
  remarks: "Durante il <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente <xref:System.Data.DataSet>la proprietà InsertCommand può essere generata automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>proprietà e utilizzare <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando InsertCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>non verrà duplicato.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> InsertCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, è possibile aggiungere queste righe per il <xref:System.Data.DataSet>a seconda della modalità di impostazione di <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>proprietà del <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per inserire i record nell&quot;origine dati che corrispondono alle nuove righe di <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Da aggiungere."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Si verifica durante la <xref:System.Data.Common.DbDataAdapter.Update*>dopo l&quot;esecuzione di un comando sull&quot;origine dati.</xref:System.Data.Common.DbDataAdapter.Update*> Viene effettuato il tentativo di aggiornamento. Pertanto, si verifica l&quot;evento."
  remarks: "Quando si utilizza <xref:System.Data.Common.DbDataAdapter.Update%2A>, sono disponibili due eventi che si verificano per ogni riga di dati aggiornata.</xref:System.Data.Common.DbDataAdapter.Update%2A> L&quot;ordine di esecuzione è il seguente: 1.  I valori di <xref:System.Data.DataRow>vengono spostati i valori dei parametri.</xref:System.Data.DataRow>      2.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Esegue il comando.      4.  Se il comando è impostato su `FirstReturnedRecord`, il primo risultato restituito è inserito in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se sono presenti parametri di output, vengono inseriti in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>viene chiamato.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and RowUpdated events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OleDb.OleDbRowUpdatedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Si verifica durante la <xref:System.Data.Common.DbDataAdapter.Update*>prima dell&quot;esecuzione di un comando sull&quot;origine dati.</xref:System.Data.Common.DbDataAdapter.Update*> Viene effettuato il tentativo di aggiornamento. Pertanto, si verifica l&quot;evento."
  remarks: "Quando si utilizza <xref:System.Data.Common.DbDataAdapter.Update%2A>, sono disponibili due eventi che si verificano per ogni riga di dati aggiornata.</xref:System.Data.Common.DbDataAdapter.Update%2A> L&quot;ordine di esecuzione è il seguente: 1.  I valori di <xref:System.Data.DataRow>vengono spostati i valori dei parametri.</xref:System.Data.DataRow>      2.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Esegue il comando.      4.  Se il comando è impostato su `FirstReturnedRecord`, il primo risultato restituito è inserito in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se sono presenti parametri di output, vengono inseriti in <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Il <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>viene generato l&quot;evento.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>viene chiamato.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the RowUpdating and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OleDb.OleDbRowUpdatingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per selezionare i record nell&quot;origine dati."
  remarks: "Quando SelectCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>non verrà duplicato.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> La proprietà SelectCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand>       Se la proprietà SelectCommand non restituisce righe, verrà aggiunta alcuna tabella per la <xref:System.Data.DataSet>, e viene generata alcuna eccezione.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the SelectCommand and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> utilizzata durante l&quot;utilizzo <xref:System.Data.Common.DbDataAdapter.Fill*>per selezionare i record dall&quot;origine dati per la selezione nel <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OleDb.OleDbDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzata durante un aggiornamento per eliminare i record nell&quot;origine dati per le righe eliminate nel set di dati."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OleDb.OleDbDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzato durante un aggiornamento per inserire i record da un&quot;origine dati per la selezione nel set di dati."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OleDb.OleDbDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzato durante un aggiornamento per selezionare i record da un&quot;origine dati per la selezione nel set di dati."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OleDb.OleDbDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Un <xref href=&quot;System.Data.IDbCommand&quot;> </xref> utilizzata durante un aggiornamento per aggiornare record nell&quot;origine dati per le righe modificate nel set di dati."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OleDb.OleDbDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.ICloneable>interfaccia.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo <xref:System.Object>che rappresenta una copia di questa istanza.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per aggiornare i record nell&quot;origine dati."
  remarks: "Durante il <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente <xref:System.Data.DataSet>la proprietà UpdateCommand può essere generata automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>proprietà e utilizzare <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Quindi, i comandi aggiuntivi che non si imposta vengono generati da <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Questa logica di generazione richiede informazioni della colonna chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).       Quando UpdateCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>non verrà duplicato.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> La proprietà UpdateCommand mantiene un riferimento all&quot;oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, queste righe potrebbero essere unite con il <xref:System.Data.DataSet>a seconda della modalità di impostazione di <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>proprietà del <xref:System.Data.OleDb.OleDbCommand>oggetto.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Un <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> utilizzato durante <xref:System.Data.Common.DbDataAdapter.Update*>per aggiornare i record nell&quot;origine dati che corrispondono alle righe modificate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
- uid: System.Data.OleDb.OleDbRowUpdatedEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatedEventHandler
  nameWithType: OleDbRowUpdatedEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatedEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
- uid: System.Data.OleDb.OleDbRowUpdatingEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatingEventHandler
  nameWithType: OleDbRowUpdatingEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatingEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill
  nameWithType: OleDbDataAdapter.Fill
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OleDbDataAdapter.OnRowUpdated
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OleDbDataAdapter.OnRowUpdating
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
