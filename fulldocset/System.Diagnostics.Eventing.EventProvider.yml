### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProvider
  id: EventProvider
  children:
  - System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  - System.Diagnostics.Eventing.EventProvider.Close
  - System.Diagnostics.Eventing.EventProvider.CreateActivityId
  - System.Diagnostics.Eventing.EventProvider.Dispose
  - System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.EventProvider.Finalize
  - System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  - System.Diagnostics.Eventing.EventProvider.IsEnabled
  - System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  langs:
  - csharp
  name: EventProvider
  nameWithType: EventProvider
  fullName: System.Diagnostics.Eventing.EventProvider
  type: Class
  summary: "Utilizzare questa classe per scrivere eventi."
  remarks: "Per utilizzare gli eventi scritti utilizzando il <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>e <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>metodi, gli eventi devono essere definiti in un manifesto; gli eventi scritti utilizzando il <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>(metodo) non richiedono un manifesto.</xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Gli eventi possono contenere i seguenti tipi di dati gestiti: - bool - Boolean, byte - char - decimali - doppio Usa - float - stringa sbyte, short - Guid - int - IntPtr - lungo - - uint - UInt64 se un evento nel manifesto di `Boolean` tipo, non è possibile scrivere i dati utilizzando un `Boolean` il tipo di dati nel codice gestito. Il `Boolean` -nel manifesto di tipo prevede un valore a 4 byte e un `Boolean` il tipo di dati nel codice gestito è 1 byte. In alternativa, è necessario utilizzare un `int` il tipo di dati per scrivere il valore. Se si desidera registrare un `Boolean` valore, utilizzare il tipo UInt8 nel manifesto."
  syntax:
    content: 'public class EventProvider : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> classe."
  remarks: "Registra il provider. Per rimuovere la registrazione al termine, chiamare il <xref:System.Diagnostics.Eventing.EventProvider.Close%2A>metodo.</xref:System.Diagnostics.Eventing.EventProvider.Close%2A>"
  syntax:
    content: public EventProvider (Guid providerGuid);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "GUID che identifica in modo univoco il provider."
  overload: System.Diagnostics.Eventing.EventProvider.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Non è disponibile memoria sufficiente per completare l&quot;operazione."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Le classi di <xref href=&quot;System.Diagnostics.Eventing&quot;> </xref> lavoro dello spazio dei nomi solo in Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> providerGuid </code> parametro non può essere null."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;errore nel sottosistema ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Rimuove la registrazione del provider nel sottosistema ETW e rilascia tutte le risorse non gestite."
  remarks: "È necessario chiamare questo metodo al termine, anziché attendere per il sistema per l&quot;eliminazione delle risorse."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Close*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;errore nel sottosistema ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  id: CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Crea un identificatore univoco dell&quot;attività per il provider."
  remarks: "Si tratta di un metodo statico."
  syntax:
    content: public static Guid CreateActivityId ();
    parameters: []
    return:
      type: System.Guid
      description: "Un Guid univoco utilizzato durante la chiamata di <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>per impostare l&quot;identificatore di attività per il provider.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Rilascia le risorse usate da questo <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> oggetto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Rilascia le risorse usate da questo <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> oggetto."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Questo parametro viene ignorato da questo metodo poiché non sono presenti risorse non gestite."
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  id: Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Consente di liberare risorse ed esegue la pulitura interna prima che l&quot;istanza viene recuperata tramite garbage collection."
  syntax:
    content: ~EventProvider ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  id: GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Ottiene l&quot;ultimo errore associata a un errore di scrittura di eventi."
  remarks: "Il <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>, <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>, e <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>metodi impostano questo valore, in caso di scrittura dell&quot;evento.</xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Si tratta di un metodo statico."
  syntax:
    content: public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
      description: "Utilizzare il valore per determinare la causa di un errore di scrittura di eventi."
  overload: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  id: IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Determina se una sessione ha attivato il provider, indipendentemente dai valori di livello e parola chiave utilizzata per abilitare il provider."
  remarks: "In genere, un provider non chiama questo metodo per determinare se il provider è stato attivato da una sessione. il provider viene semplicemente scritto l&quot;evento ed ETW determina se l&quot;evento viene registrato per la sessione. Un provider consigliabile chiamare questa funzione se il provider deve eseguire un lavoro aggiuntivo per generare l&quot;evento. In questo caso, chiamare questa funzione innanzitutto può risparmiare tempo e risorse."
  syntax:
    content: public bool IsEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se il provider è abilitato per qualsiasi sessione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  id: IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Determina se l&quot;evento specificato è richiesto dal provider da una sessione."
  remarks: "In genere, un provider di non chiamare questo metodo per determinare se una sessione richiesto l&quot;evento specificato. il provider viene semplicemente scritto l&quot;evento ed ETW determina se l&quot;evento è connesso a una sessione. Un provider consigliabile chiamare questa funzione se il provider deve eseguire un lavoro aggiuntivo per generare l&quot;evento. In questo caso, chiamare questa funzione per determinare se una sessione di evento richiesto o non, può risparmiare tempo e risorse."
  syntax:
    content: public bool IsEnabled (byte level, long keywords);
    parameters:
    - id: level
      type: System.Byte
      description: "Livello di dettaglio incluso nell&quot;evento."
    - id: keywords
      type: System.Int64
      description: "Maschera di bit che specifica la categoria di eventi. Questa maschera deve essere la stessa mask (parola chiave) che è definita nel manifesto per l&quot;evento."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se qualsiasi sessione richiede l&quot;evento specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  id: SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Imposta l&quot;identificatore di attività corrente utilizzato per il <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>metodi.</xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>"
  remarks: "L&quot;identificatore viene archiviato nel contesto del thread.       Si noti che nella versione 3.5 di .NET framework, era necessario impostare il `id` parametro di questo metodo e <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>valore della proprietà per lo stesso valore di identificatore.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Tuttavia, in versione 4.0 di framework, il metodo SetActivityId imposta automaticamente l&quot;identificatore di attività di correlazione per l&quot;utente.       Si tratta di un metodo statico."
  syntax:
    content: public static void SetActivityId (ref Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Un identificatore univoco dell&quot;attività che la <xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>metodo restituisce.</xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Scrive un evento. I dati dell&quot;evento sono specificati come una matrice di oggetti."
  remarks: "Se si chiama il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo per specificare un identificatore di attività per l&quot;evento, questo metodo recupera l&quot;identificatore dal contesto del thread e include l&quot;evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Se il tipo di oggetto non è supportato, il metodo scrive il valore dell&quot;oggetto <xref:System.Object.ToString%2A?displayProperty=fullName>metodo nel payload.</xref:System.Object.ToString%2A?displayProperty=fullName> Per un elenco di tipi di oggetto supportati, vedere la sezione Osservazioni per la <xref:System.Diagnostics.Eventing.EventProvider>classe.</xref:System.Diagnostics.Eventing.EventProvider>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nenum Keyword  \n{  \n    Read = 0x1,  \n    Write = 0x2,  \n    Local = 0x4,  \n    Remote = 0x8  \n}  \n  \nenum Level  \n{  \n    Critical = 1,  \n    Error,  \n    Warning,  \n    Information,  \n    Verbose  \n}  \n  \n    EventProvider provider = new EventProvider(providerId);  \n    EventDescriptor readEvent;  \n    string path = @\"<PATHGOESHERE>\";  \n    UInt64 bytesRead = <ASSIGNVALUE>;  \n  \n    if (provider.IsEnabled(Level.Information, (long)Keyword.Read))  \n    {  \n        unchecked  \n        {  \n            readEvent = new EventDescriptor(0x1, 0x0, 0x10, 0x4, 0x0, 0x0, (long)0x8000000000000005);  \n        }  \n  \n        if (!provider.WriteEvent(ref readEvent, new object[] { path, bytesRead }))  \n            Console.WriteLine(EventProvider.GetLastWriteEventError());  \n    }  \n  \n    provider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Un&quot;istanza di <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> che identifica l&quot;evento da scrivere."
    - id: eventPayload
      type: System.Object[]
      description: "Matrice di oggetti che contengono i dati dell&quot;evento da scrivere. L&quot;oggetto deve essere nell&quot;ordine specificato nel manifesto. La matrice è limitata a 32 oggetti, di cui solo otto possono essere stringhe. La dimensione massima dei dati per l&quot;evento è limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento.       Questo parametro può essere null."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodo per determinare la causa dell&quot;errore."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> eventPayload </code> parametro contiene un numero eccessivo di oggetti o stringhe."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Scrive un evento. I dati dell&quot;evento sono specificati come stringa."
  remarks: "Se si chiama il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo per specificare un identificatore di attività per l&quot;evento, questo metodo recupera l&quot;identificatore dal contesto del thread e include l&quot;evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       La lunghezza massima della stringa è limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nEventProvider provider = new EventProvider(providerId);  \nEventDescriptor writeEvent;  \n  \nif (provider.IsEnabled())  \n{  \n     unchecked  \n     {  \n          writeEvent = new EventDescriptor(0x2, 0x0, 0x10, 0x3, 0x0, 0x0, (long)0x8000000000000006);  \n     }  \n  \n     if (!provider.WriteEvent(ref writeEvent, \"Write event.\"))  \n          Console.WriteLine(EventProvider.GetLastWriteEventError());  \n}  \n  \nprovider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Un&quot;istanza di <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> che identifica l&quot;evento da scrivere."
    - id: data
      type: System.String
      description: "Stringa da scrivere come dati dell&quot;evento."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodo per determinare la causa dell&quot;errore."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Scrive un evento. I dati dell&quot;evento sono specificati come un blocco di memoria."
  remarks: "Se si chiama il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo per specificare un identificatore di attività per l&quot;evento, questo metodo recupera l&quot;identificatore dal contesto del thread e include l&quot;evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Un&quot;istanza di <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> che identifica l&quot;evento da scrivere."
    - id: dataCount
      type: System.Int32
      description: "Dimensioni dei dati dell&quot;evento a cui il `data` parametro fa riferimento. Le dimensioni massime dei dati sono limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
    - id: data
      type: System.IntPtr
      description: "Puntatore ai dati dell&quot;evento da scrivere."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodo per determinare la causa dell&quot;errore."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  id: WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Scrive un evento che contiene una stringa come i relativi dati."
  remarks: "La lunghezza massima della stringa è limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
  example:
  - "```  \nif (!provider.WriteMessageEvent(\"Event string.\"))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Stringa da scrivere come dati dell&quot;evento."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodo per determinare la causa dell&quot;errore."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  id: WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Scrive un evento che contiene una stringa come i relativi dati se il valore di livello e parola chiave corrisponde agli eventi richiesti dalla sessione."
  remarks: "La lunghezza massima della stringa è limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
  example:
  - "```  \n// Calling this method with level and keyword set to zero is the same  \n// as calling WriteMessageEvent(string); the event is always written.  \nif (!provider.WriteMessageEvent(\"Event string.\", 0, 0))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n  \n// Event is written if the level value of the session is less than or equal to 3, and bit 1 of the session  \n// keyword bit-mask is set.  \nif (!provider.WriteMessageEvent(\"Event string.\", 3, 2))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Stringa da scrivere come dati dell&quot;evento."
    - id: eventLevel
      type: System.Byte
      description: "Livello di dettaglio incluso nell&quot;evento. Se il provider utilizza un manifesto per definire l&quot;evento, impostare questo valore per lo stesso livello definito nel manifesto."
    - id: eventKeywords
      type: System.Int64
      description: "Maschera di bit che specifica la categoria di eventi. Se il provider utilizza un manifesto per definire l&quot;evento, impostare questo valore alla maschera stessa parola chiave definita nel manifesto."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodo per determinare la causa dell&quot;errore."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Collega eventi in traccia eventi in uno scenario end-to-end. I dati dell&quot;evento sono specificati come una matrice di oggetti."
  remarks: "Il metodo Usa l&quot;ID attività impostato nel contesto del thread per identificare questo componente. Per impostare l&quot;ID attività, chiamare il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Se si utilizza il <xref:System.Diagnostics.Trace>(classe), non si utilizza il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo per specificare l&quot;ID attività</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> </xref:System.Diagnostics.Trace> Al contrario, accedere il <xref:System.Diagnostics.Trace.CorrelationManager%2A>proprietà da ottenere il <xref:System.Diagnostics.CorrelationManager>oggetto.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.Trace.CorrelationManager%2A> Quindi, impostare la <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>proprietà per l&quot;ID attività.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> È necessario impostare anche la `relatedActivityId` per un <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>valore.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A>"
  syntax:
    content: public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Un&quot;istanza di <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> che identifica l&quot;evento da scrivere."
    - id: relatedActivityId
      type: System.Guid
      description: "Identificatore dell&quot;attività del componente precedente. Usare questo parametro per collegare gli eventi del componente agli eventi del componente precedente."
    - id: eventPayload
      type: System.Object[]
      description: "Matrice di oggetti che contengono i dati dell&quot;evento da scrivere. I dati devono essere nell&quot;ordine specificato nel manifesto. La matrice è limitata a 32 oggetti, di cui solo otto possono essere stringhe. La dimensione massima dei dati per l&quot;evento è limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>metodo per determinare la causa dell&quot;errore.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se <code> eventPayload </code> contiene troppi oggetti o stringhe."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Collega eventi in traccia eventi in uno scenario end-to-end. I dati dell&quot;evento sono specificati come un blocco di memoria."
  remarks: "Il metodo Usa l&quot;ID attività impostato nel contesto del thread per identificare questo componente. Per impostare l&quot;ID attività, chiamare il <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodo.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Un&quot;istanza di <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> che identifica l&quot;evento da scrivere."
    - id: relatedActivityId
      type: System.Guid
      description: "Identificatore dell&quot;attività del componente precedente. Usare questo parametro per collegare gli eventi del componente agli eventi del componente precedente."
    - id: dataCount
      type: System.Int32
      description: "Dimensioni dei dati dell&quot;evento a cui il `data` parametro fa riferimento. Le dimensioni massime dei dati sono limitata a 64 KB, esclusa la dimensione delle intestazioni dell&quot;evento. La dimensione dell&quot;evento è minore, se le dimensioni del buffer della sessione sono minore e la sessione include gli elementi di dati estesi con l&quot;evento."
    - id: data
      type: System.IntPtr
      description: "Puntatore ai dati dell&quot;evento da scrivere."
    return:
      type: System.Boolean
      description: "È <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> scritte; in caso contrario, se l&quot;evento <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se false, chiamare il <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>metodo per determinare la causa dell&quot;errore.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProvider.Close
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
- uid: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventProvider+WriteEventErrorCode
  nameWithType: EventProvider+WriteEventErrorCode
  fullName: System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
- uid: System.Diagnostics.Eventing.EventDescriptor
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.Diagnostics.Eventing.EventDescriptor
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
- uid: System.Diagnostics.Eventing.EventProvider.#ctor*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider
  nameWithType: EventProvider.EventProvider
- uid: System.Diagnostics.Eventing.EventProvider.Close*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close
  nameWithType: EventProvider.Close
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId
  nameWithType: EventProvider.CreateActivityId
- uid: System.Diagnostics.Eventing.EventProvider.Dispose*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose
  nameWithType: EventProvider.Dispose
- uid: System.Diagnostics.Eventing.EventProvider.Finalize*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize
  nameWithType: EventProvider.Finalize
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError
  nameWithType: EventProvider.GetLastWriteEventError
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled
  nameWithType: EventProvider.IsEnabled
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId
  nameWithType: EventProvider.SetActivityId
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent
  nameWithType: EventProvider.WriteEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent
  nameWithType: EventProvider.WriteMessageEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent
  nameWithType: EventProvider.WriteTransferEvent
