### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebHeartbeatEvent
  id: WebHeartbeatEvent
  children:
  - System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  - System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  langs:
  - csharp
  name: WebHeartbeatEvent
  nameWithType: WebHeartbeatEvent
  fullName: System.Web.Management.WebHeartbeatEvent
  type: Class
  summary: "Definisce gli eventi di monitoraggio dello stati generati a intervalli periodici."
  remarks: "Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management>dello spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell&quot;applicazione e i tipi di provider responsabili dell&quot;elaborazione dei dati.</xref:System.Web.Management> Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.       Gli eventi di monitoraggio dello stato di heartbeat fungono da un timer per il sistema di monitoraggio dello stato ASP.NET. Vengono generati in un intervallo definito per il `heartBeatInterval` attributo del `healthMonitoring` sezione di configurazione. Usa il WebHeartbeatEvent la <xref:System.Web.Management.WebProcessStatistics>classe per ottenere informazioni sul processo.</xref:System.Web.Management.WebProcessStatistics>      > [!NOTE] > Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider."
  example:
  - "The following configuration file excerpt shows the configuration for the <xref:System.Web.Management.EventLogWebEventProvider> so it can handle heartbeat health events.  \n  \n> [!NOTE]\n>  The <xref:System.Web.Management.EventLogWebEventProvider> and the heartbeat health event types to monitor are configured by default. The only thing you need to do is to define the rule to monitor the heartbeat health events. Remember that by default only the failure audits are logged.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"100\">  \n  <rules>  \n    <add name=\"Heart Beat Events\"  \n      eventName=\"Heartbeats\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebHeartbeatEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.Management.WebHeartbeatEvent
  langs:
  - csharp
  name: WebHeartbeatEvent(String,Int32)
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Management.WebHeartbeatEvent&quot;> </xref> classe con il codice di messaggio e l&quot;evento specificato."
  syntax:
    content: protected WebHeartbeatEvent (string message, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Descrizione dell&quot;evento."
    - id: eventCode
      type: System.Int32
      description: "Il codice associato all&quot;evento. Quando si implementa un evento personalizzato, il codice dell&quot;evento deve essere maggiore di <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebHeartbeatEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  id: ProcessStatistics
  parent: System.Web.Management.WebHeartbeatEvent
  langs:
  - csharp
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Fornisce importanti informazioni relative al processo in esecuzione."
  syntax:
    content: public System.Web.Management.WebProcessStatistics ProcessStatistics { get; }
    return:
      type: System.Web.Management.WebProcessStatistics
      description: "Il <xref href=&quot;System.Web.Management.WebProcessStatistics&quot;> </xref> per il processo in esecuzione."
  overload: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: WebHeartbeatEvent(String,Int32)
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
- uid: System.Web.Management.WebProcessStatistics
  parent: System.Web.Management
  isExternal: false
  name: WebProcessStatistics
  nameWithType: WebProcessStatistics
  fullName: System.Web.Management.WebProcessStatistics
- uid: System.Web.Management.WebHeartbeatEvent.#ctor*
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: WebHeartbeatEvent
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
