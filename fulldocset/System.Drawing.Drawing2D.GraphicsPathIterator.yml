### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.GraphicsPathIterator
  id: GraphicsPathIterator
  children:
  - System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Count
  - System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  - System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  - System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  - System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  langs:
  - csharp
  name: GraphicsPathIterator
  nameWithType: GraphicsPathIterator
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator
  type: Class
  summary: "Offre la possibilità di scorrere i sottopercorsi in un <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> e testare i tipi di forme contenute in ciascun percorso secondario. Questa classe non può essere ereditata."
  syntax:
    content: 'public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath)'
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: GraphicsPathIterator(GraphicsPath)
  nameWithType: GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> oggetto."
  syntax:
    content: public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> oggetto per cui è possibile inizializzare questa classe di supporto."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  id: CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: CopyData(PointF[],Byte[],Int32,Int32)
  nameWithType: GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Copie di <> </> *> proprietà e <> </> *> matrici di proprietà dell&quot;oggetto associato <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> in due matrici specificate."
  remarks: "Utilizzare il `startIndex` e `endIndex` parametri per copiare un intervallo di dati il percorso specificato."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Populates it with several primitives and some markers.  \n  \n-   Lists the path data on the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   Increments the path data index to the second marker.  \n  \n-   Calls the CopyData method to copy the path data contained between the start and end indexes to the points and types arrays.  \n  \n-   Lists this copied data on the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/visualbasic/b1ea0b64-123f-4dcb-86c3-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/cpp/b1ea0b64-123f-4dcb-86c3-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/csharp/b1ea0b64-123f-4dcb-86c3-_1.cs)]"
  syntax:
    content: public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Al momento della restituzione, contiene una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti nel percorso."
    - id: types
      type: System.Byte[]
      description: "Al momento della restituzione, contiene una matrice di byte che rappresenta i tipi di punti nel percorso."
    - id: startIndex
      type: System.Int32
      description: "Specifica l&quot;indice iniziale delle matrici."
    - id: endIndex
      type: System.Int32
      description: "Specifica l&quot;indice finale delle matrici."
    return:
      type: System.Int32
      description: "Il numero di punti copiati."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  id: Count
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Count
  nameWithType: GraphicsPathIterator.Count
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene il numero di punti nel percorso."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di punti nel percorso."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Dispose()
  nameWithType: GraphicsPathIterator.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Rilascia tutte le risorse usate da questo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> oggetto."
  remarks: "La chiamata `Dispose` le risorse utilizzate da questo <xref:System.Drawing.Drawing2D.GraphicsPathIterator>oggetto riallocazione per altri scopi.</xref:System.Drawing.Drawing2D.GraphicsPathIterator>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  id: Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Enumerate(PointF[],Byte[])
  nameWithType: GraphicsPathIterator.Enumerate(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(PointF[],Byte[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Copie di <> </> *> proprietà e <> </> *> matrici di proprietà dell&quot;oggetto associato <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> in due matrici specificate."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Populates it with several primitives and some markers.  \n  \n-   Lists the path data on the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   Increments the path data index to the second marker.  \n  \n-   Calls the Enumerate method to copy the path data to the `points` and `types` arrays.  \n  \n-   Lists this copied data on the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/visualbasic/5dbb8a2f-b3c5-4d23-b81d-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/cpp/5dbb8a2f-b3c5-4d23-b81d-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/csharp/5dbb8a2f-b3c5-4d23-b81d-_1.cs)]"
  syntax:
    content: public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Al momento della restituzione, contiene una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti nel percorso."
    - id: types
      type: System.Byte[]
      description: "Al momento della restituzione, contiene una matrice di byte che rappresenta i tipi di punti nel percorso."
    return:
      type: System.Int32
      description: "Il numero di punti copiati."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Finalize()
  nameWithType: GraphicsPathIterator.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Consente a un oggetto tentare di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da garbage collection."
  syntax:
    content: ~GraphicsPathIterator ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  id: HasCurve
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: HasCurve()
  nameWithType: GraphicsPathIterator.HasCurve()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se il percorso associato a questo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> contiene una curva."
  remarks: "Tutte le curve in un percorso vengono archiviate come una sequenza di spline di Bézier. Ad esempio, quando si aggiunge un&quot;ellisse a un percorso, specificare l&quot;angolo superiore sinistro, la larghezza e l&quot;altezza del rettangolo di delimitazione dell&quot;ellisse. Tali numeri (angolo superiore sinistro, larghezza e altezza) non sono archiviati nel percorso. In alternativa. i puntini di sospensione viene convertito in una sequenza di quattro spline di Bézier. Il percorso vengono memorizzati gli endpoint e i punti di controllo tali di spline di Bézier.       Un percorso di archivia una matrice di punti dati, ognuno dei quali appartiene a una riga o di una spline di Bézier. Se alcuni punti nella matrice di appartengono a spline di Bézier, quindi restituisce HasCurve `true`. Se tutti i punti nella matrice appartengono alle righe, quindi restituisce HasCurve `false`.       Alcuni metodi di trasformare un percorso, il che significa che tutte le curve nel percorso vengono convertite in sequenze di righe. Dopo che è stati resi bidimensionali di un percorso, HasCurve restituirà sempre `false`. La chiamata di <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, o il <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A>metodo di <xref:System.Drawing.Drawing2D.GraphicsPath>classe unirà un percorso.</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> </xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A> </xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPath`.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object for `myPath`.  \n  \n-   Tests to see if the current path `myPath` contains a curve.  \n  \n-   Shows the result of the test in a message box.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_17_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/cpp/m-system.drawing.drawing_17_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/csharp/m-system.drawing.drawing_17_1.cs)]"
  syntax:
    content: public bool HasCurve ();
    parameters: []
    return:
      type: System.Boolean
      description: "Questo metodo restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se il sottopercorso corrente contiene una curva; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  id: NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextMarker(GraphicsPath)
  nameWithType: GraphicsPathIterator.NextMarker(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Questo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> oggetto ha un <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> oggetto associato. Il metodo NextMarker incrementa associato <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> l&quot;indicatore successivo nel relativo percorso e copia tutti i punti di contenuto tra il marcatore corrente e l&quot;indicatore successivo (o la fine del percorso) a un secondo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> oggetto passato al parametro."
  remarks: "Utilizzare il <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>metodo per impostare i marcatori in un percorso.</xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> Gli indicatori vengono utilizzati per creare gruppi di sottopercorsi. Uno o più sottopercorsi possono essere compreso tra due indicatori."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, an ellipse, and two markers.  \n  \n-   Lists the values of all the path's points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.  \n  \n-   Calls the NextMarker method, which iterates to the first marker and copies all the points contained between that marker and the next to `myPathSection`.  \n  \n-   Returns the number of points copied to `markerPoints`.  \n  \n-   Lists the marker number (the first marker) and number of points it contains to the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/visualbasic/8b47b275-716e-4cd3-9f07-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/cpp/8b47b275-716e-4cd3-9f07-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/csharp/8b47b275-716e-4cd3-9f07-_1.cs)]"
  syntax:
    content: public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> dell&quot;oggetto in cui verranno copiati i punti."
    return:
      type: System.Int32
      description: "Il numero di punti tra l&quot;indicatore e la successiva."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  id: NextMarker(System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextMarker(Int32,Int32)
  nameWithType: GraphicsPathIterator.NextMarker(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Incrementa il <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> all&quot;indicatore successivo nel percorso e restituisce gli indici di start e stop tramite i parametri [out]."
  remarks: "Utilizzare il <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>metodo per impostare i marcatori in un percorso.</xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> Gli indicatori vengono utilizzati per creare gruppi di sottopercorsi. Uno o più sottopercorsi possono essere compreso tra due indicatori."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse ¾ with markers between each.  \n  \n-   Draws the values for the array of points to the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Calls the NextMarker method.  \n  \n-   Uses the values returned from the iterative calls to NextMarker to draw the start and stop points for each marker to the screen.  \n  \n-   Draws the value for the total number of points to the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/visualbasic/2a36a4b2-3946-4c96-a406-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/cpp/2a36a4b2-3946-4c96-a406-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/csharp/2a36a4b2-3946-4c96-a406-_1.cs)]"
  syntax:
    content: public int NextMarker (out int startIndex, out int endIndex);
    parameters:
    - id: startIndex
      type: System.Int32
      description: '[out] Il riferimento integer fornito a questo parametro riceve l&quot;indice del punto di inizio di un percorso secondario.'
    - id: endIndex
      type: System.Int32
      description: '[out] Il riferimento integer fornito a questo parametro riceve l&quot;indice del punto finale a cui il sottopercorso `startIndex` punti.'
    return:
      type: System.Int32
      description: "Il numero di punti tra l&quot;indicatore e la successiva."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  id: NextPathType(System.Byte@,System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextPathType(Byte,Int32,Int32)
  nameWithType: GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene l&quot;indice iniziale e l&quot;indice del successivo gruppo di dati finale punti che hanno tutti lo stesso tipo."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Lists the values of all the points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   In a `for` loop, iterates through the points using the NextPathType and NextPathType methods.  \n  \n-   Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.  \n  \n-   Displays the value for the total number of points to the screen.  \n  \n Note that `ListPathPoints` is a helper function that separates most (not all) of the display code from the graphics path code.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/visualbasic/95680980-3c12-42ae-ac98-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/cpp/95680980-3c12-42ae-ac98-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/csharp/95680980-3c12-42ae-ac98-_1.cs)]"
  syntax:
    content: public int NextPathType (out byte pathType, out int startIndex, out int endIndex);
    parameters:
    - id: pathType
      type: System.Byte
      description: '[out] Riceve il tipo di punto condiviso da tutti i punti nel gruppo. I possibili tipi possono essere recuperati dal <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> enumerazione.'
    - id: startIndex
      type: System.Int32
      description: '[out] Riceve l&quot;indice iniziale del gruppo di punti.'
    - id: endIndex
      type: System.Int32
      description: '[out] Riceve l&quot;indice del gruppo di punti di fine.'
    return:
      type: System.Int32
      description: "Questo metodo restituisce il numero di punti dati nel gruppo. Se esistono più gruppi nel percorso, questo metodo restituisce 0."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  id: NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextSubpath(GraphicsPath,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene la figura successiva (sottopercorso) dal percorso associato di questo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref>."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, an ellipse, and two markers.  \n  \n-   Lists the values of all the path's points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.  \n  \n-   Calls the NextSubpath method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the `myPathSection` path, and also returns the number of points copied to `subpathPoints`.  \n  \n-   Lists the subpath number and number of points it contains to the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/visualbasic/fe78f5d8-9a93-4fb0-b017-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/cpp/fe78f5d8-9a93-4fb0-b017-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/csharp/fe78f5d8-9a93-4fb0-b017-_1.cs)]"
  syntax:
    content: public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> che è che i dati di set di punti da far corrispondere i dati della figura recuperata (sottopercorso) per questo iteratore."
    - id: isClosed
      type: System.Boolean
      description: '[out] Indica se il sottopercorso corrente è chiuso. Si tratta di <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se nella figura è chiusa, in caso contrario è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
    return:
      type: System.Int32
      description: "Il numero di punti dati nella figura recuperata (sottopercorso). Se non sono presenti altre figure da recuperare, viene restituito zero."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  id: NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextSubpath(Int32,Int32,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Sposta il <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> sottopercorso successivo nel percorso. L&quot;indice iniziale e finale del sottopercorso successivo sono contenuti nei parametri [out]."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Draws the values for the array of points to the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Calls the NextSubpath method.  \n  \n-   Uses the values returned from the iterative calls to NextSubpath to draw the start and stop values for each subpath to the screen.  \n  \n-   Draws the value for the total number of subpaths to the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/visualbasic/63165689-53f3-4b43-b800-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/cpp/63165689-53f3-4b43-b800-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/csharp/63165689-53f3-4b43-b800-_1.cs)]"
  syntax:
    content: public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);
    parameters:
    - id: startIndex
      type: System.Int32
      description: '[out] Riceve l&quot;indice iniziale del sottopercorso successivo.'
    - id: endIndex
      type: System.Int32
      description: '[out] Riceve l&quot;indice finale del sottopercorso successivo.'
    - id: isClosed
      type: System.Boolean
      description: '[out] Indica se il sottopercorso è chiuso.'
    return:
      type: System.Int32
      description: "Il numero di percorsi secondari il <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> oggetto."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  id: Rewind
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Rewind()
  nameWithType: GraphicsPathIterator.Rewind()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Riavvolge questo <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> all&quot;inizio del percorso associato."
  remarks: "La prima volta che si chiama il <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>che metodo di un iteratore, ottiene la prima figura (sottopercorso) del percorso associato a tale iteratore</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> La seconda volta, ottiene la seconda figura e così via. Quando si chiama il metodo di ripristino, viene avviata la sequenza del percorso. vale a dire, dopo aver chiamato Rewind, alla successiva chiamata a <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>Ottiene la prima figura nel percorso.</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> Il <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>e <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A>metodi si comportano in modo analogo.</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> </xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>"
  syntax:
    content: public void Rewind ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  id: SubpathCount
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene il numero di sottopercorsi del percorso."
  syntax:
    content: public int SubpathCount { get; }
    return:
      type: System.Int32
      description: "Il numero di sottopercorsi del percorso."
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: GraphicsPathIterator(GraphicsPath)
  nameWithType: GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: CopyData(PointF[],Byte[],Int32,Int32)
  nameWithType: GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Count
  nameWithType: GraphicsPathIterator.Count
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Count
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsPathIterator.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Enumerate(PointF[],Byte[])
  nameWithType: GraphicsPathIterator.Enumerate(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(PointF[],Byte[])
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Finalize()
  nameWithType: GraphicsPathIterator.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: HasCurve()
  nameWithType: GraphicsPathIterator.HasCurve()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker(GraphicsPath)
  nameWithType: GraphicsPathIterator.NextMarker(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker(Int32,Int32)
  nameWithType: GraphicsPathIterator.NextMarker(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextPathType(Byte,Int32,Int32)
  nameWithType: GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath(GraphicsPath,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath(Int32,Int32,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Rewind()
  nameWithType: GraphicsPathIterator.Rewind()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: GraphicsPathIterator
  nameWithType: GraphicsPathIterator.GraphicsPathIterator
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: CopyData
  nameWithType: GraphicsPathIterator.CopyData
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Count
  nameWithType: GraphicsPathIterator.Count
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Dispose
  nameWithType: GraphicsPathIterator.Dispose
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Enumerate
  nameWithType: GraphicsPathIterator.Enumerate
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Finalize
  nameWithType: GraphicsPathIterator.Finalize
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: HasCurve
  nameWithType: GraphicsPathIterator.HasCurve
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker
  nameWithType: GraphicsPathIterator.NextMarker
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextPathType
  nameWithType: GraphicsPathIterator.NextPathType
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath
  nameWithType: GraphicsPathIterator.NextSubpath
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Rewind
  nameWithType: GraphicsPathIterator.Rewind
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
