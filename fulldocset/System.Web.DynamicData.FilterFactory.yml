### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FilterFactory
  id: FilterFactory
  children:
  - System.Web.DynamicData.FilterFactory.#ctor
  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  langs:
  - csharp
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
  type: Class
  summary: "Crea un modello di filtro."
  remarks: "La classe FilterFactory viene utilizzata in fase di esecuzione da Dynamic Data per ottenere un&quot;istanza di un modello di filtro per un tipo di colonna specifica.       È possibile eseguire l&quot;override di metodi definiti in questa classe per personalizzare il modo in cui vengono caricati i modelli di filtro. Ad esempio, un&quot;implementazione personalizzata è stato possibile caricare i modelli di filtro da una posizione diversa da quella predefinita ~/DynamicData/Filters.       Dynamic Data fornisce modelli di filtro per tipi di colonna chiave esterna, booleani e di enumerazione e li visualizza tramite un <xref:System.Web.UI.WebControls.DropDownList>controllo.</xref:System.Web.UI.WebControls.DropDownList> È anche possibile creare modelli di filtro personalizzato."
  example:
  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.
  syntax:
    content: public class FilterFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> classe."
  syntax:
    content: public FilterFactory ();
    parameters: []
  overload: System.Web.DynamicData.FilterFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Crea un&quot;istanza del modello di filtro."
  remarks: "Questo metodo viene chiamato da dati dinamici per ottenere un&quot;istanza di un modello di filtro. Le classi derivate possono eseguire l&quot;override di questo metodo per personalizzare la creazione di istanze di modelli di filtro. Ad esempio, un&quot;implementazione personalizzata potrebbe caricare modelli da un assembly compilato anziché dalla cartella ~/DynamicData/Filters predefinita."
  syntax:
    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "La colonna di dati a cui si applica il modello di filtro."
    - id: filterUIHint
      type: System.String
      description: "Il nome del modello di filtro da utilizzare."
    return:
      type: System.Web.DynamicData.QueryableFilterUserControl
      description: "Un&quot;istanza di <xref href=&quot;System.Web.DynamicData.QueryableFilterUserControl&quot;> </xref> classe."
  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene il percorso virtuale del modello di filtro."
  remarks: "Per impostazione predefinita, i modelli di filtro si trovano nella cartella ~/DynamicData/Filers.       Questo metodo determina il percorso virtuale della cartella che contiene il modello di campo. Le classi derivate possono eseguire l&quot;override di questo metodo per fornire i modelli di filtro da un percorso virtuale diverso."
  syntax:
    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "La colonna di dati a cui si applica il modello di filtro."
    - id: filterUIHint
      type: System.String
      description: "Il modello di filtro da utilizzare."
    return:
      type: System.String
      description: "Il percorso virtuale del modello di filtro."
  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FilterFactory.#ctor
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
- uid: System.Web.DynamicData.QueryableFilterUserControl
  parent: System.Web.DynamicData
  isExternal: false
  name: QueryableFilterUserControl
  nameWithType: QueryableFilterUserControl
  fullName: System.Web.DynamicData.QueryableFilterUserControl
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
- uid: System.Web.DynamicData.FilterFactory.#ctor*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory.FilterFactory
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl
  nameWithType: FilterFactory.CreateFilterControl
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath
  nameWithType: FilterFactory.GetFilterVirtualPath
