### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DrawTreeNodeEventArgs
  id: DrawTreeNodeEventArgs
  children:
  - System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  - System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  - System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  - System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  - System.Windows.Forms.DrawTreeNodeEventArgs.Node
  - System.Windows.Forms.DrawTreeNodeEventArgs.State
  langs:
  - csharp
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Windows.Forms.TreeView.DrawNode&quot;> </xref> evento."
  remarks: "Utilizzare il <xref:System.Windows.Forms.TreeView.DrawNode>evento per personalizzare l&quot;aspetto dei nodi in un <xref:System.Windows.Forms.TreeView>controllo mediante il disegno personalizzato.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode>       Il <xref:System.Windows.Forms.TreeView.DrawNode>evento viene generato da un <xref:System.Windows.Forms.TreeView>controllare quando il relativo <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>proprietà è impostata su <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>o <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>e un nodo viene visualizzato o aggiornato.</xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode> Il DrawTreeNodeEventArgs passato al gestore dell&quot;evento contiene informazioni sul nodo da creare e fornisce metodi che consentono di disegnare il nodo.       Utilizzare il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>per recuperare informazioni relative al nodo da disegnare.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Utilizzare il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>proprietà per eseguire il disegno effettivo all&quot;interno dell&quot;area specificata mediante il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>proprietà.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> Per rendere il sistema operativo di un nodo che non è necessario essere proprietario, impostare il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>proprietà `true`.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>       Quando il <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>è impostata su <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, l&quot;area indicata dal <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>proprietà include la parte dell&quot;etichetta del nodo solo.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Quando il <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>è impostata su <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>include l&quot;intero nodo, compresa l&quot;area in genere utilizzata per le icone, caselle di controllo, segni più e meno e le linee che collegano i nodi di area.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n Additionally, a handler for the <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event provides hit-testing. By default, a node can be selected only by clicking the region around its label. The <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event handler selects a node that is clicked anywhere within this region or within the region around a node tag, if present.  \n  \n [!code-vb[TreeViewOwnerDraw#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_20_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#1](~/add/codesnippet/cpp/t-system.windows.forms.d_20_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#1](~/add/codesnippet/csharp/t-system.windows.forms.d_20_1.cs)]"
  syntax:
    content: 'public class DrawTreeNodeEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  id: '#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)'
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Forms.DrawTreeNodeEventArgs&quot;> </xref> classe."
  syntax:
    content: public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "Il <xref href=&quot;System.Drawing.Graphics&quot;> </xref> area su cui disegnare."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Il <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "Il <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> all&quot;interno del quale disegnare."
    - id: state
      type: System.Windows.Forms.TreeNodeStates
      description: "Combinazione bit per bit del <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> valori che indicano lo stato corrente del <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  id: Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene le dimensioni e posizione di <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  remarks: "Il percorso specificato da questa proprietà è rispetto all&quot;angolo superiore sinistro del <xref:System.Windows.Forms.TreeView>controllo.</xref:System.Windows.Forms.TreeView>       Quando la <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>proprietà è impostata su <xref:System.Windows.Forms.TreeViewDrawMode>, l&quot;area specificata dalla proprietà limiti è l&quot;area in cui è possibile fare clic su un nodo per selezionarlo.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Se si disegna all&quot;esterno di questa area di hit test, è necessario fornire il proprio codice per la selezione di un nodo quando viene selezionato nell&quot;area visibile. È anche possibile fornire la propria hit test il codice quando la <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>proprietà è impostata su <xref:System.Windows.Forms.TreeViewDrawMode>.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> In questa modalità, la proprietà Bounds include l&quot;intero nodo per l&quot;intera larghezza del <xref:System.Windows.Forms.TreeView>controllare, anziché l&quot;area appena hit test.</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_14_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_14_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_14_1.cs)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> che rappresenta i limiti del <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  id: DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> deve essere disegnato dal sistema operativo anziché proprietario."
  remarks: "Impostare questa proprietà su `true` per i nodi che non si desidera personalizzare quando si gestisce il <xref:System.Windows.Forms.TreeView.DrawNode>evento.</xref:System.Windows.Forms.TreeView.DrawNode> Ad esempio, questo è utile quando si desidera personalizzare solo i nodi che sono in uno stato specifico."
  example:
  - "The following code example demonstrates the use of this property. In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tag and a custom highlight color manually for the selected node. Nodes that are not selected do not need customization. For unselected nodes, the DrawDefault property is set to `true` so that they will be drawn by the operating system and will not have a customized appearance.  \n  \n> [!NOTE]\n>  If you draw a node manually and also set the DrawDefault property to `true`, some or all of what you draw may be overwritten by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_319_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_319_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_319_1.cs)]"
  syntax:
    content: public bool DrawDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo deve essere disegnato dal sistema operativo. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il nodo verrà creato nel gestore eventi. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  id: Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene il <xref href=&quot;System.Drawing.Graphics&quot;> </xref> oggetto utilizzato per disegnare il <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  remarks: "La <xref:System.Drawing.Graphics>classe fornisce proprietà e metodi utili per il disegno sul dispositivo di visualizzazione.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_326_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_326_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_326_1.cs)]"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to draw the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  id: Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene il <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  remarks: "Utilizzare questa proprietà per accedere il <xref:System.Windows.Forms.TreeNode>oggetto da disegnare.</xref:System.Windows.Forms.TreeNode> Questo è utile quando il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>proprietà non fornisce le informazioni appropriate per soddisfare le esigenze.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>proprietà fornisce solo informazioni di stato di base che è possibile utilizzare, ad esempio, per determinare se un nodo viene selezionato, selezionato o con stato attivo.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> La proprietà del nodo, d&quot;altra parte, consente di accedere a tutti i membri del <xref:System.Windows.Forms.TreeNode>oggetto.</xref:System.Windows.Forms.TreeNode> È necessario accedere al nodo direttamente, ad esempio, quando si desidera determinare lo stato di espansione."
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_198_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_198_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_198_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Node { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "Il <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  id: State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene lo stato corrente del <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> da disegnare."
  remarks: "Utilizzare questa proprietà per controllare se il <xref:System.Windows.Forms.TreeNode>disegnare l&quot;oggetto è in un determinato stato.</xref:System.Windows.Forms.TreeNode> Questa proprietà fornisce solo informazioni di base sullo stato del nodo. È possibile utilizzare questa proprietà, ad esempio, per determinare se un nodo viene selezionato, selezionato o con stato attivo. Se si desiderano maggiori informazioni, recuperare il nodo tramite il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>proprietà.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Per determinare se il nodo è espanso, ad esempio, è necessario recuperare il nodo e controllare il <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>proprietà.</xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_85_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_85_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_85_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeStates State { get; }
    return:
      type: System.Windows.Forms.TreeNodeStates
      description: "Una combinazione bit per bit del <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> che indica lo stato corrente di valori di <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNodeStates
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeStates
  nameWithType: TreeNodeStates
  fullName: System.Windows.Forms.TreeNodeStates
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
