### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.RefreshEventHandler
  id: RefreshEventHandler
  langs:
  - csharp
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
  type: Delegate
  summary: "Rappresenta il metodo che gestisce il <xref href=&quot;System.ComponentModel.TypeDescriptor.Refreshed&quot;> </xref> evento generato quando un <xref:System.Type>o componente viene modificato in fase di progettazione.</xref:System.Type>"
  remarks: 'Quando si crea un delegato RefreshEventHandler, si identifica il metodo che gestir√† l&quot;evento. Per associare l&quot;evento al gestore eventi, aggiungere un&quot;istanza del delegato all&quot;evento. Il gestore eventi viene chiamato ogni volta che si verifica l&quot;evento, a meno che non venga rimosso il delegato. Per ulteriori informazioni sui delegati del gestore eventi, vedere [NIB: eventi e delegati](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "The following sample demonstrates how to use a RefreshEventHandler delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes. In the code, the `OnRefreshed` event handles the event and displays the component being changed.  \n  \n The code assumes that a `TextBox` control is already sited on the form.  \n  \n [!code-cpp[RefreshEventHandler#1](~/add/codesnippet/cpp/t-system.componentmodel._31_1.cpp)]\n [!code-vb[RefreshEventHandler#1](~/add/codesnippet/visualbasic/t-system.componentmodel._31_1.vb)]\n [!code-cs[RefreshEventHandler#1](~/add/codesnippet/csharp/t-system.componentmodel._31_1.cs)]"
  syntax:
    content: public delegate void RefreshEventHandler(RefreshEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
