### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ICustomTypeDescriptor
  id: ICustomTypeDescriptor
  children:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
  type: Interface
  summary: "Fornisce un&quot;interfaccia che fornisce informazioni dinamiche di tipo personalizzato per un oggetto."
  remarks: "L&quot;interfaccia ICustomTypeDescriptor consente a un oggetto fornire informazioni sul tipo relative a se stesso. In genere, questa interfaccia viene utilizzata quando un oggetto informazioni sul tipo dinamico. Al contrario, la <xref:System.ComponentModel.TypeDescriptor>classe fornisce le informazioni di tipo statico ottenuto dai metadati.</xref:System.ComponentModel.TypeDescriptor>       Ad esempio, ICustomTypeDescriptor viene utilizzato nel [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] per fornire informazioni sul tipo per gli oggetti COM. Oggetti COM non supportano attributi o proprietà. Pertanto, il [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] utilizza ICustomTypeDescriptor per implementare le proprietà e gli attributi degli oggetti COM.       Per fornire informazioni dinamiche di tipo personalizzato, è possibile implementare ICustomTypeDescriptor o derivare da una classe di <xref:System.ComponentModel.CustomTypeDescriptor>(classe), che fornisce un&quot;implementazione semplice di questa interfaccia.</xref:System.ComponentModel.CustomTypeDescriptor>      > [!NOTE] > Non è disponibile supporto in fase di progettazione per il data binding agli oggetti che implementano l&quot;interfaccia ICustomTypeDescriptor. Inoltre, quando si associa a un&quot;istanza di runtime di ICustomTypeDescriptor, vengono ignorate le proprietà pubbliche del tipo sottostante."
  syntax:
    content: public interface ICustomTypeDescriptor
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una raccolta di attributi personalizzati per questa istanza di un componente."
  remarks: "Il valore restituito non è mai `null`.       I responsabili dell&quot;implementazione può restituire un oggetto vuoto <xref:System.ComponentModel.AttributeCollection>Se non è stato specificato alcun attributo personalizzato per un oggetto.</xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public System.ComponentModel.AttributeCollection GetAttributes ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Un <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> contenente gli attributi per questo oggetto."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il nome della classe di questa istanza di un componente."
  remarks: "Se `null` viene restituito, utilizzare il nome del tipo dal <xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>metodo.</xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>"
  syntax:
    content: public string GetClassName ();
    parameters: []
    return:
      type: System.String
      description: "Il nome della classe dell&quot;oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la classe non ha un nome."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il nome dell&quot;istanza di un componente."
  remarks: "Se `null` viene restituito, utilizzare il nome predefinito."
  syntax:
    content: public string GetComponentName ();
    parameters: []
    return:
      type: System.String
      description: "Il nome dell&quot;oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non ha un nome."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un convertitore di tipi per questa istanza di un componente."
  remarks: "Se `null` viene restituito, utilizzare il valore predefinito <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public System.ComponentModel.TypeConverter GetConverter ();
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: "Oggetto <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> che costituisce il convertitore per questo oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è presente alcun <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> per questo oggetto."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce l&quot;evento predefinito per questa istanza di un componente."
  syntax:
    content: public System.ComponentModel.EventDescriptor GetDefaultEvent ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Un <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> che rappresenta l&quot;evento predefinito per questo oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se questo oggetto non dispone di eventi."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la proprietà predefinita per questa istanza di un componente."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetDefaultProperty ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che rappresenta la proprietà predefinita per questo oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se questo oggetto non dispone di proprietà."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un editor del tipo specificato per questa istanza di un componente."
  remarks: "Il tipo del `editorBaseType` parametro viene in genere <xref:System.Drawing.Design.UITypeEditor>, ma è anche possibile utilizzare altri tipi (ad esempio, <xref:System.ComponentModel.ComponentEditor>e <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta l&quot;editor per questo oggetto.</xref:System.Type>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>del tipo specificato che rappresenta l&quot;editor per questo oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non viene trovato l&quot;editor.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce gli eventi per l&quot;istanza di un componente."
  remarks: "Gli eventi per questa istanza possono essere diverso dal set di eventi che fornisce la classe. Ad esempio, se il componente è basato su sito, il sito può aggiungere o rimuovere eventi aggiuntivi.       Gli implementatori possono restituire <xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName>Se non sono specificate proprietà.</xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName> Questo metodo non deve restituire mai `null`."
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Un <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> che rappresenta gli eventi per questa istanza del componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce gli eventi per l&quot;istanza di un componente utilizzando la matrice di attributi specificata come filtro."
  remarks: "Gli eventi per questa istanza possono essere diverso dal set di eventi che fornisce la classe. Ad esempio, se il componente è basato su sito, il sito può aggiungere o rimuovere eventi aggiuntivi.       Se un <xref:System.Attribute>specificato nella `attributes` matrice e l&quot;evento non dispone di un&quot;istanza della classe per l&quot;attributo, la matrice restituita include l&quot;evento se il <xref:System.Attribute>è l&quot;evento predefinito.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che viene utilizzata come filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Un <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> che rappresenta gli eventi filtrati per questa istanza del componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce le proprietà per questa istanza di un componente."
  remarks: "Le proprietà per questa istanza possono essere diverso dal set di proprietà che fornisce la classe. Se si trova il componente, ad esempio, il sito può aggiungere o rimuovere proprietà aggiuntive.       Gli implementatori possono restituire <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>Se non sono specificate proprietà.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> Questo metodo non deve restituire mai `null`."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che rappresenta le proprietà per questa istanza del componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce le proprietà per questa istanza di un componente usando la matrice di attributi come un filtro."
  remarks: "Le proprietà per questa istanza possono essere diverso dal set di proprietà che fornisce la classe. Se si trova il componente, ad esempio, il sito può aggiungere o rimuovere proprietà aggiuntive.       Se un <xref:System.Attribute>specificato nella `attributes` matrice e la proprietà non dispone di un&quot;istanza della classe per l&quot;attributo, la raccolta restituita includerà la proprietà se il <xref:System.Attribute>è la proprietà predefinita.</xref:System.Attribute> </xref:System.Attribute>       Per le regole di filtro, vedere <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che viene utilizzata come filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che rappresenta le proprietà filtrate per questa istanza del componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce un oggetto che contiene la proprietà descritta dal descrittore di proprietà specificato."
  remarks: "Il metodo GetPropertyOwner recupera l&quot;oggetto che contiene il membro della proprietà descritta da <xref:System.ComponentModel.PropertyDescriptor>parametro.</xref:System.ComponentModel.PropertyDescriptor> In genere, questo oggetto è obbligatorio per il <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>e <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName>metodi.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>       Questo metodo deve restituire un oggetto che è possibile utilizzare come indicato di seguito: ```   pd.GetValue(GetPropertyOwner(myPd));   ``` se `myPd` è `null`, l&quot;implementazione del <xref:System.ComponentModel.ICustomTypeDescriptor>interfaccia deve restituire l&quot;oggetto predefinito (in genere, l&quot;oggetto di base che espone le proprietà e attributi).</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che rappresenta la proprietà il cui proprietario è necessario trovare."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il proprietario della proprietà specificata.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: ICustomTypeDescriptor.GetAttributes
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: ICustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: ICustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: ICustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: ICustomTypeDescriptor.GetEditor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: ICustomTypeDescriptor.GetEvents
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: ICustomTypeDescriptor.GetProperties
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner
