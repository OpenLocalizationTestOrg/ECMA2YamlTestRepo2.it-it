### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "Il <xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> modulo contiene le procedure e le proprietà utilizzati nelle operazioni di data e ora."
  remarks: "Questo modulo supporta le parole chiave del linguaggio Visual Basic e i membri di libreria run-time di ottenere la data corrente o l&quot;ora, eseguono i calcoli di data, restituiscono una data o ora, impostare la data o ora o la durata di un processo."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente una data e ora in cui è stato aggiunto un intervallo di tempo specificato."
  remarks: "È possibile utilizzare il `DateAdd` funzione per aggiungere o sottrarre un intervallo di tempo specificato da una data. Ad esempio, è possibile calcolare una data di 30 giorni dalla data odierna o una volta 45 minuti prima di ora.       Per aggiungere giorni a `DateValue`, è possibile utilizzare `DateInterval.Day`, `DateInterval.DayOfYear`, o `DateInterval.Weekday`. Tali valori vengono considerati equivalenti perché `DayOfYear` e `Weekday` non sono intervalli di tempo significativo.       Il `DateAdd` funzione non restituisce mai una data non valida. Se necessario, la parte del giorno della data risulta viene regolata in base all&quot;ultimo giorno del mese dell&quot;anno risultante. Nell&quot;esempio seguente viene aggiunto un mese al 31 gennaio: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` In questo esempio, `DateAdd` restituisce `#2/28/1995#`, non `#2/31/1995#`. Se `DateValue` è `#1/31/1996#`, restituisce `#2/29/1996#` perché 1996 è un anno bisestile.      > [!NOTE]  >   `DateAdd` utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura, i metodi offrono ulteriori opzioni per l&quot;aggiunta di intervalli di tempo.</xref:System.DateTime> Ad esempio, è possibile aggiungere un numero di giorni, arrotondato al millisecondo più vicino, per frazionario un `Date` variabile come indicato di seguito: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Stringa | Unità di intervallo di tempo da aggiungere |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Giorno; troncato al valore integrale |   | `DateInterval.DayOfYear`|y| Giorno; troncato al valore integrale |   | `DateInterval.Hour`|h| Ora. arrotondato al millisecondo più vicino |   | `DateInterval.Minute`|n| Minuto; arrotondato al millisecondo più vicino |   | `DateInterval.Month`|m| Mese. troncato al valore integrale |   | `DateInterval.Quarter`|q| Trimestre; troncato al valore integrale |   | `DateInterval.Second`|s| Secondo; arrotondato al millisecondo più vicino |   | `DateInterval.Weekday`|w| Giorno; troncato al valore integrale |   | `DateInterval.WeekOfYear`|ww| Settimana; troncato al valore integrale |   | `DateInterval.Year`|yyyy| Anno. troncato al valore integrale |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta l&quot;intervallo di tempo da aggiungere."
    - id: Number
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Espressione a virgola mobile che rappresenta il numero di intervalli a cui si desidera aggiungere. `Number`può essere positivo (per ottenere i valori di data/ora nel futuro) o negativo (per ottenere i valori di data/ora nel passato). Può contenere un decimale parte quando `Interval` specifica ore, minuti o secondi. Per altri valori di `Interval`frazionarie qualsiasi parte di `Number` viene ignorato."
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Un&quot;espressione che rappresenta la data e ora in cui l&quot;intervallo è da aggiungere. `DateValue`stesso non viene modificato nel programma chiamante."
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente una data e ora in cui è stato aggiunto un intervallo di tempo specificato."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>non è assegnato forzatamente al <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>non è valido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Data calcolata è prima di 00:00:00 il 1 ° gennaio dell&quot;anno 1 o successivo a 23:59:59 del 31 dicembre 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente una data e ora in cui è stato aggiunto un intervallo di tempo specificato."
  remarks: "È possibile utilizzare il `DateAdd` funzione per aggiungere o sottrarre un intervallo di tempo specificato da una data. Ad esempio, è possibile calcolare una data di 30 giorni dalla data odierna o una volta 45 minuti prima di ora.       Per aggiungere giorni a `DateValue`, è possibile utilizzare `DateInterval.Day`, `DateInterval.DayOfYear`, o `DateInterval.Weekday`. Tali valori vengono considerati equivalenti perché `DayOfYear` e `Weekday` non sono intervalli di tempo significativo.       Il `DateAdd` funzione non restituisce mai una data non valida. Se necessario, la parte del giorno della data risulta viene regolata in base all&quot;ultimo giorno del mese dell&quot;anno risultante. Nell&quot;esempio seguente viene aggiunto un mese al 31 gennaio: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` In questo esempio, `DateAdd` restituisce `#2/28/1995#`, non `#2/31/1995#`. Se `DateValue` è `#1/31/1996#`, restituisce `#2/29/1996#` perché 1996 è un anno bisestile.      > [!NOTE]  >   `DateAdd` utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura, i metodi offrono ulteriori opzioni per l&quot;aggiunta di intervalli di tempo.</xref:System.DateTime> Ad esempio, è possibile aggiungere un numero di giorni, arrotondato al millisecondo più vicino, per frazionario un `Date` variabile come indicato di seguito: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Stringa | Unità di intervallo di tempo da aggiungere |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Giorno; troncato al valore integrale |   | `DateInterval.DayOfYear`|y| Giorno; troncato al valore integrale |   | `DateInterval.Hour`|h| Ora. arrotondato al millisecondo più vicino |   | `DateInterval.Minute`|n| Minuto; arrotondato al millisecondo più vicino |   | `DateInterval.Month`|m| Mese. troncato al valore integrale |   | `DateInterval.Quarter`|q| Trimestre; troncato al valore integrale |   | `DateInterval.Second`|s| Secondo; arrotondato al millisecondo più vicino |   | `DateInterval.Weekday`|w| Giorno; troncato al valore integrale |   | `DateInterval.WeekOfYear`|ww| Settimana; troncato al valore integrale |   | `DateInterval.Year`|yyyy| Anno. troncato al valore integrale |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta l&quot;intervallo di tempo da aggiungere."
    - id: Number
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Espressione a virgola mobile che rappresenta il numero di intervalli a cui si desidera aggiungere. `Number`può essere positivo (per ottenere i valori di data/ora nel futuro) o negativo (per ottenere i valori di data/ora nel passato). Può contenere un decimale parte quando `Interval` specifica ore, minuti o secondi. Per altri valori di `Interval`frazionarie qualsiasi parte di `Number` viene ignorato."
    - id: DateValue
      type: System.Object
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Un&quot;espressione che rappresenta la data e ora in cui l&quot;intervallo è da aggiungere. `DateValue`stesso non viene modificato nel programma chiamante."
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente una data e ora in cui è stato aggiunto un intervallo di tempo specificato."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>non è assegnato forzatamente al <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>non è valido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Data calcolata è prima di 00:00:00 il 1 ° gennaio dell&quot;anno 1 o successivo a 23:59:59 del 31 dicembre 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valore che specifica il numero di intervalli di tempo tra due <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valori."
  remarks: "È possibile utilizzare il `DateDiff` funzione per determinare quanti intervalli di tempo specificati esistono tra due valori di data/ora. Ad esempio, è possibile utilizzare `DateDiff` per calcolare il numero di giorni tra due date o il numero di settimane tra oggi e la fine dell&quot;anno.      ## Comportamento - **trattamento dei parametri.** `DateDiff`Sottrae il valore di `Date1` dal valore di `Date2` per ottenere la differenza. Tali valori non viene modificato nel programma chiamante.      - **Restituiscono valori.** Poiché `Date1` e `Date2` del `Date` tipo di dati contengono valori di data e ora accuratezza di 100 nanosecondi del timer di sistema. Tuttavia, `DateDiff` restituisce sempre il numero di intervalli di tempo come un `Long` valore.           Se `Date1` rappresenta una data e ora di `Date2`, `DateDiff` restituisce un numero negativo.      - **Intervalli di giorni.** Se `Interval` è impostato su `DateInterval.DayOfYear`, viene considerato uguale `DateInterval.Day`perché `DayOfYear` non è un&quot;unità significativa per un intervallo di tempo.      - **Intervalli settimana.** Se `Interval` è impostato su `DateInterval.WeekOfYear`, il valore restituito rappresenta il numero di settimane tra il primo giorno della settimana contenente `Date1` e il primo giorno della settimana contenente `Date2`. Nell&quot;esempio seguente viene illustrato come questo produca risultati diversi da `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] nell&quot;esempio precedente, `DateDiff` restituisce 0 per `wD` perché la differenza tra le due date è inferiore a sette giorni, ma restituisce 1 per `wY` perché non esiste una differenza di sette giorni tra i primi giorni delle rispettive settimane di calendario.      - **Intervalli maggiori.** Se `Interval` è impostato su `DateInterval.Year`, il valore restituito viene calcolato unicamente dalle parti dell&quot;anno di `Date1` e `Date2`. Analogamente, il valore restituito per `DateInterval.Month` viene calcolato unicamente dalle parti anno e mese degli argomenti e per `DateInterval.Quarter` in base ai trimestri contenenti le due date.           Ad esempio, quando si confrontano il 31 dicembre e il 1 ° gennaio dell&quot;anno successivo, `DateDiff` restituisce 1 per `DateInterval.Year`, `DateInterval.Quarter`, o `DateInterval.Month`, anche se è trascorso al massimo un solo giorno.           Per le impostazioni cultura, ad esempio giapponese che dispone di più ere, il `DateDiff` metodo non restituisce una differenza in anni se la differenza si estende su due o più ere. In alternativa, è possibile calcolare la differenza in valori restituiti dal <xref:System.DateTime.Year%2A>proprietà, come illustrato nell&quot;esempio seguente: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Altri intervalli.** Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura, i metodi offrono ulteriori opzioni per l&quot;individuazione di intervalli di tempo.</xref:System.DateTime> Ad esempio, è possibile utilizzare il `Subtract` metodo in uno dei relativi overload: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>sottrae un <xref:System.TimeSpan>da un `Date` variabile per restituire un&quot;altra `Date` valore, e <xref:System.DateTime.Subtract%2A?displayProperty=fullName>sottrae un `Date` valore da restituire un <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> È possibile ora un processo per scoprire quanti millisecondi, come illustrato nell&quot;esempio seguente.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore stringa | Unità di differenza di orario |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Giorno |   | `DateInterval.DayOfYear`|&quot; y &quot;| Giorno |   | `DateInterval.Hour`|&quot; h &quot;| Ora |   | `DateInterval.Minute`|&quot; n &quot;| Minuto |   | `DateInterval.Month`|&quot; m &quot;| Mese |   | `DateInterval.Quarter`|&quot; domande e &quot;| Trimestre |   | `DateInterval.Second`|&quot; s &quot;| Secondo |   | `DateInterval.Weekday`|&quot; w &quot;| Settimana |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Settimana del calendario |   | `DateInterval.Year`|&quot; aaaa &quot;| Anno |       Il `DayOfWeek` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nelle impostazioni di sistema |   | `FirstDayOfWeek.Sunday`|1| Domenica (predefinito) |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |       Il `WeekOfYear` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Prima settimana dell&quot;anno specificato nelle impostazioni di sistema |   | `FirstWeekOfYear.Jan1`|1| Settimana in cui il 1 ° gennaio (impostazione predefinita) |   | `FirstWeekOfYear.FirstFourDays`|2| Settimana in cui almeno quattro giorni nel nuovo anno (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Prima settimana completa nel nuovo anno |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta l&quot;intervallo di tempo che si desidera utilizzare come unità di differenza tra `Date1` e `Date2`."
    - id: Date1
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Il primo valore di data/ora che si desidera utilizzare nel calcolo."
    - id: Date2
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Il secondo valore di data/ora a cui si desidera utilizzare nel calcolo."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> viene utilizzato."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumerazione che specifica la prima settimana dell&quot;anno. Se non specificato, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.Int64
      description: "Restituisce un <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valore che specifica il numero di intervalli di tempo tra due <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valori."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, o <code>DayofWeek</code> non compreso nell&quot;intervallo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>o <code>Date2</code> è di tipo non valido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valore che specifica il numero di intervalli di tempo tra due <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valori."
  remarks: "È possibile utilizzare il `DateDiff` funzione per determinare quanti intervalli di tempo specificati esistono tra due valori di data/ora. Ad esempio, è possibile utilizzare `DateDiff` per calcolare il numero di giorni tra due date o il numero di settimane tra oggi e la fine dell&quot;anno.      ## Comportamento - **trattamento dei parametri.** `DateDiff`Sottrae il valore di `Date1` dal valore di `Date2` per ottenere la differenza. Tali valori non viene modificato nel programma chiamante.      - **Restituiscono valori.** Poiché `Date1` e `Date2` del `Date` tipo di dati contengono valori di data e ora accuratezza di 100 nanosecondi del timer di sistema. Tuttavia, `DateDiff` restituisce sempre il numero di intervalli di tempo come un `Long` valore.           Se `Date1` rappresenta una data e ora di `Date2`, `DateDiff` restituisce un numero negativo.      - **Intervalli di giorni.** Se `Interval` è impostato su `DateInterval.DayOfYear`, viene considerato uguale `DateInterval.Day`perché `DayOfYear` non è un&quot;unità significativa per un intervallo di tempo.      - **Intervalli settimana.** Se `Interval` è impostato su `DateInterval.WeekOfYear`, il valore restituito rappresenta il numero di settimane tra il primo giorno della settimana contenente `Date1` e il primo giorno della settimana contenente `Date2`. Nell&quot;esempio seguente viene illustrato come questo produca risultati diversi da `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] nell&quot;esempio precedente, `DateDiff` restituisce 0 per `wD` perché la differenza tra le due date è inferiore a sette giorni, ma restituisce 1 per `wY` perché non esiste una differenza di sette giorni tra i primi giorni delle rispettive settimane di calendario.      - **Intervalli maggiori.** Se `Interval` è impostato su `DateInterval.Year`, il valore restituito viene calcolato unicamente dalle parti dell&quot;anno di `Date1` e `Date2`. Analogamente, il valore restituito per `DateInterval.Month` viene calcolato unicamente dalle parti anno e mese degli argomenti e per `DateInterval.Quarter` in base ai trimestri contenenti le due date.           Ad esempio, quando si confrontano il 31 dicembre e il 1 ° gennaio dell&quot;anno successivo, `DateDiff` restituisce 1 per `DateInterval.Year`, `DateInterval.Quarter`, o `DateInterval.Month`, anche se è trascorso al massimo un solo giorno.           Per le impostazioni cultura, ad esempio giapponese che dispone di più ere, il `DateDiff` metodo non restituisce una differenza in anni se la differenza si estende su due o più ere. In alternativa, è possibile calcolare la differenza in valori restituiti dal <xref:System.DateTime.Year%2A>proprietà, come illustrato nell&quot;esempio seguente: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Altri intervalli.** Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura, i metodi offrono ulteriori opzioni per l&quot;individuazione di intervalli di tempo.</xref:System.DateTime> Ad esempio, è possibile utilizzare il `Subtract` metodo in uno dei relativi overload: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>sottrae un <xref:System.TimeSpan>da un `Date` variabile per restituire un&quot;altra `Date` valore, e <xref:System.DateTime.Subtract%2A?displayProperty=fullName>sottrae un `Date` valore da restituire un <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> È possibile ora un processo per scoprire quanti millisecondi, come illustrato nell&quot;esempio seguente.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore stringa | Unità di differenza di orario |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Giorno |   | `DateInterval.DayOfYear`|&quot; y &quot;| Giorno |   | `DateInterval.Hour`|&quot; h &quot;| Ora |   | `DateInterval.Minute`|&quot; n &quot;| Minuto |   | `DateInterval.Month`|&quot; m &quot;| Mese |   | `DateInterval.Quarter`|&quot; domande e &quot;| Trimestre |   | `DateInterval.Second`|&quot; s &quot;| Secondo |   | `DateInterval.Weekday`|&quot; w &quot;| Settimana |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Settimana del calendario |   | `DateInterval.Year`|&quot; aaaa &quot;| Anno |       Il `DayOfWeek` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nelle impostazioni di sistema |   | `FirstDayOfWeek.Sunday`|1| Domenica (predefinito) |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |       Il `WeekOfYear` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Prima settimana dell&quot;anno specificato nelle impostazioni di sistema |   | `FirstWeekOfYear.Jan1`|1| Settimana in cui il 1 ° gennaio (impostazione predefinita) |   | `FirstWeekOfYear.FirstFourDays`|2| Settimana in cui almeno quattro giorni nel nuovo anno (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Prima settimana completa nel nuovo anno |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta l&quot;intervallo di tempo che si desidera utilizzare come unità di differenza tra `Date1` e `Date2`."
    - id: Date1
      type: System.Object
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Il primo valore di data/ora che si desidera utilizzare nel calcolo."
    - id: Date2
      type: System.Object
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Il secondo valore di data/ora a cui si desidera utilizzare nel calcolo."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> viene utilizzato."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumerazione che specifica la prima settimana dell&quot;anno. Se non specificato, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.Int64
      description: "Restituisce un <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> valore che specifica il numero di intervalli di tempo tra due <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valori."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, o <code>DayofWeek</code> non compreso nell&quot;intervallo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>o <code>Date2</code> è di tipo non valido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore contenente il componente specificato di un determinato <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore."
  remarks: "È possibile utilizzare il `DatePart` funzione per valutare un valore data/ora e restituire un componente specifico. Ad esempio, è possibile utilizzare `DatePart` per calcolare il giorno della settimana o l&quot;ora corrente.       Se si sceglie `DateInterval.Weekday` per il `Interval` argomento, il valore restituito è coerenza con i valori del `FirstDayOfWeek` enumerazione. Se si sceglie `DateInterval.WeekOfYear`, `DatePart` utilizza il <xref:System.Globalization.Calendar>e <xref:System.Globalization.CultureInfo>classi del <xref:System.Globalization>dello spazio dei nomi per determinare le impostazioni correnti.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       Il `FirstDayOfWeekValue` argomento influisce sui calcoli che utilizzano il `DateInterval.Weekday` e `DateInterval.WeekOfYear` `Interval` impostazioni. Il `FirstWeekOfYearValue` argomento influisce sui calcoli che specificano `DateInterval.WeekOfYear` per `Interval`.       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura relativi metodi offrono ulteriori opzioni per il recupero di parti di data/ora.</xref:System.DateTime> Ad esempio, è possibile ottenere il valore di data intero un `Date` variabile, con il valore di ora impostate su mezzanotte, come indicato di seguito: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Stringa | Parte del valore di data/ora da restituire |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Giorno del mese (da 1 a 31) |   | `DateInterval.DayOfYear`|y| Giorno dell&quot;anno (da 1 a 366) |   | `DateInterval.Hour`|h| Ora |   | `DateInterval.Minute`|n| Minuto |   | `DateInterval.Month`|m| Mese |   | `DateInterval.Quarter`|q| Trimestre |   | `DateInterval.Second`|s| Secondo |   | `DateInterval.Weekday`|w| Giorno della settimana (da 1 a 7) |   | `DateInterval.WeekOfYear`|ww| Settimana dell&quot;anno (da 1 a 53) |   | `DateInterval.Year`|yyyy| Anno |       Il `FirstDayOfWeekValue` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nelle impostazioni di sistema |   | `FirstDayOfWeek.Sunday`|1| Domenica (predefinito) |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |       Il `FirstWeekOfYearValue` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Prima settimana dell&quot;anno specificato nelle impostazioni di sistema |   | `FirstWeekOfYear.Jan1`|1| Settimana in cui il 1 ° gennaio (impostazione predefinita) |   | `FirstWeekOfYear.FirstFourDays`|2| Settimana in cui almeno quattro giorni nel nuovo anno (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Prima settimana completa del nuovo anno |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta la parte del valore data/ora si desidera restituire."
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore che si desidera valutare."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> viene utilizzato."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumerazione che specifica la prima settimana dell&quot;anno. Se non specificato, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore contenente il componente specificato di un determinato <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>non è valido."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>non è assegnato forzatamente al <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore contenente il componente specificato di un determinato <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore."
  remarks: "È possibile utilizzare il `DatePart` funzione per valutare un valore data/ora e restituire un componente specifico. Ad esempio, è possibile utilizzare `DatePart` per calcolare il giorno della settimana o l&quot;ora corrente.       Se si sceglie `DateInterval.Weekday` per il `Interval` argomento, il valore restituito è coerenza con i valori del `FirstDayOfWeek` enumerazione. Se si sceglie `DateInterval.WeekOfYear`, `DatePart` utilizza il <xref:System.Globalization.Calendar>e <xref:System.Globalization.CultureInfo>classi del <xref:System.Globalization>dello spazio dei nomi per determinare le impostazioni correnti.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       Il `FirstDayOfWeekValue` argomento influisce sui calcoli che utilizzano il `DateInterval.Weekday` e `DateInterval.WeekOfYear` `Interval` impostazioni. Il `FirstWeekOfYearValue` argomento influisce sui calcoli che specificano `DateInterval.WeekOfYear` per `Interval`.       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura relativi metodi offrono ulteriori opzioni per il recupero di parti di data/ora.</xref:System.DateTime> Ad esempio, è possibile ottenere il valore di data intero un `Date` variabile, con il valore di ora impostate su mezzanotte, come indicato di seguito: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` il `Interval` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Stringa | Parte del valore di data/ora da restituire |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Giorno del mese (da 1 a 31) |   | `DateInterval.DayOfYear`|y| Giorno dell&quot;anno (da 1 a 366) |   | `DateInterval.Hour`|h| Ora |   | `DateInterval.Minute`|n| Minuto |   | `DateInterval.Month`|m| Mese |   | `DateInterval.Quarter`|q| Trimestre |   | `DateInterval.Second`|s| Secondo |   | `DateInterval.Weekday`|w| Giorno della settimana (da 1 a 7) |   | `DateInterval.WeekOfYear`|ww| Settimana dell&quot;anno (da 1 a 53) |   | `DateInterval.Year`|yyyy| Anno |       Il `FirstDayOfWeekValue` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nelle impostazioni di sistema |   | `FirstDayOfWeek.Sunday`|1| Domenica (predefinito) |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |       Il `FirstWeekOfYearValue` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Prima settimana dell&quot;anno specificato nelle impostazioni di sistema |   | `FirstWeekOfYear.Jan1`|1| Settimana in cui il 1 ° gennaio (impostazione predefinita) |   | `FirstWeekOfYear.FirstFourDays`|2| Settimana in cui almeno quattro giorni nel nuovo anno (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Prima settimana completa del nuovo anno |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>valore di enumerazione o <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che rappresenta la parte del valore data/ora si desidera restituire."
    - id: DateValue
      type: System.Object
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore che si desidera valutare."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> viene utilizzato."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> enumerazione che specifica la prima settimana dell&quot;anno. Se non specificato, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore contenente il componente specificato di un determinato <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>non è valido."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>non è assegnato forzatamente al <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore che rappresenta un anno, mese e giorno, con le informazioni sull&quot;ora impostate su mezzanotte (00:&00;:00)."
  remarks: "In Windows 98 o Windows 2000, anni a due cifre per il `Year` argomento vengono interpretati in base alle impostazioni del computer definite dall&quot;utente. Le impostazioni predefinite sono che i valori da 0 a 29 vengono interpretati come anni 2000 – 2029 e valori da 30 a 99 vengono interpretati come anni 1930 – 1999. Per tutti gli altri `Year` argomenti, anno utilizzare quattro cifre, ad esempio 1924.       Le versioni precedenti di Windows interpretano anni a due cifre in base ai valori predefiniti descritti in precedenza. Per assicurarsi che la funzione restituisce il valore appropriato, utilizzare quattro cifre `Year`.       Nell&quot;esempio seguente viene illustrato un valore negativo, zero e valori positivi. In questo caso, il `DateSerial` restituisce un `Date` che rappresenta il giorno prima del primo giorno di marzo anno 10 anni prima dell&quot;anno corrente; in altre parole, l&quot;ultimo giorno del mese di febbraio dieci anni fa.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```Se il valore `Month` o `Day` supera l&quot;intervallo normale, viene applicato all&quot;unità più grande successivo come appropriato. Ad esempio, se si specificano 32 giorni, viene valutato come un mese e da uno a quattro giorni, a seconda del valore di `Month`. Se `Year` è maggiore di 9999, o se un argomento non compreso nell&quot;intervallo compreso tra -2.147.483.648 e 2.147.483.647, un <xref:System.ArgumentException>si verifica l&quot;errore.</xref:System.ArgumentException> Se la data specificata dai tre argomenti è anteriore a 00:00:00 il 1 ° gennaio dell&quot;anno 1 o successivo a 23:59:59 del 31 dicembre 9999, un <xref:System.ArgumentOutOfRangeException>si verifica l&quot;errore.</xref:System.ArgumentOutOfRangeException>       Il `Date` tipo di dati include i componenti dell&quot;ora. `DateSerial`Imposta tutti i componenti su 0, in modo che il valore restituito rappresenta l&quot;inizio del giorno calcolato.       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime>struttura, i metodi offrono ulteriori opzioni per la creazione di un `Date` valore.</xref:System.DateTime> Ad esempio, è possibile utilizzare uno degli overload <xref:System.DateTime.%23ctor%2A>costruttori per popolare un `Date` variabile utilizzando la combinazione di componenti desiderata.</xref:System.DateTime.%23ctor%2A> L&quot;esempio seguente imposta `NewDateTime` a 6 maggio 1978 un decimo di secondo prima 8:30 del mattino:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione da 1 a 9999. Tuttavia, vengono accettati anche valori di sotto di questo intervallo. Se `Year` è 0 e 99, viene interpretato come tra 1930 e 2029, come illustrato nella sezione &quot;Osservazioni&quot; seguente. Se `Year` è minore di 1, viene sottratto dall&quot;anno corrente."
    - id: Month
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione da 1 a 12. Tuttavia, vengono accettati anche valori di fuori di questo intervallo. Il valore di `Month` viene diminuito di 1 e applicato a gennaio dell&quot;anno calcolato. In altre parole, (`Month` - 1) viene aggiunto a gennaio. L&quot;anno viene ricalcolata se necessario. I risultati seguenti illustrano questo effetto: se `Month` è 1, il risultato corrisponde a gennaio dell&quot;anno calcolato.       Se `Month` è 0, il risultato è dicembre dell&quot;anno precedente.       Se `Month` è -1, il risultato è novembre dell&quot;anno precedente.       Se `Month` è 13, il risultato corrisponde a gennaio dell&quot;anno successivo."
    - id: Day
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione da 1 a 31. Tuttavia, vengono accettati anche valori di fuori di questo intervallo. Il valore di `Day` è diminuito di 1 e applicato al primo giorno del mese calcolato. In altre parole, (`Day` - 1) viene aggiunto per il primo giorno del mese. Nel mese e anno vengono ricalcolati se necessario. I risultati seguenti illustrano questo effetto: se `Day` è 1, il risultato è il primo giorno del mese calcolato.       Se `Day` è 0, il risultato è l&quot;ultimo giorno del mese precedente.       Se `Day` è -1, il risultato è il penultimo giorno del mese precedente.       Se `Day` è successivo alla fine del mese corrente, il risultato è il giorno del mese successivo appropriato. Ad esempio, se `Month` è 4 e `Day` è 31, il risultato è 1 maggio."
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore che rappresenta un anno, mese e giorno, con le informazioni sull&quot;ora impostate su mezzanotte (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore che rappresenta la data corrente in base al sistema."
  remarks: "`DateString`Restituisce la data di sistema nel formato MM-GG-AAAA, che utilizza il nome abbreviato del mese. I formati accettati per la data sono M-d-yyyy, M-d-y, g/aaaa e g/y. Questo vale per tutte le impostazioni locali del sistema ad eccezione di quelli che utilizzano un set di caratteri a byte doppio (DBCS). Se le impostazioni locali del sistema utilizzano un set di caratteri a byte doppio, `DateString` restituisce la data di sistema nel formato AAAA-MM-GG. Impostazioni locali del sistema viene impostata tramite il **orologio, lingua e paese** elemento **Pannello di controllo**.       **Nota** il `DateString` proprietà restituisce la data di sistema solo nel formato AAAA-MM-GG per il `zh` (cinese semplificato), `ko` (coreano) e `ja` impostazioni locali del sistema (giapponese) se si utilizza Visual Basic in Silverlight.       Per ottenere o impostare l&quot;ora di sistema corrente come un `String`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Per ottenere la data o ora di sistema corrente nel formato delle impostazioni locali del sistema o in un formato personalizzato, fornire il <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>proprietà per il <xref:Microsoft.VisualBasic.Strings.Format%2A>funzione, specificando un formato di data/ora predefinito o definito dall&quot;utente.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Nell&quot;esempio seguente viene illustrato questo.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```Per accedere alla data di sistema corrente come un `Date`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > L&quot;impostazione di data o ora di sistema richiede l&quot;autorizzazione per codice non gestito, che possono influire sulla relativa esecuzione in situazioni di attendibilità parziale. Per ulteriori informazioni, vedere <xref:System.Security.Permissions.SecurityPermission>e [le autorizzazioni di accesso di codice](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore che rappresenta la data corrente in base al sistema."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Formato non valido utilizzato per impostare il valore di <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente le informazioni di data rappresentate da una stringa, con le informazioni sull&quot;ora impostate su mezzanotte (00:&00;:00)."
  remarks: "Se `StringDate` include solo i numeri da 1 a 12 delimitati da separatori di data validi, `DateValue` riconosce l&quot;ordine per mese, giorno e anno in base al formato di data breve specificato per il sistema. `DateValue`utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> È possibile eseguire l&quot;override del formato data breve impostando il <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>proprietà del <xref:System.Globalization.DateTimeFormatInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`riconosce i nomi dei mesi in formato esteso, abbreviato e numerici. Ad esempio, oltre a riconoscere 30/12/1991 e 30/12/91 `DateValue` riconosce anche 30 dicembre 1991 e 30 dic 1991.       Se la parte dell&quot;anno `StringDate` viene omesso, `DateValue` viene utilizzato l&quot;anno della data di sistema del computer corrente.       Se il `StringDate` argomento include informazioni sull&quot;ora, `DateValue` non include il valore restituito. Tuttavia, se `StringDate` include un&quot;ora, ad esempio &quot;89:&98;&quot;, un <xref:System.InvalidCastException>si verifica l&quot;errore.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>espressione che rappresenta un valore data/ora da 00:00:00 il 1 ° gennaio dell&quot;anno 1 e 23:59:59 del 31 dicembre 9999."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore contenente le informazioni di data rappresentate da una stringa, con le informazioni sull&quot;ora impostate su mezzanotte (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>include informazioni sull&quot;ora non valido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 31 che rappresenta il giorno del mese."
  remarks: "Se si utilizza il `Day` (funzione), potrebbe essere necessario qualificarlo con il `Microsoft.VisualBasic` dello spazio dei nomi, perché il <xref:System.Windows.Forms>definisce lo spazio dei nomi <xref:System.Windows.Forms.Day>come un&quot;enumerazione.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> L&quot;esempio seguente mostra come validi `Day` risolve questa ambiguità: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` è anche possibile ottenere il giorno del mese chiamando `DatePart` e specificando `DateInterval.Day` per il *intervallo* argomento."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre il giorno."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 31 che rappresenta il giorno del mese."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 23 che rappresenta l&quot;ora del giorno."
  remarks: "È anche possibile ottenere l&quot;ora del giorno chiamando `DatePart` e specificando `DateInterval.Hour` per il `Interval` argomento."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre l&quot;ora."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 23 che rappresenta l&quot;ora del giorno."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 59 che rappresenta i minuti dell&quot;ora."
  remarks: "È anche possibile ottenere il minuto dell&quot;ora chiamando `DatePart` e specificando `DateInterval.Minute` per il `Interval` argomento."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre il minuto."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 59 che rappresenta i minuti dell&quot;ora."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 12 che rappresenta il mese dell&quot;anno."
  remarks: "È anche possibile ottenere il mese dell&quot;anno chiamando `DatePart` e specificando `DateInterval.Month` per il `Interval` argomento."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre il mese."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 12 che rappresenta il mese dell&quot;anno."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore contenente il nome del mese specificato."
  remarks: "La stringa restituita da `MonthName` dipende non solo per gli argomenti di input, ma anche il **internazionali** impostazioni specificate nelle finestre **Pannello di controllo**.      > [!NOTE]  >   `MonthName` utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Designazione numerica del mese, da 1 a 13. 1 indica gennaio e 12 indica dicembre. È possibile utilizzare il valore 13 con un calendario di 13 mesi. Se il sistema utilizza un calendario di 12 mesi e `Month` è 13, <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> restituisce una stringa vuota."
    - id: Abbreviate
      type: System.Boolean
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>valore che indica se il nome del mese deve essere abbreviato. Se omesso, il valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, significa che il nome del mese non è abbreviato."
    return:
      type: System.String
      description: "Restituisce un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore contenente il nome del mese specificato."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>è minore di 1 o maggiore di 13."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente la data e ora correnti in base al sistema."
  remarks: "Per impostare la data di sistema, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> Per impostare l&quot;ora di sistema, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente la data e ora correnti in base al sistema."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 59 che rappresenta il secondo del minuto."
  remarks: "È anche possibile ottenere il secondo del minuto chiamando `DatePart` e specificando `DateInterval.Second` per il `Interval` argomento."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre il secondo."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 0 e 59 che rappresenta il secondo del minuto."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente l&quot;ora corrente del giorno in base al sistema."
  remarks: "Il `Date` tipo di dati include i componenti di Data. Quando viene restituita l&quot;ora di sistema, `TimeOfDay` imposta tutti i componenti su 1, in modo che il valore restituito rappresenta il primo giorno dell&quot;anno 1. Quando si imposta l&quot;ora di sistema, `TimeOfDay` ignora i componenti di Data.       Per accedere all&quot;ora di sistema corrente come un `String`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Per ottenere o impostare la data di sistema corrente, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > L&quot;impostazione di data o ora di sistema richiede l&quot;autorizzazione per codice non gestito, che possono influire sulla relativa esecuzione in situazioni di attendibilità parziale. Per ulteriori informazioni, vedere <xref:System.Security.Permissions.SecurityPermission>e [le autorizzazioni di accesso di codice](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente l&quot;ora corrente del giorno in base al sistema."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> valore che rappresenta il numero di secondi trascorsi dalla mezzanotte."
  remarks: "Il `Timer` proprietà restituisce i secondi e millisecondi dopo la mezzanotte. I secondi sono parte integrante del valore restituito e i millisecondi sono la parte frazionaria."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> valore che rappresenta il numero di secondi trascorsi dalla mezzanotte."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore che rappresenta un&quot;ora specificata, minuto e secondo, con la data impostata rispetto al 1 ° gennaio dell&quot;anno 1."
  remarks: "Nell&quot;esempio seguente viene illustrato un valore negativo, zero e valori positivi. Il `TimeSerial` funzione restituisce un&quot;ora che rappresenta 15 minuti prima di tre ore prima di mezzogiorno, ovvero 8:45:00 AM.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```Se il valore `Minute` o `Second` supera l&quot;intervallo normale, viene applicato all&quot;unità più grande successivo come appropriato. Ad esempio, se si specificano 75 minuti, viene valutata come un&quot;ora e 15 minuti.       `TimeSerial`riduce i secondi totali modulo 86.400, ovvero il numero di secondi in un giorno. Pertanto, l&quot;ora restituita è sempre compreso tra 00:00:00 e 23:59:59.       Il `Date` tipo di dati include i componenti di Data. `TimeSerial`Imposta tutti i componenti su 1, in modo che il valore restituito rappresenta il primo giorno dell&quot;anno 1. Tuttavia, se i valori degli argomenti determinano il tempo calcolato superare 24 ore, il giorno viene incrementato in base alle esigenze. Nell&quot;esempio seguente, i valori di `Hour` e `Minute` comportare una data/ora combinata di più di 24 ore.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```Se i valori degli argomenti di un&quot;ora calcolata negativa, le informazioni sulla data è impostate su 1/1/0001 e le informazioni sull&quot;ora viene regolati tra 00:00:00 e 23:59:59. Tuttavia, se il tempo calcolato è inferiore a 24 ore negative, un <xref:System.ArgumentOutOfRangeException>si verifica l&quot;errore.</xref:System.ArgumentOutOfRangeException>       Poiché ogni `Date` il valore è supportato da un <xref:System.DateTime?displayProperty=fullName>struttura, i metodi offrono ulteriori opzioni per la creazione di un `Date` valore.</xref:System.DateTime?displayProperty=fullName> Ad esempio, è possibile utilizzare uno di overload <xref:System.DateTime.%23ctor%2A>costruttori per popolare un `Date` variabile utilizzando la combinazione di componenti desiderata.</xref:System.DateTime.%23ctor%2A> L&quot;esempio seguente imposta `newDateTime` a 6 maggio 1978 un decimo di secondo prima 8:30 del mattino:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione compreso tra 0 e 23. Tuttavia, vengono accettati anche valori di fuori di questo intervallo."
    - id: Minute
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione da 0 a 59. Tuttavia, vengono accettati anche valori di fuori di questo intervallo. Il valore di `Minute` viene aggiunto all&quot;ora calcolata, pertanto, un valore negativo specifica i minuti prima di tale ora."
    - id: Second
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>espressione da 0 a 59. Tuttavia, vengono accettati anche valori di fuori di questo intervallo. Il valore di `Second` viene aggiunto al minuto calcolato, pertanto, un valore negativo consente di specificare secondi prima di tale minuto."
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore che rappresenta un&quot;ora specificata, minuto e secondo, con la data impostata rispetto al 1 ° gennaio dell&quot;anno 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un argomento non rientra nell&quot;intervallo compreso tra -2.147.483.648 e 2.147.483.647."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tempo calcolato è inferiore a 24 ore negativo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore che rappresenta l&quot;ora corrente del giorno in base al sistema."
  remarks: "`TimeString`Restituisce sempre l&quot;ora di sistema come &quot;Hh&quot;, che è un formato di 24 ore. Questo formato è indipendente dalla lingua, ovvero non viene modificato anche se si modifica il **internazionali** in **Pannello di controllo**.       Per ottenere o impostare la data di sistema corrente come un `String`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Per ottenere la data o ora di sistema corrente nel formato delle impostazioni locali del sistema o in un formato personalizzato, fornire il <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>proprietà per il <xref:Microsoft.VisualBasic.Strings.Format%2A>funzione, specificando un formato di data/ora predefinito o definito dall&quot;utente.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Nell&quot;esempio seguente viene illustrato questo.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```Per accedere all&quot;ora di sistema corrente come un `Date`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > L&quot;impostazione di data o ora di sistema richiede l&quot;autorizzazione per codice non gestito, che possono influire sulla relativa esecuzione in situazioni di attendibilità parziale. Per ulteriori informazioni, vedere <xref:System.Security.Permissions.SecurityPermission>e [le autorizzazioni di accesso di codice](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore che rappresenta l&quot;ora corrente del giorno in base al sistema."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Formato non valido utilizzato per impostare il valore di <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente le informazioni di tempo rappresentate da una stringa, con la data impostata sul 1 ° gennaio dell&quot;anno 1."
  remarks: "È possibile immettere date valide usando un orario in formato 12 ore o 24 ore. Ad esempio, `&quot;2:24 P.M.&quot;` e `&quot;14:24&quot;` sono entrambi validi `StringTime` argomenti.       Se il `StringTime` argomento include informazioni sulla data, `TimeValue` non include il valore restituito. Tuttavia, se `StringTime` include informazioni di data non valida, ad esempio &quot;32 gennaio&quot;, un <xref:System.InvalidCastException>si verifica l&quot;errore.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>espressione che rappresenta un valore data/ora da 00:00:00 il 1 ° gennaio dell&quot;anno 1 e 23:59:59 del 31 dicembre 9999."
    return:
      type: System.DateTime
      description: "Restituisce un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente le informazioni di tempo rappresentate da una stringa, con la data impostata sul 1 ° gennaio dell&quot;anno 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>include informazioni di data non valida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente la data corrente in base al sistema."
  remarks: "Il `Date` tipo di dati include i componenti dell&quot;ora. Quando viene restituita la data di sistema, `Today` imposta tutti i componenti su 0, in modo che il valore restituito rappresenta mezzanotte (00: 00:00). Quando si imposta la data di sistema, `Today` ignora i componenti della fase.       Per accedere alla data di sistema corrente come un `String`, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Per ottenere o impostare l&quot;ora di sistema corrente, utilizzare il <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>proprietà.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > L&quot;impostazione di data o ora di sistema richiede l&quot;autorizzazione per codice non gestito, che possono influire sulla relativa esecuzione in situazioni di attendibilità parziale. Per ulteriori informazioni, vedere <xref:System.Security.Permissions.SecurityPermission>e [le autorizzazioni di accesso di codice](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> valore contenente la data corrente in base al sistema."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> contenente un numero che rappresenta il giorno della settimana."
  remarks: "Il valore restituito dal `Weekday` funzione corrisponde ai valori del `FirstDayOfWeek` enumerazione; ovvero, 1 indica domenica e 7 indica sabato.      > [!NOTE]  >   `Weekday` utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Il `DayOfWeek` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nelle impostazioni di sistema |   | `FirstDayOfWeek.Sunday`|1| Domenica (predefinito) |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore per il quale si desidera determinare il giorno della settimana."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> contenente un numero che rappresenta il giorno della settimana."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>è minore di 0 o maggiore di 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore contenente il nome del giorno della settimana specificato."
  remarks: "La stringa restituita da `WeekdayName` dipende non solo per gli argomenti di input, ma anche il **internazionali** impostazioni specificate nelle finestre **Pannello di controllo**.      > [!NOTE]  >   `WeekdayName` utilizza l&quot;impostazione del calendario corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A>proprietà del <xref:System.Globalization.CultureInfo>classe il <xref:System.Globalization>dello spazio dei nomi.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Il valore predefinito <xref:System.Globalization.CultureInfo.CurrentCulture%2A>valori sono determinati da **Pannello di controllo** impostazioni.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Il `FirstDayOfWeekValue` argomento può avere una delle seguenti impostazioni.      | Valore di enumerazione | Valore | Descrizione |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Primo giorno della settimana specificato nel sistema impostazioni (impostazione predefinita) |   | `FirstDayOfWeek.Sunday`|1| Domenica |   | `FirstDayOfWeek.Monday`|2| Lunedì (conforme allo standard ISO 8601, sezione 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Martedì |   | `FirstDayOfWeek.Wednesday`|4| Mercoledì |   | `FirstDayOfWeek.Thursday`|5| Giovedì |   | `FirstDayOfWeek.Friday`|6| Venerdì |   | `FirstDayOfWeek.Saturday`|7| Sabato |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. La designazione numerica per il giorno della settimana, da 1 a 7. 1 indica il primo giorno della settimana e 7 indica l&quot;ultimo giorno della settimana. Le identità dei giorni prima e ultima dipendono dall&quot;impostazione di `FirstDayOfWeekValue`."
    - id: Abbreviate
      type: System.Boolean
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>valore che indica se il nome del giorno della settimana deve essere abbreviato. Se omesso, il valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, significa che il nome del giorno della settimana non è abbreviato."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Facoltativa. Valore scelto dal <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> enumerazione che specifica il primo giorno della settimana. Se non specificato, <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> viene utilizzato."
    return:
      type: System.String
      description: "Restituisce un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> valore contenente il nome del giorno della settimana specificato."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>è minore di 1 o maggiore di 7 o <code>FirstDayOfWeekValue</code> è minore di 0 o maggiore di 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 9999 che rappresenta l&quot;anno."
  remarks: "È anche possibile ottenere l&quot;anno chiamando `DatePart` e specificando `DateInterval.Year` per il `Interval` argomento."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>valore da cui si desidera estrarre l&quot;anno."
    return:
      type: System.Int32
      description: "Restituisce un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> valore compreso tra 1 e 9999 che rappresenta l&quot;anno."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
