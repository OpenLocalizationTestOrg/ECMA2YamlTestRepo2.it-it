### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  id: ServiceCredentialsSecurityTokenManager
  children:
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  type: Class
  summary: "Rappresenta un <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref> implementazione che fornisce i serializzatori di token di sicurezza basata sul <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> configurato nel servizio."
  remarks: "Questa classe crea istanze di <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>classe.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> È un&quot;istanza di questa classe per ogni listener del canale del servizio."
  example:
  - "The following code shows how to override this class to create a customized Service Credentials Token Manager.  \n  \n [!code-vb[c_CustomCredentials#5](~/add/codesnippet/visualbasic/t-system.servicemodel.se_12_1.vb)]\n [!code-cs[c_CustomCredentials#5](~/add/codesnippet/csharp/t-system.servicemodel.se_12_1.cs)]"
  syntax:
    content: 'public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenManager
  implements:
  - System.ServiceModel.Security.IEndpointIdentityProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  id: '#ctor(System.ServiceModel.Description.ServiceCredentials)'
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&quot;> </xref> classe basata sul <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> passato."
  syntax:
    content: public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);
    parameters:
    - id: parent
      type: System.ServiceModel.Description.ServiceCredentials
      description: "Le credenziali del servizio."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un&quot;autenticatore del token in base ai requisiti di proprietà passato in una conversazione protetta."
  syntax:
    content: protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);
    parameters:
    - id: recipientRequirement
      type: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
      description: "Rappresenta i requisiti di proprietà di sicurezza specifici per il listener."
    - id: preserveBootstrapTokens
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i token di bootstrap devono essere mantenuti; In caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: sctResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Un oggetto resolver del token di sicurezza che può recuperare i token di sicurezza o chiavi quando si dispone di un identificatore di chiave o una clausola dell&quot;identificatore di chiave."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "Un autenticatore del token di sicurezza."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un autenticatore del token in base a di sicurezza di <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>."
  remarks: "Un `outOfBand` resolver del token può essere restituito facoltativamente dal metodo, che viene utilizzato il [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] processore di sicurezza per risolvere il token che non sono in SOAP del messaggio durante l&quot;elaborazione di sicurezza. Il <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>restituito da questo metodo convalida token ed estrae attestazioni.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> Uno <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>viene creata per ogni classe derivata da <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>"
  example:
  - "The following code is an example of how to override this method.  \n  \n [!code-cs[c_CustomTokenAuthenticator#2](~/add/codesnippet/csharp/b70d167c-ca6e-4160-bfdd-_1.cs)]\n [!code-vb[c_CustomTokenAuthenticator#2](~/add/codesnippet/visualbasic/b70d167c-ca6e-4160-bfdd-_1.vb)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Il requisito del token di sicurezza."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>. Questo parametro viene passato non inizializzato."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "L&quot;autenticatore del token di sicurezza."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile creare un autenticatore del token di sicurezza per il <code>  tokenRequirement </code> passato."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un provider di token in base di sicurezza di <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>."
  remarks: "La <xref:System.IdentityModel.Selectors.SecurityTokenProvider>classe è responsabile di ottenere token per un determinato <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Facoltativamente, i provider di token possono supportare funzionalità di rinnovo e annullamento dei token. Il provider di token può memorizzare nella cache i token se è configurato per eseguire questa operazione."
  example:
  - "The following code shows how to override this method.  \n  \n [!code-vb[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/visualbasic/399fa5ca-8ab5-4dd6-bfe8-_1.vb)]\n [!code-cs[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/csharp/399fa5ca-8ab5-4dd6-bfe8-_1.cs)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Il requisito del token di sicurezza."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "Il provider di token di sicurezza."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>requirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile creare un provider di token di sicurezza per il <code> requirement </code> passato."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Crea un serializzatore di token in base alla versione di token di sicurezza passata di sicurezza."
  remarks: "Il <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>viene utilizzato per scrivere e leggere i riferimenti ai token di sicurezza e token di sicurezza.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> Quando si deserializza il token da XML, il token restituito deve essere in grado di eseguire operazioni di crittografia. Il serializzatore di token deve essere in grado di eseguire una quantità sufficiente di convalide per garantire che il token può eseguire operazioni di crittografia (l&quot;elaborazione dei ticket Kerberos, la decodifica x.&509;, la decodifica SAML e così via), ma deve rinviare all&quot;autenticatore di prendere decisioni di attendibilità dell&quot;applicazione."
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "La versione del token di sicurezza."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il serializzatore di token di sicurezza."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile creare un serializzatore di token di sicurezza per il <code> version </code> passato."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene il <xref:System.ServiceModel.EndpointIdentity>in base al requisito di token di sicurezza.</xref:System.ServiceModel.EndpointIdentity>"
  remarks: "Questo metodo viene chiamato dal [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastruttura per ottenere il <xref:System.ServiceModel.EndpointIdentity>che corrisponde a un endpoint del servizio.</xref:System.ServiceModel.EndpointIdentity>"
  syntax:
    content: public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Il requisito del token di sicurezza."
    return:
      type: System.ServiceModel.EndpointIdentity
      description: "L&quot;identità dell&quot;endpoint che corrisponde alla <code> tokenRequirement </code>. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>viene restituito se non è possibile creare un&quot;identità dal <code> tokenRequirement </code>."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Determina se il requisito del token di sicurezza è un token emesso."
  syntax:
    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Il requisito del token di sicurezza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il requisito di token di sicurezza è per un token pubblicato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  id: ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene le credenziali del servizio utilizzate per costruire l&quot;istanza di questa classe."
  remarks: "Il <xref:System.ServiceModel.Description.ServiceCredentials>oggetto consente di configurare le credenziali del servizio, nonché le impostazioni di autenticazione delle credenziali del servizio.</xref:System.ServiceModel.Description.ServiceCredentials>"
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "Le credenziali del servizio."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: RecipientServiceModelSecurityTokenRequirement
  nameWithType: RecipientServiceModelSecurityTokenRequirement
  fullName: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
- uid: System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
