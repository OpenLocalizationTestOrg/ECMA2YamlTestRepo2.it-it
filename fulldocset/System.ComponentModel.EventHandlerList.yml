### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventHandlerList
  id: EventHandlerList
  children:
  - System.ComponentModel.EventHandlerList.#ctor
  - System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  - System.ComponentModel.EventHandlerList.Dispose
  - System.ComponentModel.EventHandlerList.Item(System.Object)
  - System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  langs:
  - csharp
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
  type: Class
  summary: "Fornisce un semplice elenco di delegati. Questa classe non può essere ereditata."
  remarks: "Questa classe utilizza un algoritmo di ricerca lineare per trovare le voci dell&quot;elenco di delegati. Algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci. Pertanto, quando si dispone di un elenco di grandi dimensioni, ricerca di voci è lenta."
  example:
  - 'For an example of using an EventHandlerList, see [How to: Handle Multiple Events Using Event Properties](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: 'public sealed class EventHandlerList : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: EventHandlerList()
  nameWithType: EventHandlerList.EventHandlerList()
  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> classe."
  syntax:
    content: public EventHandlerList ();
    parameters: []
  overload: System.ComponentModel.EventHandlerList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  id: AddHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: AddHandler(Object,Delegate)
  nameWithType: EventHandlerList.AddHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.AddHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge un delegato all&quot;elenco."
  syntax:
    content: public void AddHandler (object key, Delegate value);
    parameters:
    - id: key
      type: System.Object
      description: "L&quot;oggetto proprietario dell&quot;evento."
    - id: value
      type: System.Delegate
      description: "Delegato da aggiungere all&quot;elenco."
  overload: System.ComponentModel.EventHandlerList.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  id: AddHandlers(System.ComponentModel.EventHandlerList)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: AddHandlers(EventHandlerList)
  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)
  fullName: System.ComponentModel.EventHandlerList.AddHandlers(EventHandlerList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge un elenco di delegati all&quot;elenco corrente."
  syntax:
    content: public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);
    parameters:
    - id: listToAddFrom
      type: System.ComponentModel.EventHandlerList
      description: "Elenco da aggiungere."
  overload: System.ComponentModel.EventHandlerList.AddHandlers*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.Dispose
  id: Dispose
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventHandlerList.Dispose()
  fullName: System.ComponentModel.EventHandlerList.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Elimina l&quot;elenco di delegati."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.ComponentModel.EventHandlerList>.</xref:System.ComponentModel.EventHandlerList> Il metodo Dispose lascia il <xref:System.ComponentModel.EventHandlerList>in uno stato inutilizzabile.</xref:System.ComponentModel.EventHandlerList> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.EventHandlerList>in modo che la memoria occupata può essere recuperata tramite garbage collection.</xref:System.ComponentModel.EventHandlerList>      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.EventHandlerList>.</xref:System.ComponentModel.EventHandlerList> In caso contrario, le risorse di <xref:System.ComponentModel.EventHandlerList>non è verranno liberate finché garbage collection di <xref:System.ComponentModel.EventHandlerList>distruttore dell&quot;oggetto.</xref:System.ComponentModel.EventHandlerList> </xref:System.ComponentModel.EventHandlerList>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.EventHandlerList.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.Item(System.Object)
  id: Item(System.Object)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: Item(Object)
  nameWithType: EventHandlerList.Item(Object)
  fullName: System.ComponentModel.EventHandlerList.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta il delegato per l&quot;oggetto specificato."
  remarks: "Quando la chiave non viene trovata nell&quot;elenco e si fornisce un delegato per impostare il valore della chiave, quindi la chiave viene aggiunta all&quot;inizio dell&quot;elenco e assegnata al delegato come valore."
  syntax:
    content: public Delegate this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Oggetto da individuare nell&quot;elenco."
    return:
      type: System.Delegate
      description: "Il delegato per la chiave specificata, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esiste un delegato."
  overload: System.ComponentModel.EventHandlerList.Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  id: RemoveHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  name: RemoveHandler(Object,Delegate)
  nameWithType: EventHandlerList.RemoveHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove un delegato dall&quot;elenco."
  syntax:
    content: public void RemoveHandler (object key, Delegate value);
    parameters:
    - id: key
      type: System.Object
      description: "L&quot;oggetto proprietario dell&quot;evento."
    - id: value
      type: System.Delegate
      description: "Delegato da rimuovere dall&quot;elenco."
  overload: System.ComponentModel.EventHandlerList.RemoveHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.EventHandlerList.#ctor
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: EventHandlerList()
  nameWithType: EventHandlerList.EventHandlerList()
  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()
- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandler(Object,Delegate)
  nameWithType: EventHandlerList.AddHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.AddHandler(Object,Delegate)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandlers(EventHandlerList)
  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)
  fullName: System.ComponentModel.EventHandlerList.AddHandlers(EventHandlerList)
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.EventHandlerList.Dispose
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Dispose()
  nameWithType: EventHandlerList.Dispose()
  fullName: System.ComponentModel.EventHandlerList.Dispose()
- uid: System.ComponentModel.EventHandlerList.Item(System.Object)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Item(Object)
  nameWithType: EventHandlerList.Item(Object)
  fullName: System.ComponentModel.EventHandlerList.Item(Object)
- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: RemoveHandler(Object,Delegate)
  nameWithType: EventHandlerList.RemoveHandler(Object,Delegate)
  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(Object,Delegate)
- uid: System.ComponentModel.EventHandlerList.#ctor*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList.EventHandlerList
- uid: System.ComponentModel.EventHandlerList.AddHandler*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandler
  nameWithType: EventHandlerList.AddHandler
- uid: System.ComponentModel.EventHandlerList.AddHandlers*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: AddHandlers
  nameWithType: EventHandlerList.AddHandlers
- uid: System.ComponentModel.EventHandlerList.Dispose*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Dispose
  nameWithType: EventHandlerList.Dispose
- uid: System.ComponentModel.EventHandlerList.Item*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: Item
  nameWithType: EventHandlerList.Item
- uid: System.ComponentModel.EventHandlerList.RemoveHandler*
  parent: System.ComponentModel.EventHandlerList
  isExternal: false
  name: RemoveHandler
  nameWithType: EventHandlerList.RemoveHandler
