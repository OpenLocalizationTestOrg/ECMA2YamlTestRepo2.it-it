### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  id: EncryptedKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  type: Class
  summary: "Rappresenta una clausola dell&quot;identificatore di chiave che identifica una chiave crittografata."
  remarks: "In genere, non è necessario che il EncryptedKeyIdentifierClause essere utilizzata solo quando viene creato un servizio token di sicurezza personalizzato. Quando un servizio token di sicurezza restituisce un token di sicurezza, il token di sicurezza emesso contiene riferimenti a token di sicurezza associati e. I riferimenti associati si riferiscono ai token di sicurezza contenuti nell&quot;intestazione di sicurezza di un messaggio SOAP e i riferimenti non associati sono token di sicurezza che non sono inclusi nell&quot;intestazione di sicurezza di un messaggio SOAP. Questi riferimenti confermano in genere l&quot;autenticità del token di sicurezza emesso. Utilizzare la classe EncryptedKeyIdentifierClause per fare riferimento a una chiave crittografata. Il <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>metodo restituisce la chiave crittografata.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>       [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]accetta le chiavi incapsulate, valide per il formato wire. L&quot;algoritmo di incapsulamento della chiave specificato durante la trasmissione viene accettato e utilizzato. Non viene verificato che sia compatibile con il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>specificato dall&quot;endpoint.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: 'public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe utilizzando la chiave specificata è crittografata e l&quot;algoritmo di crittografia utilizzato per crittografare la chiave."
  remarks: "Utilizzare le stringhe costanti statiche nel <xref:System.IdentityModel.Tokens.SecurityAlgorithms>per specificare l&quot;algoritmo di crittografia per il `encryptionMethod` parametro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene una chiave crittografata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metodo.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe utilizzando la chiave specificata che viene crittografata, l&quot;algoritmo di crittografia utilizzato per crittografare la chiave e un identificatore di chiave per la chiave di crittografia."
  remarks: "Utilizzare le stringhe costanti statiche nel <xref:System.IdentityModel.Tokens.SecurityAlgorithms>per specificare l&quot;algoritmo di crittografia per il `encryptionMethod` parametro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene una chiave crittografata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metodo.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave per la chiave di crittografia specificato nel `encryptedKey` parametro. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe utilizzando la chiave specificata che viene crittografata, l&quot;algoritmo di crittografia utilizzato per crittografare la chiave, un identificatore di chiave per la chiave di crittografia e un nome leggibile dall&quot;utente."
  remarks: "Utilizzare le stringhe costanti statiche nel <xref:System.IdentityModel.Tokens.SecurityAlgorithms>per specificare l&quot;algoritmo di crittografia per il `encryptionMethod` parametro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene una chiave crittografata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metodo.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave per la chiave di crittografia specificata nel `encryptedKey` parametro. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "Un nome leggibile dall&quot;utente che è associato con la chiave specificata nel `encryptedKey` parametro. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> classe utilizzando la chiave specificata che viene crittografata, l&quot;algoritmo di crittografia utilizzato per crittografare la chiave, un identificatore di chiave per la chiave e un nome leggibile dall&quot;utente."
  remarks: "Quando il `derivationNonce` e `derivationLength` vengono specificati parametri, viene utilizzata la chiave derivata implicita anziché la chiave di sicurezza diretta del token.       Utilizzare le stringhe costanti statiche nel <xref:System.IdentityModel.Tokens.SecurityAlgorithms>per specificare l&quot;algoritmo di crittografia per il `encryptionMethod` parametro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene una chiave crittografata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metodo.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave per la chiave specificata nel `encryptedKey` parametro. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "Un nome leggibile dall&quot;utente che è associato con la chiave specificata nel `encryptedKey` parametro. Imposta il valore della <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>proprietà.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
    - id: derivationNonce
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene il parametro nonce utilizzato per creare una chiave derivata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>metodo.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "Le dimensioni della chiave derivata. Imposta il valore della <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>proprietà.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  id: CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene un nome leggibile dall&quot;utente associato alla chiave crittografata."
  remarks: "Quando la proprietà CarriedKeyName viene serializzata in XML, questo viene inserito nel `CarriedKeyName`> elemento. Per le chiavi crittografate, il `CarriedKeyName`> è un elemento facoltativo che associa un nome leggibile dall&quot;utente a un valore di chiave. Questo nome può quindi essere utilizzato per fare riferimento la chiave usando il `KeyName`> elemento all&quot;interno di `KeyInfo`> elemento. Lo stesso `CarriedKeyName`> valore dell&quot;elemento, a differenza di un valore di ID, può ricorrere più volte all&quot;interno di un singolo documento. Il valore della chiave deve essere uguale per tutti `EncryptedKey`> elementi identificati con lo stesso `CarriedKeyName`> nome all&quot;interno di un documento XML."
  syntax:
    content: public string CarriedKeyName { get; }
    return:
      type: System.String
      description: "Nome leggibile dall&quot;utente associato alla chiave crittografata."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  id: EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene un identificatore di chiave per la chiave di crittografia."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave per la chiave di crittografia."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  id: EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene l&quot;algoritmo di crittografia utilizzato per crittografare la chiave."
  remarks: "In genere, il valore della proprietà EncryptionMethod è una delle stringhe costanti statiche in una <xref:System.IdentityModel.Tokens.SecurityAlgorithms>classe.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public string EncryptionMethod { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  id: GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene la chiave crittografata."
  remarks: "La matrice restituita dal metodo GetEncryptedKey è un clone della chiave crittografata."
  syntax:
    content: public byte[] GetEncryptedKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene la chiave crittografata.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;identificatore di chiave per questa istanza è equivalente alla clausola dell&quot;identificatore di chiave specificato."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> keyIdentifierClause </code> è di tipo <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> e ha la stessa crittografata nome leggibile dall&quot;utente, chiave e il metodo di crittografia dell&quot;istanza corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  id: Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;identificatore di chiave per questa istanza è equivalente alla chiave crittografata specificata, il metodo di crittografia e il nome leggibile dall&quot;utente."
  syntax:
    content: public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene una chiave crittografata.</xref:System.Byte>"
    - id: encryptionMethod
      type: System.String
      description: "L&quot;algoritmo di crittografia utilizzato per crittografare la chiave."
    - id: carriedKeyName
      type: System.String
      description: "Nome leggibile dall&quot;utente associato alla chiave crittografata."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> encryptedKey </code>, <code> encryptionMethod </code> e <code> carriedKeyName </code> parametri hanno gli stessi valori restituiti dal <> </> *> (metodo) e <> </> *> e <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>proprietà, rispettivamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente."
  remarks: "Il metodo ToString restituisce una stringa che contiene la chiave crittografata e l&quot;algoritmo di crittografia utilizzato per crittografare la chiave."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "L&quot;oggetto corrente."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: EncryptedKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: EncryptedKeyIdentifierClause.ToString
