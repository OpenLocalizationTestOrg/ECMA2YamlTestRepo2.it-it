### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpHandler
  id: IHttpHandler
  children:
  - System.Web.IHttpHandler.IsReusable
  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
  type: Interface
  summary: "Definisce il contratto implementato da ASP.NET per l&quot;elaborazione sincrona di richieste HTTP Web mediante gestori HTTP personalizzati."
  remarks: "È possibile scrivere gestori HTTP personalizzati per elaborare i tipi predefiniti specifici di richieste HTTP in qualsiasi linguaggio conforme a Common Language Specification (CLS). Codice eseguibile definito nel `HttpHandler` classi, anziché le pagine ASP o ASP.NET Web tradizionali, risponde a queste richieste specifiche. I gestori HTTP forniscono un mezzo per l&quot;interazione con i servizi di risposta del server Web IIS e la richiesta di basso livello e offrono funzionalità molto simili alle estensioni ISAPI ma con un modello di programmazione più semplice.       Se il gestore avrà accesso ai valori dello stato sessione, è necessario implementare la <xref:System.Web.SessionState.IRequiresSessionState>interfaccia (un&quot;interfaccia marcatore alcun metodi).</xref:System.Web.SessionState.IRequiresSessionState>"
  syntax:
    content: public interface IHttpHandler
  implements: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se è possibile utilizzare un&quot;altra richiesta di <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> istanza."
  remarks: "Impostare in modo esplicito la proprietà IsReusable `true` o `false` da codice fornito per eseguire l&quot;override di accesso alla proprietà IsReusable (GET)."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/p-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/p-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> istanza è riutilizzabile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.IHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Abilita l&quot;elaborazione delle richieste HTTP Web da un oggetto personalizzato <xref uid=&quot;langword_csharp_HttpHandler&quot; name=&quot;HttpHandler&quot; href=&quot;&quot;> </xref> che implementa il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfaccia."
  remarks: "Inserire personalizzato `HttpHandler` codice nel metodo ProcessRequest virtuale, come illustrato nell&quot;esempio seguente."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/m-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/m-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto che fornisce riferimenti agli oggetti intrinseci del server (ad esempio, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) utilizzato per gestire le richieste HTTP."
  overload: System.Web.IHttpHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpHandler.IsReusable
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.IHttpHandler.IsReusable*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
- uid: System.Web.IHttpHandler.ProcessRequest*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: IHttpHandler.ProcessRequest
