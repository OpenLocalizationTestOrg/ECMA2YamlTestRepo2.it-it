### YamlMime:ManagedReference
items:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter
  id: IFragmentCapableXmlDictionaryWriter
  children:
  - System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  - System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: IFragmentCapableXmlDictionaryWriter
  nameWithType: IFragmentCapableXmlDictionaryWriter
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter
  type: Interface
  summary: "Contiene proprietà e metodi che, quando implementata da un <xref:System.Xml.XmlDictionaryWriter>, consente di elaborare frammenti XML.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Questa classe definisce le proprietà e metodi correlati alla funzionalità di un <xref:System.Xml.XmlDictionaryWriter>per reindirizzare parte dell&quot;output (un &quot; fragment&quot;) a un flusso diverso da quello con cui è stato creato e di inserire direttamente tale frammento acquisito reindirizzandolo in seguito il flusso principale dello stesso writer in un momento successivo.</xref:System.Xml.XmlDictionaryWriter>"
  syntax:
    content: public interface IFragmentCapableXmlDictionaryWriter
  implements: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  id: CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Ottiene un valore che indica se questo <xref:System.Xml.XmlDictionaryWriter>in grado di elaborare frammenti XML.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Restituisce t`r`se il writer che implementa questa interfaccia è possibile generare e accettare XML frammenti."
  syntax:
    content: public bool CanFragment { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto <xref:System.Xml.XmlDictionaryWriter>in grado di elaborare frammenti XML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlDictionaryWriter>"
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  id: EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Termina l&quot;elaborazione di un frammento XML."
  remarks: "Interrompe il reindirizzamento dell&quot;output al flusso fornito per la corrispondenza `StartFragment` chiamare. Dopo questa chiamata, l&quot;output della scrittura XML va nel flusso utilizzato originariamente dal writer prima di `StartFragment` chiamare."
  syntax:
    content: public void EndFragment ();
    parameters: []
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  id: StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Avvia l&quot;elaborazione di un frammento XML."
  remarks: "Inizia temporaneamente con il reindirizzamento della scrittura dell&quot;output XML al flusso fornito finché `EndFragment` viene chiamato. Se `generateSelfContainedTextFragment` è `true`, quindi l&quot;output XML reindirizzato è sempre XML di testo ed è indipendente in termini di contesto dello spazio dei nomi. `StartFragment`chiamate () non possono essere annidate."
  syntax:
    content: public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il flusso in cui scrivere."
    - id: generateSelfContainedTextFragment
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gli spazi dei nomi dichiarato fuori dal frammento viene dichiarato di nuovo se utilizzato all&quot;interno; se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> gli spazi dei nomi non vengono dichiarati nuovamente."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  id: WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Scrive un frammento XML nel flusso sottostante del writer."
  remarks: "Scrive un frammento acquisito tra `StartFragment` e `EndFragment` e richiama nel flusso principale di XmlDictionaryWriter. Il frammento scritto è `count` byte a partire dall&quot;indice `offset` dall&quot;oggetto fornito `buffer`. Il comportamento è definito se il frammento fornito non è stato acquisito utilizzando questa istanza del writer."
  example:
  - "```  \nMemoryStream stream = new MemoryStream();  \nMemoryStream fragmentStream = new MemoryStream();  \nXmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  \nIXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  \nif (fragmentWriter == null || !fragmentWriter.CanFragment)  \n{  \nConsole.WriteLine(\"This writer doesn't support fragments\");  \nreturn;  \n}  \nwriter.WriteStartElement(\"Root\");  \nfragmentWriter.StartFragment(fragmentStream, false);  \nwriter.WriteStartElement(\"Body\");  \nwriter.WriteString(\"This is my body\");  \nwriter.WriteEndElement();  \nfragmentWriter.EndFragment();  \nwriter.WriteStartElement(\"CharsInTheBody\");  \nwriter.WriteValue(fragmentStream.Length);  \nwriter.WriteEndElement();  \nfragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  \nwriter.WriteEndElement(); // Root  \n```"
  syntax:
    content: public void WriteFragment (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui scrivere."
    - id: offset
      type: System.Int32
      description: "La posizione iniziale dalla quale scrivere `buffer`."
    - id: count
      type: System.Int32
      description: "Il numero di byte da scrivere il `buffer`."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment
