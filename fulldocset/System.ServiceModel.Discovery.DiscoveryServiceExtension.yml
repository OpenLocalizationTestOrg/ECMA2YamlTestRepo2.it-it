### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension
  id: DiscoveryServiceExtension
  children:
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: DiscoveryServiceExtension
  nameWithType: DiscoveryServiceExtension
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension
  type: Class
  summary: "WCF estensione classe astratta per la specifica di un servizio di individuazione personalizzato o per l&quot;acquisizione degli endpoint pubblicati."
  remarks: "Derivare una classe da DiscoveryServiceExtension ed eseguire l&quot;override di <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A>per restituire il servizio di individuazione personalizzato.</xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> Aggiungere la classe derivata per la <xref:System.ServiceModel.ServiceHost>estensioni che ospitano il servizio individuabile.</xref:System.ServiceModel.ServiceHost> Quando il <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A>viene chiamato il comportamento scorre le estensioni nell&quot;host del servizio e cerca un DiscoveryServiceExtension.</xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> Se viene trovato uno relativo <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A>viene chiamato per ottenere il servizio di individuazione personalizzato.</xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> Se un&quot;estensione non viene trovata, che viene utilizzata l&quot;implementazione del servizio di individuazione predefinita."
  syntax:
    content: 'public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: DiscoveryServiceExtension()
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Discovery.DiscoveryServiceExtension&quot;> </xref> classe."
  syntax:
    content: protected DiscoveryServiceExtension ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  id: GetDiscoveryService
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: GetDiscoveryService()
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Eseguire l&quot;override di questo metodo per restituire personalizzato <xref href=&quot;System.ServiceModel.Discovery.DiscoveryService&quot;> </xref> implementazione."
  remarks: "Un <xref:System.InvalidOperationException>viene generata durante l&quot;apertura dell&quot;host del servizio, se questo metodo restituisce `null` </xref:System.InvalidOperationException>"
  syntax:
    content: protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();
    parameters: []
    return:
      type: System.ServiceModel.Discovery.DiscoveryService
      description: "Un&quot;implementazione di servizio di individuazione personalizzato."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  id: PublishedEndpoints
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene una raccolta di sola lettura di endpoint pubblicati."
  remarks: "La propriet√† deve essere accessibile solo dopo che il <xref:System.ServiceModel.ServiceHost>ha aperto.</xref:System.ServiceModel.ServiceHost> Quando il <xref:System.ServiceModel.ServiceHost>in <xref:System.ServiceModel.CommunicationState>stato, il <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata>viene generato e aggiunto alla raccolta.</xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> </xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata> PublishedEndpoints { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}
      description: "Raccolta di endpoint pubblicati di sola lettura."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  syntax:
    content: void IExtension<ServiceHostBase>.Attach (System.ServiceModel.ServiceHostBase owner);
    parameters:
    - id: owner
      type: System.ServiceModel.ServiceHostBase
      description: "Da aggiungere."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  syntax:
    content: void IExtension<ServiceHostBase>.Detach (System.ServiceModel.ServiceHostBase owner);
    parameters:
    - id: owner
      type: System.ServiceModel.ServiceHostBase
      description: "Da aggiungere."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: DiscoveryServiceExtension()
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: GetDiscoveryService()
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()
- uid: System.ServiceModel.Discovery.DiscoveryService
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: DiscoveryService
  nameWithType: DiscoveryService
  fullName: System.ServiceModel.Discovery.DiscoveryService
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EndpointDiscoveryMetadata>
  nameWithType: ReadOnlyCollection<EndpointDiscoveryMetadata>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
    name: EndpointDiscoveryMetadata
    nameWithType: EndpointDiscoveryMetadata
    fullName: EndpointDiscoveryMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: DiscoveryServiceExtension
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: GetDiscoveryService
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach
