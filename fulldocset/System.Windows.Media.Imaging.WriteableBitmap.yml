### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.WriteableBitmap
  id: WriteableBitmap
  children:
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  - System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  - System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  - System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  - System.Windows.Media.Imaging.WriteableBitmap.Clone
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  - System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  - System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.Lock
  - System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  - System.Windows.Media.Imaging.WriteableBitmap.Unlock
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
  type: Class
  summary: "Fornisce un <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> che possono essere scritti e aggiornate."
  remarks: "Utilizzare la classe WriteableBitmap per aggiornare ed eseguire il rendering di una bitmap con cadenza per frame. Ciò è utile per la generazione del contenuto algoritmico, ad esempio un&quot;immagine frattale e di visualizzazione dei dati, ad esempio un visualizzatore musicale.       La classe WriteableBitmap utilizza due buffer. Il *buffer nascosto* allocata nella memoria di sistema e accumula il contenuto non è attualmente visualizzato. Il *buffer anteriore* allocata nella memoria di sistema e il contenuto che è attualmente visualizzato. Il sistema di rendering copia front buffer di memoria video per la visualizzazione.       Due thread utilizzano questi buffer. Il *thread dell&quot;interfaccia utente* genera l&quot;interfaccia utente ma non viene visualizzata sullo schermo. Il thread dell&quot;interfaccia utente risponde per l&quot;input dell&quot;utente, timer e altri eventi. Un&quot;applicazione può disporre di più thread dell&quot;interfaccia utente. Il *thread di rendering* compone e visualizza le modifiche effettuate dal thread dell&quot;interfaccia utente. È il rendering di un solo thread per ogni applicazione.       Il thread UI scrive il contenuto al buffer nascosto. Il thread di rendering legge il contenuto dal front buffer e lo copia in memoria video. Le modifiche al buffer nascosto vengono rilevate con aree rettangolari modificate.       Chiamare uno del <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>overload per aggiornare e visualizzare automaticamente il contenuto del buffer nascosto.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>       Per un maggiore controllo sugli aggiornamenti e per l&quot;accesso al buffer nascosto a thread multipli, utilizzare il seguente flusso di lavoro.      1.  Chiamare il <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>metodo riservare il buffer nascosto per gli aggiornamenti.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      2.  Ottenere un puntatore al buffer nascosto accedendo il <xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>proprietà.</xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>      3.  Scrivere le modifiche al buffer nascosto. Altri thread possono scrivere le modifiche apportate al buffer nascosto quando WriteableBitmap è bloccato.      4.  Chiamare il <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>metodo per indicare le aree che sono stati modificati.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>      5.  Chiamare il <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>metodo per rilasciare il buffer nascosto e consentire la visualizzazione sullo schermo.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>       Quando gli aggiornamenti vengono inviati al thread di rendering, il thread di rendering copia i rettangoli modificati dal buffer nascosto front buffer. Il sistema di rendering controlla questo scambio per evitare i deadlock e ridisegnare elementi, ad esempio &quot;interruzione&quot;."
  example:
  - "The following example demonstrates how a WriteableBitmap can be used as the source of an <xref:System.Windows.Controls.Image> to draw pixels when the mouse moves.  \n  \n [!code-cs[WriteableBitmap2#WriteableBitmapFullPage](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#writeablebitmapfullpage)]"
  syntax:
    content: 'public sealed class WriteableBitmap : System.Windows.Media.Imaging.BitmapSource'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.ImageSource
  - System.Windows.Media.Imaging.BitmapSource
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)
  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.ImageSource.ToString
  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)
  - System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  - System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  - System.Windows.Media.Imaging.BitmapSource.DpiX
  - System.Windows.Media.Imaging.BitmapSource.DpiY
  - System.Windows.Media.Imaging.BitmapSource.Format
  - System.Windows.Media.Imaging.BitmapSource.Height
  - System.Windows.Media.Imaging.BitmapSource.IsDownloading
  - System.Windows.Media.Imaging.BitmapSource.Metadata
  - System.Windows.Media.Imaging.BitmapSource.Palette
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.Media.Imaging.BitmapSource.Width
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  id: '#ctor(System.Windows.Media.Imaging.BitmapSource)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Inizializza una nuova istanza del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> usando il determinato <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref>."
  remarks: "Il <xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>costruttore è preferita rispetto all&quot;utilizzo di questo costruttore.</xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>       Se `source` non utilizza un formato di bitmap supportato in modo nativo, vengono applicate le conversioni per ogni aggiornamento frame, riducendo le prestazioni di formato."
  syntax:
    content: public WriteableBitmap (System.Windows.Media.Imaging.BitmapSource source);
    parameters:
    - id: source
      type: System.Windows.Media.Imaging.BitmapSource
      description: "Il <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> da utilizzare per l&quot;inizializzazione."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  id: '#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> classe con i parametri specificati."
  remarks: "I valori preferiti per `pixelFormat` sono <xref:System.Windows.Media.PixelFormats.Bgr32%2A>e <xref:System.Windows.Media.PixelFormats.Pbgra32%2A>.</xref:System.Windows.Media.PixelFormats.Pbgra32%2A> </xref:System.Windows.Media.PixelFormats.Bgr32%2A> Questi formati sono supportati in modo nativo e non richiedono una conversione di formato. Altri `pixelFormat` valori richiedono una conversione di formato per ogni aggiornamento frame, riducendo le prestazioni."
  syntax:
    content: public WriteableBitmap (int pixelWidth, int pixelHeight, double dpiX, double dpiY, System.Windows.Media.PixelFormat pixelFormat, System.Windows.Media.Imaging.BitmapPalette palette);
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "La larghezza desiderata della bitmap."
    - id: pixelHeight
      type: System.Int32
      description: "L&quot;altezza desiderata della bitmap."
    - id: dpiX
      type: System.Double
      description: "Orizzontale [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] della bitmap."
    - id: dpiY
      type: System.Double
      description: "Verticale [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] della bitmap."
    - id: pixelFormat
      type: System.Windows.Media.PixelFormat
      description: "Il <xref href=&quot;System.Windows.Media.PixelFormat&quot;> </xref> della bitmap."
    - id: palette
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "Il <xref href=&quot;System.Windows.Media.Imaging.BitmapPalette&quot;> </xref> della bitmap."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  id: AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Specifica l&quot;area della bitmap che modificato."
  remarks: "Chiamare il metodo AddDirtyRect per indicare le modifiche apportate dal codice al buffer nascosto.       Quando si chiama questo metodo più volte, le aree modificate vengono accumulate in una rappresentazione sufficiente, ma non necessariamente minima. Per motivi di efficienza, solo le aree che sono contrassegnate come dirty sono necessariamente essere copiate nel front buffer. Tuttavia, qualsiasi parte della bitmap può essere copiati in avanti, è necessario assicurarsi che il buffer nascosto sia sempre valido.       Chiamare il metodo AddDirtyRect solo tra le chiamate al <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>metodi, come descritto nel <xref:System.Windows.Media.Imaging.WriteableBitmap>commenti relativi alla classe.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  example:
  - "The following code example shows how to specify the area of the back buffer that changed by using the AddDirtyRect method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);
    parameters:
    - id: dirtyRect
      type: System.Windows.Int32Rect
      description: "Un <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> che rappresenta l&quot;area modificata. Le dimensioni sono espresse in pixel."
  overload: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La bitmap non è stata bloccata da una chiamata al <> </> *> o <> </> *> metodi."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>dirtyRect</code>non rientra nei limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  id: BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Ottiene un puntatore al buffer nascosto."
  remarks: "Il buffer contiene il contenuto della bitmap in formato di pixel richiesto dall&quot;utente.       Aggiornare il buffer nascosto solo tra le chiamate al <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>metodi.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A> Se non si esegue il flusso di lavoro di blocco/sblocco descritto nel <xref:System.Windows.Media.Imaging.WriteableBitmap>commenti relativi alla classe comportamenti imprevedibili, ad esempio di rimozione, possono verificarsi.</xref:System.Windows.Media.Imaging.WriteableBitmap>       L&quot;indirizzo del buffer nascosto non cambia.      ## Thread Safety è possibile passare il puntatore del buffer nascosto a componenti esterni e altri thread per l&quot;elaborazione, ma in caso contrario, è necessario implementare una coordinamento dei thread personalizzati. In particolare, è necessario assicurarsi che il thread dell&quot;interfaccia utente specifica aree modificate tramite la chiamata di <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>metodo e sblocchi il buffer chiamando il <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>metodo.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  syntax:
    content: public IntPtr BackBuffer { get; }
    return:
      type: System.IntPtr
      description: "Un <xref:System.IntPtr>che punta all&quot;indirizzo di base del buffer nascosto.</xref:System.IntPtr>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  id: BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Ottiene un valore che indica il numero di byte in una singola riga di dati pixel."
  syntax:
    content: public int BackBufferStride { get; }
    return:
      type: System.Int32
      description: "Numero intero che indica il numero di byte in una singola riga di dati pixel."
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  id: Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>, eseguendo copie complete dei valori dell&quot;oggetto. Durante la copia delle proprietà di dipendenza, questo metodo copia delle associazioni dati e dei riferimenti di risorsa (), ma non possono risolvere non le animazioni né i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> era di proprietà<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.Animation.ByteAnimationUsingKeyFrames&quot;> </xref> oggetto, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, data binding e le animazioni non vengono copiate, ma i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  id: Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Si riserva il buffer nascosto per gli aggiornamenti."
  remarks: "Il metodo Lock incrementa il conteggio dei blocchi. Quando un <xref:System.Windows.Media.Imaging.WriteableBitmap>è bloccato, il sistema di rendering non invia gli aggiornamenti fino al <xref:System.Windows.Media.Imaging.WriteableBitmap>viene sbloccato completamente dalle chiamate al <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>metodo.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap>       È possibile utilizzare il metodo Lock per supportare le implementazioni a thread multipli. In questi scenari, il thread dell&quot;interfaccia utente blocca la bitmap ed espone il buffer nascosto agli altri thread. Quando il thread di lavoro ha completato un frame, il thread UI aggiunge rettangoli modificati e sblocca il buffer.       Il thread dell&quot;interfaccia utente può bloccare quando il thread di rendering acquisisce un blocco per il buffer nascosto per copiarne il front buffer. Se la latenza di tale blocco è troppo lunga, utilizzare il <xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>metodo per un breve periodo di tempo di attesa e sbloccare il thread dell&quot;interfaccia utente per eseguire altre attività quando il buffer è bloccato.</xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>"
  example:
  - "The following code example shows how to reserve the back buffer by using the Lock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Lock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  id: TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Tenta di bloccare la bitmap, attendere che non è più rispetto al periodo di tempo specificato."
  remarks: "Quando viene acquisito un blocco, il comportamento del metodo TryLock è lo stesso come il <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>metodo.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  syntax:
    content: public bool TryLock (System.Windows.Duration timeout);
    parameters:
    - id: timeout
      type: System.Windows.Duration
      description: "Oggetto <xref href=&quot;System.Windows.Duration&quot;> </xref> che rappresenta il periodo di tempo di attesa. Il valore 0 viene restituito immediatamente. Il valore <xref:System.Windows.Duration.Forever*>in modo indefinito.</xref:System.Windows.Duration.Forever*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è stato acquisito il blocco; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è impostato su <xref:System.Windows.Duration.Automatic*>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  id: Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Rilascia il buffer per renderlo disponibile per la visualizzazione."
  remarks: "Il metodo Unlock decrementa il conteggio dei blocchi. Quando il conteggio dei blocchi raggiunge 0, viene richiesto un passaggio di rendering, se il <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>metodo è stato chiamato.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  example:
  - "The following code example shows how to release the back buffer by using the Unlock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Unlock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La bitmap non è stata bloccata da una chiamata al <> </> *> o <> </> *> metodi."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Aggiorna i pixel nell&quot;area specificata della bitmap."
  remarks: "Il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>e <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>Overload vengono preferiti all&quot;utilizzo di questo metodo.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > In attendibilità parziale, utilizzare il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>rapporto di overload.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  example:
  - "The following code example shows how to update a pixel in the back buffer by using the WritePixels method.  \n  \n [!code-cs[WriteableBitmap2#3](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#3)]"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array pixels, int stride, int offset);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "Il rettangolo del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> da aggiornare."
    - id: pixels
      type: System.Array
      description: "Matrice di pixel utilizzata per aggiornare la bitmap."
    - id: stride
      type: System.Int32
      description: "Lo stride dell&quot;area di aggiornamento in `pixels`."
    - id: offset
      type: System.Int32
      description: "Offset buffer di input."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o più delle seguenti condizioni sono true.       <code>sourceRect</code>non rientra nei limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>stride</code> &lt; 1       <code>offset</code> &lt; 0"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pixels</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pixels</code>con una classificazione diversa da 1 o 2, o la sua lunghezza è minore o uguale a 0."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Aggiorna i pixel nell&quot;area specificata della bitmap."
  remarks: "Il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>e <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>Overload vengono preferiti all&quot;utilizzo di questo metodo.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > In attendibilità parziale, utilizzare il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>rapporto di overload.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "Il rettangolo del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> da aggiornare."
    - id: buffer
      type: System.IntPtr
      description: "Buffer di input utilizzato per aggiornare la mappa di bit."
    - id: bufferSize
      type: System.Int32
      description: "Le dimensioni del buffer di input."
    - id: stride
      type: System.Int32
      description: "Lo stride dell&quot;area di aggiornamento in `buffer`."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o più delle seguenti condizioni sono true.       <code>sourceRect</code>non rientra nei limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>bufferSize</code> &lt; 1       <code>stride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Aggiorna i pixel nell&quot;area specificata della bitmap."
  remarks: "Chiamare il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>per aggiornare il <xref:System.Windows.Media.Imaging.WriteableBitmap>automaticamente con il contenuto di `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A> Chiamare questo metodo è equivalente all&quot;opzione di <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>flusso di lavoro descritto nel <xref:System.Windows.Media.Imaging.WriteableBitmap>commenti relativi alla classe.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > Utilizzare questo overload in attendibilità parziale."
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array sourceBuffer, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "Il rettangolo in `sourceBuffer` da copiare."
    - id: sourceBuffer
      type: System.Array
      description: "Buffer di input utilizzato per aggiornare la mappa di bit."
    - id: sourceBufferStride
      type: System.Int32
      description: "Lo stride del buffer di input, in byte."
    - id: destinationX
      type: System.Int32
      description: "La destinazione coordinata x del pixel più a sinistra nel buffer nascosto."
    - id: destinationY
      type: System.Int32
      description: "La destinazione coordinata y del pixel superiore nel buffer nascosto."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o più delle seguenti condizioni sono true.       <code>sourceRect</code>non rientra nei limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>destinationX</code>o <code> destinationY </code> è esterno ai limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceBuffer</code>con una classificazione diversa da 1 o 2, o la sua lunghezza è minore o uguale a 0."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "Aggiorna i pixel nell&quot;area specificata della bitmap."
  remarks: "Chiamare il metodo WritePixels per aggiornare il <xref:System.Windows.Media.Imaging.WriteableBitmap>automaticamente con il contenuto di `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> Chiamare questo metodo è equivalente all&quot;opzione di <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>e <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>flusso di lavoro descritto nel <xref:System.Windows.Media.Imaging.WriteableBitmap>commenti relativi alla classe.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > In attendibilità parziale, utilizzare il <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>rapporto di overload.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr sourceBuffer, int sourceBufferSize, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "Il rettangolo in `sourceBuffer` da copiare."
    - id: sourceBuffer
      type: System.IntPtr
      description: "Buffer di input utilizzato per aggiornare la mappa di bit."
    - id: sourceBufferSize
      type: System.Int32
      description: "Le dimensioni del buffer di input."
    - id: sourceBufferStride
      type: System.Int32
      description: "Lo stride del buffer di input, in byte."
    - id: destinationX
      type: System.Int32
      description: "La destinazione coordinata x del pixel più a sinistra nel buffer nascosto."
    - id: destinationY
      type: System.Int32
      description: "La destinazione coordinata y del pixel superiore nel buffer nascosto."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o più delle seguenti condizioni sono true.       <code>sourceRect</code>non rientra nei limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>destinationX</code>o <code> destinationY </code> è esterno ai limiti del <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>.       <code>sourceBufferSize</code> &lt; 1       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: System.Windows.Media.Imaging.BitmapSource
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.PixelFormat
  parent: System.Windows.Media
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Windows.Media.PixelFormat
- uid: System.Windows.Media.Imaging.BitmapPalette
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapPalette
  nameWithType: BitmapPalette
  fullName: System.Windows.Media.Imaging.BitmapPalette
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
- uid: System.Windows.Media.Imaging.WriteableBitmap
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect
  nameWithType: WriteableBitmap.AddDirtyRect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone
  nameWithType: WriteableBitmap.Clone
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore
  nameWithType: WriteableBitmap.CloneCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue
  nameWithType: WriteableBitmap.CloneCurrentValue
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: WriteableBitmap.CloneCurrentValueCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore
  nameWithType: WriteableBitmap.CreateInstanceCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore
  nameWithType: WriteableBitmap.FreezeCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: WriteableBitmap.GetAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock
  nameWithType: WriteableBitmap.Lock
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock
  nameWithType: WriteableBitmap.TryLock
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock
  nameWithType: WriteableBitmap.Unlock
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels
  nameWithType: WriteableBitmap.WritePixels
