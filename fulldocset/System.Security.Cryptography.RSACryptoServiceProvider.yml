### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  id: RSACryptoServiceProvider
  children:
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  - System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
  type: Class
  summary: "Esegue la crittografia asimmetrica e la decrittografia tramite l&quot;implementazione del <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo fornito dal provider del servizio di crittografia (CSP). Questa classe non pu√≤ essere ereditata."
  remarks: "This is the default implementation of <xref:System.Security.Cryptography.RSA>.  \n  \n The RSACryptoServiceProvider supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the RSACryptoServiceProvider instance. Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n## Interoperation with the Microsoft Cryptographic API (CAPI)  \n Unlike the RSA implementation in unmanaged CAPI, the RSACryptoServiceProvider class reverses the order of an encrypted array of bytes after encryption and before decryption.  By default, data encrypted by the RSACryptoServiceProvider class cannot be decrypted by the CAPI `CryptDecrypt` function and data encrypted by the CAPI `CryptEncrypt` method cannot be decrypted by the RSACryptoServiceProvider class.  \n  \n If you do not compensate for the reverse ordering when interoperating between APIs, the RSACryptoServiceProvider class throws a <xref:System.Security.Cryptography.CryptographicException>.  \n  \n To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.  You can easily reverse the order of a managed byte array by calling the <xref:System.Array.Reverse%2A?displayProperty=fullName> method."
  example:
  - "The following code example uses the RSACryptoServiceProvider class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/t-system.security.crypto_34_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/t-system.security.crypto_34_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_1.vb)]  \n  \n The following code example exports the key information created using the RSACryptoServiceProvider into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/t-system.security.crypto_34_2.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/t-system.security.crypto_34_2.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> classe utilizzando la chiave predefinita."
  remarks: "Se non viene trovata alcuna chiave predefinita, viene creata una nuova chiave.       Questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.</xref:System.Security.Cryptography.KeyNumber>  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell&quot;API di crittografia Microsoft (CAPI)."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/m-system.security.crypto_117_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/m-system.security.crypto_117_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/m-system.security.crypto_117_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP)."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> classe con la dimensione della chiave specificata."
  remarks: "Se non viene trovata alcuna chiave predefinita, viene creata una nuova chiave.       Questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.</xref:System.Security.Cryptography.KeyNumber>  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell&quot;API di crittografia Microsoft (CAPI)."
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cs[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/csharp/m-system.security.crypto_54_1.cs)]\n [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/cpp/m-system.security.crypto_54_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_54_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "Le dimensioni della chiave da utilizzare in bit."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP)."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> classe con i parametri specificati."
  remarks: "Questo costruttore crea o riutilizza un contenitore di chiavi specificato utilizzando il <xref:System.Security.Cryptography.CspParameters>campo il `parameters` parametro.</xref:System.Security.Cryptography.CspParameters>       Per impostazione predefinita, questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.</xref:System.Security.Cryptography.KeyNumber>  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell&quot;API di crittografia Microsoft (CAPI).       √à possibile creare un <xref:System.Security.Cryptography.KeyNumber>adatto per l&quot;autenticazione messaggi (con firma digitale) o file impostando coppia di chiavi di <xref:System.Security.Cryptography.CspParameters.KeyNumber>campo il `parameters` parametro per il <xref:System.Security.Cryptography.KeyNumber>valore.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Questo tipo di chiave corrisponde alla `AT_SIGNATURE` valore utilizzato in CAPI.       Se si crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider>dell&quot;oggetto con il <xref:System.Security.Cryptography.KeyNumber>valore specificato e quindi creare un altro <xref:System.Security.Cryptography.RSACryptoServiceProvider>dell&quot;oggetto con il <xref:System.Security.Cryptography.KeyNumber>√® specificato un valore, entrambe le chiavi verranno inserite in un singolo contenitore, se due oggetti specificano lo stesso nome di contenitore di chiavi.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Per creare una chiave che √® compatibile con firma nome sicuro mediante il <xref:System.Security.Cryptography.RSACryptoServiceProvider>(classe), √® necessario creare un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/cpp/c05514b0-515d-4fa6-b581-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/visualbasic/c05514b0-515d-4fa6-b581-_1.vb)]\n [!code-cs[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/csharp/c05514b0-515d-4fa6-b581-_1.cs)]"
  syntax:
    content: public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "I parametri da passare al provider del servizio di crittografia (CSP)."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider CSP."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> classe con i parametri e la dimensione della chiave specificata."
  remarks: "Questo costruttore crea o riutilizza un contenitore di chiavi specificato utilizzando il <xref:System.Security.Cryptography.CspParameters>campo il `parameters` parametro.</xref:System.Security.Cryptography.CspParameters>       Per impostazione predefinita, questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.</xref:System.Security.Cryptography.KeyNumber>  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell&quot;API di crittografia Microsoft (CAPI).       √à possibile creare un <xref:System.Security.Cryptography.KeyNumber>adatto per l&quot;autenticazione messaggi (con firma digitale) o file impostando coppia di chiavi di <xref:System.Security.Cryptography.CspParameters.KeyNumber>campo il `parameters` parametro per il <xref:System.Security.Cryptography.KeyNumber>valore.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Questo tipo di chiave corrisponde alla `AT_SIGNATURE` valore utilizzato in CAPI.       Se si crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider>dell&quot;oggetto con il <xref:System.Security.Cryptography.KeyNumber>valore specificato e quindi creare un altro <xref:System.Security.Cryptography.RSACryptoServiceProvider>dell&quot;oggetto con il <xref:System.Security.Cryptography.KeyNumber>√® specificato un valore, entrambe le chiavi verranno inserite in un singolo contenitore, se due oggetti specificano lo stesso nome di contenitore di chiavi.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Per creare una chiave che √® compatibile con firma nome sicuro mediante il <xref:System.Security.Cryptography.RSACryptoServiceProvider>(classe), √® necessario creare un <xref:System.Security.Cryptography.KeyNumber>coppia di chiavi.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/cpp/d6fb023a-3018-4e24-9035-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/csharp/d6fb023a-3018-4e24-9035-_1.cs)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/visualbasic/d6fb023a-3018-4e24-9035-_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "Le dimensioni della chiave da utilizzare in bit."
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "I parametri da passare al provider del servizio di crittografia (CSP)."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider CSP.       - oppure - non √® possibile creare la chiave."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene un <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> oggetto che descrive informazioni aggiuntive su una coppia di chiavi crittografiche."
  remarks: "Utilizzare la propriet√† CspKeyContainerInfo per recuperare informazioni aggiuntive su una coppia di chiavi crittografiche.  L&quot;oggetto restituito <xref:System.Security.Cryptography.CspKeyContainerInfo>descrive se la chiave √® esportabile e specifica il nome di contenitore di chiavi, informazioni sul provider e altre informazioni.</xref:System.Security.Cryptography.CspKeyContainerInfo>       Nei casi in cui viene generata una chiave casuale, non essere creato un contenitore di chiavi fino a quando non si chiama un metodo che utilizza la chiave.  Alcune propriet√† del <xref:System.Security.Cryptography.CspKeyContainerInfo>oggetto restituito dal <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>propriet√† generer√† un <xref:System.Security.Cryptography.CryptographicException>Se non √® stato creato un contenitore di chiavi.</xref:System.Security.Cryptography.CryptographicException> </xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.CspKeyContainerInfo>  Per assicurarsi che sia stato creato un contenitore di chiavi, chiamare un metodo, ad esempio <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>e cos√¨ via, prima di chiamare il <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>propriet√†.</xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Security.Cryptography.CspKeyContainerInfo> property.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_35_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_35_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_35_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> oggetto che descrive informazioni aggiuntive su una coppia di chiavi crittografiche."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  id: Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Decrittografa i dati con il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo."
  remarks: "Utilizzare <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>per crittografare i dati per la decrittografia con questo metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example encrypts and decrypts data.  \n  \n This example uses the <xref:System.Text.ASCIIEncoding> class; however, the <xref:System.Text.UnicodeEncoding> class may be preferable in large data operations. The encrypted value can be saved as an `nvarchar` data type in Microsoft SQL Server 2005.  \n  \n [!code-cs[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/csharp/8cfd6fd2-9442-4043-ad36-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/cpp/8cfd6fd2-9442-4043-ad36-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/visualbasic/8cfd6fd2-9442-4043-ad36-_1.vb)]"
  syntax:
    content: public byte[] Decrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "I dati da decrittografare."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire direttamente <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> decrittografia usando il riempimento OAEP (solo disponibile in un computer che esegue Microsoft Windows XP o versione successivo); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per usare il riempimento PKCS&#1; v&1;.5."
    return:
      type: System.Byte[]
      description: "Dati decrittografati, ovvero il testo normale originale prima della crittografia."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP).       - o - <code> fOAEP </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e la lunghezza del <code> rgb </code> parametro √® maggiore di <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>.</xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>       - o - <code> fOAEP </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e OAEP non √® supportato.       - oppure - la chiave non corrisponde ai dati crittografati. Tuttavia, la formulazione dell&quot;eccezione potrebbe non essere accurata. Ad esempio, potrebbe indicare `Not enough storage is available to process this command`."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Decrittografa i dati precedentemente crittografati con la <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo usando il riempimento specificato."
  remarks: '`padding`deve essere uno <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>o <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>'
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dati da decrittografare."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "La spaziatura interna."
    return:
      type: System.Byte[]
      description: "Dati decrittografati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "La modalit√† di riempimento non √® supportata."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Questo metodo non √® supportato nella versione corrente."
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "I dati da decrittografare."
    return:
      type: System.Byte[]
      description: "Dati decrittografati, ovvero il testo normale originale prima della crittografia."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo non √® supportato nella versione corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crittografa i dati con il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo."
  remarks: "La tabella seguente descrive il riempimento supportato da diverse versioni di Microsoft Windows e la lunghezza massima di `rgb` consentito da diverse combinazioni di sistemi operativi e spaziatura interna.      | Spaziatura interna | Sistema operativo supportato | Lunghezza massima del parametro rgb |   |-------------|--------------------------------|-------------------------------------|   | Il riempimento OAEP (PKCS #1 v2) | Windows XP o versione successiva. | Dimensione del modulo -2-2 * hLen, dove hLen √® la dimensione dell&quot;hash. |   | Crittografia diretta (PKCS #1 v 1.5) | Microsoft Windows 2000 o versioni successive con il pacchetto di crittografia elevata. | Dimensioni del modulo - 11. (11 byte √® il valore minimo possibile di spaziatura interna). |   | Indirizzare il riempimento OAEP e di crittografia non supportato | Microsoft Windows 98, Windows Millennium Edition o Windows 2000 o versioni successive, senza il pacchetto di crittografia elevata. | La dimensione massima consentita per una chiave simmetrica. |       Utilizzare <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>per decrittografare i risultati di questo metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>"
  example:
  - "The following code example initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object to the value of a public key (sent by another party), generates a session key using the <xref:System.Security.Cryptography.RijndaelManaged> algorithm, and then encrypts the session key using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/csharp/6b432226-1f8c-408d-a101-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/cpp/6b432226-1f8c-408d-a101-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/visualbasic/6b432226-1f8c-408d-a101-_1.vb)]"
  syntax:
    content: public byte[] Encrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "I dati da crittografare."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire direttamente <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> crittografia usando il riempimento OAEP (solo disponibile in un computer che eseguono Windows XP o versione successivo); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per usare il riempimento PKCS&#1; v&1;.5."
    return:
      type: System.Byte[]
      description: "I dati crittografati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP).       La lunghezza di - oppure - il <code> rgb </code> parametro √® maggiore la lunghezza massima consentita.       - o - <code> fOAEP </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e il riempimento OAEP non √® supportato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crittografa i dati con il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo usando il riempimento specificato."
  remarks: '`padding`deve essere uno <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>o <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>'
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dati da crittografare."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "La spaziatura interna."
    return:
      type: System.Byte[]
      description: "I dati crittografati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "La modalit√† di riempimento non √® supportata."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Questo metodo non √® supportato nella versione corrente."
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "I dati da crittografare."
    return:
      type: System.Byte[]
      description: "I dati crittografati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo non √® supportato nella versione corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Esporta un blob che contiene le informazioni sulla chiave associate a un <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> oggetto."
  remarks: "Il metodo ExportCspBlob restituisce un blob che contiene informazioni sulla chiave che √® compatibile con l&quot;API di crittografia Microsoft (CAPI)."
  syntax:
    content: public byte[] ExportCspBlob (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere la chiave privata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Byte[]
      description: "Matrice di byte contenente le informazioni sulla chiave associate a un <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Esportazioni di <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/f018c1e5-b1fd-413d-8285-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/f018c1e5-b1fd-413d-8285-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/f018c1e5-b1fd-413d-8285-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i parametri privati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "I parametri per <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile esportare la chiave."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Da aggiungere."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Da aggiungere."
    return:
      type: System.Byte[]
      description: "Da aggiungere."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Da aggiungere."
    - id: offset
      type: System.Int32
      description: "Da aggiungere."
    - id: count
      type: System.Int32
      description: "Da aggiungere."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Da aggiungere."
    return:
      type: System.Byte[]
      description: "Da aggiungere."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importa un blob che rappresenta le informazioni chiave RSA."
  remarks: "Il metodo ImportCspBlob Inizializza i dati della chiave di un <xref:System.Security.Cryptography.RSACryptoServiceProvider>utilizzando un blob che √® compatibile con l&quot;API di crittografia Microsoft (CAPI).</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  syntax:
    content: public void ImportCspBlob (byte[] keyBlob);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "Matrice di byte che rappresenta un blob di chiavi RSA."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importa l&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example imports key information created from an <xref:System.Security.Cryptography.RSAParameters> object into an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/cpp/c5e7ebba-6f05-4c89-be06-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/csharp/c5e7ebba-6f05-4c89-be06-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/visualbasic/c5e7ebba-6f05-4c89-be06-_1.vb)]"
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "I parametri per <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP).       - o - <code> parameters </code> parametro mancano dei campi."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene il nome dell&quot;algoritmo di scambio delle chiavi disponibile con questa implementazione di <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Questa propriet√† indica il nome dell&quot;algoritmo, non √® di tipo. Ad esempio, RSA-PKCS1-KeyEx √® un nome di algoritmo di scambio di chiave."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;algoritmo di scambio delle chiavi, se presente. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene le dimensioni della chiave corrente."
  remarks: "The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance. Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class does not allow you to change key sizes using the KeySize property.  Any value written to this property will fail to update the property without error.  To change the key size, use one of the constructor overloads."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "Le dimensioni della chiave in bit."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  id: PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta un valore che indica se la chiave deve essere mantenuta nel provider del servizio di crittografia (CSP)."
  remarks: "Utilizzare questa propriet√† per mantenere una chiave in un contenitore di chiavi.       La propriet√† PersistKeyInCsp viene impostata automaticamente su `true` quando si specifica un nome di contenitore di chiavi nel <xref:System.Security.Cryptography.CspParameters.KeyContainerName>campo di un <xref:System.Security.Cryptography.CspParameters>dell&quot;oggetto e viene utilizzato per inizializzare un <xref:System.Security.Cryptography.RSACryptoServiceProvider>oggetto chiamando uno dei costruttori con un `parameters` parametro.</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspParameters.KeyContainerName>       La propriet√† PersistKeyInCsp non ha effetto se la <xref:System.Security.Cryptography.RSACryptoServiceProvider>oggetto viene creato con un `null` nome di contenitore di chiavi.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and persists the key to a key container.  \n  \n [!code-cs[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/csharp/p-system.security.crypto_52_1.cs)]\n [!code-vb[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_52_1.vb)]\n [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/cpp/p-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public bool PersistKeyInCsp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la chiave deve essere mantenuta nel provider CSP; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  id: PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> oggetto contiene solo una chiave pubblica."
  remarks: "La <xref:System.Security.Cryptography.RSACryptoServiceProvider>classe pu√≤ essere inizializzata con una chiave pubblica sola o con entrambi una public e private key.</xref:System.Security.Cryptography.RSACryptoServiceProvider>  Utilizzare la propriet√† PublicOnly per determinare se l&quot;istanza corrente contiene solo una chiave pubblica o una chiave pubblica e privata."
  syntax:
    content: public bool PublicOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> oggetto contiene solo una chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene il nome dell&quot;algoritmo di firma disponibile con questa implementazione di <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Questa propriet√† viene utilizzata nelle classi di firma digitale XML per indicare l&quot;URI dell&quot;algoritmo. In questa implementazione, questa propriet√† restituisce sempre http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;algoritmo di firma."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  id: SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola il valore hash della matrice di byte specificata usando l&quot;algoritmo hash specificato e firma il valore hash risultante."
  remarks: "Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       Il `halg` parametro pu√≤ accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/cpp/ad78ce39-1ac6-4acb-8c2f-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/csharp/ad78ce39-1ac6-4acb-8c2f-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/visualbasic/ad78ce39-1ac6-4acb-8c2f-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "I dati di input per il quale calcolare il valore hash."
    - id: halg
      type: System.Object
      description: "L&quot;algoritmo hash da usare per creare il valore hash."
    return:
      type: System.Byte[]
      description: "Il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> firma per i dati specificati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> halg </code> parametro non √® un tipo valido."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  id: SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola il valore hash del flusso di input specificato usando l&quot;algoritmo hash specificato e firma il valore hash risultante."
  remarks: "Il `halg` parametro pu√≤ accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cs[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/csharp/35bfe7e1-edb8-40ab-9df0-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/cpp/35bfe7e1-edb8-40ab-9df0-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/visualbasic/35bfe7e1-edb8-40ab-9df0-_1.vb)]"
  syntax:
    content: public byte[] SignData (System.IO.Stream inputStream, object halg);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "I dati di input per il quale calcolare il valore hash."
    - id: halg
      type: System.Object
      description: "L&quot;algoritmo hash da usare per creare il valore hash."
    return:
      type: System.Byte[]
      description: "Il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> firma per i dati specificati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> halg </code> parametro non √® un tipo valido."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola il valore hash di un subset della matrice di byte specificata usando l&quot;algoritmo hash specificato e firma il valore hash risultante."
  remarks: "Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       Il `halg` parametro pu√≤ accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String> Il valore di stringa pu√≤ essere uno dei seguenti:-un nome di oggetto (OID) identificatore nome dell&quot;algoritmo hash da usare, registrato nel file di configurazione di crittografia o una nella tabella Crypto API OID.      -Il valore OID. L&quot;OID deve essere riconosciuto dall&quot;API di crittografia.       Ad esempio, √® possibile utilizzare SignData (nuovo byte [5], &quot;1.3.14.3.2.26&quot;) o SignData (nuovo byte [5], &quot;sha1&quot;) o SignData (nuovo byte [5], &quot;SHA1&quot;)."
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/cpp/7bb71f9b-03f8-4e5b-ab7e-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/csharp/7bb71f9b-03f8-4e5b-ab7e-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/visualbasic/7bb71f9b-03f8-4e5b-ab7e-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, int offset, int count, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "I dati di input per il quale calcolare il valore hash."
    - id: offset
      type: System.Int32
      description: "Offset nella matrice da cui iniziare a utilizzare i dati."
    - id: count
      type: System.Int32
      description: "Il numero di byte nella matrice da utilizzare come dati."
    - id: halg
      type: System.Object
      description: "L&quot;algoritmo hash da usare per creare il valore hash."
    return:
      type: System.Byte[]
      description: "Il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> firma per i dati specificati."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> halg </code> parametro non √® un tipo valido."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  id: SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola la firma per il valore hash specificato crittografandola con la chiave privata."
  remarks: "Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>       Gli algoritmi hash validi sono <xref:System.Security.Cryptography.SHA1>e <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> L&quot;identificatore dell&quot;algoritmo pu√≤ essere derivato dal nome hash usando il <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metodo.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/cpp/f4f73450-8212-4a5d-b1df-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/csharp/f4f73450-8212-4a5d-b1df-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/visualbasic/f4f73450-8212-4a5d-b1df-_1.vb)]"
  syntax:
    content: public byte[] SignHash (byte[] rgbHash, string str);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Il valore hash dei dati da firmare."
    - id: str
      type: System.String
      description: "L&quot;identificatore algoritmo hash (OID) usato per creare il valore hash dei dati."
    return:
      type: System.Byte[]
      description: "Il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> firma per il valore hash specificato."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP).       oppure √® presente alcuna chiave privata."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola la firma per il valore hash specificato crittografandola con la chiave privata usando il riempimento specificato."
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Il valore hash dei dati da firmare."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Il nome dell&quot;algoritmo hash utilizzato per creare il valore hash dei dati."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "La spaziatura interna."
    return:
      type: System.Byte[]
      description: "Il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> firma per il valore hash specificato."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>√® <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>non √® uguale a &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  id: UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta un valore che indica se la chiave deve essere mantenuta nell&quot;archivio delle chiavi del computer anzich√© l&quot;archivio dei profili utente."
  remarks: "Impostando questa propriet√† su `true` equivale a passare il <xref:System.Security.Cryptography.CspProviderFlags>flag su un <xref:System.Security.Cryptography.CspParameters>oggetto.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspProviderFlags> La propriet√† UseMachineKeyStore si applica a tutto il codice nel dominio applicazione corrente, mentre l&quot; <xref:System.Security.Cryptography.CspParameters>oggetto si applica solo alle classi che fa riferimento in modo esplicito.</xref:System.Security.Cryptography.CspParameters> Queste impostazioni sono utili quando la rappresentazione o eseguito con un account con cui il profilo utente non √® caricato. L&quot;impostazione di UseMachineKeyStore influisce del solo se percorso di archivio chiavi <xref:System.Security.Cryptography.RSACryptoServiceProvider>viene inizializzato senza parametri.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and sets the static UseMachineKeyStore property to use the machine key store instead of the user profile key store.  \n  \n [!code-cs[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/csharp/p-system.security.crypto_91_1.cs)]\n [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/cpp/p-system.security.crypto_91_1.cpp)]\n [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/visualbasic/p-system.security.crypto_91_1.vb)]"
  syntax:
    content: public static bool UseMachineKeyStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la chiave deve essere mantenuta nell&quot;archivio chiavi del computer; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  id: VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Verifica che una firma digitale sia valida determinando l&quot;hash del valore nella firma tramite la chiave pubblica fornita e confrontandola con il valore hash dei dati forniti."
  remarks: "Questo metodo verifica la <xref:System.Security.Cryptography.RSA>firma digitale prodotto dal <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSA> La firma viene verificata ottenendo il valore hash dalla firma usando la chiave pubblica √® stato firmato con, e confrontando tale valore con il valore hash dei dati forniti.       Il `halg` parametro pu√≤ accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following example shows how to use the VerifyData method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/3df3f07d-a09f-413c-b97a-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/3df3f07d-a09f-413c-b97a-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/3df3f07d-a09f-413c-b97a-_1.vb)]"
  syntax:
    content: public bool VerifyData (byte[] buffer, object halg, byte[] signature);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "I dati che √® stati firmati."
    - id: halg
      type: System.Object
      description: "Il nome dell&quot;algoritmo hash utilizzato per creare il valore hash dei dati."
    - id: signature
      type: System.Byte[]
      description: "I dati della firma da verificare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma √® valida. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> halg </code> parametro non √® un tipo valido."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  id: VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Verifica che una firma digitale sia valida determinando l&quot;hash del valore nella firma tramite la chiave pubblica fornita e confrontandola con il valore hash fornito."
  remarks: "Questo metodo verifica la <xref:System.Security.Cryptography.RSA>firma digitale prodotto dal <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A>metodo.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSA> La firma viene verificata ottenendo il valore hash dalla firma usando la chiave pubblica √® stato firmato con, e confrontando tale valore con il valore hash dei dati forniti.       Gli algoritmi hash validi sono <xref:System.Security.Cryptography.SHA1>e <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> L&quot;identificatore dell&quot;algoritmo pu√≤ essere derivato dal nome hash usando il <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metodo.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following example shows how to use the VerifyHash method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/2148dfcd-6562-4b9d-a47c-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/2148dfcd-6562-4b9d-a47c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/2148dfcd-6562-4b9d-a47c-_1.vb)]"
  syntax:
    content: public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Il valore hash dei dati firmati."
    - id: str
      type: System.String
      description: "L&quot;identificatore algoritmo hash (OID) usato per creare il valore hash dei dati."
    - id: rgbSignature
      type: System.Byte[]
      description: "I dati della firma da verificare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma √® valida. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile acquisire il provider del servizio di crittografia (CSP).       - oppure - non √® possibile verificare la firma."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Verifica che una firma digitale sia valida determinando il valore hash nella firma tramite l&quot;hash dell&quot;indirizzo specificato algoritmo e spaziatura interna e confrontandolo con il valore hash fornito."
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Il valore hash dei dati firmati."
    - id: signature
      type: System.Byte[]
      description: "I dati della firma da verificare."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Il nome dell&quot;algoritmo hash utilizzato per creare il valore hash."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "La spaziatura interna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma √® valida. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>√® <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>non √® uguale a &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt
  nameWithType: RSACryptoServiceProvider.Decrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue
  nameWithType: RSACryptoServiceProvider.DecryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose
  nameWithType: RSACryptoServiceProvider.Dispose
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt
  nameWithType: RSACryptoServiceProvider.Encrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue
  nameWithType: RSACryptoServiceProvider.EncryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob
  nameWithType: RSACryptoServiceProvider.ExportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters
  nameWithType: RSACryptoServiceProvider.ExportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData
  nameWithType: RSACryptoServiceProvider.HashData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob
  nameWithType: RSACryptoServiceProvider.ImportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters
  nameWithType: RSACryptoServiceProvider.ImportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData
  nameWithType: RSACryptoServiceProvider.SignData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash
  nameWithType: RSACryptoServiceProvider.SignHash
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData
  nameWithType: RSACryptoServiceProvider.VerifyData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash
  nameWithType: RSACryptoServiceProvider.VerifyHash
