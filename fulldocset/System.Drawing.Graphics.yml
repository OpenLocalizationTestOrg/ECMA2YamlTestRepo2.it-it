### YamlMime:ManagedReference
items:
- uid: System.Drawing.Graphics
  id: Graphics
  children:
  - System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  - System.Drawing.Graphics.BeginContainer
  - System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.Clear(System.Drawing.Color)
  - System.Drawing.Graphics.Clip
  - System.Drawing.Graphics.ClipBounds
  - System.Drawing.Graphics.CompositingMode
  - System.Drawing.Graphics.CompositingQuality
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.Dispose
  - System.Drawing.Graphics.DpiX
  - System.Drawing.Graphics.DpiY
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  - System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  - System.Drawing.Graphics.Finalize
  - System.Drawing.Graphics.Flush
  - System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  - System.Drawing.Graphics.FromHdc(System.IntPtr)
  - System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  - System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.FromHwnd(System.IntPtr)
  - System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  - System.Drawing.Graphics.FromImage(System.Drawing.Image)
  - System.Drawing.Graphics.GetContextInfo
  - System.Drawing.Graphics.GetHalftonePalette
  - System.Drawing.Graphics.GetHdc
  - System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  - System.Drawing.Graphics.InterpolationMode
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  - System.Drawing.Graphics.IsClipEmpty
  - System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  - System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  - System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.IsVisibleClipEmpty
  - System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.PageScale
  - System.Drawing.Graphics.PageUnit
  - System.Drawing.Graphics.PixelOffsetMode
  - System.Drawing.Graphics.ReleaseHdc
  - System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  - System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.RenderingOrigin
  - System.Drawing.Graphics.ResetClip
  - System.Drawing.Graphics.ResetTransform
  - System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  - System.Drawing.Graphics.RotateTransform(System.Single)
  - System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.Save
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SmoothingMode
  - System.Drawing.Graphics.TextContrast
  - System.Drawing.Graphics.TextRenderingHint
  - System.Drawing.Graphics.Transform
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  - System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  - System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.VisibleClipBounds
  langs:
  - csharp
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
  type: Class
  summary: "Incapsula un [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] superficie di disegno. Questa classe non può essere ereditata."
  remarks: "La classe di grafica fornisce metodi per disegnare oggetti per il dispositivo di visualizzazione. Un grafico è associato a un contesto di dispositivo specifico.       È possibile ottenere un oggetto Graphics chiamando il <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName>su un oggetto che eredita da <xref:System.Windows.Forms.Control?displayProperty=fullName>, o mediante la gestione di un controllo <xref:System.Windows.Forms.Control.Paint?displayProperty=fullName>di eventi e l&quot;accesso alla <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A>proprietà di <xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName>classe.</xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName> </xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> </xref:System.Windows.Forms.Control.Paint?displayProperty=fullName> </xref:System.Windows.Forms.Control?displayProperty=fullName> </xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName> È anche possibile creare un oggetto Graphics da un&quot;immagine utilizzando il <xref:System.Drawing.Graphics.FromImage%2A>metodo.</xref:System.Drawing.Graphics.FromImage%2A> Per ulteriori informazioni sulla creazione di un oggetto grafico, vedere [procedura: creazione di oggetti di grafica per il disegno](~/add/includes/ajax-current-ext-md.md).       È possibile disegnare molte forme diverse e linee utilizzando un oggetto grafico. Per ulteriori informazioni su come creare linee e forme, vedere la specifica `Draw` *ElementoGrafico* metodo per la riga o una forma da disegnare. Questi metodi includono <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>, <xref:System.Drawing.Graphics.DrawClosedCurve%2A>, <xref:System.Drawing.Graphics.DrawPolygon%2A>e <xref:System.Drawing.Graphics.DrawRectangle%2A>.</xref:System.Drawing.Graphics.DrawRectangle%2A> </xref:System.Drawing.Graphics.DrawPolygon%2A> </xref:System.Drawing.Graphics.DrawClosedCurve%2A> </xref:System.Drawing.Graphics.DrawArc%2A> </xref:System.Drawing.Graphics.DrawLine%2A> Per ulteriori informazioni su come creare linee e forme, vedere [utilizzando un oggetto Pen per disegnare linee e forme](~/add/includes/ajax-current-ext-md.md) e [utilizzando un pennello per riempire forme](~/add/includes/ajax-current-ext-md.md).       È anche possibile disegnare immagini e icone utilizzando il <xref:System.Drawing.Graphics.DrawImage%2A>e <xref:System.Drawing.Graphics.DrawIcon%2A>metodi, rispettivamente.</xref:System.Drawing.Graphics.DrawIcon%2A> </xref:System.Drawing.Graphics.DrawImage%2A> Per eseguire un trasferimento a blocchi di bit di dati relativi al colore dalla schermata alla superficie di disegno dell&quot;oggetto grafico, vedere <xref:System.Drawing.Graphics.CopyFromScreen%2A>.</xref:System.Drawing.Graphics.CopyFromScreen%2A> Per ulteriori informazioni sulle modalità di disegno di immagini con un oggetto grafico, vedere [utilizzo di immagini, bitmap, icone e metafile](~/add/includes/ajax-current-ext-md.md).       Inoltre, è possibile modificare il sistema di coordinate utilizzato dall&quot;oggetto grafico. Per ulteriori informazioni sul sistema di coordinate e su come modificarlo, vedere [sistemi di Coordinate e trasformazioni](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object. The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file. The file is named SampImag.jpg and is located in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen by using a Graphics object.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/t-system.drawing.graphics_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/t-system.drawing.graphics_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/t-system.drawing.graphics_1.vb)]"
  syntax:
    content: 'public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Drawing.IDeviceContext
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  id: AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiunge un commento corrente <xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref>."
  remarks: "Questo metodo è valido solo se l&quot;oggetto <xref:System.Drawing.Graphics>è associato un <xref:System.Drawing.Imaging.Metafile>.</xref:System.Drawing.Imaging.Metafile> </xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.  \n  \n-   Creates a new metafile using the `hdc`.  \n  \n-   Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.  \n  \n-   Draws a rectangle to the metafile.  \n  \n-   Adds a comment to the metafile.  \n  \n-   Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.  \n  \n-   Disposes the metafile.  \n  \n-   Releases the temporary `hdc`.  \n  \n-   Disposes the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Creates a second metafile from the previously created file.  \n  \n-   Draws the metafile to the screen.  \n  \n-   Disposes the metafile.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/cpp/m-system.drawing.graphic_35_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/csharp/m-system.drawing.graphic_35_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.graphic_35_1.vb)]"
  syntax:
    content: public void AddMetafileComment (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matrice di byte che contiene il commento."
  overload: System.Drawing.Graphics.AddMetafileComment*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer
  id: BeginContainer
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Salva un contenitore grafico con lo stato corrente di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e apre e Usa un nuovo contenitore grafico."
  remarks: "Utilizzare questo metodo con il <xref:System.Drawing.Graphics.EndContainer%2A>metodo per creare contenitori di grafica annidati.</xref:System.Drawing.Graphics.EndContainer%2A> I contenitori di grafica mantengono lo stato di grafica, ad esempio di trasformazione, l&quot;area di visualizzazione e le proprietà di rendering.       Quando si chiama il metodo BeginContainer di un <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni di <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Il metodo BeginContainer restituisce un <xref:System.Drawing.Drawing2D.GraphicsContainer>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> Quando si passa l&quot;oggetto di identificazione per il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>allo stato si trovava al momento della chiamata al metodo BeginContainer.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       I contenitori possono essere annidati. ovvero, è possibile chiamare il metodo BeginContainer più volte prima di chiamare il <xref:System.Drawing.Graphics.EndContainer%2A>metodo.</xref:System.Drawing.Graphics.EndContainer%2A> Ogni volta che si chiama il metodo BeginContainer, viene inserito un blocco di informazioni sullo stack e viene visualizzato un <xref:System.Drawing.Drawing2D.GraphicsContainer>per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> Quando si passano uno di questi oggetti al <xref:System.Drawing.Graphics.EndContainer%2A>metodo, <xref:System.Drawing.Graphics>viene restituito lo stato è stato al momento del metodo BeginContainer chiamare restituita tale particolare <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> Il blocco di informazioni collocato nello stack da tale chiamata al metodo BeginContainer viene rimosso dallo stack e tutti i blocchi di informazioni collocati sullo stack dopo la chiamata al metodo BeginContainer inoltre vengono rimossi.       Le chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al metodo BeginContainer.</xref:System.Drawing.Graphics.Save%2A> Proprio come un <xref:System.Drawing.Graphics.EndContainer%2A>chiamata al metodo è associata a una chiamata al metodo BeginContainer un <xref:System.Drawing.Graphics.Restore%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       Quando si chiama il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>metodo o dal metodo BeginContainer) dopo la chiamata al metodo BeginContainer corrispondente vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> Analogamente, quando si chiama il <xref:System.Drawing.Graphics.Restore%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o dal metodo BeginContainer) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.Save%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       Lo stato di grafica stabilito con il metodo BeginContainer include la qualità di rendering dello stato predefinito. le modifiche di stato di qualità di rendering esistente quando viene chiamato il metodo vengono reimpostate sui valori predefiniti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/cpp/m-system.drawing.graphic_7_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/csharp/m-system.drawing.graphic_7_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.graphic_7_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> che rappresenta lo stato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al momento della chiamata al metodo."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Salva un contenitore grafico con lo stato corrente di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e apre e Usa un nuovo contenitore grafico con la trasformazione in scala specificata."
  remarks: "Utilizzare questo metodo con il <xref:System.Drawing.Graphics.EndContainer%2A>metodo per creare contenitori di grafica annidati.</xref:System.Drawing.Graphics.EndContainer%2A> I contenitori di grafica mantengono lo stato di grafica, ad esempio di trasformazione, l&quot;area di visualizzazione e le proprietà di rendering.       Quando si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo di un <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni il <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> Il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo restituisce un <xref:System.Drawing.Drawing2D.GraphicsContainer>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passa l&quot;oggetto di identificazione per il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>per stato a cui si trovava al momento del <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       I contenitori possono essere annidati. ovvero, è possibile chiamare il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo più volte prima di chiamare il <xref:System.Drawing.Graphics.EndContainer%2A>metodo.</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> Ogni volta che si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo), viene inserito un blocco di informazioni sullo stack e viene visualizzato un <xref:System.Drawing.Drawing2D.GraphicsContainer>per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passano uno di questi oggetti al <xref:System.Drawing.Graphics.EndContainer%2A>metodo, <xref:System.Drawing.Graphics>viene restituito lo stato in cui che si trovava al momento della <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata che ha restituito questo specifico <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> (metodo)</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> Il blocco di informazioni inseriti nello stack da tale <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo viene rimosso dallo stack e tutti i blocchi di informazioni collocati sullo stack dopo che <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo vengono anche rimossi.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       Le chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> Proprio come un <xref:System.Drawing.Graphics.EndContainer%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo, un <xref:System.Drawing.Graphics.Restore%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       Quando si chiama il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> Allo stesso modo, quando si chiama il <xref:System.Drawing.Graphics.Restore%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.Save%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       Questo metodo specifica una trasformazione in scala per il nuovo contenitore grafico con il `dstrect` e `srcrect` parametri. La scala è uguale alla trasformazione che, quando viene applicato a `srcrect`, comporta `dstrect`.       Lo stato di grafica definite tramite la <xref:System.Drawing.Graphics.BeginContainer%2A>metodo include la qualità di rendering dello stato predefinito; le modifiche di stato di qualità di rendering esistente quando viene chiamato il metodo vengono reimpostate sui valori predefiniti.</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/cpp/87d94b02-87d7-4889-aab2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/csharp/87d94b02-87d7-4889-aab2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/visualbasic/87d94b02-87d7-4889-aab2-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che, insieme di `srcrect` parametro, specifica una trasformazione in scala per il contenitore."
    - id: srcrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che, insieme di `dstrect` parametro, specifica una trasformazione in scala per il contenitore."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica l&quot;unità di misura per il contenitore."
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> che rappresenta lo stato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al momento della chiamata al metodo."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Salva un contenitore grafico con lo stato corrente di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e apre e Usa un nuovo contenitore grafico con la trasformazione in scala specificata."
  remarks: "Utilizzare questo metodo con il <xref:System.Drawing.Graphics.EndContainer%2A>metodo per creare contenitori di grafica annidati.</xref:System.Drawing.Graphics.EndContainer%2A> I contenitori di grafica mantengono lo stato di grafica, ad esempio di trasformazione, l&quot;area di visualizzazione e le proprietà di rendering.       Quando si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo di un <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni il <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> Il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo restituisce un <xref:System.Drawing.Drawing2D.GraphicsContainer>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passa l&quot;oggetto di identificazione per il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>per stato a cui si trovava al momento del <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       I contenitori possono essere annidati. ovvero, è possibile chiamare il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo più volte prima di chiamare il <xref:System.Drawing.Graphics.EndContainer%2A>metodo.</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> Ogni volta che si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo), viene inserito un blocco di informazioni sullo stack e viene visualizzato un <xref:System.Drawing.Drawing2D.GraphicsContainer>per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passano uno di questi oggetti al <xref:System.Drawing.Graphics.EndContainer%2A>metodo, <xref:System.Drawing.Graphics>viene restituito lo stato in cui che si trovava al momento della <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata che ha restituito questo specifico <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> (metodo)</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> Il blocco di informazioni inseriti nello stack da tale <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo viene rimosso dallo stack e tutti i blocchi di informazioni collocati sullo stack dopo che <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo vengono anche rimossi.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       Le chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> Proprio come un <xref:System.Drawing.Graphics.EndContainer%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo, un <xref:System.Drawing.Graphics.Restore%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       Quando si chiama il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal `Save` (metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> Allo stesso modo, quando si chiama il <xref:System.Drawing.Graphics.Restore%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.Save%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       Questo metodo specifica una trasformazione in scala per il nuovo contenitore grafico con il `dstrect` e `srcrect` parametri. La scala è uguale alla trasformazione che, quando viene applicato a `srcrect`, comporta `dstrect`.       Lo stato di grafica definite tramite la <xref:System.Drawing.Graphics.BeginContainer%2A>metodo include la qualità di rendering dello stato predefinito; le modifiche di stato di qualità di rendering esistente quando viene chiamato il metodo vengono reimpostate sui valori predefiniti.</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/cpp/5890f59d-213c-41f2-9949-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/csharp/5890f59d-213c-41f2-9949-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/visualbasic/5890f59d-213c-41f2-9949-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che, insieme di `srcrect` parametro, specifica una trasformazione in scala per il nuovo contenitore grafico."
    - id: srcrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che, insieme di `dstrect` parametro, specifica una trasformazione in scala per il nuovo contenitore grafico."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica l&quot;unità di misura per il contenitore."
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> che rappresenta lo stato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al momento della chiamata al metodo."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  id: Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cancella l&quot;intera superficie di disegno e riempie con il colore di sfondo specificato."
  remarks: "Il metodo Clear cancella lo stato dell&quot;oggetto grafico e non deve essere chiamato quando l&quot;oggetto grafico non può essere aggiornato. Se il metodo Clear viene chiamato su un desktop protetto in una sessione di terminal server, ad esempio un <xref:System.Runtime.InteropServices.ExternalException>può verificarsi se si lascia il <xref:System.Drawing.Graphics>oggetto in uno stato incoerente.</xref:System.Drawing.Graphics> </xref:System.Runtime.InteropServices.ExternalException>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/cpp/m-system.drawing.graphic_11_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/csharp/m-system.drawing.graphic_11_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.graphic_11_1.vb)]"
  syntax:
    content: public void Clear (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>struttura che rappresenta il colore di sfondo della superficie di disegno."
  overload: System.Drawing.Graphics.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clip
  id: Clip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta un <xref href=&quot;System.Drawing.Region&quot;> </xref> che limita l&quot;area di disegno di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Modifica il <xref:System.Drawing.Region>oggetto restituito dalla proprietà Clip non influisce sul disegno successivo con la <xref:System.Drawing.Graphics>oggetto.</xref:System.Drawing.Graphics> </xref:System.Drawing.Region> Per modificare l&quot;area di ritaglio, sostituire il valore della proprietà Clip con un nuovo <xref:System.Drawing.Region>oggetto.</xref:System.Drawing.Region> Per determinare se l&quot;area di visualizzazione è infinito, recuperare la proprietà Clip e chiamare il relativo <xref:System.Drawing.Region.IsInfinite%2A>metodo.</xref:System.Drawing.Region.IsInfinite%2A>"
  example:
  - "The following code example demonstrates the use of the Clip property. This example is designed to be used with Windows Forms. Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#4](~/add/codesnippet/cpp/p-system.drawing.graphic_6_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_6_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#4](~/add/codesnippet/csharp/p-system.drawing.graphic_6_1.cs)]"
  syntax:
    content: public System.Drawing.Region Clip { get; set; }
    return:
      type: System.Drawing.Region
      description: "Oggetto <xref href=&quot;System.Drawing.Region&quot;> </xref> che limita la parte di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> che è attualmente disponibile per il disegno."
  overload: System.Drawing.Graphics.Clip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ClipBounds
  id: ClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che delimita l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;unità del rettangolo risultante è indicata dal <xref:System.Drawing.Graphics.PageUnit%2A>proprietà.</xref:System.Drawing.Graphics.PageUnit%2A> L&quot;unità predefinita è pixel. Oggetto <xref:System.Drawing.Graphics>in genere è associato un controllo e l&quot;origine del rettangolo è relativo all&quot;area client del controllo.</xref:System.Drawing.Graphics>       Se l&quot;area di visualizzazione è infinito, la proprietà ClipBounds restituisce un rettangolo di grandi dimensioni privo di significato. Per determinare se l&quot;area di visualizzazione è infinito, recuperare il <xref:System.Drawing.Graphics.Clip%2A>proprietà e chiamare il relativo <xref:System.Drawing.Region.IsInfinite%2A>metodo.</xref:System.Drawing.Region.IsInfinite%2A> </xref:System.Drawing.Graphics.Clip%2A>"
  syntax:
    content: public System.Drawing.RectangleF ClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che rappresenta un rettangolo di delimitazione per l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.ClipBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingMode
  id: CompositingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un valore che specifica le immagini composite come vengono disegnate su questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "La modalità di composizione determina se i pixel da un&quot;immagine di origine sovrascrivere o vengono combinati con quelli dello sfondo.      > [!NOTE] > Non utilizzare un valore della proprietà CompositingMode <xref:System.Drawing.Drawing2D.CompositingMode>quando la <xref:System.Drawing.Graphics.TextRenderingHint%2A>proprietà è impostata su <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics.TextRenderingHint%2A> </xref:System.Drawing.Drawing2D.CompositingMode> Potrebbe verificarsi un&quot;eccezione o l&quot;immagine potrebbe non risultare corretto."
  syntax:
    content: public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingMode
      description: "Questa proprietà specifica un membro del <xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;> </xref> enumerazione. Il valore predefinito è <xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;> </xref>."
  overload: System.Drawing.Graphics.CompositingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingQuality
  id: CompositingQuality
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la qualità di rendering delle immagini composite disegnate su questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "La qualità di composizione determina il livello di qualità di rendering delle immagini composite."
  syntax:
    content: public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingQuality
      description: "Questa proprietà specifica un membro del <xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;> </xref> enumerazione. Il valore predefinito è <xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;> </xref>."
  overload: System.Drawing.Graphics.CompositingQuality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Esegue un trasferimento a blocchi di bit dei dati relativi al colore, corrispondente a un rettangolo di pixel, dalla schermata alla superficie di disegno del <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "I metodi CopyFromScreen sono utili per sovrapporre un&quot;immagine nella parte superiore di un altro. Per specificare come vengono combinati i colori di origine e di destinazione, utilizzare uno del <xref:System.Drawing.Graphics.CopyFromScreen%2A>metodi che accetta un <xref:System.Drawing.CopyPixelOperation>parametro.</xref:System.Drawing.CopyPixelOperation> </xref:System.Drawing.Graphics.CopyFromScreen%2A>"
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/visualbasic/f034ccae-68c0-49a1-b18f-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/csharp/f034ccae-68c0-49a1-b18f-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "Il punto nell&quot;angolo superiore sinistro del rettangolo di origine."
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "Il punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "Le dimensioni dell&quot;area da trasferire."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Operazione non riuscita."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Esegue un trasferimento a blocchi di bit dei dati relativi al colore, corrispondente a un rettangolo di pixel, dalla schermata alla superficie di disegno del <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.CopyFromScreen%2A>metodi sono utili per sovrapporre un&quot;immagine nella parte superiore di un altro.</xref:System.Drawing.Graphics.CopyFromScreen%2A> Il `copyPixelOperation` parametro consente di specificare se e come i colori di origine devono essere combinati con i colori nell&quot;area di destinazione."
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/visualbasic/4f8cba74-e878-4407-b71b-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/csharp/4f8cba74-e878-4407-b71b-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "Il punto nell&quot;angolo superiore sinistro del rettangolo di origine."
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "Il punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "Le dimensioni dell&quot;area da trasferire."
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "Uno del <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref> valori."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>non è un membro di <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Operazione non riuscita."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Esegue un trasferimento a blocchi di bit dei dati relativi al colore, corrispondente a un rettangolo di pixel, dalla schermata alla superficie di disegno del <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.CopyFromScreen%2A>metodi sono utili per sovrapporre un&quot;immagine nella parte superiore di un altro.</xref:System.Drawing.Graphics.CopyFromScreen%2A> Per specificare come vengono combinati i colori di origine e di destinazione, utilizzare uno dei metodi CopyFromScreen che accetta un <xref:System.Drawing.CopyPixelOperation>parametro.</xref:System.Drawing.CopyPixelOperation>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.  \n  \n [!code-cs[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/csharp/374af905-18c0-4d48-aa6c-_1.cs)]\n [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/visualbasic/374af905-18c0-4d48-aa6c-_1.vb)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "La coordinata x del punto nell&quot;angolo superiore sinistro del rettangolo di origine."
    - id: sourceY
      type: System.Int32
      description: "La coordinata y del punto nell&quot;angolo superiore sinistro del rettangolo di origine."
    - id: destinationX
      type: System.Int32
      description: "La coordinata x del punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: destinationY
      type: System.Int32
      description: "La coordinata y del punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "Le dimensioni dell&quot;area da trasferire."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Operazione non riuscita."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Esegue un trasferimento a blocchi di bit dei dati relativi al colore, corrispondente a un rettangolo di pixel, dalla schermata alla superficie di disegno del <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.CopyFromScreen%2A>metodi sono utili per sovrapporre un&quot;immagine nella parte superiore di un altro.</xref:System.Drawing.Graphics.CopyFromScreen%2A> Il `copyPixelOperation` parametro consente di specificare se e come i colori di origine devono essere combinati con i colori nell&quot;area di destinazione."
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/visualbasic/f1d5c2c4-f05b-4fb9-a6ef-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/csharp/f1d5c2c4-f05b-4fb9-a6ef-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "La coordinata x del punto nell&quot;angolo superiore sinistro del rettangolo di origine."
    - id: sourceY
      type: System.Int32
      description: "Coordinata y del punto nell&quot;angolo superiore sinistro del rettangolo di origine"
    - id: destinationX
      type: System.Int32
      description: "La coordinata x del punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: destinationY
      type: System.Int32
      description: "La coordinata y del punto nell&quot;angolo superiore sinistro del rettangolo di destinazione."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "Le dimensioni dell&quot;area da trasferire."
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "Uno del <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref> valori."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>non è un membro di <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Operazione non riuscita."
  platform:
  - net462
- uid: System.Drawing.Graphics.Dispose
  id: Dispose
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Rilascia tutte le risorse usate da questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "La chiamata a Dispose consente le risorse usate da questo <xref:System.Drawing.Graphics>riallocazione per altri scopi.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/cpp/m-system.drawing.graphic_23_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/csharp/m-system.drawing.graphic_23_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.graphic_23_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Graphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiX
  id: DpiX
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene la risoluzione orizzontale di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Per ulteriori informazioni sulla creazione di applicazioni ad alta risoluzione, vedere [valori DPI alti](http://go.microsoft.com/fwlink/?LinkId=159804)."
  example:
  - "The following method shows the use of the DpiX and <xref:System.Drawing.Graphics.DpiY%2A> properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_5_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_5_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public float DpiX { get; }
    return:
      type: System.Single
      description: "Il valore, in punti per pollice, della risoluzione orizzontale supportata da questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.DpiX*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiY
  id: DpiY
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene la risoluzione verticale di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Per ulteriori informazioni sulla creazione di applicazioni ad alta risoluzione, vedere [valori DPI alti](http://go.microsoft.com/fwlink/?LinkId=159804)."
  example:
  - "The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and DpiY properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_0_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_0_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public float DpiY { get; }
    return:
      type: System.Single
      description: "Il valore, in punti per pollice, della risoluzione verticale supportata da questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.DpiY*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un arco che rappresenta una parte di un&quot;ellisse specificata da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo disegna un arco che costituisce una parte del perimetro di un&quot;ellisse. I puntini di sospensione è definito dai limiti di un rettangolo. Punto finale dell&quot;arco è la parte del perimetro dell&quot;ellisse tra il `startAngle` parametro e `startAngle`  +  `sweepAngle` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/cpp/6b29678d-50bf-4f47-b318-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/csharp/6b29678d-50bf-4f47-b318-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/visualbasic/6b29678d-50bf-4f47-b318-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;arco."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che definisce i limiti dell&quot;ellisse."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al punto iniziale dell&quot;arco."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al punto finale dell&quot;arco."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un arco che rappresenta una parte di un&quot;ellisse specificata da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: "Questo metodo disegna un arco che costituisce una parte del perimetro di un&quot;ellisse. I puntini di sospensione è definito dai limiti di un rettangolo. Punto finale dell&quot;arco è la parte del perimetro dell&quot;ellisse tra il `startAngle` parametro e `startAngle`  +  `sweepAngle` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/cpp/f55c55b1-d88f-4896-ae59-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/csharp/f55c55b1-d88f-4896-ae59-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/visualbasic/f55c55b1-d88f-4896-ae59-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;arco."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che definisce i limiti dell&quot;ellisse."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al punto iniziale dell&quot;arco."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al punto finale dell&quot;arco."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>è<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un arco che rappresenta una parte di un&quot;ellisse specificata da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo disegna un arco che costituisce una parte del perimetro di un&quot;ellisse. I puntini di sospensione è definito dai limiti di un rettangolo. Punto finale dell&quot;arco è la parte del perimetro dell&quot;ellisse tra il `startAngle` parametro e `startAngle`  +  `sweepAngle` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/cpp/3589ea58-fd85-4ba4-9361-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/csharp/3589ea58-fd85-4ba4-9361-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/visualbasic/3589ea58-fd85-4ba4-9361-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;arco."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo che definisce l&quot;ellisse."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo che definisce l&quot;ellisse."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo che definisce l&quot;ellisse."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo che definisce l&quot;ellisse."
    - id: startAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al punto iniziale dell&quot;arco."
    - id: sweepAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al punto finale dell&quot;arco."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rects</code>è una matrice di lunghezza zero."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un arco che rappresenta una parte di un&quot;ellisse specificata da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo disegna un arco che costituisce una parte del perimetro di un&quot;ellisse. I puntini di sospensione è definito dai limiti di un rettangolo. Punto finale dell&quot;arco è la parte del perimetro dell&quot;ellisse tra il `startAngle` parametro e `startAngle`  +  `sweepAngle` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/cpp/066bd569-1a5d-4fa1-9898-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/csharp/066bd569-1a5d-4fa1-9898-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/visualbasic/066bd569-1a5d-4fa1-9898-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;arco."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo che definisce l&quot;ellisse."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo che definisce l&quot;ellisse."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo che definisce l&quot;ellisse."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo che definisce l&quot;ellisse."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al punto iniziale dell&quot;arco."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al punto finale dell&quot;arco."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di Bézier definita da quattro <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "La curva di Bézier viene disegnata dal primo al quarto punto. Il secondo e terzo punto è punti di controllo che determina la forma della curva."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/cpp/64d14328-9929-49d1-880b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/csharp/64d14328-9929-49d1-880b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/visualbasic/64d14328-9929-49d1-880b-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>struttura che determina il colore, larghezza e stile della curva."
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il punto iniziale della curva."
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il primo punto di controllo della curva."
    - id: pt3
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il secondo punto di controllo della curva."
    - id: pt4
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il punto finale della curva."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di Bézier definita da quattro <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Spline di Bézier viene disegnata dal primo al quarto punto. Il secondo e terzo punto è punti di controllo che determina la forma della curva."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/cpp/f50f06d6-012a-49b5-bdea-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/csharp/f50f06d6-012a-49b5-bdea-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/visualbasic/f50f06d6-012a-49b5-bdea-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il punto iniziale della curva."
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il primo punto di controllo della curva."
    - id: pt3
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il secondo punto di controllo della curva."
    - id: pt4
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il punto finale della curva."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di Bézier definita da quattro coppie ordinate di coordinate che rappresentano i punti."
  remarks: "Spline di Bézier viene disegnata dal primo al quarto punto. Il secondo e terzo punto è punti di controllo che determina la forma della curva."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/cpp/baa8b588-7355-4d59-ad6c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/csharp/baa8b588-7355-4d59-ad6c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/visualbasic/baa8b588-7355-4d59-ad6c-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: x1
      type: System.Single
      description: "La coordinata x del punto iniziale della curva."
    - id: y1
      type: System.Single
      description: "La coordinata y del punto iniziale della curva."
    - id: x2
      type: System.Single
      description: "La coordinata x del primo punto di controllo della curva."
    - id: y2
      type: System.Single
      description: "La coordinata y del primo punto di controllo della curva."
    - id: x3
      type: System.Single
      description: "La coordinata x del secondo punto di controllo della curva."
    - id: y3
      type: System.Single
      description: "La coordinata y del secondo punto di controllo della curva."
    - id: x4
      type: System.Single
      description: "La coordinata x del punto finale della curva."
    - id: y4
      type: System.Single
      description: "La coordinata y del punto finale della curva."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di spline di Bézier da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: 'Il numero di punti nella matrice deve essere un multiplo di 3 più 1, perché la prima spline richiede 4 punti e qualsiasi altra spline richiede 3 punti. Il primo spline di Bézier viene disegnata dal primo al quarto punto della matrice di punti. Il secondo e terzo punto è punti di controllo che determina la forma della curva. Ogni curva successiva richiede esattamente tre ulteriori punti: più di due punti di controllo e un punto finale. Il punto finale della curva precedente viene utilizzato come punto di partenza per ogni ulteriore curva.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/cpp/m-system.drawing.graphic_46_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/csharp/m-system.drawing.graphic_46_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/visualbasic/m-system.drawing.graphic_46_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i punti che definiscono la curva. Il numero di punti nella matrice deve essere un multiplo di 3 più 1, ad esempio 4, 7 o 10."
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di spline di Bézier da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: 'Il numero di punti nella matrice deve essere un multiplo di 3 più 1, perché la prima spline richiede 4 punti e qualsiasi altra spline richiede 3 punti. La prima curva di Bézier viene disegnata dal primo al quarto punto della matrice di punti. Il secondo e terzo punto è punti di controllo che determina la forma della curva. Ogni curva successiva richiede esattamente tre ulteriori punti: più di due punti di controllo e un punto finale. Il punto finale della curva precedente viene utilizzato come punto di partenza per ogni ulteriore curva.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/cpp/6d8590a5-9b64-4d74-acab-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/csharp/6d8590a5-9b64-4d74-acab-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/visualbasic/6d8590a5-9b64-4d74-acab-_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti che definiscono la curva. Il numero di punti nella matrice deve essere un multiplo di 3 più 1, ad esempio 4, 7 o 10."
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Questo metodo disegna una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un altro segmento di curva dall&quot;ultimo punto al primo punto per chiudere la figura.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/cpp/fec8cc4c-2307-4c6d-92d0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/csharp/fec8cc4c-2307-4c6d-92d0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/visualbasic/fec8cc4c-2307-4c6d-92d0-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e altezza della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Questo metodo disegna una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.PointF>strutture.</xref:System.Drawing.PointF>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/cpp/67309f1b-9d1b-4f3b-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/csharp/67309f1b-9d1b-4f3b-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/visualbasic/67309f1b-9d1b-4f3b-a3af-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e altezza della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando una tensione specificata."
  remarks: "Questo metodo disegna una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/cpp/cc1f225a-0c69-45b9-a725-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/csharp/cc1f225a-0c69-45b9-a725-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/visualbasic/cc1f225a-0c69-45b9-a725-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e altezza della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva. Questo parametro è richiesto ma ignorato."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando una tensione specificata."
  remarks: "Questo metodo disegna una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.PointF>strutture.</xref:System.Drawing.PointF>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/cpp/0472ed0c-ecfc-4bdd-b3f2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/csharp/0472ed0c-ecfc-4bdd-b3f2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/visualbasic/0472ed0c-ecfc-4bdd-b3f2-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e altezza della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva. Questo parametro è obbligatorio ma viene ignorato."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.Point>strutture disegnare una curva.</xref:System.Drawing.Point>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/cpp/m-system.drawing.graphic_47_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/csharp/m-system.drawing.graphic_47_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/visualbasic/m-system.drawing.graphic_47_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e altezza della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.PointF>strutture disegnare una curva.</xref:System.Drawing.PointF>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/cpp/m-system.drawing.graphic_20_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/csharp/m-system.drawing.graphic_20_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/visualbasic/m-system.drawing.graphic_20_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando una tensione specificata."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.Point>strutture disegnare una curva.</xref:System.Drawing.Point>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/cpp/6180a257-cc1e-4474-b752-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/csharp/6180a257-cc1e-4474-b752-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/visualbasic/6180a257-cc1e-4474-b752-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando una tensione specificata."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.PointF>strutture disegnare una curva.</xref:System.Drawing.PointF>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/cpp/dfe0ec8e-90de-4e02-8192-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/csharp/dfe0ec8e-90de-4e02-8192-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/visualbasic/dfe0ec8e-90de-4e02-8192-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti che definiscono la curva."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture. Inizio del disegno offset dall&quot;inizio della matrice."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.PointF>strutture disegnare una curva.</xref:System.Drawing.PointF>       Il valore di `offset` parametro specifica il numero di elementi da ignorare nella matrice. Il primo elemento dopo gli elementi ignorati rappresenta il punto iniziale della curva.       Il valore di `numberOfSegments` parametro specifica il numero di segmenti, dopo il punto di partenza, da disegnare nella curva. Il valore di `numberOfSegments` parametro deve essere almeno 1. Il valore della `offset` parametro più il valore della `numberOfSegments` parametro deve essere minore del numero di elementi nella matrice del `points` parametro.       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/cpp/f4f8f79d-25e2-48b4-ba79-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/csharp/f4f8f79d-25e2-48b4-ba79-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/visualbasic/f4f8f79d-25e2-48b4-ba79-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
    - id: offset
      type: System.Int32
      description: "Offset dal primo elemento nella matrice del `points` parametro per il punto iniziale della curva."
    - id: numberOfSegments
      type: System.Int32
      description: "Numero di segmenti dopo il punto iniziale da includere nella curva."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando una tensione specificata."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.Point>strutture disegnare una curva.</xref:System.Drawing.Point>       Il valore di `offset` parametro specifica il numero di elementi da ignorare nella matrice. Il primo elemento dopo gli elementi ignorati rappresenta il punto iniziale della curva.       Il valore di `numberOfSegments` parametro specifica il numero di segmenti, dopo il punto di partenza, da disegnare nella curva. Il valore di `numberOfSegments` parametro deve essere almeno 1. Il valore della `offset` parametro più il valore della `numberOfSegments` parametro deve essere minore del numero di elementi nella matrice del `points` parametro.       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/cpp/ed232e1e-25c0-4d3a-a280-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/csharp/ed232e1e-25c0-4d3a-a280-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/visualbasic/ed232e1e-25c0-4d3a-a280-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
    - id: offset
      type: System.Int32
      description: "Offset dal primo elemento nella matrice del `points` parametro per il punto iniziale della curva."
    - id: numberOfSegments
      type: System.Int32
      description: "Numero di segmenti dopo il punto iniziale da includere nella curva."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una spline di tipo cardinal mediante una matrice specificata di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando una tensione specificata. Inizio del disegno offset dall&quot;inizio della matrice."
  remarks: "Questo metodo disegna una spline di tipo cardinal che attraversa ogni punto nella matrice.       La matrice di punti deve contenere almeno tre <xref:System.Drawing.PointF>strutture disegnare una curva.</xref:System.Drawing.PointF>       Il valore di `offset` parametro specifica il numero di elementi da ignorare nella matrice. Il primo elemento dopo gli elementi ignorati rappresenta il punto iniziale della curva.       Il valore di `numberOfSegments` parametro specifica il numero di segmenti, dopo il punto di partenza, da disegnare nella curva. Il valore di `numberOfSegments` parametro deve essere almeno 1. Il valore della `offset` parametro più il valore della `numberOfSegments` parametro deve essere minore del numero di elementi nella matrice del `points` parametro.       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/cpp/e4652aea-fc05-4bd2-9300-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/csharp/e4652aea-fc05-4bd2-9300-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/visualbasic/e4652aea-fc05-4bd2-9300-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della curva."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
    - id: offset
      type: System.Int32
      description: "Offset dal primo elemento nella matrice del `points` parametro per il punto iniziale della curva."
    - id: numberOfSegments
      type: System.Int32
      description: "Numero di segmenti dopo il punto iniziale da includere nella curva."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un&quot;ellisse specificata da un rettangolo di selezione <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo consente di disegnare un&quot;ellisse definita dal rettangolo di delimitazione specificato da di `rect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/cpp/4155a034-950c-4182-bd85-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/csharp/4155a034-950c-4182-bd85-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/visualbasic/4155a034-950c-4182-bd85-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;ellisse."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che definisce i limiti dell&quot;ellisse."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un&quot;ellisse definita da un rettangolo di selezione <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  remarks: "Questo metodo consente di disegnare un&quot;ellisse definita dal rettangolo di delimitazione specificato da di `rect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/cpp/c36ab4a5-56d0-4c3b-ab8b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/csharp/c36ab4a5-56d0-4c3b-ab8b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/visualbasic/c36ab4a5-56d0-4c3b-ab8b-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;ellisse."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che definisce i limiti dell&quot;ellisse."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un&quot;ellisse definita da un rettangolo di delimitazione specificato da coordinate per l&quot;angolo superiore sinistro del rettangolo, un&quot;altezza e larghezza."
  remarks: "Questo metodo consente di disegnare un&quot;ellisse definita dal rettangolo di delimitazione specificato da di `x`, `y`, `width`, e `height` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/cpp/72dbe1e1-2974-4511-8ef1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/csharp/72dbe1e1-2974-4511-8ef1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/visualbasic/72dbe1e1-2974-4511-8ef1-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;ellisse."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un&quot;ellisse definita da un rettangolo di delimitazione specificato da una coppia di coordinate, un&quot;altezza e larghezza."
  remarks: "Questo metodo consente di disegnare un&quot;ellisse definita dal rettangolo di delimitazione specificato da di `x`, `y`, `width`, e `height` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/cpp/b63a980e-47de-4888-8a36-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/csharp/b63a980e-47de-4888-8a36-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/visualbasic/b63a980e-47de-4888-8a36-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dell&quot;ellisse."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine rappresentata dall&quot;oggetto <xref href=&quot;System.Drawing.Icon&quot;> </xref> all&quot;interno dell&quot;area specificata da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/cpp/m-system.drawing.graphic_44_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/csharp/m-system.drawing.graphic_44_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/visualbasic/m-system.drawing.graphic_44_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>per disegnare."
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine risultante sulla superficie di visualizzazione. L&quot;immagine contenuta nel `icon` parametro viene ridimensionato in base alle dimensioni di quest&quot;area rettangolare."
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  id: DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine rappresentata dall&quot;oggetto <xref href=&quot;System.Drawing.Icon&quot;> </xref> alle coordinate specificate."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates the coordinates of the upper-left corner at which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The drawn icon is unscaled.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/cpp/eacdb009-057e-4fdc-abff-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/csharp/eacdb009-057e-4fdc-abff-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/visualbasic/eacdb009-057e-4fdc-abff-_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, int x, int y);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine rappresentata dall&quot;oggetto <xref href=&quot;System.Drawing.Icon&quot;> </xref> senza adattamento."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/cpp/3bd2037f-76e5-4588-a42d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/csharp/3bd2037f-76e5-4588-a42d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/visualbasic/3bd2037f-76e5-4588-a42d-_1.vb)]"
  syntax:
    content: public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>per disegnare."
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine risultante. L&quot;immagine non viene adattata al rettangolo, ma conserva le dimensioni originali. Se l&quot;immagine è più larga del rettangolo, viene ritagliata per inserirla al suo interno."
  overload: System.Drawing.Graphics.DrawIconUnstretched*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref>, utilizzando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Questo metodo crea un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama questo metodo per disegnare l&quot;immagine su un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/cpp/m-system.drawing.graphic_18_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/csharp/m-system.drawing.graphic_18_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/visualbasic/m-system.drawing.graphic_18_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta la posizione dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con la forma specificata e le dimensioni."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.Point>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.Point> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       L&quot;immagine rappresentata dal `image` parametro viene adattato per adattare la forma del parallelogramma specificato per il `destPoints` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/cpp/m-system.drawing.graphic_42_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/csharp/m-system.drawing.graphic_42_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/visualbasic/m-system.drawing.graphic_42_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono un parallelogramma."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref>, utilizzando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Questo metodo crea un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama questo metodo per disegnare l&quot;immagine su un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/m-system.drawing.graphic_19_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/m-system.drawing.graphic_19_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/m-system.drawing.graphic_19_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta l&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con la forma specificata e le dimensioni."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.PointF>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.PointF> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       L&quot;immagine rappresentata dal `image` oggetto viene adattato per adattare la forma del parallelogramma specificato per il `destPoints` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/cpp/d1011ba3-7a66-459f-8c2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/csharp/d1011ba3-7a66-459f-8c2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/visualbasic/d1011ba3-7a66-459f-8c2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono un parallelogramma."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "L&quot;immagine rappresentata dal `image` oggetto viene adattato alle dimensioni del `rect` rettangolo."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/cpp/b2a72c58-befd-40af-b6a8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/csharp/b2a72c58-befd-40af-b6a8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/visualbasic/b2a72c58-befd-40af-b6a8-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "L&quot;immagine rappresentata dal `image` oggetto viene adattato alle dimensioni del `rect` rettangolo."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/cpp/6f0c41d2-6855-4f5b-b775-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/csharp/6f0c41d2-6855-4f5b-b775-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/visualbasic/6f0c41d2-6855-4f5b-b775-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata, usando le dimensioni fisiche originali nella posizione specificata da una coppia di coordinate."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Il metodo DrawImage disegna un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama DrawImage per disegnare l&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/cpp/ab9189bb-a438-4f96-9c99-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/csharp/ab9189bb-a438-4f96-9c99-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/visualbasic/ab9189bb-a438-4f96-9c99-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref>, utilizzando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Questo metodo crea un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama questo metodo per disegnare l&quot;immagine su un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/cpp/84c935d5-87a0-43c2-8402-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/csharp/84c935d5-87a0-43c2-8402-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/visualbasic/84c935d5-87a0-43c2-8402-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.Point>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.Point> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       Il `srcRect` parametro specifica un&quot;area rettangolare del `image` oggetto da disegnare. Questa parte viene adattata il parallelogramma specificato da di `destPoints` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/cpp/6dd53b7b-1b38-4016-b9e0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/csharp/6dd53b7b-1b38-4016-b9e0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/visualbasic/6dd53b7b-1b38-4016-b9e0-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono un parallelogramma."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.PointF>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.PointF> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       Il `srcRect` parametro specifica un&quot;area rettangolare del `image` oggetto da disegnare. Questa parte viene adattata il parallelogramma specificato da di `destPoints` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/cpp/bc8f7cbd-f1b7-4dce-b971-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/csharp/bc8f7cbd-f1b7-4dce-b971-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/visualbasic/bc8f7cbd-f1b7-4dce-b971-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono un parallelogramma."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcRect` parametro specifica un&quot;area rettangolare del `image` oggetto da disegnare. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/cpp/c5d7b66c-1518-48ae-83a4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/csharp/c5d7b66c-1518-48ae-83a4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/visualbasic/c5d7b66c-1518-48ae-83a4-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcRect` parametro specifica un&quot;area rettangolare del `image` oggetto da disegnare. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/cpp/d16e9371-9711-4277-9719-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/csharp/d16e9371-9711-4277-9719-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/visualbasic/d16e9371-9711-4277-9719-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.Point>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.Point> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       Il `srcRect` parametro specifica un&quot;area rettangolare del`image` oggetto da disegnare. Questa parte viene adattata il parallelogramma specificato da di `destPoints` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/cpp/fd322d76-6837-44d1-9e35-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/csharp/fd322d76-6837-44d1-9e35-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/visualbasic/fd322d76-6837-44d1-9e35-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono un parallelogramma."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>che specifica le informazioni di ricolorazione e gamma per la `image` oggetto."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `destPoints` parametro specifica tre punti del parallelogramma. I tre <xref:System.Drawing.PointF>strutture rappresentano gli angoli superiore sinistro, superiore destro e inferiore sinistro del parallelogramma.</xref:System.Drawing.PointF> Il quarto punto viene estrapolato dai primi tre per formare un parallelogramma.       Il `srcRect` parametro specifica un&quot;area rettangolare del `image` oggetto da disegnare. Questa parte viene adattata il parallelogramma specificato da di `destPoints` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/cpp/6b0afdfb-af32-486b-87bf-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/csharp/6b0afdfb-af32-486b-87bf-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/visualbasic/6b0afdfb-af32-486b-87bf-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Matrice di tre <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono un parallelogramma."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>che specifica le informazioni di ricolorazione e gamma per la `image` oggetto."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una parte di un&quot;immagine in una posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con una larghezza in pixel di 360 e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 5 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Questo metodo crea una parte di un&quot;immagine utilizzando le dimensioni fisiche in modo che la parte dell&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che una parte di immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama questo metodo per disegnare una parte dell&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel della parte dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/cpp/f904b742-3271-432e-b54b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/csharp/f904b742-3271-432e-b54b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/visualbasic/f904b742-3271-432e-b54b-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la parte di `image` oggetto da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il rettangolo definito dal `x`, `y`, `width`, e `height` parametri determina la posizione e le dimensioni dell&quot;immagine disegnata."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/cpp/dc519bdd-d8f5-446f-a257-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/csharp/dc519bdd-d8f5-446f-a257-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/visualbasic/dc519bdd-d8f5-446f-a257-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: width
      type: System.Int32
      description: "Larghezza dell&quot;immagine disegnata."
    - id: height
      type: System.Int32
      description: "Altezza dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una parte di un&quot;immagine in una posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con una larghezza in pixel di 360 e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 5 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Questo metodo crea una parte di un&quot;immagine utilizzando le dimensioni fisiche in modo che la parte dell&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che una parte di immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama questo metodo per disegnare una parte dell&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel della parte dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/cpp/9a0fe4d8-ea0f-4f65-9ec1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/csharp/9a0fe4d8-ea0f-4f65-9ec1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/visualbasic/9a0fe4d8-ea0f-4f65-9ec1-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la parte di <xref href=&quot;System.Drawing.Image&quot;> </xref> da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata dal `srcRect` parametro."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;oggetto <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il rettangolo definito dal `x`, `y`, `width`, e `height` parametri determina la posizione e le dimensioni dell&quot;immagine disegnata."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/cpp/c499f938-82a0-46ba-ab2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/csharp/c499f938-82a0-46ba-ab2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/visualbasic/c499f938-82a0-46ba-ab2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: width
      type: System.Single
      description: "Larghezza dell&quot;immagine disegnata."
    - id: height
      type: System.Single
      description: "Altezza dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
    - id: callbackData
      type: System.Int32
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
    - id: callbackData
      type: System.Int32
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcX`, `srcY`, `srcWidth`, e `srcHeight` i parametri specificano una parte rettangolare del `image` oggetto da disegnare. Il rettangolo è rispetto all&quot;angolo superiore sinistro dell&quot;immagine di origine. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/cpp/223fb7be-dae4-4ad9-b0a7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/csharp/223fb7be-dae4-4ad9-b0a7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/visualbasic/223fb7be-dae4-4ad9-b0a7-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcX
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcY
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcWidth
      type: System.Int32
      description: "Larghezza della porzione dell&quot;immagine di origine da disegnare."
    - id: srcHeight
      type: System.Int32
      description: "Altezza della parte dell&quot;immagine di origine da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata per determinare il rettangolo di origine."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcX`, `srcY`, `srcWidth`, e `srcHeight` i parametri specificano una parte rettangolare del `image` oggetto da disegnare. Il rettangolo è rispetto all&quot;angolo superiore sinistro dell&quot;immagine di origine. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/cpp/6a64b030-f9b9-4136-9958-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/csharp/6a64b030-f9b9-4136-9958-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/visualbasic/6a64b030-f9b9-4136-9958-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcX
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcY
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcWidth
      type: System.Single
      description: "Larghezza della porzione dell&quot;immagine di origine da disegnare."
    - id: srcHeight
      type: System.Single
      description: "Altezza della parte dell&quot;immagine di origine da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata per determinare il rettangolo di origine."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcX`, `srcY`, `srcWidth`, e `srcHeight` i parametri specificano una parte rettangolare del `image` oggetto da disegnare. Il rettangolo è rispetto all&quot;angolo superiore sinistro dell&quot;immagine di origine. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/cpp/e2928ae3-f4ea-4e28-84d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/csharp/e2928ae3-f4ea-4e28-84d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/visualbasic/e2928ae3-f4ea-4e28-84d2-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcX
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcY
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcWidth
      type: System.Int32
      description: "Larghezza della porzione dell&quot;immagine di origine da disegnare."
    - id: srcHeight
      type: System.Int32
      description: "Altezza della parte dell&quot;immagine di origine da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata per determinare il rettangolo di origine."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>che specifica le informazioni di ricolorazione e gamma per la `image` oggetto."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la parte specificata dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref> nella posizione specificata e con le dimensioni specificate."
  remarks: "Il `srcX`, `srcY`, `srcWidth`, e `srcHeight` i parametri specificano una parte rettangolare del `image` oggetto da disegnare. Il rettangolo è rispetto all&quot;angolo superiore sinistro dell&quot;immagine di origine. Questa parte viene ridimensionata per adattarsi all&quot;interno del rettangolo specificato da di `destRect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/cpp/8cbc1478-f554-4214-b657-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/csharp/8cbc1478-f554-4214-b657-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/visualbasic/8cbc1478-f554-4214-b657-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica la posizione e le dimensioni dell&quot;immagine disegnata. L&quot;immagine viene ridimensionata e adattata al rettangolo."
    - id: srcX
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcY
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro della parte dell&quot;immagine di origine da disegnare."
    - id: srcWidth
      type: System.Single
      description: "Larghezza della porzione dell&quot;immagine di origine da disegnare."
    - id: srcHeight
      type: System.Single
      description: "Altezza della parte dell&quot;immagine di origine da disegnare."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Membro del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> enumerazione che specifica le unità di misura utilizzata per determinare il rettangolo di origine."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>che specifica le informazioni di ricolorazione e gamma per la `image` oggetto."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcX
      type: System.Int32
      description: "Da aggiungere."
    - id: srcY
      type: System.Int32
      description: "Da aggiungere."
    - id: srcWidth
      type: System.Int32
      description: "Da aggiungere."
    - id: srcHeight
      type: System.Int32
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcX
      type: System.Single
      description: "Da aggiungere."
    - id: srcY
      type: System.Single
      description: "Da aggiungere."
    - id: srcWidth
      type: System.Single
      description: "Da aggiungere."
    - id: srcHeight
      type: System.Single
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcX
      type: System.Int32
      description: "Da aggiungere."
    - id: srcY
      type: System.Int32
      description: "Da aggiungere."
    - id: srcWidth
      type: System.Int32
      description: "Da aggiungere."
    - id: srcHeight
      type: System.Int32
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcX
      type: System.Single
      description: "Da aggiungere."
    - id: srcY
      type: System.Single
      description: "Da aggiungere."
    - id: srcWidth
      type: System.Single
      description: "Da aggiungere."
    - id: srcHeight
      type: System.Single
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata usando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Il metodo DrawImageUnscaled disegna un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama DrawImageUnscaled per disegnare l&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/cpp/e51ffdca-5554-49de-bd37-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/csharp/e51ffdca-5554-49de-bd37-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/visualbasic/e51ffdca-5554-49de-bd37-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che specifica l&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata usando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Il metodo DrawImageUnscaled disegna un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama DrawImageUnscaled per disegnare l&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>che specifica l&quot;angolo superiore sinistro dell&quot;immagine disegnata. Le proprietà X e Y del rettangolo di specificano l&quot;angolo superiore sinistro. Le proprietà di larghezza e altezza vengono ignorate."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata usando le dimensioni fisiche originali nella posizione specificata da una coppia di coordinate."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Il metodo DrawImageUnscaled disegna un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama DrawImageUnscaled per disegnare l&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/cpp/979e5b64-1221-4b16-aa62-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/csharp/979e5b64-1221-4b16-aa62-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/visualbasic/979e5b64-1221-4b16-aa62-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata usando le dimensioni fisiche originali nella posizione specificata."
  remarks: "Un <xref:System.Drawing.Image>Archivia un valore per larghezza in pixel e un valore per la risoluzione orizzontale (punti per pollice).</xref:System.Drawing.Image> La larghezza fisica, misurata in pollici, di un&quot;immagine è la larghezza in pixel divisa per la risoluzione orizzontale. Ad esempio, un&quot;immagine con larghezza di 216 pixel e una risoluzione orizzontale di 72 punti per pollice ha una larghezza fisica di 3 pollici. Note simili si applicano a altezza in pixel e l&quot;altezza fisica.       Il metodo DrawImageUnscaled disegna un&quot;immagine utilizzando le dimensioni fisiche in modo che l&quot;immagine abbia le dimensioni corrette in pollici indipendentemente dalla risoluzione (punti per pollice) del dispositivo di visualizzazione. Si supponga, ad esempio, che un&quot;immagine abbia una larghezza in pixel di 216 e una risoluzione orizzontale di 72 punti per pollice. Se si chiama DrawImageUnscaled per disegnare l&quot;immagine in un dispositivo con una risoluzione di 96 punti per pollice, la larghezza in pixel dell&quot;immagine visualizzata sarà (216/72) * 96 = 288."
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>per disegnare."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro dell&quot;immagine disegnata."
    - id: width
      type: System.Int32
      description: "Non utilizzato."
    - id: height
      type: System.Int32
      description: "Non utilizzato."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna l&quot;immagine specificata senza ridimensionarla e clip, se necessario, per adattarla al rettangolo specificato."
  remarks: ''
  example:
  - "The following example demonstrates how to use the DrawImageUnscaledAndClipped method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/visualbasic/8e586d21-d392-4457-b1a8-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/csharp/8e586d21-d392-4457-b1a8-_1.cs)]"
  syntax:
    content: public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "Il <xref href=&quot;System.Drawing.Image&quot;> </xref> da disegnare."
    - id: rect
      type: System.Drawing.Rectangle
      description: "Il <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> in cui disegnare l&quot;immagine."
  overload: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  id: DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una linea che connette due <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/cpp/7a5f2393-b88a-42cd-943c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/csharp/7a5f2393-b88a-42cd-943c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/visualbasic/7a5f2393-b88a-42cd-943c-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della linea."
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il primo punto da connettere."
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura che rappresenta il secondo punto da connettere."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una linea che connette due <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Questo metodo consente di disegnare una linea che connette i due punti specificati dal `pt1` e p`2` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/cpp/eafdb748-e1a5-46b1-a524-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/csharp/eafdb748-e1a5-46b1-a524-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/visualbasic/eafdb748-e1a5-46b1-a524-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della linea."
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il primo punto da connettere."
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta il secondo punto da connettere."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una linea che connette i due punti specificati dalle coppie di coordinate."
  remarks: "Questo metodo consente di disegnare una linea che connette i due punti specificati dal `x1`, `y1`, `x2`, e `y2` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/cpp/0cb21819-9d21-4c0c-b7b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/csharp/0cb21819-9d21-4c0c-b7b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/visualbasic/0cb21819-9d21-4c0c-b7b3-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della linea."
    - id: x1
      type: System.Int32
      description: "La coordinata x del primo punto."
    - id: y1
      type: System.Int32
      description: "La coordinata y del primo punto."
    - id: x2
      type: System.Int32
      description: "La coordinata x del secondo punto."
    - id: y2
      type: System.Int32
      description: "La coordinata y del secondo punto."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una linea che connette i due punti specificati dalle coppie di coordinate."
  remarks: "Questo metodo consente di disegnare una linea che connette i due punti specificati dal `x1`, `y1`, `x2`, e `y2` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/cpp/cd23e492-13d6-4787-a27b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/csharp/cd23e492-13d6-4787-a27b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/visualbasic/cd23e492-13d6-4787-a27b-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile della linea."
    - id: x1
      type: System.Single
      description: "La coordinata x del primo punto."
    - id: y1
      type: System.Single
      description: "La coordinata y del primo punto."
    - id: x2
      type: System.Single
      description: "La coordinata x del secondo punto."
    - id: y2
      type: System.Single
      description: "La coordinata y del secondo punto."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di segmenti lineari che connettono una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Questo metodo crea una serie di linee che connettono una matrice di punti di interruzione. I primi due punti nella matrice di specificano la prima riga. Ogni punto aggiuntivo specifica la fine di un segmento di linea, il cui punto iniziale è il punto finale del segmento di linea precedente."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/cpp/m-system.drawing.graphic_5_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/csharp/m-system.drawing.graphic_5_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/visualbasic/m-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dei segmenti di linea."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i punti da connettere."
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di segmenti lineari che connettono una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Questo metodo crea una serie di linee che connettono una matrice di punti di interruzione. I primi due punti nella matrice di specificano la prima riga. Ogni punto aggiuntivo specifica la fine di un segmento di linea, il cui punto iniziale è il punto finale del segmento di linea precedente."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Code creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/cpp/m-system.drawing.graphic_27_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/csharp/m-system.drawing.graphic_27_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/visualbasic/m-system.drawing.graphic_27_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile dei segmenti di linea."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti da connettere."
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  id: DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Draws a <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>."
  remarks: "La trasformazione corrente nel contesto grafico viene applicata per il <xref:System.Drawing.Drawing2D.GraphicsPath>prima che venga disegnato.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path object and adds an ellipse to it.  \n  \n-   Creates a black pen.  \n  \n-   Draws the graphics path to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/cpp/a718a784-9a44-4465-a94a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/csharp/a718a784-9a44-4465-a94a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/visualbasic/a718a784-9a44-4465-a94a-_1.vb)]"
  syntax:
    content: public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile del percorso."
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>per disegnare."
  overload: System.Drawing.Graphics.DrawPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una forma a torta definita da un&quot;ellisse specificata da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura e due linee radiali."
  remarks: "Questo metodo crea una forma a torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione. La forma a torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/cpp/1a04a061-dceb-4fd4-b376-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/csharp/1a04a061-dceb-4fd4-b376-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/visualbasic/1a04a061-dceb-4fd4-b376-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile della forma a torta."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che rappresenta il rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della forma a torta."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della forma a torta."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una forma a torta definita da un&quot;ellisse specificata da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura e due linee radiali."
  remarks: "Questo metodo crea una forma a torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione. La forma a torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/cpp/2cc07759-8996-434e-ab19-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/csharp/2cc07759-8996-434e-ab19-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/visualbasic/2cc07759-8996-434e-ab19-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile della forma a torta."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che rappresenta il rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della forma a torta."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della forma a torta."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una forma a torta definita da un&quot;ellisse specificata da una coppia di coordinate, una larghezza, altezza e due linee radiali."
  remarks: "Questo metodo crea una forma a torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione specificato da di `x`, `y`, `width`, e `height` parametri. La forma a torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie shape to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/cpp/efda9570-fb8e-43e9-9bc9-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/csharp/efda9570-fb8e-43e9-9bc9-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/visualbasic/efda9570-fb8e-43e9-9bc9-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile della forma a torta."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: startAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della forma a torta."
    - id: sweepAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della forma a torta."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una forma a torta definita da un&quot;ellisse specificata da una coppia di coordinate, una larghezza, altezza e due linee radiali."
  remarks: "Questo metodo crea una forma a torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione specificato da di `x`, `y`, `width`, e `height` parametri. La forma a torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/cpp/91960442-0c73-4809-a8b7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/csharp/91960442-0c73-4809-a8b7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/visualbasic/91960442-0c73-4809-a8b7-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile della forma a torta."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la forma a torta."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della forma a torta."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della forma a torta."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un poligono definito da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Ogni coppia di due punti consecutivi nella matrice specifica un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo punto della matrice non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/cpp/m-system.drawing.graphic_24_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/csharp/m-system.drawing.graphic_24_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/visualbasic/m-system.drawing.graphic_24_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile del poligono."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i vertici del poligono."
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un poligono definito da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Ogni coppia di due punti consecutivi nella matrice specifica un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo della matrice non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/cpp/16b9f60c-1099-497e-96b6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/csharp/16b9f60c-1099-497e-96b6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/visualbasic/16b9f60c-1099-497e-96b6-_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile del poligono."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i vertici del poligono."
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un rettangolo specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Per informazioni su come creare un <xref:System.Drawing.RectangleF>, vedere[DrawRectangles (penna, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/cpp/7220a29d-c2cf-4eb5-a772-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/csharp/7220a29d-c2cf-4eb5-a772-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/visualbasic/7220a29d-c2cf-4eb5-a772-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "Oggetto <xref href=&quot;System.Drawing.Pen&quot;> </xref> che determina il colore, larghezza e lo stile del rettangolo."
    - id: rect
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura che rappresenta il rettangolo da disegnare."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Per informazioni su come creare un <xref:System.Drawing.RectangleF>, vedere [DrawRectangles (penna, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/cpp/7deab914-35e6-41bb-8525-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/csharp/7deab914-35e6-41bb-8525-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/visualbasic/7deab914-35e6-41bb-8525-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e lo stile del rettangolo."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo da disegnare."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo da disegnare."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo da disegnare."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo da disegnare."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna un rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Per informazioni su come creare un <xref:System.Drawing.RectangleF>, vedere [DrawRectangles (penna, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/cpp/02312e17-0d5f-4ea1-a1de-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/csharp/02312e17-0d5f-4ea1-a1de-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/visualbasic/02312e17-0d5f-4ea1-a1de-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "Oggetto <xref href=&quot;System.Drawing.Pen&quot;> </xref> che determina il colore, larghezza e lo stile del rettangolo."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo da disegnare."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo da disegnare."
    - id: width
      type: System.Single
      description: "La larghezza del rettangolo da disegnare."
    - id: height
      type: System.Single
      description: "L&quot;altezza del rettangolo da disegnare."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di rettangoli specificati da <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> strutture."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/cpp/fbc2bd3d-0796-4b81-9906-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/csharp/fbc2bd3d-0796-4b81-9906-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/visualbasic/fbc2bd3d-0796-4b81-9906-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile dei contorni dei rettangoli."
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "Matrice di <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> strutture che rappresentano i rettangoli da disegnare."
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>è una matrice di lunghezza zero."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna una serie di rettangoli specificati da <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strutture."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/cpp/6724fe05-90a2-4c2b-9273-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/csharp/6724fe05-90a2-4c2b-9273-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/visualbasic/6724fe05-90a2-4c2b-9273-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>che determina il colore, larghezza e stile dei contorni dei rettangoli."
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "Matrice di <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strutture che rappresentano i rettangoli da disegnare."
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>è una matrice di lunghezza zero."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificato nella posizione specificata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/cpp/e8b9f7ba-fcb1-40c1-b944-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/csharp/e8b9f7ba-fcb1-40c1-b944-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/visualbasic/e8b9f7ba-fcb1-40c1-b944-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che specifica l&quot;angolo superiore sinistro del testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificata nel rettangolo specificato con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti."
  remarks: "Il testo assegnato il `s` parametro viene disegnato all&quot;interno del rettangolo rappresentato dal `layoutRectangle` parametro. Se non rientra il testo all&quot;interno del rettangolo, si viene troncato in corrispondenza della parola più vicina. Per modificare ulteriormente la modalità in cui viene disegnata la stringa all&quot;interno del rettangolo utilizzare l&quot; <xref:System.Drawing.Graphics.DrawString%2A>overload che accetta un <xref:System.Drawing.StringFormat>.</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.DrawString%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/cpp/88dcbdf3-31ac-495d-b92e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/csharp/88dcbdf3-31ac-495d-b92e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/visualbasic/88dcbdf3-31ac-495d-b92e-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la posizione del testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificato nella posizione specificata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti usando gli attributi di formattazione dell&quot;oggetto specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically.  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/cpp/9695d0f1-6916-4c96-a710-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/csharp/9695d0f1-6916-4c96-a710-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/visualbasic/9695d0f1-6916-4c96-a710-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che specifica l&quot;angolo superiore sinistro del testo disegnato."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che specifica gli attributi di formattazione, ad esempio l&quot;interlinea e l&quot;allineamento, applicati al testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificata nel rettangolo specificato con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti usando gli attributi di formattazione dell&quot;oggetto specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: "Il testo assegnato il `s` parametro viene disegnato all&quot;interno del rettangolo rappresentato dal `layoutRectangle` parametro. Se non rientra il testo all&quot;interno del rettangolo, viene troncato in corrispondenza della parola più vicina, se non diversamente specificato con il `format` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Sets the format of the string to center it within the rectangle.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/cpp/711c2875-30db-41dc-b400-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/csharp/711c2875-30db-41dc-b400-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/visualbasic/711c2875-30db-41dc-b400-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica la posizione del testo disegnato."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che specifica gli attributi di formattazione, ad esempio l&quot;interlinea e l&quot;allineamento, applicati al testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificato nella posizione specificata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/cpp/770eeee0-f64d-405f-a03c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/csharp/770eeee0-f64d-405f-a03c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/visualbasic/770eeee0-f64d-405f-a03c-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del testo disegnato."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Disegna la stringa di testo specificato nella posizione specificata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref href=&quot;System.Drawing.Font&quot;> </xref> oggetti usando gli attributi di formattazione dell&quot;oggetto specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates the coordinates of a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/cpp/d180666f-5277-4a3e-9c46-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/csharp/d180666f-5277-4a3e-9c46-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/visualbasic/d180666f-5277-4a3e-9c46-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da disegnare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina il colore e la trama del testo disegnato."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del testo disegnato."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del testo disegnato."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che specifica gli attributi di formattazione, ad esempio l&quot;interlinea e l&quot;allineamento, applicati al testo disegnato."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  id: EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Chiude il contenitore grafico corrente e ripristina lo stato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> allo stato salvato da una chiamata al <xref:System.Drawing.Graphics.BeginContainer*>metodo.</xref:System.Drawing.Graphics.BeginContainer*>"
  remarks: "Utilizzare questo metodo con il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo per creare contenitori di grafica annidati.</xref:System.Drawing.Graphics.BeginContainer%2A> I contenitori di grafica mantengono lo stato di grafica, ad esempio di trasformazione, l&quot;area di visualizzazione e le proprietà di rendering.       Quando si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo di un <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni il <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> Il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo restituisce un <xref:System.Drawing.Drawing2D.GraphicsContainer>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passa l&quot;oggetto di identificazione per il metodo EndContainer, il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>per stato a cui si trovava al momento del <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics>       I contenitori possono essere annidati. ovvero, è possibile chiamare il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo più volte prima di chiamare il metodo EndContainer.</xref:System.Drawing.Graphics.BeginContainer%2A> Ogni volta che si chiama il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo), viene inserito un blocco di informazioni sullo stack e viene visualizzato un <xref:System.Drawing.Drawing2D.GraphicsContainer>per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> Quando si passano uno di questi oggetti al metodo EndContainer, <xref:System.Drawing.Graphics>viene restituito lo stato in cui che si trovava al momento della <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata che ha restituito questo specifico <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> (metodo)</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> Il blocco di informazioni inseriti nello stack da tale <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo viene rimosso dallo stack e tutti i blocchi di informazioni collocati sullo stack dopo che <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo vengono anche rimossi.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       Le chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> Proprio come un EndContainer chiamata al metodo è associata a un <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo, un <xref:System.Drawing.Graphics.Restore%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       Quando si chiama il metodo EndContainer, tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> Allo stesso modo, quando si chiama il <xref:System.Drawing.Graphics.Restore%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.Save%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/cpp/e4c99678-fc56-4e9c-af9b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/csharp/e4c99678-fc56-4e9c-af9b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/visualbasic/e4c99678-fc56-4e9c-af9b-_1.vb)]"
  syntax:
    content: public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);
    parameters:
    - id: container
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>che rappresenta il contenitore ripristinato da questo metodo."
  overload: System.Drawing.Graphics.EndContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.Point
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoint
      type: System.Drawing.PointF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "Da aggiungere."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "Da aggiungere."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "Da aggiungere."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "Da aggiungere."
    - id: callbackData
      type: System.IntPtr
      description: "Da aggiungere."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "Da aggiungere."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  id: ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiorna l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per escludere l&quot;area specificata da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo consente di escludere l&quot;area specificata dal `rect` parametro dall&quot;area di ritaglio corrente e assegna l&quot;area risultante alla <xref:System.Drawing.Graphics.Clip%2A>proprietà di questo <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Creates a region defined by the rectangle.  \n  \n-   Sets the clipping region to exclude the rectangular region.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square region toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/cpp/m-system.drawing.graphic_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/csharp/m-system.drawing.graphic_0_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/visualbasic/m-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che specifica il rettangolo da escludere dall&quot;area di ritaglio."
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  id: ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiorna l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per escludere l&quot;area specificata da un <xref href=&quot;System.Drawing.Region&quot;> </xref>."
  remarks: "Questo metodo consente di escludere l&quot;area specificata dal `region` parametro dall&quot;area di ritaglio corrente e assegna l&quot;area risultante alla <xref:System.Drawing.Graphics.Clip%2A>proprietà di questo <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Sets the clipping region to exclude the rectangle.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square area toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/cpp/m-system.drawing.graphic_3_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/csharp/m-system.drawing.graphic_3_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/visualbasic/m-system.drawing.graphic_3_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>che specifica l&quot;area da escludere dall&quot;area di ritaglio."
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/cpp/c7de0d70-1d4a-415d-8e0a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/csharp/c7de0d70-1d4a-415d-8e0a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/visualbasic/c7de0d70-1d4a-415d-8e0a-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.PointF>strutture.</xref:System.Drawing.PointF>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/cpp/27ae27b1-8fc7-46da-97c2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/csharp/27ae27b1-8fc7-46da-97c2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/visualbasic/27ae27b1-8fc7-46da-97c2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando la modalità di riempimento specificato."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/cpp/d8cdaeb5-d9cb-4113-8859-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/csharp/d8cdaeb5-d9cb-4113-8859-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/visualbasic/d8cdaeb5-d9cb-4113-8859-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando la modalità di riempimento specificato."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Questo metodo utilizza una tensione predefinita pari a 0,5."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/cpp/eba35974-b853-45cc-982b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/csharp/eba35974-b853-45cc-982b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/visualbasic/eba35974-b853-45cc-982b-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando la modalità di riempimento specificata e la tensione."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/cpp/a2a6c4a4-a444-44ec-86d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/csharp/a2a6c4a4-a444-44ec-86d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/visualbasic/a2a6c4a4-a444-44ec-86d2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che definiscono la spline."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una curva di spline di tipo cardinal chiusa definita da una matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando la modalità di riempimento specificata e la tensione."
  remarks: "Questo metodo riempie l&quot;area interna di una spline di tipo cardinal chiusa che attraversa ogni punto nella matrice. Se l&quot;ultimo punto non corrisponde al primo, viene aggiunto un segmento della curva aggiuntive dall&quot;ultimo punto al primo punto per chiuderla.       La matrice di punti deve contenere almeno quattro <xref:System.Drawing.Point>strutture.</xref:System.Drawing.Point>       Il `tension` parametro determina la forma della spline. Se il valore di `tension` parametro è 0, 0F, questo metodo crea segmenti di linea retta per connettere i punti. In genere, il `tension` parametro è minore o uguale a 1.0 f. Valori superiori a 1,0 f producono risultati imprevisti."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/cpp/0df0de76-385f-475b-bd9e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/csharp/0df0de76-385f-475b-bd9e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/visualbasic/0df0de76-385f-475b-bd9e-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "Oggetto <xref href=&quot;System.Drawing.Brush&quot;> </xref> che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che definiscono la spline."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina come viene riempita la curva."
    - id: tension
      type: System.Single
      description: "Valore maggiore o uguale a 0,0 f che specifica la tensione della curva."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un&quot;ellisse definita da un rettangolo di delimitazione specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo riempie l&quot;area interna di un&quot;ellisse con un <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> L&quot;ellisse è definita dal rettangolo di delimitazione rappresentato dal `rect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/cpp/1db3c93b-c561-45c2-82d1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/csharp/1db3c93b-c561-45c2-82d1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/visualbasic/1db3c93b-c561-45c2-82d1-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che rappresenta il rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un&quot;ellisse definita da un rettangolo di delimitazione specificato da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: "Questo metodo riempie l&quot;area interna di un&quot;ellisse con un <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> L&quot;ellisse è definita dal rettangolo di delimitazione rappresentato dal `rect` parametro."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/cpp/beddd307-c00b-4344-8ad5-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/csharp/beddd307-c00b-4344-8ad5-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/visualbasic/beddd307-c00b-4344-8ad5-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che rappresenta il rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un&quot;ellisse definita da un rettangolo di delimitazione specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo riempie l&quot;area interna di un&quot;ellisse con un <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> L&quot;ellisse è definita dal rettangolo di delimitazione rappresentato dal `x`, `y`, `width`, e `height` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/cpp/0631ab9a-0826-4ecd-a349-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/csharp/0631ab9a-0826-4ecd-a349-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/visualbasic/0631ab9a-0826-4ecd-a349-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un&quot;ellisse definita da un rettangolo di delimitazione specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo riempie l&quot;area interna di un&quot;ellisse con un <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> L&quot;ellisse è definita dal rettangolo di delimitazione rappresentato dal `x`, `y`, `width`, e `height` parametri."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/cpp/a7ad2be7-2424-4c4e-be93-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/csharp/a7ad2be7-2424-4c4e-be93-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/visualbasic/a7ad2be7-2424-4c4e-be93-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  id: FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Oggetto <xref:System.Drawing.Drawing2D.GraphicsPath>è costituito da una serie di segmenti di linee e curve.</xref:System.Drawing.Drawing2D.GraphicsPath> Se il percorso è rappresentato dal `path` parametro non è chiuso, un segmento aggiuntivo viene aggiunto dall&quot;ultimo punto al primo punto per chiudere il tracciato."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a graphics path object.  \n  \n-   Adds an ellipse to the graphics path.  \n  \n-   Fills the path on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/cpp/bd82f623-b5ed-4a80-9aac-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/csharp/bd82f623-b5ed-4a80-9aac-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/visualbasic/bd82f623-b5ed-4a80-9aac-_1.vb)]"
  syntax:
    content: public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>che rappresenta il tracciato da riempire."
  overload: System.Drawing.Graphics.FillPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una sezione di torta definita da un&quot;ellisse specificata da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura e due linee radiali."
  remarks: "Questo metodo riempie l&quot;area interna di una sezione di torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione. La sezione di torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/cpp/35752974-fb8e-4190-89b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/csharp/35752974-fb8e-4190-89b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/visualbasic/35752974-fb8e-4190-89b3-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che rappresenta il rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della sezione di torta."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della sezione di torta."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una sezione di torta definita da un&quot;ellisse specificata da una coppia di coordinate, una larghezza, altezza e due linee radiali."
  remarks: "Questo metodo riempie l&quot;area interna di una sezione di torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione. La sezione di torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/cpp/cd01f2a4-bda4-4661-8de0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/csharp/cd01f2a4-bda4-4661-8de0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/visualbasic/cd01f2a4-bda4-4661-8de0-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: startAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della sezione di torta."
    - id: sweepAngle
      type: System.Int32
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della sezione di torta."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una sezione di torta definita da un&quot;ellisse specificata da una coppia di coordinate, una larghezza, altezza e due linee radiali."
  remarks: "Questo metodo riempie l&quot;area interna di una sezione di torta definita da un arco di un&quot;ellisse e due linee radiali che intersecano con gli endpoint dell&quot;arco. L&quot;ellisse è definita dal rettangolo di delimitazione. La sezione di torta è costituito da due linee radiali definite dal `startAngle` e `sweepAngle` parametri e l&quot;arco tra le intersezioni di tali linee radiali con i puntini di sospensione.       Se il `sweepAngle` parametro è maggiore di 360 gradi o minore di-360 gradi, verrà considerato come se fosse rispettivamente di 360 gradi o -360 gradi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/cpp/696347c5-468c-4f10-8ec4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/csharp/696347c5-468c-4f10-8ec4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/visualbasic/696347c5-468c-4f10-8ec4-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo di delimitazione che definisce l&quot;ellisse da cui proviene la sezione di torta."
    - id: startAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dall&quot;asse x al primo lato della sezione di torta."
    - id: sweepAngle
      type: System.Single
      description: "Angolo misurato in gradi in senso orario dal `startAngle` parametro al secondo lato della sezione di torta."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un poligono definito da una matrice di punti specificati da <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture."
  remarks: "Ogni due punti consecutivi nella matrice specificano un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo punto non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/cpp/8c42bd4c-a5b4-4787-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/csharp/8c42bd4c-a5b4-4787-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/visualbasic/8c42bd4c-a5b4-4787-a3af-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i vertici del poligono da riempire."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un poligono definito da una matrice di punti specificati da <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture."
  remarks: "Ogni due punti consecutivi nella matrice specificano un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo punto non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/cpp/ed54e036-19c0-4e81-8255-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/csharp/ed54e036-19c0-4e81-8255-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/visualbasic/ed54e036-19c0-4e81-8255-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i vertici del poligono da riempire."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un poligono definito da una matrice di punti specificati da <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture usando la modalità di riempimento specificato."
  remarks: "Ogni due punti consecutivi nella matrice specificano un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo punto non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/cpp/ad884b76-3209-4ec3-b1c6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/csharp/ad884b76-3209-4ec3-b1c6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/visualbasic/ad884b76-3209-4ec3-b1c6-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i vertici del poligono da riempire."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina lo stile del riempimento."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un poligono definito da una matrice di punti specificati da <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture usando la modalità di riempimento specificato."
  remarks: "Ogni due punti consecutivi nella matrice specificano un lato del poligono. Inoltre, se l&quot;ultimo punto e il primo punto non coincidono, specificano l&quot;ultimo lato del poligono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/cpp/62d0b4ff-f244-4431-9034-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/csharp/62d0b4ff-f244-4431-9034-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/visualbasic/62d0b4ff-f244-4431-9034-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: points
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i vertici del poligono da riempire."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumerazione che determina lo stile del riempimento."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un rettangolo specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo riempie l&quot;area interna del rettangolo definito dal `rect` parametro, inclusi l&quot;angolo superiore sinistro fino a calcolata e inferiori bordi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/cpp/6be38582-3c2a-4e5e-b5a0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/csharp/6be38582-3c2a-4e5e-b5a0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/visualbasic/6be38582-3c2a-4e5e-b5a0-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che rappresenta il rettangolo da riempire."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un rettangolo specificato da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: "Questo metodo riempie l&quot;area interna del rettangolo definito dal `rect` parametro, inclusi l&quot;angolo superiore sinistro fino a calcolata e inferiori bordi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/cpp/e5a08c2a-7ade-4531-a080-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/csharp/e5a08c2a-7ade-4531-a080-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/visualbasic/e5a08c2a-7ade-4531-a080-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che rappresenta il rettangolo da riempire."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo riempie l&quot;area interna del rettangolo definito dal`x`, `y`, `width`, e `height` parametri, inclusi l&quot;angolo superiore sinistro fino a calcolata e inferiori bordi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/cpp/146a0316-72ff-4e5e-9cbc-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/csharp/146a0316-72ff-4e5e-9cbc-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/visualbasic/146a0316-72ff-4e5e-9cbc-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo da riempire."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo da riempire."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo da riempire."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo da riempire."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza."
  remarks: "Questo metodo riempie l&quot;area interna del rettangolo definito dal `x`, `y`, `width`, e `height` parametri, inclusi l&quot;angolo superiore sinistro fino a calcolata e inferiori bordi."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/cpp/135842c8-bb57-4e26-91ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/csharp/135842c8-bb57-4e26-91ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/visualbasic/135842c8-bb57-4e26-91ec-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo da riempire."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo da riempire."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo da riempire."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo da riempire."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una serie di rettangoli specificati da <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> strutture."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/cpp/4d10e835-c952-4b03-ba4f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/csharp/4d10e835-c952-4b03-ba4f-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/visualbasic/4d10e835-c952-4b03-ba4f-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "Matrice di <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> strutture che rappresentano i rettangoli da riempire."
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>è una matrice di lunghezza zero."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di una serie di rettangoli specificati da <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strutture."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/cpp/8405bee3-4e81-48b5-91a1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/csharp/8405bee3-4e81-48b5-91a1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/visualbasic/8405bee3-4e81-48b5-91a1-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "Matrice di <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strutture che rappresentano i rettangoli da riempire."
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rects</code>è una matrice di lunghezza zero."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  id: FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Riempie l&quot;area interna di un <xref href=&quot;System.Drawing.Region&quot;> </xref>."
  remarks: "Oggetto <xref:System.Drawing.Region>è composta da rettangoli e tracciati.</xref:System.Drawing.Region> Se l&quot;area non viene chiusa, viene aggiunto un segmento aggiuntivo dall&quot;ultimo punto al primo punto per chiuderla."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Creates a rectangular region.  \n  \n-   Fills the rectangular region on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/cpp/m-system.drawing.graphic_13_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/csharp/m-system.drawing.graphic_13_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/visualbasic/m-system.drawing.graphic_13_1.vb)]"
  syntax:
    content: public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>che determina le caratteristiche del riempimento."
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>che rappresenta l&quot;area da riempire."
  overload: System.Drawing.Graphics.FillRegion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>region</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.Finalize
  id: Finalize
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Consente a un oggetto tentare di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da garbage collection."
  syntax:
    content: ~Graphics ();
    parameters: []
  overload: System.Drawing.Graphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush
  id: Flush
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Forza l&quot;esecuzione di tutte le operazioni grafiche in sospeso e viene restituito immediatamente senza attendere che le operazioni siano completate."
  remarks: "Questo metodo viene avviato lo scaricamento e restituisce immediatamente senza attendere che qualsiasi operazione grafica attualmente in esecuzione da completare."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  id: Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Forza l&quot;esecuzione di tutte le operazioni grafiche in sospeso con il metodo in attesa o non è in attesa, come specificato da restituire prima del completamento delle operazioni."
  remarks: "Il valore <xref:System.Drawing.Drawing2D.FlushIntention>per il `intention` parametro specifica che il metodo restituisce immediatamente dopo l&quot;inizio dello svuotamento, mentre un valore di <xref:System.Drawing.Drawing2D.FlushIntention>Specifica che il metodo attende prima della restituzione, fino al completamento di ogni operazione esistente.</xref:System.Drawing.Drawing2D.FlushIntention> </xref:System.Drawing.Drawing2D.FlushIntention>"
  syntax:
    content: public void Flush (System.Drawing.Drawing2D.FlushIntention intention);
    parameters:
    - id: intention
      type: System.Drawing.Drawing2D.FlushIntention
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.FlushIntention&quot;> </xref> enumerazione che specifica se il metodo viene restituito immediatamente o in attesa di completamento di ogni operazione esistente."
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  id: FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> dall&quot;handle specificato per un contesto di dispositivo."
  remarks: "È necessario chiamare sempre il <xref:System.Drawing.Graphics.Dispose%2A>metodo per rilasciare il <xref:System.Drawing.Graphics>e le relative risorse create dal metodo FromHdc.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       Anche se il dispositivo di visualizzazione dispone di un profilo di colore ICM, [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] non utilizzerà tale profilo per impostazione predefinita. Per abilitare ICM per un <xref:System.Drawing.Graphics>, costruire la <xref:System.Drawing.Graphics>da un HDC dopo aver passato HDC (e il ICM_ON) per il `SetICMMode` (funzione).</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Qualsiasi disegno eseguito <xref:System.Drawing.Graphics>verrà regolata in base al profilo ICM associato al dispositivo di visualizzazione.</xref:System.Drawing.Graphics> Abilitazione ICM comporterà rallentamento delle prestazioni.       Lo stato del contesto di dispositivo (modalità di mapping unità logica e così via) al momento della chiamata FromHdc può influire sul rendering eseguito dal <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.  \n  \n-   Creates a new graphics object using `hdc`.  \n  \n-   Draws a rectangle with the new graphics object (on the screen).  \n  \n-   Releases the new graphics object using `hdc`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/cpp/m-system.drawing.graphic_31_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/csharp/m-system.drawing.graphic_31_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/visualbasic/m-system.drawing.graphic_31_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "Handle per un contesto di dispositivo."
    return:
      type: System.Drawing.Graphics
      description: "Questo metodo restituisce un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il contesto di dispositivo specificato."
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  id: FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> dall&quot;handle specificato per un contesto di dispositivo e l&quot;handle per un dispositivo."
  remarks: "È necessario chiamare sempre il <xref:System.Drawing.Graphics.Dispose%2A>metodo per rilasciare il <xref:System.Drawing.Graphics>e le relative risorse create dal metodo FromHdc.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       Anche se il dispositivo di visualizzazione dispone di un profilo di colore ICM, [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] non utilizzerà tale profilo per impostazione predefinita. Per abilitare ICM per un <xref:System.Drawing.Graphics>, costruire la <xref:System.Drawing.Graphics>da un HDC dopo aver passato HDC (e il ICM_ON) per il `SetICMMode` (funzione).</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Qualsiasi disegno eseguito <xref:System.Drawing.Graphics>verrà regolata in base al profilo ICM associato al dispositivo di visualizzazione.</xref:System.Drawing.Graphics> Abilitazione ICM comporterà rallentamento delle prestazioni.       Lo stato del contesto di dispositivo (modalità di mapping unità logica e così via) al momento della chiamata FromHdc può influire sul rendering eseguito dal <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>       L&quot;handle di dispositivo è in genere utilizzato per query specifiche funzionalità di stampante."
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "Handle per un contesto di dispositivo."
    - id: hdevice
      type: System.IntPtr
      description: "Handle per un dispositivo."
    return:
      type: System.Drawing.Graphics
      description: "Questo metodo restituisce un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il contesto di dispositivo specificato e il dispositivo."
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  id: FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Restituisce un <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il contesto di dispositivo specificato."
  remarks: "Questo metodo non deve essere utilizzato."
  syntax:
    content: public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "Handle per un contesto di dispositivo."
    return:
      type: System.Drawing.Graphics
      description: "Oggetto <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il contesto di dispositivo specificato."
  overload: System.Drawing.Graphics.FromHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  id: FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> dall&quot;handle specificato per una finestra."
  remarks: "È necessario chiamare sempre il<xref:System.Drawing.Graphics.Dispose%2A> metodo per rilasciare il <xref:System.Drawing.Graphics>e le relative risorse create dal metodo FromHwnd.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.  \n  \n-   Creates a new <xref:System.Drawing.Graphics> from the handle.  \n  \n-   Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.  \n  \n-   Disposes the new <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/cpp/m-system.drawing.graphic_17_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/csharp/m-system.drawing.graphic_17_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/visualbasic/m-system.drawing.graphic_17_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Handle di una finestra."
    return:
      type: System.Drawing.Graphics
      description: "Questo metodo restituisce un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per l&quot;handle di finestra specificato."
  overload: System.Drawing.Graphics.FromHwnd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  id: FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per handle di finestra specificato."
  remarks: "Questo metodo non deve essere utilizzato."
  syntax:
    content: public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Handle di una finestra."
    return:
      type: System.Drawing.Graphics
      description: "Oggetto <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per l&quot;handle di finestra specificato."
  overload: System.Drawing.Graphics.FromHwndInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  id: FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Crea un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> dall&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Se l&quot;immagine ha un formato pixel indicizzato, questo metodo genera un&quot;eccezione con il messaggio, &quot;Impossibile creare un oggetto Graphics da un&quot;immagine con un formato pixel indicizzato&quot;. I formati di pixel indicizzati vengono visualizzati nell&quot;elenco seguente.      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>è possibile salvare l&quot;immagine indicizzata come un altro formato mediante il <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29>(metodo) e quindi di recuperare un <xref:System.Drawing.Graphics>oggetto per la nuova immagine.</xref:System.Drawing.Graphics> </xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>       Questo metodo genera anche un&quot;eccezione se l&quot;immagine include uno dei seguenti formati di pixel.      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>è necessario chiamare sempre il <xref:System.Drawing.Graphics.Dispose%2A>metodo per rilasciare il <xref:System.Drawing.Graphics>e le relative risorse create dal metodo FromImage.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/cpp/m-system.drawing.graphic_8_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/csharp/m-system.drawing.graphic_8_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/visualbasic/m-system.drawing.graphic_8_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>da cui creare il nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
    return:
      type: System.Drawing.Graphics
      description: "Questo metodo restituisce un nuovo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per l&quot;oggetto specificato <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Graphics.FromImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>image</code>presenta un formato pixel indicizzato oppure il formato è definito."
  platform:
  - net462
- uid: System.Drawing.Graphics.GetContextInfo
  id: GetContextInfo
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene il contesto grafico complessivo."
  remarks: "Il valore restituito è una matrice di oggetti in cui il primo elemento è l&quot;area di ritaglio cumulativo e il secondo elemento contiene la matrice di traslazione/trasformazione complessiva."
  syntax:
    content: public object GetContextInfo ();
    parameters: []
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il contesto grafico complessivo.</xref:System.Object>"
  overload: System.Drawing.Graphics.GetContextInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHalftonePalette
  id: GetHalftonePalette
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un handle per la tavolozza dei mezzitoni di Windows corrente."
  remarks: "Lo scopo del metodo GetHalftonePalette consiste nell&quot;abilitare [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] per produrre toni di qualità quando lo schermo 8 bit per pixel. Per visualizzare un&quot;immagine mediante la tavolozza dei mezzitoni, utilizzare la procedura seguente."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] functions.  \n  \n-   Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.  \n  \n-   Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.  \n  \n-   Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.  \n  \n-   Selects and realizes the halftone palette.  \n  \n-   Creates a new graphics object using the `hdc` parameter.  \n  \n-   Draws the image again.  \n  \n-   Releases the handle to the device context.  \n  \n The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/cpp/m-system.drawing.graphic_40_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/csharp/m-system.drawing.graphic_40_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/visualbasic/m-system.drawing.graphic_40_1.vb)]"
  syntax:
    content: public static IntPtr GetHalftonePalette ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Puntatore interno che specifica l&quot;handle alla tavolozza."
  overload: System.Drawing.Graphics.GetHalftonePalette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHdc
  id: GetHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene l&quot;handle per il contesto di dispositivo associato a questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Il contesto di dispositivo è una struttura di Windows basata su [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] che definisce un set di oggetti grafici e i relativi attributi associati, nonché le modalità grafiche che influisce sull&quot;output. Questo metodo restituisce il contesto di dispositivo fatta eccezione per un tipo di carattere. Poiché un tipo di carattere non è selezionata, viene chiamato per il <xref:System.Drawing.Font.FromHdc%2A>metodo utilizzando un handle restituito dal metodo GetHdc avrà esito negativo.</xref:System.Drawing.Font.FromHdc%2A>       Le chiamate al GetHdc e <xref:System.Drawing.Graphics.ReleaseHdc%2A>metodi devono essere presenti in coppia.</xref:System.Drawing.Graphics.ReleaseHdc%2A> Nell&quot;ambito di un GetHdc e <xref:System.Drawing.Graphics.ReleaseHdc%2A>coppia di metodi, in genere eseguono soltanto chiamate a [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] funzioni.</xref:System.Drawing.Graphics.ReleaseHdc%2A> Le chiamate, ambito apportate [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] metodi del <xref:System.Drawing.Graphics>che ha generato il `hdc` parametro esito negativo con un `ObjectBusy` errore.</xref:System.Drawing.Graphics> Inoltre, [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] Ignora tutte le modifiche di stato al <xref:System.Drawing.Graphics>del `hdc` parametro nelle operazioni successive.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function.  \n  \n-   Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/cpp/m-system.drawing.graphic_12_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/csharp/m-system.drawing.graphic_12_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/visualbasic/m-system.drawing.graphic_12_1.vb)]"
  syntax:
    content: public IntPtr GetHdc ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Handle per il contesto di dispositivo associato a questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.GetHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  id: GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene il colore più simile all&quot;oggetto specificato <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).  \n  \n-   Creates a solid brush and sets its color to the specified color.  \n  \n-   Fills an ellipse using the arbitrary color.  \n  \n-   Creates a second color and sets its value to the nearest system ARGB color.  \n  \n-   Fills a second ellipse with this color.  \n  \n The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/cpp/m-system.drawing.graphic_43_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/csharp/m-system.drawing.graphic_43_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/visualbasic/m-system.drawing.graphic_43_1.vb)]"
  syntax:
    content: public System.Drawing.Color GetNearestColor (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>struttura per cui trovare una corrispondenza."
    return:
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore più simile a quello specificato con il <code> color </code> parametro."
  overload: System.Drawing.Graphics.GetNearestColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.InterpolationMode
  id: InterpolationMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la modalità di interpolazione associata a questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "La modalità di interpolazione determina come valori intermedi tra due endpoint vengono calcolati."
  syntax:
    content: public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.InterpolationMode
      description: "Uno del <xref href=&quot;System.Drawing.Drawing2D.InterpolationMode&quot;> </xref> valori."
  overload: System.Drawing.Graphics.InterpolationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  id: IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiorna l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> all&quot;intersezione tra l&quot;area di ritaglio corrente e il valore specificato <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: "Questo metodo assegna il <xref:System.Drawing.Graphics.Clip%2A>della proprietà di questa <xref:System.Drawing.Graphics>l&quot;area rappresentata dal punto di intersezione tra l&quot;area di ritaglio corrente e il rettangolo specificato dal `rect` parametro.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/cpp/m-system.drawing.graphic_32_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/csharp/m-system.drawing.graphic_32_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/visualbasic/m-system.drawing.graphic_32_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura da intersecare con l&quot;area di ritaglio corrente."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  id: IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiorna l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> all&quot;intersezione tra l&quot;area di ritaglio corrente e il valore specificato <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: "Questo metodo assegna il <xref:System.Drawing.Graphics.Clip%2A>della proprietà di questa <xref:System.Drawing.Graphics>l&quot;area rappresentata dal punto di intersezione tra l&quot;area di ritaglio corrente e il rettangolo specificato dal `rect` parametro.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/cpp/m-system.drawing.graphic_36_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/csharp/m-system.drawing.graphic_36_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/visualbasic/m-system.drawing.graphic_36_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura da intersecare con l&quot;area di ritaglio corrente."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  id: IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Aggiorna l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> all&quot;intersezione tra l&quot;area di ritaglio corrente e il valore specificato <xref href=&quot;System.Drawing.Region&quot;> </xref>."
  remarks: "Questo metodo assegna il <xref:System.Drawing.Graphics.Clip%2A>della proprietà di questa <xref:System.Drawing.Graphics>l&quot;area rappresentata dal punto di intersezione tra l&quot;area di ritaglio corrente e l&quot;area specificata dal `region` parametro.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0).  \n  \n-   Creates a region and sets it to the rectangle, and sets the clipping region to this region.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100).  \n  \n-   Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Fills a large rectangle that includes both previous regions with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping region and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two regions is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/cpp/m-system.drawing.graphic_9_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/csharp/m-system.drawing.graphic_9_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/visualbasic/m-system.drawing.graphic_9_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>in modo da intersecare con l&quot;area corrente."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsClipEmpty
  id: IsClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un valore che indica se l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> è vuoto."
  syntax:
    content: public bool IsClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> è vuota; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  id: IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se l&quot;oggetto specificato <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura è contenuta all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/cpp/m-system.drawing.graphic_6_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/csharp/m-system.drawing.graphic_6_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/visualbasic/m-system.drawing.graphic_6_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>struttura da testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il punto specificato da di <code> point </code> contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo parametro <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  id: IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se l&quot;oggetto specificato <xref href=&quot;System.Drawing.PointF&quot;> </xref> struttura è contenuta all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/cpp/m-system.drawing.graphic_39_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/csharp/m-system.drawing.graphic_39_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/visualbasic/m-system.drawing.graphic_39_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.PointF point);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura da testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il punto specificato da di <code> point </code> contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo parametro <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  id: IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il rettangolo specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura è contenuta all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using<xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/cpp/m-system.drawing.graphic_28_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/csharp/m-system.drawing.graphic_28_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/visualbasic/m-system.drawing.graphic_28_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura da testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il rettangolo specificato da di <code> rect </code> contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo parametro <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  id: IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il rettangolo specificato da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura è contenuta all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/cpp/m-system.drawing.graphic_21_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/csharp/m-system.drawing.graphic_21_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/visualbasic/m-system.drawing.graphic_21_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura da testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il rettangolo specificato da di <code> rect </code> contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo parametro <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il punto specificato da una coppia di coordinate è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/cpp/m-system.drawing.graphic_15_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/csharp/m-system.drawing.graphic_15_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/visualbasic/m-system.drawing.graphic_15_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "La coordinata x del punto di cui testare la visibilità."
    - id: y
      type: System.Int32
      description: "La coordinata y del punto di cui testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il punto definito dal <code> x </code> e <code> y </code> parametri è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  id: IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il punto specificato da una coppia di coordinate è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/cpp/m-system.drawing.graphic_16_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/csharp/m-system.drawing.graphic_16_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/visualbasic/m-system.drawing.graphic_16_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "La coordinata x del punto di cui testare la visibilità."
    - id: y
      type: System.Single
      description: "La coordinata y del punto di cui testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il punto definito dal <code> x </code> e <code> y </code> parametri è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/cpp/83916884-8aa7-484f-8684-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/csharp/83916884-8aa7-484f-8684-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/visualbasic/83916884-8aa7-484f-8684-_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di cui testare la visibilità."
    - id: y
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di cui testare la visibilità."
    - id: width
      type: System.Int32
      description: "Larghezza del rettangolo di cui testare la visibilità."
    - id: height
      type: System.Int32
      description: "Altezza del rettangolo di cui testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il rettangolo definito dal <code> x </code>, <code> y </code>, <code> width </code>, e <code> height </code> parametri è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  id: IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se il rettangolo specificato da una coppia di coordinate, una larghezza e un&quot;altezza è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/cpp/26cd12b3-b0de-4137-a2c1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/csharp/26cd12b3-b0de-4137-a2c1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/visualbasic/26cd12b3-b0de-4137-a2c1-_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo di cui testare la visibilità."
    - id: y
      type: System.Single
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo di cui testare la visibilità."
    - id: width
      type: System.Single
      description: "Larghezza del rettangolo di cui testare la visibilità."
    - id: height
      type: System.Single
      description: "Altezza del rettangolo di cui testare la visibilità."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il rettangolo definito dal <code> x </code>, <code> y </code>, <code> width </code>, e <code> height </code> parametri è contenuto all&quot;interno dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  id: IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un valore che indica se l&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> è vuoto."
  remarks: "L&quot;area di visualizzazione visibile è l&quot;intersezione dell&quot;area di visualizzazione di questo `Graphics` e l&quot;area di visualizzazione della finestra."
  syntax:
    content: public bool IsVisibleClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la parte visibile dell&quot;area di visualizzazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> è vuota; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Graphics.IsVisibleClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene una matrice di <xref href=&quot;System.Drawing.Region&quot;> </xref> oggetti, ognuno dei quali delimita un intervallo di posizioni dei caratteri nella stringa specificata."
  remarks: "Le aree restituite da questo metodo sono dipendente dalla risoluzione, pertanto potrebbe verificarsi una perdita di precisione piccole se le stringhe vengono registrate in un metafile in un&quot;unica risoluzione riprodotto in un secondo momento con diverse risoluzioni."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets a string \"First and Second ranges\" and a font for display of the string (\"Times New Roman\", 16 point).  \n  \n-   Sets two character ranges within the string (which correspond to the words \"First\" and \"Second\").  \n  \n-   Creates a rectangle in which to display the string.  \n  \n-   Sets the formatting of the string ¾ including the two character ranges.  \n  \n-   Draws the string to the screen.  \n  \n-   Measures the character ranges, determines rectangles that bound the two specified ranges.  \n  \n-   Draws the two rectangles to the screen.  \n  \n The result is the displayed string with the first range (\"First\") bounded by a red rectangle and the second range (\"Second\") bounded by a blue rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/cpp/edc4cf5e-df25-4e32-9c4e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/csharp/edc4cf5e-df25-4e32-9c4e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/visualbasic/edc4cf5e-df25-4e32-9c4e-_1.vb)]"
  syntax:
    content: public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: layoutRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che specifica il rettangolo di layout per la stringa."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che rappresenta le informazioni di formattazione, ad esempio l&quot;interlinea, per la stringa."
    return:
      type: System.Drawing.Region[]
      description: "Questo metodo restituisce una matrice di <xref href=&quot;System.Drawing.Region&quot;> </xref> oggetti, ognuno dei quali delimita un intervallo di posizioni dei caratteri nella stringa specificata."
  overload: System.Drawing.Graphics.MeasureCharacterRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  id: MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o una del <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure.  \n  \n-   Creates a font object and sets it to Arial (16 point).  \n  \n-   Creates a size object and uses it and the font object to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/cpp/m-system.drawing.graphic_34_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/csharp/m-system.drawing.graphic_34_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/visualbasic/m-system.drawing.graphic_34_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>proprietà della stringa specificata per il <code> text </code> parametro disegnata con il <code> font </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref> all&quot;interno dell&quot;area di layout specificato."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o una del <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/cpp/50dd89a3-bb2e-48a0-9927-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/csharp/50dd89a3-bb2e-48a0-9927-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/visualbasic/50dd89a3-bb2e-48a0-9927-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>definisce il formato della stringa di testo."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>struttura che specifica l&quot;area massima di layout per il testo."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>proprietà della stringa specificata per il <code> text </code> parametro disegnata con il <code> font </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref>."
  remarks: "Il `width` parametro specifica il valore massimo del componente larghezza dell&quot;oggetto restituito <xref:System.Drawing.SizeF>struttura (<xref:System.Drawing.SizeF.Width%2A>).</xref:System.Drawing.SizeF.Width%2A> </xref:System.Drawing.SizeF> Se il `width` parametro è minore della larghezza effettiva della stringa, restituita <xref:System.Drawing.SizeF.Width%2A>componente viene troncato a un valore che rappresenta il numero massimo di caratteri che possono essere contenuti all&quot;interno della larghezza specificata.</xref:System.Drawing.SizeF.Width%2A> Per includere l&quot;intera stringa, restituito <xref:System.Drawing.SizeF.Height%2A>componente viene regolato su un valore che consente la visualizzazione della stringa con incapsulamento di carattere.</xref:System.Drawing.SizeF.Height%2A>       Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o una del <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/cpp/ff03a9b3-c4b1-47e3-8c4c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/csharp/ff03a9b3-c4b1-47e3-8c4c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/visualbasic/ff03a9b3-c4b1-47e3-8c4c-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa."
    - id: width
      type: System.Int32
      description: "Larghezza massima della stringa in pixel."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>della stringa specificata nella proprietà di <code> text </code> parametro disegnata con il <code> font </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref> e formattati con il parametro specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o uno dei metodi MeasureString che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Creates a point to locate the upper-left corner of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the locating point, and the string format.  \n  \n-   Draws a red rectangle using the locating point and the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/cpp/bf732ea7-b026-45c6-903e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/csharp/bf732ea7-b026-45c6-903e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/visualbasic/bf732ea7-b026-45c6-903e-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>definisce il formato della stringa di testo."
    - id: origin
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>struttura che rappresenta l&quot;angolo superiore sinistro della stringa."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che rappresenta le informazioni di formattazione, ad esempio l&quot;interlinea, per la stringa."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>proprietà della stringa specificata per il <code> text </code> parametro disegnata con il <code> font </code> parametro e <code> stringFormat </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref> e formattati con il parametro specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o una del <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string, creating a size object to measure the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/cpp/c825d94b-4b0b-4b74-8f63-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/csharp/c825d94b-4b0b-4b74-8f63-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/visualbasic/c825d94b-4b0b-4b74-8f63-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>definisce il formato della stringa di testo."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>struttura che specifica l&quot;area massima di layout per il testo."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che rappresenta le informazioni di formattazione, ad esempio l&quot;interlinea, per la stringa."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>della stringa specificata nella proprietà di <code> text </code> parametro disegnata con il <code> font </code> parametro e il <code> stringFormat </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref> e formattati con il parametro specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o una del <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Inoltre, assicurarsi <xref:System.Drawing.Graphics.TextRenderingHint%2A>di <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set it to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a string format object and sets its format flags to<xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum width, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/cpp/75feefaf-ae55-4db8-a351-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/csharp/75feefaf-ae55-4db8-a351-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/visualbasic/75feefaf-ae55-4db8-a351-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: width
      type: System.Int32
      description: "Larghezza massima della stringa."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che rappresenta le informazioni di formattazione, ad esempio l&quot;interlinea, per la stringa."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>della stringa specificata nella proprietà di <code> text </code> parametro disegnata con il <code> font </code> parametro e il <code> stringFormat </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Misura la stringa specificata quando viene disegnata con l&quot;oggetto specificato <xref href=&quot;System.Drawing.Font&quot;> </xref> e formattati con il parametro specificato <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>."
  remarks: "Il <xref:System.Drawing.Graphics.MeasureString%2A>metodo è progettato per l&quot;uso di singoli stringhe e include una piccola quantità di spazio aggiuntivo prima e dopo la stringa per le parti sporgenti delle icone.</xref:System.Drawing.Graphics.MeasureString%2A> Inoltre, il <xref:System.Drawing.Graphics.DrawString%2A>metodo regola punti dell&quot;icona per ottimizzare la qualità di visualizzazione e potrebbe visualizzare una stringa più restituiti dalla <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.DrawString%2A> Per ottenere dimensioni adeguate per le stringhe adiacenti nel layout (ad esempio, quando l&quot;implementazione di testo formattato), utilizzare il <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>metodo o uno dei <xref:System.Drawing.Graphics.MeasureString%2A>metodi che accetta un <xref:System.Drawing.StringFormat>e passare <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> </xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> Verificare inoltre <xref:System.Drawing.Graphics.TextRenderingHint%2A>per <xref:System.Drawing.Graphics>è <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.TextRenderingHint%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.  \n  \n-   Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n-   Draws the values of the number of characters fitted and lines filled.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/cpp/bb658a94-1822-409c-9d7b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/csharp/bb658a94-1822-409c-9d7b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/visualbasic/bb658a94-1822-409c-9d7b-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da misurare."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>che definisce il formato della stringa di testo."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>struttura che specifica l&quot;area massima di layout per il testo."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>che rappresenta le informazioni di formattazione, ad esempio l&quot;interlinea, per la stringa."
    - id: charactersFitted
      type: System.Int32
      description: "Numero di caratteri nella stringa."
    - id: linesFilled
      type: System.Int32
      description: "Numero di righe di testo nella stringa."
    return:
      type: System.Drawing.SizeF
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struttura che rappresenta le dimensioni della stringa, nell&quot;unità specificata dal <xref:System.Drawing.Graphics.PageUnit*>, proprietà del <code> text </code> parametro disegnata con il <code> font </code> parametro e <code> stringFormat </code> parametro.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Moltiplica la trasformazione globale di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e specificato il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Questo metodo antepone la matrice specificata per il `matrix` parametro, in modo che il risultato è `matrix` x trasformazione globale."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/cpp/m-system.drawing.graphic_10_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/csharp/m-system.drawing.graphic_10_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/visualbasic/m-system.drawing.graphic_10_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che moltiplica la trasformazione globale."
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Moltiplica la trasformazione globale di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e specificato il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nell&quot;ordine specificato."
  remarks: "Il valore<xref:System.Drawing.Drawing2D.MatrixOrder> per il `order` parametro specifica che l&quot;ordine della moltiplicazione `matrix` x trasformazione globale.</xref:System.Drawing.Drawing2D.MatrixOrder> Il valore <xref:System.Drawing.Drawing2D.MatrixOrder>per `order` specifica che l&quot;ordine della moltiplicazione è trasformazione globale x `matrix`.</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/cpp/cc5350a1-ed7f-4ad4-a876-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/csharp/cc5350a1-ed7f-4ad4-a876-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/visualbasic/cc5350a1-ed7f-4ad4-a876-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che moltiplica la trasformazione globale."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> enumerazione che determina l&quot;ordine della moltiplicazione."
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageScale
  id: PageScale
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la proporzione tra le unità di misura internazionali e quelle della pagina per questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the PageScale and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#2](~/add/codesnippet/cpp/p-system.drawing.graphic_1_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#2](~/add/codesnippet/visualbasic/p-system.drawing.graphic_1_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#2](~/add/codesnippet/csharp/p-system.drawing.graphic_1_1.cs)]"
  syntax:
    content: public float PageScale { get; set; }
    return:
      type: System.Single
      description: "Questa proprietà specifica un valore per la proporzione tra le unità di misura internazionali e quelle della pagina per questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.PageScale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageUnit
  id: PageUnit
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta l&quot;unità di misura utilizzata per le coordinate di pagina in questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;unità di grafica è l&quot;unità di misura utilizzata per le coordinate di pagina in questo <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates the effect of changing the PageUnit property.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#3](~/add/codesnippet/cpp/p-system.drawing.graphic_3_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_3_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#3](~/add/codesnippet/csharp/p-system.drawing.graphic_3_1.cs)]"
  syntax:
    content: public System.Drawing.GraphicsUnit PageUnit { get; set; }
    return:
      type: System.Drawing.GraphicsUnit
      description: "Uno del <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> valori diversi da <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>."
  overload: System.Drawing.Graphics.PageUnit*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PageUnit è impostato su <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>, che non è un&quot;unità fisica."
  platform:
  - net462
- uid: System.Drawing.Graphics.PixelOffsetMode
  id: PixelOffsetMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta un valore che specifica la modalità di offset dei pixel durante il rendering di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Utilizzare questa proprietà per specificare una maggiore qualità, più lento per il rendering o qualità inferiore, un rendering più veloce del contenuto di questo<xref:System.Drawing.Graphics>oggetto.</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.PixelOffsetMode
      description: "Questa proprietà specifica un membro del <xref href=&quot;System.Drawing.Drawing2D.PixelOffsetMode&quot;> </xref> enumerazione"
  overload: System.Drawing.Graphics.PixelOffsetMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc
  id: ReleaseHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Rilascia un handle di contesto di dispositivo ottenuto da una chiamata precedente al <xref:System.Drawing.Graphics.GetHdc*>questo metodo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "<xref:System.Drawing.Graphics.GetHdc%2A>e <xref:System.Drawing.Graphics.ReleaseHdc%2A>sono due metodi che consentono di ottenere e rilasciare l&quot;handle per un dispositivo Windows.</xref:System.Drawing.Graphics.ReleaseHdc%2A></xref:System.Drawing.Graphics.GetHdc%2A> È opportuno seguire sempre una chiamata a <xref:System.Drawing.Graphics.GetHdc%2A>con una chiamata a <xref:System.Drawing.Graphics.ReleaseHdc%2A>quando si è concluso l&quot;handle di Windows.</xref:System.Drawing.Graphics.ReleaseHdc%2A> </xref:System.Drawing.Graphics.GetHdc%2A>"
  syntax:
    content: public void ReleaseHdc ();
    parameters: []
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  id: ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Rilascia un handle di contesto di dispositivo ottenuto da una chiamata precedente al <xref:System.Drawing.Graphics.GetHdc*>questo metodo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "Il contesto di dispositivo è una struttura di Windows basata su [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] che definisce un set di oggetti grafici e i relativi attributi associati, nonché le modalità grafiche che influisce sull&quot;output.       Le chiamate al <xref:System.Drawing.Graphics.GetHdc%2A>e ReleaseHdc metodi devono essere visualizzati in coppie.</xref:System.Drawing.Graphics.GetHdc%2A> Nell&quot;ambito di un <xref:System.Drawing.Graphics.GetHdc%2A>e ReleaseHdc coppia di metodi, in genere eseguono chiamate solo a [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] funzioni.</xref:System.Drawing.Graphics.GetHdc%2A> Le chiamate, ambito apportate [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] metodi del <xref:System.Drawing.Graphics>che ha generato il `hdc` parametro esito negativo con un `ObjectBusy` errore.</xref:System.Drawing.Graphics> Inoltre, [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] Ignora tutte le modifiche di stato al <xref:System.Drawing.Graphics>del `hdc` parametro nelle operazioni successive.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/cpp/m-system.drawing.graphic_14_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/csharp/m-system.drawing.graphic_14_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/visualbasic/m-system.drawing.graphic_14_1.vb)]"
  syntax:
    content: public void ReleaseHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "Handle per un contesto di dispositivo ottenuto da una precedente chiamata al <xref:System.Drawing.Graphics.GetHdc*>questo metodo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  id: ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Rilascia un handle a un contesto di dispositivo."
  syntax:
    content: public void ReleaseHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "Handle per un contesto di dispositivo."
  overload: System.Drawing.Graphics.ReleaseHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RenderingOrigin
  id: RenderingOrigin
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta l&quot;origine del rendering di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il dithering e pennelli per il tratteggio."
  syntax:
    content: public System.Drawing.Point RenderingOrigin { get; set; }
    return:
      type: System.Drawing.Point
      description: "Oggetto <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura che rappresenta l&quot;origine del dithering a 8 bit per pixel e a 16 bit per pixel e viene inoltre utilizzato per impostare l&quot;origine dei pennelli per il tratteggio."
  overload: System.Drawing.Graphics.RenderingOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetClip
  id: ResetClip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Reimposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> su infinito."
  remarks: "Quando l&quot;area di visualizzazione di un <xref:System.Drawing.Graphics>è infinito, gli elementi da questo <xref:System.Drawing.Graphics>Disegna non viene tagliati.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/cpp/m-system.drawing.graphic_29_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/csharp/m-system.drawing.graphic_29_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/visualbasic/m-system.drawing.graphic_29_1.vb)]"
  syntax:
    content: public void ResetClip ();
    parameters: []
  overload: System.Drawing.Graphics.ResetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Reimposta la matrice di trasformazione globale di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> alla matrice di identità."
  remarks: "La matrice identità rappresenta una trasformazione senza ridimensionamento, rotazione o traslazione. Reimpostare la trasformazione globale di questo <xref:System.Drawing.Graphics>alla matrice di identità indica che la trasformazione globale non modifica la geometria degli elementi trasformati.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/cpp/m-system.drawing.graphic_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/csharp/m-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/visualbasic/m-system.drawing.graphic_4_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Graphics.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  id: Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ripristina lo stato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> allo stato rappresentato da un <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>."
  remarks: "Quando si chiama il <xref:System.Drawing.Graphics.Save%2A>metodo di un <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni il <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Save%2A> Il <xref:System.Drawing.Graphics.Save%2A>metodo restituisce un <xref:System.Drawing.Drawing2D.GraphicsState>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> Quando si passa l&quot;identificazione <xref:System.Drawing.Drawing2D.GraphicsState>al metodo theRestore, il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>per stato a cui si trovava al momento del <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Drawing2D.GraphicsState> Si noti che il <xref:System.Drawing.Drawing2D.GraphicsState>restituito da una chiamata specifica al <xref:System.Drawing.Graphics.Save%2A>metodo può essere passato a una sola volta per il `Restore` metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       Le chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo può essere annidato; ovvero, è possibile chiamare il <xref:System.Drawing.Graphics.Save%2A>metodo più volte prima di chiamare il metodo Restore.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> Ogni volta che si chiama il <xref:System.Drawing.Graphics.Save%2A>(metodo), viene inserito un blocco di informazioni sullo stack e viene visualizzato un <xref:System.Drawing.Drawing2D.GraphicsState>per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> Quando si passano uno di questi oggetti al metodo di ripristino, <xref:System.Drawing.Graphics>viene restituito lo stato in cui che si trovava al momento della <xref:System.Drawing.Graphics.Save%2A>chiamata che ha restituito questo specifico <xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState> (metodo)</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics> Il blocco di informazioni inseriti nello stack da tale <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo viene rimosso dallo stack e tutti i blocchi di informazioni collocati sullo stack dopo che <xref:System.Drawing.Graphics.Save%2A>chiamata al metodo vengono anche rimossi.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A>       Le chiamate al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al <xref:System.Drawing.Graphics.Save%2A>metodo.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> Proprio come un ripristino chiamata è associata a un <xref:System.Drawing.Graphics.Save%2A>, chiamare un <xref:System.Drawing.Graphics.EndContainer%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Save%2A>       Quando si chiama il metodo Restore, tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.Save%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> Allo stesso modo, quando si chiama il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (dal <xref:System.Drawing.Graphics.Save%2A>(metodo) o tramite il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a second rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/cpp/m-system.drawing.graphic_22_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/csharp/m-system.drawing.graphic_22_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/visualbasic/m-system.drawing.graphic_22_1.vb)]"
  syntax:
    content: public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);
    parameters:
    - id: gstate
      type: System.Drawing.Drawing2D.GraphicsState
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;></xref>che rappresenta lo stato in cui ripristinare questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.Restore*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Applica la rotazione specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;operazione di rotazione consiste nel moltiplicare la matrice di trasformazione da una matrice i cui elementi sono derivati dal `angle` parametro. Questo metodo si applica la rotazione, anteponendola alla matrice di trasformazione."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/cpp/m-system.drawing.graphic_37_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/csharp/m-system.drawing.graphic_37_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/visualbasic/m-system.drawing.graphic_37_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo di rotazione in gradi."
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Applica la rotazione specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> nell&quot;ordine specificato."
  remarks: "L&quot;operazione di rotazione consiste nel moltiplicare la matrice di trasformazione da una matrice i cui elementi sono derivati dal `angle` parametro. Questo metodo antepone o accodare la matrice di trasformazione di <xref:System.Drawing.Graphics>la matrice di rotazione in base al `order` parametro.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder>.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/cpp/7da2dce8-ff40-4659-a74e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/csharp/7da2dce8-ff40-4659-a74e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/visualbasic/7da2dce8-ff40-4659-a74e-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo di rotazione in gradi."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> enumerazione che specifica se la rotazione è anteposta o alla matrice di trasformazione."
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Save
  id: Save
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Salva lo stato corrente di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> e identifica lo stato salvato con un <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>."
  remarks: "Quando si chiama il metodo Save di una <xref:System.Drawing.Graphics>, che contiene lo stato di un blocco di informazioni di <xref:System.Drawing.Graphics>viene inserito in uno stack.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Il metodo Save restituisce un <xref:System.Drawing.Drawing2D.GraphicsState>che identifica tale blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsState> Quando si passa l&quot;identificazione <xref:System.Drawing.Drawing2D.GraphicsState>per il <xref:System.Drawing.Graphics.Restore%2A>(metodo), il blocco di informazioni viene rimosso dallo stack e viene utilizzato per ripristinare il <xref:System.Drawing.Graphics>allo stato si trovava al momento della chiamata al metodo Save.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState> Si noti che il <xref:System.Drawing.Drawing2D.GraphicsState>restituito da una determinata chiamata al metodo può essere passato a una sola volta per salvare il <xref:System.Drawing.Graphics.Restore%2A>metodo.</xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       Le chiamate al metodo Save possono essere annidate. ovvero, è possibile chiamare il metodo Save più volte prima di chiamare il <xref:System.Drawing.Graphics.Restore%2A>metodo.</xref:System.Drawing.Graphics.Restore%2A> Ogni volta che si chiama il metodo Save, viene inserito un blocco di informazioni sullo stack e viene visualizzato un<xref:System.Drawing.Drawing2D.GraphicsState> per il blocco di informazioni.</xref:System.Drawing.Drawing2D.GraphicsState> Quando si passano uno di questi oggetti al <xref:System.Drawing.Graphics.Restore%2A>metodo, <xref:System.Drawing.Graphics>viene restituito lo stato in cui che si trovava al momento della chiamata al metodo Save restituita tale particolare <xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Restore%2A> Il blocco di informazioni inseriti nello stack dal metodo Save chiamata viene rimosso dallo stack che tutti i blocchi di informazioni collocati sullo stack dopo che salva metodo chiamata vengono anche rimossi.       Le chiamate al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo collocano blocchi di informazioni sullo stesso stack di chiamate al metodo Save.</xref:System.Drawing.Graphics.BeginContainer%2A> Proprio come un <xref:System.Drawing.Graphics.Restore%2A>chiamata è associata con una chiamata di salvataggio, un <xref:System.Drawing.Graphics.EndContainer%2A>chiamata al metodo è associata a un <xref:System.Drawing.Graphics.BeginContainer%2A>chiamata al metodo.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Restore%2A>       Quando si chiama il <xref:System.Drawing.Graphics.Restore%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (tramite il metodo Save o il <xref:System.Drawing.Graphics.BeginContainer%2A>metodo) dopo la chiamata al metodo Save corrispondente vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Restore%2A> Analogamente, quando si chiama il <xref:System.Drawing.Graphics.EndContainer%2A>(metodo), tutti i blocchi di informazioni inseriti nello stack (tramite il metodo Save o il <xref:System.Drawing.Graphics.BeginContainer%2A>(metodo)) dopo la chiamata corrispondente al <xref:System.Drawing.Graphics.BeginContainer%2A>metodo vengono rimossi dallo stack.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/cpp/m-system.drawing.graphic_26_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/csharp/m-system.drawing.graphic_26_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/visualbasic/m-system.drawing.graphic_26_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsState Save ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsState
      description: "Questo metodo restituisce un <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref> che rappresenta lo stato salvato di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Si applica l&quot;operazione di ridimensionamento specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> , anteponendola alla matrice di trasformazione dell&quot;oggetto."
  remarks: "L&quot;operazione di ridimensionamento consiste nel moltiplicare la matrice di trasformazione per una matrice diagonale i cui elementi sono (`sx`, `sy`, 1). Questo metodo antepone la matrice di trasformazione di <xref:System.Drawing.Graphics>dalla matrice di scala.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.  \n  \n-   Draws a scaled, rotated rectangle with a blue pen.  \n  \n The result is still a rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/cpp/m-system.drawing.graphic_38_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/csharp/m-system.drawing.graphic_38_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/visualbasic/m-system.drawing.graphic_38_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "Fattore di scala nella direzione x."
    - id: sy
      type: System.Single
      description: "Fattore di scala nella direzione y."
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Si applica l&quot;operazione di ridimensionamento specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> nell&quot;ordine specificato."
  remarks: "L&quot;operazione di ridimensionamento consiste nel moltiplicare la matrice di trasformazione per una matrice diagonale i cui elementi sono (`sx`, `sy`, 1). Questo metodo antepone o accodare la matrice di trasformazione di <xref:System.Drawing.Graphics>dalla matrice di scala in base al `order` parametro.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder> member.  \n  \n-   Draws a rotated, scaled rectangle with a blue pen.  \n  \n The result is a parallelogram.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/cpp/cafee882-3251-403e-970d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/csharp/cafee882-3251-403e-970d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/visualbasic/cafee882-3251-403e-970d-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "Fattore di scala nella direzione x."
    - id: sy
      type: System.Single
      description: "Fattore di scala nella direzione y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> enumerazione che specifica se l&quot;operazione di ridimensionamento è anteposta o accodata alla matrice di trasformazione."
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> specificata <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Se il percorso grafico rappresentato dal `path` parametro non è chiuso, un segmento aggiuntivo viene aggiunto dall&quot;ultimo punto al primo punto per chiudere il tracciato."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/cpp/m-system.drawing.graphic_2_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/csharp/m-system.drawing.graphic_2_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/visualbasic/m-system.drawing.graphic_2_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>che rappresenta la nuova area di ritaglio."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  id: SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> per il <xref uid=&quot;langword_csharp_Clip&quot; name=&quot;Clip&quot; href=&quot;&quot;> </xref> proprietà dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/cpp/m-system.drawing.graphic_41_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/csharp/m-system.drawing.graphic_41_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/visualbasic/m-system.drawing.graphic_41_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>da cui trarre la nuova area di ritaglio."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  id: SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> il rettangolo specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/cpp/m-system.drawing.graphic_25_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/csharp/m-system.drawing.graphic_25_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/visualbasic/m-system.drawing.graphic_25_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura che rappresenta la nuova area di ritaglio."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  id: SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> il rettangolo specificato da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/cpp/m-system.drawing.graphic_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/csharp/m-system.drawing.graphic_1_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/visualbasic/m-system.drawing.graphic_1_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura che rappresenta la nuova area di ritaglio."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al risultato dell&quot;operazione di combinazione di area di ritaglio corrente e il valore specificato <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Se il percorso grafico rappresentato dal `path` parametro non è chiuso, un segmento aggiuntivo viene aggiunto dall&quot;ultimo punto al primo punto per chiudere il tracciato."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/cpp/13cc8f76-0e6b-45ee-a0ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/csharp/13cc8f76-0e6b-45ee-a0ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/visualbasic/13cc8f76-0e6b-45ee-a0ec-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>Per combinare."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> enumerazione che specifica l&quot;operazione di combinazione da usare."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al risultato dell&quot;oggetto specificato unendo dell&quot;area di ritaglio corrente e <xref:System.Drawing.Graphics.Clip*>proprietà dell&quot;oggetto specificato <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.Clip*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/cpp/8bb7563e-771b-4cba-9f13-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/csharp/8bb7563e-771b-4cba-9f13-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/visualbasic/8bb7563e-771b-4cba-9f13-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>che specifica l&quot;area di ritaglio da combinare."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> enumerazione che specifica l&quot;operazione di combinazione da usare."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al risultato dell&quot;operazione di combinazione di area di ritaglio corrente e il rettangolo specificato da un <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/cpp/f07a12db-73e5-41d7-82f8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/csharp/f07a12db-73e5-41d7-82f8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/visualbasic/f07a12db-73e5-41d7-82f8-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>struttura da combinare."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> enumerazione che specifica l&quot;operazione di combinazione da usare."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al risultato dell&quot;operazione di combinazione di area di ritaglio corrente e il rettangolo specificato da un <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/cpp/f4e1c983-a6f4-4609-8adb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/csharp/f4e1c983-a6f4-4609-8adb-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/visualbasic/f4e1c983-a6f4-4609-8adb-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>struttura da combinare."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> enumerazione che specifica l&quot;operazione di combinazione da usare."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Imposta l&quot;area di ritaglio di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> al risultato dell&quot;operazione di combinazione di area di ritaglio corrente e il valore specificato <xref href=&quot;System.Drawing.Region&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/cpp/2a66fa51-570c-4e4a-8879-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/csharp/2a66fa51-570c-4e4a-8879-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/visualbasic/2a66fa51-570c-4e4a-8879-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>Per combinare."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "Membro di <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> enumerazione che specifica l&quot;operazione di combinazione da usare."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SmoothingMode
  id: SmoothingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la qualità di rendering per questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "La modalità di arrotondamento specifica se le linee, curve e i bordi dell&quot;area riempita usano l&quot;anti-aliasing (detto anche anti-aliasing). Unica eccezione è che pennelli per sfumature di percorso non sono conformi alle modalità di arrotondamento. Le aree riempite tramite un <xref:System.Drawing.Drawing2D.PathGradientBrush>vengono visualizzate nello stesso modo (alias) indipendentemente dalle proprietà SmoothingMode.</xref:System.Drawing.Drawing2D.PathGradientBrush>"
  example:
  - "The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and SmoothingMode properties. The output of the example is shown in the following illustration.  \n  \n ![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png \"Lines with and without smoothing applied.\")  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_4_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.graphic_4_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.SmoothingMode
      description: "Uno del <xref href=&quot;System.Drawing.Drawing2D.SmoothingMode&quot;> </xref> valori."
  overload: System.Drawing.Graphics.SmoothingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextContrast
  id: TextContrast
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta il valore di correzione gamma per il rendering del testo."
  remarks: "Il valore di correzione gamma deve essere compreso tra 0 e 12. Il valore predefinito è 4."
  example:
  - "The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and TextContrast properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_2_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_2_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_2_1.cs)]"
  syntax:
    content: public int TextContrast { get; set; }
    return:
      type: System.Int32
      description: "Il valore di correzione gamma usato per il rendering testo con antialias e ClearType."
  overload: System.Drawing.Graphics.TextContrast*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextRenderingHint
  id: TextRenderingHint
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la modalità di rendering per il testo associato a questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;hint per il rendering di testo specifica se il testo viene visualizzato con anti-aliasing.      > [!NOTE] > Non si deve utilizzare un <xref:System.Drawing.Graphics.CompositingMode%2A>valore della proprietà di <xref:System.Drawing.Drawing2D.CompositingMode>quando la proprietà TextRenderingHint è impostata su <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Drawing2D.CompositingMode> </xref:System.Drawing.Graphics.CompositingMode%2A> Potrebbe verificarsi un&quot;eccezione o l&quot;immagine potrebbe non risultare corretto."
  example:
  - "The following code example demonstrates the use of the TextRenderingHint and <xref:System.Drawing.Graphics.TextContrast%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_7_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_7_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_7_1.cs)]"
  syntax:
    content: public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }
    return:
      type: System.Drawing.Text.TextRenderingHint
      description: "Uno del <xref href=&quot;System.Drawing.Text.TextRenderingHint&quot;> </xref> valori."
  overload: System.Drawing.Graphics.TextRenderingHint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Transform
  id: Transform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta una copia della trasformazione globale geometrica per questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "GDI+ utilizza tre spazi di coordinate: world, pagina e dispositivo. Coordinate sono le coordinate usate per modellare un particolare ambiente grafico e le coordinate passate ai metodi in .NET Framework. Le coordinate di pagina può fare riferimento al sistema di coordinate utilizzato da un&quot;area di disegno, ad esempio un form o un controllo. Le coordinate di dispositivo vengono utilizzate dal dispositivo fisico da disegnare, ad esempio una schermata o una stampante. La proprietà di trasformazione rappresenta la trasformazione globale, che consente di associare le coordinate complessive alle coordinate di pagina.       Poiché la matrice restituita dalla trasformazione per la proprietà è una copia della trasformazione geometrica, è necessario eliminarlo quando non è più necessario."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Una copia del <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che rappresenta la trasformazione globale geometrica per questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Trasforma una matrice di punti da uno spazio di coordinate a un altro, usando le trasformazioni correnti globali e di pagina di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity.  \n  \n-   Draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/cpp/7346647a-cbf8-4ed4-9d18-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/csharp/7346647a-cbf8-4ed4-9d18-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/visualbasic/7346647a-cbf8-4ed4-9d18-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> enumerazione che specifica lo spazio di coordinate di destinazione."
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> enumerazione che specifica lo spazio di coordinate di origine."
    - id: pts
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresentano i punti da trasformare."
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Trasforma una matrice di punti da uno spazio di coordinate a un altro, usando le trasformazioni correnti globali e di pagina di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity and draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/cpp/9caccfd4-27c9-4ec4-8e81-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/csharp/9caccfd4-27c9-4ec4-8e81-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/visualbasic/9caccfd4-27c9-4ec4-8e81-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> enumerazione che specifica lo spazio di coordinate di destinazione."
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> enumerazione che specifica lo spazio di coordinate di origine."
    - id: pts
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresentano i punti da trasformare."
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  id: TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Trasla l&quot;area di visualizzazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> secondo i valori specificati nelle direzioni orizzontale e verticale."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50, 50).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/cpp/m-system.drawing.graphic_33_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/csharp/m-system.drawing.graphic_33_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/visualbasic/m-system.drawing.graphic_33_1.vb)]"
  syntax:
    content: public void TranslateClip (int dx, int dy);
    parameters:
    - id: dx
      type: System.Int32
      description: "La coordinata x della traslazione."
    - id: dy
      type: System.Int32
      description: "La coordinata y della traslazione."
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  id: TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Trasla l&quot;area di visualizzazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> secondo i valori specificati nelle direzioni orizzontale e verticale."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50.0F, 50.0F).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/cpp/m-system.drawing.graphic_45_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/csharp/m-system.drawing.graphic_45_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/visualbasic/m-system.drawing.graphic_45_1.vb)]"
  syntax:
    content: public void TranslateClip (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "La coordinata x della traslazione."
    - id: dy
      type: System.Single
      description: "La coordinata y della traslazione."
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Modifica l&quot;origine del sistema di coordinate anteponendo la traslazione specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;origine è in genere nell&quot;angolo superiore sinistro dell&quot;area di disegno.  Operazione di conversione consiste nel moltiplicare la matrice di trasformazione da una matrice la cui parte traduzione è il `dx` e `dy` parametri. Questo metodo si applica la traslazione anteponendo la matrice di traslazione alla matrice di trasformazione."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the origin of the graphics object by calling TranslateTransform, prepending the translation to the transformation matrix.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/cpp/m-system.drawing.graphic_30_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/csharp/m-system.drawing.graphic_30_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/visualbasic/m-system.drawing.graphic_30_1.vb)]  \n  \n The following illustration shows the output of running the previous code example.  \n  \n ![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png \"Translated and transformed ellipse\")"
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "La coordinata x della traslazione."
    - id: dy
      type: System.Single
      description: "La coordinata y della traslazione."
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Modifica l&quot;origine del sistema di coordinate applicando la traslazione specificata alla matrice di trasformazione di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref> nell&quot;ordine specificato."
  remarks: "Operazione di conversione consiste nel moltiplicare la matrice di trasformazione da una matrice la cui parte traduzione è il `dx` e `dy` parametri. Questo metodo antepone o accodare la matrice di trasformazione di <xref:System.Drawing.Graphics>dalla matrice di traslazione in base al `order` parametro.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the graphics object's origin by calling TranslateTransform, appending the translation to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/cpp/3a1adcd8-df73-46ba-bf3e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/csharp/3a1adcd8-df73-46ba-bf3e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/visualbasic/3a1adcd8-df73-46ba-bf3e-_1.vb)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "La coordinata x della traslazione."
    - id: dy
      type: System.Single
      description: "La coordinata y della traslazione."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Membro del <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> enumerazione che specifica se la traslazione è anteposta o accodata alla matrice di trasformazione."
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.VisibleClipBounds
  id: VisibleClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene il rettangolo di delimitazione dell&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "L&quot;unità del rettangolo risultante è indicata dal <xref:System.Drawing.Graphics.PageUnit%2A>proprietà.</xref:System.Drawing.Graphics.PageUnit%2A> L&quot;unità predefinita è pixel. Oggetto <xref:System.Drawing.Graphics>in genere è associato un controllo e l&quot;origine del rettangolo è relativo all&quot;area client del controllo.</xref:System.Drawing.Graphics>       L&quot;area di visualizzazione visibile è l&quot;intersezione dell&quot;area di visualizzazione di questo <xref:System.Drawing.Graphics>e l&quot;area di visualizzazione della finestra.</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.RectangleF VisibleClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che rappresenta un rettangolo di delimitazione per l&quot;area di ritaglio visibile di questo <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  overload: System.Drawing.Graphics.VisibleClipBounds*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.BeginContainer
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
- uid: System.Drawing.Drawing2D.GraphicsContainer
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsContainer
  nameWithType: GraphicsContainer
  fullName: System.Drawing.Drawing2D.GraphicsContainer
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Graphics.Clip
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
- uid: System.Drawing.Region
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region
- uid: System.Drawing.Graphics.ClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
- uid: System.Drawing.Drawing2D.CompositingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingMode
  nameWithType: CompositingMode
  fullName: System.Drawing.Drawing2D.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
- uid: System.Drawing.Drawing2D.CompositingQuality
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingQuality
  nameWithType: CompositingQuality
  fullName: System.Drawing.Drawing2D.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
- uid: System.Drawing.CopyPixelOperation
  parent: System.Drawing
  isExternal: false
  name: CopyPixelOperation
  nameWithType: CopyPixelOperation
  fullName: System.Drawing.CopyPixelOperation
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
- uid: System.Drawing.Graphics.Dispose
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
- uid: System.Drawing.Graphics.DpiX
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Graphics.DpiY
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Pen
  parent: System.Drawing
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
- uid: System.Drawing.Drawing2D.FillMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FillMode
  nameWithType: FillMode
  fullName: System.Drawing.Drawing2D.FillMode
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Imaging.ImageAttributes
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageAttributes
  nameWithType: ImageAttributes
  fullName: System.Drawing.Imaging.ImageAttributes
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImageAbort
  parent: System.Drawing
  isExternal: false
  name: Graphics+DrawImageAbort
  nameWithType: Graphics+DrawImageAbort
  fullName: System.Drawing.Graphics+DrawImageAbort
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
- uid: System.Drawing.Rectangle[]
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle[]
  spec.csharp:
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Rectangle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
- uid: System.Drawing.RectangleF[]
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF[]
  spec.csharp:
  - uid: System.Drawing.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: RectangleF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Imaging.Metafile
  parent: System.Drawing.Imaging
  isExternal: false
  name: Metafile
  nameWithType: Metafile
  fullName: System.Drawing.Imaging.Metafile
- uid: System.Drawing.Graphics.EnumerateMetafileProc
  parent: System.Drawing
  isExternal: false
  name: Graphics+EnumerateMetafileProc
  nameWithType: Graphics+EnumerateMetafileProc
  fullName: System.Drawing.Graphics+EnumerateMetafileProc
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
- uid: System.Drawing.Graphics.Finalize
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
- uid: System.Drawing.Graphics.Flush
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
- uid: System.Drawing.Drawing2D.FlushIntention
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FlushIntention
  nameWithType: FlushIntention
  fullName: System.Drawing.Drawing2D.FlushIntention
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
- uid: System.Drawing.Graphics.GetContextInfo
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Graphics.GetHalftonePalette
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
- uid: System.Drawing.Graphics.GetHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
- uid: System.Drawing.Graphics.InterpolationMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
- uid: System.Drawing.Drawing2D.InterpolationMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: InterpolationMode
  nameWithType: InterpolationMode
  fullName: System.Drawing.Drawing2D.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
- uid: System.Drawing.Graphics.IsClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
- uid: System.Drawing.Region[]
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region[]
  spec.csharp:
  - uid: System.Drawing.Region
    name: Region
    nameWithType: Region
    fullName: Region[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Graphics.PageScale
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
- uid: System.Drawing.Drawing2D.PixelOffsetMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PixelOffsetMode
  nameWithType: PixelOffsetMode
  fullName: System.Drawing.Drawing2D.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.RenderingOrigin
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
- uid: System.Drawing.Graphics.ResetTransform
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
- uid: System.Drawing.Drawing2D.GraphicsState
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsState
  nameWithType: GraphicsState
  fullName: System.Drawing.Drawing2D.GraphicsState
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Graphics.Save
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
- uid: System.Drawing.Drawing2D.CombineMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CombineMode
  nameWithType: CombineMode
  fullName: System.Drawing.Drawing2D.CombineMode
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
- uid: System.Drawing.Graphics.SmoothingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
- uid: System.Drawing.Drawing2D.SmoothingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: SmoothingMode
  nameWithType: SmoothingMode
  fullName: System.Drawing.Drawing2D.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
- uid: System.Drawing.Text.TextRenderingHint
  parent: System.Drawing.Text
  isExternal: false
  name: TextRenderingHint
  nameWithType: TextRenderingHint
  fullName: System.Drawing.Text.TextRenderingHint
- uid: System.Drawing.Graphics.Transform
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
- uid: System.Drawing.Drawing2D.CoordinateSpace
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CoordinateSpace
  nameWithType: CoordinateSpace
  fullName: System.Drawing.Drawing2D.CoordinateSpace
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.VisibleClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
- uid: System.Drawing.Graphics.AddMetafileComment*
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment
  nameWithType: Graphics.AddMetafileComment
- uid: System.Drawing.Graphics.BeginContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer
  nameWithType: Graphics.BeginContainer
- uid: System.Drawing.Graphics.Clear*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear
  nameWithType: Graphics.Clear
- uid: System.Drawing.Graphics.Clip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
- uid: System.Drawing.Graphics.ClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen
  nameWithType: Graphics.CopyFromScreen
- uid: System.Drawing.Graphics.Dispose*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose
  nameWithType: Graphics.Dispose
- uid: System.Drawing.Graphics.DpiX*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
- uid: System.Drawing.Graphics.DpiY*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc
  nameWithType: Graphics.DrawArc
- uid: System.Drawing.Graphics.DrawBezier*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier
  nameWithType: Graphics.DrawBezier
- uid: System.Drawing.Graphics.DrawBeziers*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers
  nameWithType: Graphics.DrawBeziers
- uid: System.Drawing.Graphics.DrawClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve
  nameWithType: Graphics.DrawClosedCurve
- uid: System.Drawing.Graphics.DrawCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve
  nameWithType: Graphics.DrawCurve
- uid: System.Drawing.Graphics.DrawEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse
  nameWithType: Graphics.DrawEllipse
- uid: System.Drawing.Graphics.DrawIcon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon
  nameWithType: Graphics.DrawIcon
- uid: System.Drawing.Graphics.DrawIconUnstretched*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched
  nameWithType: Graphics.DrawIconUnstretched
- uid: System.Drawing.Graphics.DrawImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage
  nameWithType: Graphics.DrawImage
- uid: System.Drawing.Graphics.DrawImageUnscaled*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled
  nameWithType: Graphics.DrawImageUnscaled
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped
  nameWithType: Graphics.DrawImageUnscaledAndClipped
- uid: System.Drawing.Graphics.DrawLine*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine
  nameWithType: Graphics.DrawLine
- uid: System.Drawing.Graphics.DrawLines*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines
  nameWithType: Graphics.DrawLines
- uid: System.Drawing.Graphics.DrawPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath
  nameWithType: Graphics.DrawPath
- uid: System.Drawing.Graphics.DrawPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie
  nameWithType: Graphics.DrawPie
- uid: System.Drawing.Graphics.DrawPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon
  nameWithType: Graphics.DrawPolygon
- uid: System.Drawing.Graphics.DrawRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle
  nameWithType: Graphics.DrawRectangle
- uid: System.Drawing.Graphics.DrawRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles
  nameWithType: Graphics.DrawRectangles
- uid: System.Drawing.Graphics.DrawString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString
  nameWithType: Graphics.DrawString
- uid: System.Drawing.Graphics.EndContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer
  nameWithType: Graphics.EndContainer
- uid: System.Drawing.Graphics.EnumerateMetafile*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile
  nameWithType: Graphics.EnumerateMetafile
- uid: System.Drawing.Graphics.ExcludeClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip
  nameWithType: Graphics.ExcludeClip
- uid: System.Drawing.Graphics.FillClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve
  nameWithType: Graphics.FillClosedCurve
- uid: System.Drawing.Graphics.FillEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse
  nameWithType: Graphics.FillEllipse
- uid: System.Drawing.Graphics.FillPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath
  nameWithType: Graphics.FillPath
- uid: System.Drawing.Graphics.FillPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie
  nameWithType: Graphics.FillPie
- uid: System.Drawing.Graphics.FillPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon
  nameWithType: Graphics.FillPolygon
- uid: System.Drawing.Graphics.FillRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle
  nameWithType: Graphics.FillRectangle
- uid: System.Drawing.Graphics.FillRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles
  nameWithType: Graphics.FillRectangles
- uid: System.Drawing.Graphics.FillRegion*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion
  nameWithType: Graphics.FillRegion
- uid: System.Drawing.Graphics.Finalize*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize
  nameWithType: Graphics.Finalize
- uid: System.Drawing.Graphics.Flush*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush
  nameWithType: Graphics.Flush
- uid: System.Drawing.Graphics.FromHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc
  nameWithType: Graphics.FromHdc
- uid: System.Drawing.Graphics.FromHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal
  nameWithType: Graphics.FromHdcInternal
- uid: System.Drawing.Graphics.FromHwnd*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd
  nameWithType: Graphics.FromHwnd
- uid: System.Drawing.Graphics.FromHwndInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal
  nameWithType: Graphics.FromHwndInternal
- uid: System.Drawing.Graphics.FromImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage
  nameWithType: Graphics.FromImage
- uid: System.Drawing.Graphics.GetContextInfo*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo
  nameWithType: Graphics.GetContextInfo
- uid: System.Drawing.Graphics.GetHalftonePalette*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette
  nameWithType: Graphics.GetHalftonePalette
- uid: System.Drawing.Graphics.GetHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc
  nameWithType: Graphics.GetHdc
- uid: System.Drawing.Graphics.GetNearestColor*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor
  nameWithType: Graphics.GetNearestColor
- uid: System.Drawing.Graphics.InterpolationMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip
  nameWithType: Graphics.IntersectClip
- uid: System.Drawing.Graphics.IsClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
- uid: System.Drawing.Graphics.IsVisible*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible
  nameWithType: Graphics.IsVisible
- uid: System.Drawing.Graphics.IsVisibleClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges
  nameWithType: Graphics.MeasureCharacterRanges
- uid: System.Drawing.Graphics.MeasureString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString
  nameWithType: Graphics.MeasureString
- uid: System.Drawing.Graphics.MultiplyTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform
  nameWithType: Graphics.MultiplyTransform
- uid: System.Drawing.Graphics.PageScale*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc
  nameWithType: Graphics.ReleaseHdc
- uid: System.Drawing.Graphics.ReleaseHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal
  nameWithType: Graphics.ReleaseHdcInternal
- uid: System.Drawing.Graphics.RenderingOrigin*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip
  nameWithType: Graphics.ResetClip
- uid: System.Drawing.Graphics.ResetTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform
  nameWithType: Graphics.ResetTransform
- uid: System.Drawing.Graphics.Restore*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore
  nameWithType: Graphics.Restore
- uid: System.Drawing.Graphics.RotateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform
  nameWithType: Graphics.RotateTransform
- uid: System.Drawing.Graphics.Save*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save
  nameWithType: Graphics.Save
- uid: System.Drawing.Graphics.ScaleTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform
  nameWithType: Graphics.ScaleTransform
- uid: System.Drawing.Graphics.SetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip
  nameWithType: Graphics.SetClip
- uid: System.Drawing.Graphics.SmoothingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
- uid: System.Drawing.Graphics.Transform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints
  nameWithType: Graphics.TransformPoints
- uid: System.Drawing.Graphics.TranslateClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip
  nameWithType: Graphics.TranslateClip
- uid: System.Drawing.Graphics.TranslateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform
  nameWithType: Graphics.TranslateTransform
- uid: System.Drawing.Graphics.VisibleClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
