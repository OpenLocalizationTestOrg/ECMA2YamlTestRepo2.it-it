### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ExpandableObjectConverter
  id: ExpandableObjectConverter
  children:
  - System.ComponentModel.ExpandableObjectConverter.#ctor
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter
  fullName: System.ComponentModel.ExpandableObjectConverter
  type: Class
  summary: "Fornisce un convertitore di tipi per convertire oggetti espandibili in e da diverse altre rappresentazioni."
  remarks: "Questa classe aggiunge il supporto per le proprietà su un oggetto per i metodi e le proprietà forniti da <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Per rendere espandibile <xref:System.Windows.Forms.PropertyGrid>specificare questo <xref:System.ComponentModel.TypeConverter>per le implementazioni standard di <xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A> <xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A>.</xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A> e</xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A> </xref:System.ComponentModel.TypeConverter> </xref:System.Windows.Forms.PropertyGrid> un tipo di proprietà Contrassegnare le proprietà figlio con il <xref:System.ComponentModel.NotifyParentPropertyAttribute>per assicurare il corretto funzionamento in un <xref:System.Windows.Forms.PropertyGrid>controllo.</xref:System.Windows.Forms.PropertyGrid> </xref:System.ComponentModel.NotifyParentPropertyAttribute>      > [!NOTE] > Mai è necessario accedere direttamente un convertitore di tipi. Chiamare invece il convertitore appropriato tramite <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> Per ulteriori informazioni, vedere gli esempi nella <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>       Per ulteriori informazioni sui convertitori di tipi, vedere la <xref:System.ComponentModel.TypeConverter>classe di base e [procedura: implementare un convertitore di tipi](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example converts a variable of type <xref:System.Drawing.Printing.Margins> to a string variable.  \n  \n [!code-cs[Converters#26](~/add/codesnippet/csharp/t-system.componentmodel._53_1.cs)]\n [!code-vb[Converters#26](~/add/codesnippet/visualbasic/t-system.componentmodel._53_1.vb)]\n [!code-cpp[Converters#26](~/add/codesnippet/cpp/t-system.componentmodel._53_1.cpp)]  \n  \n The following code example demonstrates how to use the <xref:System.ComponentModel.NotifyParentPropertyAttribute> and the ExpandableObjectConverter class to create an expandable property on a custom control. This code example is part of a larger example provided for the <xref:System.ComponentModel.NotifyParentPropertyAttribute> class.  \n  \n [!code-vb[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/visualbasic/t-system.componentmodel._53_2.vb)]\n [!code-cs[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/csharp/t-system.componentmodel._53_2.cs)]"
  syntax:
    content: 'public class ExpandableObjectConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.ExpandableObjectConverter&quot;> </xref> classe."
  syntax:
    content: public ExpandableObjectConverter ();
    parameters: []
  overload: System.ComponentModel.ExpandableObjectConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene una raccolta di proprietà per il tipo dell&quot;oggetto specificato dal parametro value."
  remarks: "Il `context` parametro può essere utilizzato per estrarre informazioni aggiuntive sull&quot;ambiente da cui viene richiamato il convertitore. Può trattarsi di `null`, eseguire sempre un controllo. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`.       Il `attributes` matrice verrà utilizzata per filtrare la matrice. Il `attributes` può contenere una combinazione di <xref:System.Type>e <xref:System.Attribute>oggetti.</xref:System.Attribute> </xref:System.Type> Il filtro è definito dalle regole seguenti: - il <xref:System.Type>oggetto verrà considerato come un carattere jolly; corrisponderà a qualsiasi proprietà che dispongono di <xref:System.Type>nel relativo set di attributi.</xref:System.Type> </xref:System.Type>      -Se una proprietà non ha un <xref:System.Attribute>della stessa classe, non essere inclusi nella matrice restituita.</xref:System.Attribute>      -Se l&quot;attributo è un&quot;istanza di <xref:System.Attribute>, la proprietà deve essere una corrispondenza esatta o non essere incluso nella matrice restituita.</xref:System.Attribute>      -Se un <xref:System.Attribute>è specificata l&quot;istanza ed è la proprietà predefinita, verranno inclusi nella matrice restituita anche se è presente alcuna istanza del <xref:System.Attribute>nella proprietà.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    - id: value
      type: System.Object
      description: "Un <xref:System.Object>che specifica il tipo di oggetto da ottenere proprietà for</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che verrà utilizzata come filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> con le proprietà esposte per il componente, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esistono proprietà."
  overload: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se questo oggetto supporta proprietà utilizzando il contesto specificato."
  remarks: "Il `context` parametro può essere utilizzato per estrarre informazioni aggiuntive sull&quot;ambiente da cui viene richiamato il convertitore. Può trattarsi di `null`, eseguire sempre un controllo. Inoltre, è possano restituire le proprietà dell&quot;oggetto di contesto `null`."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Un <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> che fornisce un contesto di formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Poiché <xref:System.ComponentModel.TypeConverter.GetProperties*>deve essere chiamato per trovare le proprietà di questo oggetto.</xref:System.ComponentModel.TypeConverter.GetProperties*> Questo metodo non restituisce mai <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties
  nameWithType: ExpandableObjectConverter.GetProperties
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported
