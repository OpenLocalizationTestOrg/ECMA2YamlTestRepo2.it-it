### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  id: DbExpressionBuilder
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  langs:
  - csharp
  name: DbExpressionBuilder
  nameWithType: DbExpressionBuilder
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  type: Class
  summary: "Fornisce un&quot;API per costruire <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s e consente a tale API deve essere effettuato come metodi di estensione sul tipo di espressione stesso."
  syntax:
    content: public static class DbExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "La funzione che definisce l&quot;operazione di aggregazione."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;argomento su cui deve essere calcolata la funzione di aggregazione."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "Una nuova funzione di aggregata con un riferimento alla funzione specificata e argomento. Il valore della proprietà Distinct dell&quot;aggregazione funzione è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>o <code>argument</code> null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>non è una funzione di aggregazione o ha più di un argomento o tipo di risultato del <code>argument</code> non è uguale o promuovibile al tipo di parametro di <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref> che viene applicata in modo distinto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "La funzione che definisce l&quot;operazione di aggregazione."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;argomento su cui deve essere calcolata la funzione di aggregazione."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "Una nuova funzione di aggregata con un riferimento alla funzione specificata e argomento. Il valore della proprietà Distinct dell&quot;aggregazione funzione è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>o <code>argument</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>non è una funzione di aggregazione o ha più di un argomento o tipo di risultato del <code>argument</code> non è uguale o promuovibile al tipo di parametro di <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> che determina se il predicato specificato vale per tutti gli elementi del set di input."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta un predicato da valutare per ogni membro del set di input.    Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica di predicato."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Nuovo oggetto DbQuantifierExpression che rappresenta tutte le operazioni."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> predicate </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> Predicate </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> che determina se il predicato specificato vale per tutti gli elementi del set di input."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che rappresenta un predicato da valutare per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Nuovo oggetto DbQuantifierExpression che rappresenta tutte le operazioni."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>predicate</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un <xref href=&quot;System.Data.Common.CommandTrees.DbAndExpression&quot;> </xref> che esegue la logica e degli argomenti a sinistra e destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione booleana che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione booleana che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbAndExpression
      description: "Un nuovo DbAndExpression con gli argomenti specificati."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>e <code>right</code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  id: Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che determina se l&quot;argomento del set specificato non è vuoto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> applicato a un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> con l&quot;argomento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> che determina se il predicato specificato vale per qualsiasi elemento del set di input."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta il predicato da valutare per ogni membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica di predicato."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Nuovo oggetto DbQuantifierExpression che rappresenta l&quot;operazione di qualsiasi."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> predicate </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> predicate </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> che determina se il predicato specificato vale per qualsiasi elemento del set di input."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che rappresenta un predicato da valutare per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Nuovo oggetto DbQuantifierExpression che rappresenta l&quot;operazione di qualsiasi."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>predicate</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> predicate </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  id: As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Restituisce l&quot;argomento specificato come un oggetto della coppia chiave/valore."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbAggregate
      description: "Il valore nella coppia chiave/valore."
    - id: alias
      type: System.String
      description: "La chiave nella coppia chiave/valore."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
      description: "Un oggetto di coppia chiave/valore."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Restituisce l&quot;argomento specificato come un oggetto della coppia chiave/valore."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Il valore nella coppia chiave/valore."
    - id: alias
      type: System.String
      description: "La chiave nella coppia chiave/valore."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
      description: "Un oggetto di coppia chiave/valore."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  id: Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che utilizza un nome di variabile generato per associare l&quot;espressione specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Espressione da associare."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Una nuova associazione a un&quot;espressione con l&quot;espressione specificata e un nome di variabile generato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>non dispone di una raccolta di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che usa il nome della variabile specificato per associare l&quot;espressione specificata"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Espressione da associare."
    - id: varName
      type: System.String
      description: "Il nome della variabile che deve essere utilizzato per l&quot;associazione."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Una nuova associazione a un&quot;espressione con l&quot;espressione specificata e il nome della variabile."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>varName</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>non dispone di una raccolta di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbCaseExpression&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);
    parameters:
    - id: whenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Un elenco di espressioni che forniscono la logica condizionale per di ogni case."
    - id: thenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Un elenco di espressioni che forniscono il risultato di ogni case."
    - id: elseExpression
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il risultato in nessun caso corrisponde."
    return:
      type: System.Data.Common.CommandTrees.DbCaseExpression
      description: "Un nuovo DbCaseExpression con il case specificate e il risultato predefinito."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>whenExpressions</code>o <code>thenExpressions</code> è null o contiene un valore null, o <code>elseExpression</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>whenExpressions</code>o <code>thenExpressions</code> è vuoto o <code>whenExpressions</code> contiene la presenza di un&quot;espressione con un tipo di risultato non booleani, o nessun tipo di risultato comune per tutte le espressioni in <code>thenExpressions</code> e <code>elseExpression</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbCastExpression&quot;> </xref> che applica un&quot;operazione cast a un argomento polimorfico."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;argomento a cui deve essere applicato il cast."
    - id: toType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Metadati del tipo che specifica il tipo di cast."
    return:
      type: System.Data.Common.CommandTrees.DbCastExpression
      description: "Un nuovo DbCastExpression con il tipo di argomento e di destinazione specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>o <code>toType</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> con il valore costante specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore costante per rappresentare."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Un nuovo oggetto DbConstantExpression con il valore specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>non è un&quot;istanza di un tipo costante valido."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  id: Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> del tipo primitivo specificato con il valore costante specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);
    parameters:
    - id: constantType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo del valore della costante."
    - id: value
      type: System.Object
      description: "Il valore costante per rappresentare."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Un nuovo oggetto DbConstantExpression con il valore specificato e un tipo di risultato di <code> constantType </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>o <code>constantType</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>non è un&quot;istanza di un tipo di costante valido, <code>constantType</code> non rappresenta un tipo primitivo, o <code>value</code> è di un tipo primitivo diverso da quello rappresentato da <code>constantType</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica in base ai valori chiavi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Il set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Una raccolta di <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s che forniscono i valori di chiave. Queste espressioni devono corrispondere (in numero, tipo e ordine) le proprietà chiave del tipo di entità a cui fa riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>è null, o <code>keyValues</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> keyValues </code> non corrisponde al conteggio dei membri della chiave dichiarate dal <code> entitySet </code>del tipo di elemento, o <code> keyValues </code> contiene un&quot;espressione con un tipo di risultato non è compatibile con il tipo di membro chiave corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica in base ai valori chiavi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Il set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Una raccolta di <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s che forniscono i valori di chiave. Queste espressioni devono corrispondere (in numero, tipo e ordine) le proprietà chiave del tipo di entità a cui fa riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>è null, o <code>keyValues</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> keyValues </code> non corrisponde al conteggio dei membri della chiave dichiarate dal <code> entitySet </code>del tipo di elemento, o <code> keyValues </code> contiene un&quot;espressione con un tipo di risultato non è compatibile con il tipo di membro chiave corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica di un determinato tipo in base ai valori chiavi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Il set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Il tipo specifico di entità con riferimenti. Deve trattarsi di un tipo di entità della stessa gerarchia come tipo di elemento del set di entità."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Una raccolta di <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s che forniscono i valori di chiave. Queste espressioni devono corrispondere (in numero, tipo e ordine) le proprietà chiave del tipo di entità a cui fa riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>o <code>entityType</code> è null, o <code>keyValues</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> keyValues </code> non corrisponde al conteggio dei membri della chiave dichiarate dal <code> entitySet </code>del tipo di elemento, o <code> keyValues </code> contiene un&quot;espressione con un tipo di risultato non è compatibile con il tipo di membro chiave corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica di un determinato tipo in base ai valori chiavi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Il set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Il tipo specifico di entità con riferimenti. Deve trattarsi di un tipo di entità della stessa gerarchia come tipo di elemento del set di entità."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Una raccolta di <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s che forniscono i valori di chiave. Queste espressioni devono corrispondere (in numero, tipo e ordine) le proprietà chiave del tipo di entità a cui fa riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>o <code>entityType</code> è null, o <code>keyValues</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> keyValues </code> non corrisponde al conteggio dei membri della chiave dichiarate dal <code> entitySet </code>del tipo di elemento, o <code> keyValues </code> contiene un&quot;espressione con un tipo di risultato non è compatibile con il tipo di membro chiave corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> che restituisce il dato <code> apply </code> espressione una sola volta per ogni elemento di un input specificato è impostata, che produce una raccolta di righe con l&quot;input corrispondente e applicazione delle colonne. Righe per le quali <code> apply </code> restituisce un set vuoto non sono inclusi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica il set di input."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Un metodo che specifica la logica per valutare una volta per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "Un nuovo DbApplyExpression con l&quot;oggetto di input e applicare binding e un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il risultato di <code> apply </code> contiene un nome o l&quot;espressione che è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il risultato di <code> apply </code> contiene un nome o l&quot;espressione non valida in un&quot;associazione a un&quot;espressione."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> che restituisce il dato <code> apply </code> espressione una sola volta per ogni elemento di un input specificato è impostata, che produce una raccolta di righe con l&quot;input corrispondente e applicazione delle colonne. Righe per le quali <code> apply </code> restituisce un set vuoto non sono inclusi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica il set di input."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica la logica per valutare una volta per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "Un nuovo DbApplyExpression con l&quot;oggetto di input e applicare binding e un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>apply</code> è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbCrossJoinExpression&quot;> </xref> in modo non condizionale che si unisce i set specificati dall&quot;elenco di associazioni di espressioni di input."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);
    parameters:
    - id: inputs
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
      description: "Un elenco di associazioni di espressioni che specifica il set di input."
    return:
      type: System.Data.Common.CommandTrees.DbCrossJoinExpression
      description: "Un nuovo elemento DbCrossJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di CrossJoin, che rappresenta il join non condizionale del set di input."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputs</code>è null o contiene un elemento null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputs</code>contiene meno di 2 associazioni di espressioni."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  id: Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbDerefExpression&quot;> </xref> che recupera un&quot;entità specifica un&quot;espressione di riferimento specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che fornisce il riferimento. Questa espressione deve avere un tipo di riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbDerefExpression
      description: "DbDerefExpression nuovo che recupera l&quot;entità specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato di riferimento."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  id: Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbDistinctExpression&quot;> </xref> che rimuove i duplicati dall&quot;argomento impostato indicato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il set in cui per eseguire l&quot;operazione distinto."
    return:
      type: System.Data.Common.CommandTrees.DbDistinctExpression
      description: "DbDistinctExpression nuovo che rappresenta l&quot;operazione distinct applicato all&quot;argomento set specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che divide l&quot;argomento a sinistra per l&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di divisione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico comune tra <code> left </code> o <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  id: Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbElementExpression&quot;> </xref> che converte un set in un singleton."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    return:
      type: System.Data.Common.CommandTrees.DbElementExpression
      description: "Un oggetto DbElementExpression che rappresenta la conversione dell&quot;argomento del set in un singleton."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che confronta gli argomenti a sinistra e destro per verificarne l&quot;uguaglianza."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il confronto di uguaglianza."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato confrontabile in termini di uguaglianza tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExceptExpression&quot;> </xref> che calcola la sottrazione dell&quot;argomento del set di destra dall&quot;argomento impostato a sinistra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce sinistra imposta l&quot;argomento."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il diritto imposta l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbExceptExpression
      description: "Un nuovo elemento DbExceptExpression che rappresenta la differenza tra l&quot;argomento a sinistra dall&quot;argomento a destra."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato raccolta comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  id: Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che determina se l&quot;argomento del set specificato non è vuoto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> applicato a un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> con l&quot;argomento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  id: "False"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Ottiene un <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> con il valore booleano <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> con il valore booleano <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> che filtra gli elementi nel set con il predicato specificato di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che rappresenta un predicato da valutare per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "Un nuovo oggetto DbFilterExpression che genera il set filtrato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>predicate</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati dalle espressioni sinistra e destra, nella condizione di join specificato, tramite FullOuterJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta la condizione in cui si desidera creare un join. Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica della condizione di join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di FullOuterJoin, che rappresenta l&quot;operazione full outer join applicata ai set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> joinCondition </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> joinCondition </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati per le associazioni di espressioni sinistro e destro, nella condizione di join specificato, tramite FullOuterJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la condizione in cui si desidera creare un join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di FullOuterJoin, che rappresenta l&quot;operazione full outer join applicata ai set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> joinCondition </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbEntityRefExpression&quot;> </xref> che consente di recuperare il riferimento dell&quot;entità specificata nella forma strutturale."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che fornisce l&quot;entità. Questa espressione deve essere un tipo di risultato di entità."
    return:
      type: System.Data.Common.CommandTrees.DbEntityRefExpression
      description: "DbEntityRefExpression nuovo che recupera un riferimento all&quot;entità specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato entità."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefKeyExpression&quot;> </xref> che recupera i valori di chiave del riferimento specificato in forma strutturale."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che fornisce il riferimento. Questa espressione deve avere un tipo con un tipo di elemento di entità di riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbRefKeyExpression
      description: "DbRefKeyExpression nuovo che recupera i valori di chiave del riferimento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato di riferimento."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che determina se l&quot;argomento a sinistra è maggiore dell&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il valore maggiore, di confronto."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato confrontabile in termini di ordine comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che determina se l&quot;argomento a sinistra è maggiore o uguale all&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il confronto maggiore di o uguale a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato confrontabile in termini di ordine comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  id: GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo gruppo associazione a un&quot;espressione che utilizza variabile generata e i nomi delle variabili di gruppo per associare l&quot;espressione specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Espressione da associare."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "Una nuova associazione espressione di gruppo con l&quot;espressione specificata e un nome di variabile generato e nome di variabile di gruppo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> che usa il nome di variabile specificato e i nomi delle variabili di gruppo per associare l&quot;espressione specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Espressione da associare."
    - id: varName
      type: System.String
      description: "Il nome della variabile che deve essere utilizzato per l&quot;associazione."
    - id: groupVarName
      type: System.String
      description: "Il nome della variabile che deve essere utilizzato per fare riferimento al gruppo quando la nuova associazione di espressione di gruppo viene utilizzata in un&quot;espressione di raggruppamento."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "Una nuova associazione espressione di gruppo con l&quot;espressione specificata, il nome di variabile e nome di variabile di gruppo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbGroupByExpression&quot;> </xref> che raggruppa gli elementi del set in base alle chiavi di gruppo specificato di input e applica le funzioni di aggregazione specificate."
  remarks: "DbGroupByExpression consente l&quot;elenco di chiavi o l&quot;elenco di aggregazioni sia vuoto, ma non entrambi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> che specifica il set di input."
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Un elenco di coppie di espressione stringa che definiscono le colonne di raggruppamento."
    - id: aggregates
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
      description: "Un elenco di espressioni che specificano le aggregazioni da applicare."
    return:
      type: System.Data.Common.CommandTrees.DbGroupByExpression
      description: "Un nuovo DbGroupByExpression con il set di input specificato, le chiavi di raggruppamento e aggregazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>keys</code> o <code>aggregates</code> è null, <code>keys</code> contiene una chiave di colonna null o un&quot;espressione, o <code>aggregates</code> contiene un nome di colonna null di aggregazione o un&quot;aggregazione."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Entrambi <code> keys </code> e <code> aggregates </code> sono vuote o non valido o è stato specificato il nome di colonna duplicati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati dalle espressioni sinistra e destra, nella condizione di join specificato, usando InnerJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta la condizione in cui si desidera creare un join. Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica della condizione di join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di InnerJoin, che rappresenta l&quot;operazione di inner join applicata ai set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> joinCondition </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> joinCondition </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati per le associazioni di espressioni sinistro e destro, nella condizione di join specificato, usando InnerJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la condizione in cui si desidera creare un join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di InnerJoin, che rappresenta l&quot;operazione di inner join applicata ai set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIntersectExpression&quot;> </xref> che calcola l&quot;intersezione di sinistra e destra imposta gli argomenti."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce sinistra imposta l&quot;argomento."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il diritto imposta l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbIntersectExpression
      description: "DbIntersectExpression nuovo che rappresenta l&quot;intersezione degli argomenti a sinistra e destra."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato raccolta comune tra <code> left </code> o <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> che rappresenta l&quot;applicazione della funzione Lambda specificata agli argomenti specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> istanza che rappresenta la funzione Lambda da applicare."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Un elenco di espressioni che forniscono gli argomenti."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "Un nuovo DbLambdaExpression che rappresenta l&quot;applicazione della funzione Lambda."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>o <code>arguments</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> arguments </code> è uguale al numero di variabili dichiarate da <code> lambda </code>, o <code> arguments </code> contiene un&quot;espressione che abbia un tipo di risultato che non sia uguale o promuovibile al tipo di variabile corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> che rappresenta l&quot;applicazione della funzione Lambda specificata agli argomenti specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> istanza che rappresenta la funzione Lambda da applicare."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Espressioni che forniscono gli argomenti."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "Un nuovo DbLambdaExpression che rappresenta l&quot;applicazione della funzione Lambda."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>o <code>arguments</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> arguments </code> è uguale al numero di variabili dichiarate da <code> lambda </code>, o <code> arguments </code> contiene un&quot;espressione che abbia un tipo di risultato che non sia uguale o promuovibile al tipo di variabile corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> che rappresenta la chiamata della funzione specificata con gli argomenti specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Metadati per la funzione da richiamare."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Un elenco di espressioni che forniscono gli argomenti alla funzione."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nuovo oggetto DbFunctionExpression che rappresenta la chiamata di funzione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>è null, o <code>arguments</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> arguments </code> non è uguale al numero di parametri dichiarati da <code> function </code>, o <code> arguments </code> contiene un&quot;espressione che abbia un tipo di risultato che non sia uguale o promuovibile al tipo di parametro di funzione corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> che rappresenta la chiamata della funzione specificata con gli argomenti specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Metadati per la funzione da richiamare."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Espressioni che forniscono gli argomenti alla funzione."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nuovo oggetto DbFunctionExpression che rappresenta la chiamata di funzione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>è null, o <code>arguments</code> è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di <code> arguments </code> non è uguale al numero di parametri dichiarati da <code> function </code>, o <code> arguments </code> contiene un&quot;espressione che abbia un tipo di risultato che non sia uguale o promuovibile al tipo di parametro di funzione corrispondente."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> che determina se l&quot;argomento del set specificato è un set vuoto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    return:
      type: System.Data.Common.CommandTrees.DbIsEmptyExpression
      description: "Un nuovo DbIsEmptyExpression con l&quot;argomento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  id: IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsNullExpression&quot;> </xref> che determina se l&quot;argomento specificato è null."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbIsNullExpression
      description: "Un nuovo DbIsNullExpression con l&quot;argomento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>è un tipo di risultato raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> che determina se l&quot;argomento specificato è del tipo specificato o un sottotipo."
  remarks: "È necessario che DbIsOfExpression `argument` dispone di un tipo di risultato polimorfico e che `type` è un tipo appartenente alla stessa gerarchia di tipo di tale tipo di risultato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;istanza."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Metadati del tipo che specifica il tipo che il tipo di risultato dell&quot;istanza deve essere confrontato."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "Un nuovo DbIsOfExpression con l&quot;istanza specificata e dal tipo DbExpressionKind IsOf."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>type</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>non è presente nella stessa gerarchia del tipo di risultato di tipo <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> espressione che determina se l&quot;argomento specificato è del tipo specificato e solo a quel tipo (non un sottotipo)."
  remarks: "È necessario che DbIsOfExpression `argument` dispone di un tipo di risultato polimorfico e che `type` è un tipo appartenente alla stessa gerarchia di tipo di tale tipo di risultato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;istanza."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Metadati del tipo che specifica il tipo che il tipo di risultato dell&quot;istanza deve essere confrontato."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "Un nuovo DbIsOfExpression con l&quot;istanza specificata e dal tipo DbExpressionKind IsOfOnly."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>type</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>non è presente nella stessa gerarchia del tipo di risultato di tipo <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati dalle espressioni esterne e interne, a una condizione di uguaglianza tra le chiavi di esterne e interne specificate, usando InnerJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento set esterno."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set interno."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare il valore della chiave esterno da un elemento del set esterno."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare il valore della chiave interno da un elemento del set interno."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di InnerJoin, che rappresenta l&quot;operazione di inner join applicata ai set di input sinistro e destro in una condizione di join che confronta i valori di chiave esterni e interni per verificarne l&quot;uguaglianza."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> outerKey </code> o <code> innerKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le espressioni generate da <code> outerKey </code> e <code> innerKey </code> non sono confrontabili in termini di uguaglianza."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Da aggiungere."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Da aggiungere."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Da aggiungere."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Da aggiungere."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Da aggiungere."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Da aggiungere."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> con Lambda inline specificato funzione implementazione e i parametri formali."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce la logica della funzione Lambda."
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> raccolta che rappresenta i parametri formali per la funzione Lambda. Queste variabili sono valide per l&quot;utilizzo nel `body` espressione."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Nuovo oggetto DbLambda che descrive una funzione Lambda inline con il corpo specificato e i parametri formali."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>è null o contiene un valore null, o <code>body</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>contiene più di un elemento con lo stesso nome di variabile."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> con Lambda inline specificato funzione implementazione e i parametri formali."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce la logica della funzione Lambda."
    - id: variables
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> raccolta che rappresenta i parametri formali per la funzione Lambda. Queste variabili sono valide per l&quot;utilizzo nel `body` espressione."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Nuovo oggetto DbLambda che descrive una funzione Lambda inline con il corpo specificato e i parametri formali."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>è null o contiene un valore null, o <code>body</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>contiene più di un elemento con lo stesso nome di variabile."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati dalle espressioni sinistra e destra, a condizione di join specificata, utilizzando LeftOuterJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta la condizione in cui si desidera creare un join. Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica della condizione di join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di LeftOuterJoin, che rappresenta l&quot;operazione di outer join sinistro applicato al set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> joinCondition </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> joinCondition </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> che unisce i set specificati per le associazioni di espressioni sinistro e destro, nella condizione di join specificato, utilizzando LeftOuterJoin come il <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica l&quot;argomento del set di destra."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la condizione in cui si desidera creare un join."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Nuovo oggetto DbJoinExpression, con un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di LeftOuterJoin, che rappresenta l&quot;operazione di outer join sinistro applicato al set di input sinistro e destro in condizioni di join specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che determina se l&quot;argomento a sinistra è minore dell&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il minore di-di confronto."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato confrontabile in termini di ordine comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che determina se l&quot;argomento a sinistra è minore o uguale all&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il confronto minore di-o-uguale a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato comune sia confrontabile in termini di uguaglianza e di ordinamento tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> che confronta la stringa di input specificata per il modello specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la stringa di input."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la stringa di modello."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "Un nuovo DbLikeExpression con l&quot;input specificato, modello e un escape di null."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>o <code>pattern</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Argument</code>o <code>pattern</code> non dispone di un tipo di risultato di stringa."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> che confronta la stringa di input specificata per il modello specificato utilizzando il carattere di escape facoltativa."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la stringa di input."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la stringa di modello."
    - id: escape
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Espressione facoltativa che specifica la stringa di escape."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "Un nuovo DbLikeExpression con l&quot;input specificato, modello e di escape."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>,   <code>pattern</code> or <code>escape</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>, <code>pattern</code> o <code>escape</code> non dispone di un tipo di risultato di stringa."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> che limita il numero di elementi nella raccolta di argomenti per il numero specificato il valore del limite. Risultati correlati non sono inclusi nell&quot;output."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la raccolta di input."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il valore limite."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "Un nuovo DbLimitExpression con l&quot;argomento specificato e i valori limite di conteggio che non include i risultati correlati."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>count</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta, o <code>count</code> non dispone di un tipo di risultato è uguale o promuovibile a un tipo integer a 64 bit."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che sottrae l&quot;argomento a destra dall&quot;argomento a sinistra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di sottrazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che calcola il resto dell&quot;argomento a sinistra diviso per l&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione modulo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che moltiplica l&quot;argomento a sinistra per l&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di moltiplicazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> che rappresenta la navigazione di una relazione di composizione o associazione."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>richiede che sempre navigazione venga avviata da un riferimento e pertanto `navigateFrom` deve sempre avere un tipo di risultato di riferimento.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);
    parameters:
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;istanza da cui deve verificarsi la navigazione."
    - id: fromEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadati per la proprietà che rappresenta la fine della relazione da cui deve verificarsi la navigazione."
    - id: toEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadati per la proprietà che rappresenta la fine della relazione in cui deve verificarsi la navigazione."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "Un nuovo DbRelationshipNavigationExpression che rappresenta la navigazione dell&quot;oggetto specificato da e verso le estremità di relazione del tipo di relazione specificata dall&quot;istanza di origine di navigazione specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromEnd</code>e <code>toEnd</code> non dichiarati dallo stesso tipo di relazione, o <code>navigateFrom</code> è un tipo di risultato non è compatibile con il tipo di proprietà di <code>fromEnd</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  id: Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> che rappresenta la navigazione di una relazione di composizione o associazione."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>richiede che sempre navigazione venga avviata da un riferimento e pertanto `navigateFrom` deve sempre avere un tipo di risultato di riferimento.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.RelationshipType
      description: "Metadati per il tipo di relazione che rappresenta la relazione."
    - id: fromEndName
      type: System.String
      description: "Il nome della proprietà del tipo di relazione che rappresenta la fine della relazione da cui deve verificarsi la navigazione."
    - id: toEndName
      type: System.String
      description: "Il nome della proprietà del tipo di relazione che rappresenta la fine della relazione in cui deve verificarsi la navigazione."
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione di specifica l&quot;istanza da cui naviagtion deve verificarsi."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "Un nuovo DbRelationshipNavigationExpression che rappresenta la navigazione dell&quot;oggetto specificato da e verso le estremità di relazione del tipo di relazione specificata dall&quot;istanza di origine di navigazione specificata."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>non è associato l&quot;area di lavoro metadati dell&quot;albero dei comandi o <code>navigateFrom</code> è associata a un albero dei comandi diversi o <code>type</code> non dichiara una proprietà di fine relazione con nome <code>toEndName</code> o <code>fromEndName</code>, o <code>navigateFrom</code> è un tipo di risultato non è compatibile con il tipo di proprietà della proprietà di fine relazione con nome <code>fromEndName</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  id: Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che nega il valore dell&quot;argomento."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di negazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico per <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Se l&quot;argomento di tipo è un tipo di raccolta, gli argomenti specificano gli elementi della raccolta. In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o una colonna nella nuova istanza."
  remarks: "Se `instanceType` è un insieme quindi ogni espressione di tipo `arguments` deve avere un tipo di risultato promuovibile al tipo di elemento del `instanceType`. Se `instanceType` è un tipo di riga, `arguments` deve contenere il numero di espressioni sono presenti colonne nel tipo di riga e il tipo di risultato di ogni espressione deve essere uguale o promuovibile al tipo della colonna corrispondente. Un tipo di riga che dichiara alcuna colonna non è valido. Se `instanceType` è un tipo di entità `arguments` devono contenere tante espressioni sono definite dal tipo di proprietà e il tipo di risultato di ogni espressione deve essere uguale o promuovibile al tipo della proprietà corrispondente."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo della nuova istanza."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Le espressioni che specificano i valori delle nuove istanze, interpretato in base al tipo dell&quot;istanza."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression con il tipo specificato e gli argomenti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>o <code>arguments</code> è null, o <code>arguments</code> contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>è vuoto o i tipi di risultato contenuto espressioni non soddisfano i requisiti della <code>instanceType</code> (come descritto nella sezione Osservazioni)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Se l&quot;argomento di tipo è un tipo di raccolta, gli argomenti specificano gli elementi della raccolta. In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o una colonna nella nuova istanza."
  remarks: "Se `instanceType` è un insieme quindi ogni espressione di tipo `arguments` deve avere un tipo di risultato promuovibile al tipo di elemento del `instanceType`. Se `instanceType` è un tipo di riga, `arguments` deve contenere il numero di espressioni sono presenti colonne nel tipo di riga e il tipo di risultato di ogni espressione deve essere uguale o promuovibile al tipo della colonna corrispondente. Un tipo di riga che dichiara alcuna colonna non è valido. Se `instanceType` è un tipo di entità `arguments` devono contenere tante espressioni sono definite dal tipo di proprietà e il tipo di risultato di ogni espressione deve essere uguale o promuovibile al tipo della proprietà corrispondente."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo della nuova istanza."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Le espressioni che specificano i valori delle nuove istanze, interpretato in base al tipo dell&quot;istanza."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression con il tipo specificato e gli argomenti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>o <code>arguments</code> è null, o <code>arguments</code> contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>è vuoto o i tipi di risultato contenuto espressioni non soddisfano i requisiti della <code>instanceType</code> (come descritto nella sezione Osservazioni)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> che costruisce una raccolta contenente gli elementi specificati. Il tipo di raccolta è basato sul tipo comune degli elementi. Se non esiste alcun tipo di elemento comune viene generata un&quot;eccezione."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Un elenco di espressioni che forniscono gli elementi della raccolta."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression con il tipo di raccolta specificato e gli argomenti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>è null o contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>è vuoto o contiene espressioni per cui non esiste alcun tipo di risultato."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> che costruisce una raccolta contenente gli elementi specificati. Il tipo di raccolta è basato sul tipo comune degli elementi. Se non esiste alcun tipo di elemento comune viene generata un&quot;eccezione."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);
    parameters:
    - id: elements
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Un elenco di espressioni che forniscono gli elementi della raccolta."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression con il tipo di raccolta specificato e gli argomenti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>è null o contiene un valore null..."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>è vuoto o contiene espressioni per cui non esiste alcun tipo di risultato."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> che costruisce una raccolta vuota di tipo dell&quot;insieme specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);
    parameters:
    - id: collectionType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "I metadati del tipo per la raccolta creare"
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression con il tipo di raccolta specificato e un oggetto vuoto <code> Arguments </code> elenco."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collectionType</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionType</code>non è un tipo di raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> che produce una riga con le colonne denominate e i valori specificati, specificati come espressioni."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);
    parameters:
    - id: columnValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Un elenco di coppie chiave-valore stringa DbExpression che definisce la struttura e i valori della riga."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Un nuovo oggetto DbNewInstanceExpression che rappresenta la costruzione della riga."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>columnValues</code>è null o contiene un elemento con un nome di colonna null o un&quot;espressione."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>columnValues</code>è vuoto o contiene un nome di colonna duplicati o non valido."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  id: Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> che esegue la negazione logica dell&quot;argomento specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione booleana che specifica l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbNotExpression
      description: "Un nuovo DbNotExpression con l&quot;argomento specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> che confronta gli argomenti a sinistra e destro per stabilirne la disuguaglianza."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Un nuovo DbComparisonExpression che rappresenta il confronto di disuguaglianza."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato confrontabile in termini di uguaglianza tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  id: Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbNullExpression&quot;> </xref>, che rappresenta un valore null tipizzato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);
    parameters:
    - id: nullType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo del valore null."
    return:
      type: System.Data.Common.CommandTrees.DbNullExpression
      description: "Un&quot;istanza di DbNullExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nullType</code>è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> che produce un set costituito dagli elementi di input specificato set che sono del tipo specificato."
  remarks: "DbOfTypeExpression richiede che `argument` dispone di una raccolta con un tipo di elemento polimorfico e che tipo di risultato `type` è un tipo appartenente alla stessa gerarchia di tipo come tipo di elemento."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica il set di input."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Tipo di metadati per il tipo che gli elementi del set di input devono contenere per essere incluso nel set risultante."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "Un nuovo DbOfTypeExpression con argomento set specificato di tipo e un ExpressionKind di <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>type</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta, o <code>type</code> non è un tipo nella gerarchia dei tipi stessa come tipo di elemento di tipo di risultato raccolta del <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> che produce un set costituito dagli elementi di input specificato set che sono esattamente nel tipo specificato."
  remarks: "DbOfTypeExpression richiede che `argument` dispone di una raccolta con un tipo di elemento polimorfico e che tipo di risultato `type` è un tipo appartenente alla stessa gerarchia di tipo come tipo di elemento."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica il set di input."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Tipo di metadati per il tipo che devono corrispondere esattamente a elementi del set di input da includere nel set risultante."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "Un nuovo DbOfTypeExpression con argomento set specificato di tipo e un ExpressionKind di <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>type</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta, o <code>type</code> non è un tipo nella gerarchia dei tipi stessa come tipo di elemento di tipo di risultato raccolta del <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un <xref href=&quot;System.Data.Common.CommandTrees.DbOrExpression&quot;> </xref> che esegue la logica o degli argomenti a sinistra e destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione booleana che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione booleana che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbOrExpression
      description: "Un nuovo DbOrExpression con gli argomenti specificati."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>o <code>right</code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che ordina il set con la chiave di ordinamento specificato, con ordine crescente di ordinamento ordine e l&quot;impostazione predefinita le regole di confronto di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione chiave di ordinamento dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta l&quot;operazione order by."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che consente di ordinare l&quot;input specificato, imposta la chiave di ordinamento specificato, con ordine crescente e le regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione chiave di ordinamento dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta l&quot;operazione order by."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo di risultato confrontabile in termini di stringa."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che ordina il set con la chiave di ordinamento specificato, con ordine decrescente di ordinamento ordine e l&quot;impostazione predefinita le regole di confronto di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione chiave di ordinamento dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta l&quot;operazione order by."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che consente di ordinare l&quot;input specificato, imposta la chiave di ordinamento specificato, con ordine decrescente di ordinamento e regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione chiave di ordinamento dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta l&quot;operazione order by."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo di risultato confrontabile in termini di stringa."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> che restituisce il dato <code> apply </code> espressione una sola volta per ogni elemento di un input specificato è impostata, che produce una raccolta di righe con l&quot;input corrispondente e applicazione delle colonne. Righe per le quali <code> apply </code> restituisce un set vuoto presentano un colonna valore apply <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica il set di input."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Un metodo che specifica la logica per valutare una volta per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "Un nuovo DbApplyExpression con l&quot;oggetto di input e applicare binding e un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di OuterApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il risultato di <code> apply </code> contiene un nome o l&quot;espressione che è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il risultato di <code> apply </code> contiene un nome o l&quot;espressione non valida in un&quot;associazione a un&quot;espressione."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> che restituisce il dato <code> apply </code> espressione una sola volta per ogni elemento di un input specificato è impostata, che produce una raccolta di righe con l&quot;input corrispondente e applicazione delle colonne. Righe per le quali <code> apply </code> restituisce un set vuoto presentano un colonna valore apply <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica il set di input."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> che specifica la logica per valutare una volta per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "Un nuovo DbApplyExpression con l&quot;oggetto di input e applicare binding e un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di OuterApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>apply</code> è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> che fa riferimento a un parametro con il nome e tipo specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo del parametro di riferimento."
    - id: name
      type: System.String
      description: "Il nome del parametro di riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression
      description: "DbParameterReferenceExpression che rappresenta un riferimento a un parametro con il nome e tipo specificati. Il tipo di risultato dell&quot;espressione sarà la stessa <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che aggiunge l&quot;argomento a sinistra per l&quot;argomento a destra."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a sinistra."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento a destra."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di addizione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico comune tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> che proietta l&quot;espressione specificata sul set di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: projection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione per proiettare su set."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Nuovo oggetto DbProjectExpression che rappresenta l&quot;operazione di proiezione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>projection</code> è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> che rappresenta il recupero della proprietà specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;istanza da cui recuperare la proprietà. Può essere null se la proprietà è statica."
    - id: propertyMetadata
      type: System.Data.Metadata.Edm.EdmProperty
      description: "Metadati per la proprietà da recuperare."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "Un nuovo oggetto DbPropertyExpression che rappresenta il recupero di proprietà."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyMetadata</code>è null o <code>instance</code> è null e la proprietà non è statica."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> che rappresenta il recupero delle proprietà di navigazione specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;istanza da cui recuperare la proprietà di navigazione."
    - id: navigationProperty
      type: System.Data.Metadata.Edm.NavigationProperty
      description: "Metadati per la proprietà di navigazione da recuperare."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "Un nuovo oggetto DbPropertyExpression che rappresenta il recupero di proprietà di navigazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>navigationProperty</code>o <code>instance</code> è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> che rappresenta il recupero del membro end relazione specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;istanza da cui recuperare il membro di entità finale della relazione."
    - id: relationshipEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadati per il membro finale della relazione da recuperare."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "Un nuovo oggetto DbPropertyExpression che rappresenta il recupero di membri di fine relazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipEnd</code>è null o <code>instance</code> è null e la proprietà non è statica."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> che rappresenta il recupero della proprietà di istanza con il nome specificato dall&quot;istanza specificata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;istanza da cui recuperare la proprietà."
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà da recuperare."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "Un nuovo oggetto DbPropertyExpression che rappresenta il recupero di proprietà."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>è null o <code>instance</code> è null e la proprietà non è statica."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Nessuna proprietà con il nome specificato viene dichiarata dal tipo di <code> instance </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica in base ai valori chiavi."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che costruisce le proprietà chiave del tipo di entità a cui fa riferimento a un record con le colonne che corrispondono (in numero, tipo e ordine)."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>o <code>keyRow</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyRow</code>non dispone di un tipo di risultato record corrispondente alle proprietà chiave del tipo di entità del set di entità con riferimenti."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> che consente di codificare un riferimento a un&quot;entità specifica in base ai valori chiavi."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Set di entità in cui si trova l&quot;elemento a cui fa riferimento."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che costruisce le proprietà chiave del tipo di entità a cui fa riferimento a un record con le colonne che corrispondono (in numero, tipo e ordine)."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Il tipo di entità che il riferimento deve fare riferimento a."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "DbRefExpression nuovo che fa riferimento all&quot;elemento con i valori di chiave specificati nel set di entità specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entityType</code>non è presente nella stessa gerarchia di tipo come tipo di entità del set di entità, o <code>keyRow</code> non dispone di un tipo di risultato record corrispondente alle proprietà chiave del tipo di entità del set di entità con riferimenti."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  id: Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbScanExpression&quot;> </xref> che fa riferimento al set di entità o la relazione specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);
    parameters:
    - id: targetSet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Metadati per il set di entità o di relazione fare riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbScanExpression
      description: "Un oggetto DbScanExpression di nuovo in base al set di entità o la relazione specificato."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetSet</code>è null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  id: Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Da aggiungere."
    - id: projection
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
      description: "Da aggiungere."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Da aggiungere."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> che restituisce il dato <code> apply </code> espressione una sola volta per ogni elemento di un input specificato è impostata, che produce una raccolta di righe con l&quot;input corrispondente e applicazione delle colonne. Righe per le quali <code> apply </code> restituisce un set vuoto non sono inclusi. Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> viene quindi creato che seleziona il <code> apply </code> colonna da ogni riga, producendo insieme complessivo di <code> apply </code> risultati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che specifica il set di input."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta la logica per valutare una volta per ogni membro del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Un nuovo oggetto DbProjectExpression che Seleziona colonna applica un nuovo DbApplyExpression con le associazioni specificate di input e applicazione e un <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> di CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> apply </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> apply </code> non dispone di un tipo di raccolta."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Da aggiungere."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Da aggiungere."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Da aggiungere."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Da aggiungere."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> che ignora il numero specificato di elementi del set specificato di input ordinato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che specifica il set di input ordinato."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione di specifica il numero di elementi del set ordinato da ignorare."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "DbSkipExpression nuovo che rappresenta l&quot;operazione di skip."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>count</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>non è <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> o <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> o ha un tipo di risultato non è uguale o promuovibile a un tipo integer a 64 bit."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> che ordina il set in base alle specifiche ordinamento specificata prima di ignorare il numero specificato di elementi di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "Un elenco delle specifiche di ordinamento che determinano la modalità di ordinamento gli elementi del set di input."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione di specifica il numero di elementi del set ordinato da ignorare."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "DbSkipExpression nuovo che rappresenta l&quot;operazione di skip."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>sortOrder</code> o <code>count</code> è null, o <code>sortOrder</code> contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>è vuoto, o <code>count</code> non <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> o <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> o ha un tipo di risultato non è uguale o promuovibile a un tipo integer a 64 bit."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che ordina il set in base alle specifiche ordinamento specificato di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Un&quot;espressione di associazione che specifica il set di input."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "Un elenco delle specifiche di ordinamento che determinano la modalità di ordinamento gli elementi del set di input."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta l&quot;operazione di ordinamento."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>o <code>sortOrder</code> è null, o <code>sortOrder</code> contiene un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>è vuoto."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> che limita il numero di elementi nella raccolta di argomenti per il numero specificato il valore del limite. Risultati correlati non sono inclusi nell&quot;output."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica la raccolta di input."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il valore limite."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "Un nuovo DbLimitExpression con l&quot;argomento specificato e i valori limite di conteggio che non include i risultati correlati."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>count</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>non dispone di un tipo di risultato raccolta, <code>count</code> non dispone di un tipo di risultato è uguale o promuovibile a un tipo integer a 64 bit."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> set insieme alla chiave di ordinamento specificato in ordine crescente e con regole di confronto predefinite di input che con un ordinamento che include l&quot;ordinamento dell&quot;ordine specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression che specifica il set di input ordinato."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione della chiave di ordinamento aggiuntive dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta il nuovo ordinamento operazione globale."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortKey</code>non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che con un ordinamento che include l&quot;ordinamento dell&quot;ordine specificato di input set insieme alla chiave di ordinamento specificato in ordine crescente e con le regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression che specifica il set di input ordinato."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione della chiave di ordinamento aggiuntive dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta il nuovo ordinamento operazione globale."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo di risultato confrontabile in termini di stringa."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> set insieme alla chiave di ordinamento specificato in ordine decrescente e con regole di confronto predefinite di input che con un ordinamento che include l&quot;ordinamento dell&quot;ordine specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression che specifica il set di input ordinato."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione della chiave di ordinamento aggiuntive dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta il nuovo ordinamento operazione globale."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> che con un ordinamento che include l&quot;ordinamento dell&quot;ordine specificato di input set insieme alla chiave di ordinamento specificato in ordine decrescente e con le regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression che specifica il set di input ordinato."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che specifica come derivare l&quot;espressione della chiave di ordinamento aggiuntive dato un membro del set di input. Questo metodo deve produrre un&quot;espressione con un tipo di risultato confrontabile in termini che fornisce l&quot;ordinamento definizione della chiave."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression nuovo che rappresenta il nuovo ordinamento operazione globale."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> sortKey </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> sortKey </code> non dispone di un tipo di risultato confrontabile in termini di stringa."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> con un ordine crescente ordinamento ordine e l&quot;impostazione predefinita le regole di confronto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che definisce la chiave di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Una nuova clausola di ordinamento con la chiave di ordinamento specificata e l&quot;ordinamento crescente."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> con un ordinamento crescente e le regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che definisce la chiave di ordinamento."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Una nuova clausola di ordinamento con la chiave di ordinamento specificata e le regole di confronto e ordinamento crescente."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>è null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> con ordine decrescente ordinamento ordine e l&quot;impostazione predefinita le regole di confronto."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che definisce la chiave di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Una nuova clausola di ordinamento con la chiave di ordinamento specificata e l&quot;ordinamento decrescente."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> con un ordinamento decrescente e le regole di confronto specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "L&quot;espressione che definisce la chiave di ordinamento."
    - id: collation
      type: System.String
      description: "Le regole di confronto di ordinamento."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Una nuova clausola di ordinamento con la chiave di ordinamento specificata e le regole di confronto e ordinamento decrescente."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>è null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>è vuoto o contiene solo spazi."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>non dispone di un tipo confrontabile in termini di risultati."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbTreatExpression&quot;> </xref>."
  remarks: "È necessario che DbTreatExpression `argument` dispone di un tipo di risultato polimorfico e che `treatType` è un tipo appartenente alla stessa gerarchia di tipo di tale tipo di risultato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;istanza."
    - id: treatType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Metadati del tipo per il trattamento-come tipo."
    return:
      type: System.Data.Common.CommandTrees.DbTreatExpression
      description: "Un nuovo DbTreatExpression con l&quot;argomento specificato e il tipo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>o <code>treatType</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>treatType</code>non è presente nella stessa gerarchia del tipo di risultato di tipo <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  id: "True"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Ottiene un <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> con il valore booleano <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> con il valore booleano <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> che nega il valore dell&quot;argomento."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Un nuovo DbArithmeticExpression che rappresenta l&quot;operazione di negazione."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato numerico per <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che calcola l&quot;unione di sinistra e destra imposta gli argomenti con i duplicati rimossi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce sinistra imposta l&quot;argomento."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il diritto imposta l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un nuovo DbExpression che calcola l&quot;unione, senza duplicati e di argomenti a sinistra e destra."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato raccolta comune con un tipo di elemento confrontabile in termini di uguaglianza tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbUnionAllExpression&quot;> </xref> che calcola l&quot;unione degli argomenti di set sinistro e destro e non rimuovere i duplicati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce sinistra imposta l&quot;argomento."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che definisce il diritto imposta l&quot;argomento."
    return:
      type: System.Data.Common.CommandTrees.DbUnionAllExpression
      description: "Un tale unione, incluse quelle duplicate, di impostazione DbUnionAllExpression nuova di argomenti a sinistra e destra."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>o <code>right</code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Non esiste alcun tipo di risultato raccolta comune con un tipo di elemento confrontabile in termini di uguaglianza tra <code> left </code> e <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> che fa riferimento a una variabile con il nome e tipo specificati."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Il tipo della variabile di riferimento."
    - id: name
      type: System.String
      description: "Il nome della variabile di riferimento."
    return:
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression
      description: "Un oggetto DbVariableReferenceExpression che rappresenta un riferimento a una variabile con il nome e tipo specificati. Il tipo di risultato dell&quot;espressione sarà la stessa <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> che filtra gli elementi nel set con il predicato specificato di input specificato."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Un&quot;espressione che specifica il set di input."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Un metodo che rappresenta il predicato da valutare per ogni membro del set di input.    Questo metodo deve produrre un&quot;espressione con un tipo di risultato Boolean che fornisce la logica di predicato."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "Nuovo oggetto DbQuantifierExpression che rappresenta l&quot;operazione di qualsiasi."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;espressione generata da <code> predicate </code> è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;espressione generata da <code> predicate </code> non dispone di un tipo di risultato Boolean."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionAggregate
  nameWithType: DbFunctionAggregate
  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbAndExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAndExpression
  nameWithType: DbAndExpression
  fullName: System.Data.Common.CommandTrees.DbAndExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbAggregate>
  nameWithType: KeyValuePair<String,DbAggregate>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAggregate
  nameWithType: DbAggregate
  fullName: System.Data.Common.CommandTrees.DbAggregate
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
- uid: System.Data.Common.CommandTrees.DbCaseExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCaseExpression
  nameWithType: DbCaseExpression
  fullName: System.Data.Common.CommandTrees.DbCaseExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbCastExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCastExpression
  nameWithType: DbCastExpression
  fullName: System.Data.Common.CommandTrees.DbCastExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System
  isExternal: true
  name: Func<DbExpression,KeyValuePair<String,DbExpression>>
  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCrossJoinExpression
  nameWithType: DbCrossJoinExpression
  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpressionBinding>
  nameWithType: IEnumerable<DbExpressionBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpressionBinding
    name: DbExpressionBinding
    nameWithType: DbExpressionBinding
    fullName: DbExpressionBinding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDerefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDerefExpression
  nameWithType: DbDerefExpression
  fullName: System.Data.Common.CommandTrees.DbDerefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDistinctExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDistinctExpression
  nameWithType: DbDistinctExpression
  fullName: System.Data.Common.CommandTrees.DbDistinctExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
- uid: System.Data.Common.CommandTrees.DbElementExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbElementExpression
  nameWithType: DbElementExpression
  fullName: System.Data.Common.CommandTrees.DbElementExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExceptExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExceptExpression
  nameWithType: DbExceptExpression
  fullName: System.Data.Common.CommandTrees.DbExceptExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
- uid: System.Data.Common.CommandTrees.DbEntityRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbEntityRefExpression
  nameWithType: DbEntityRefExpression
  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
- uid: System.Data.Common.CommandTrees.DbRefKeyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefKeyExpression
  nameWithType: DbRefKeyExpression
  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
- uid: System.Data.Common.CommandTrees.DbGroupByExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupByExpression
  nameWithType: DbGroupByExpression
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbExpression>>
  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbAggregate>>
  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbIntersectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIntersectExpression
  nameWithType: DbIntersectExpression
  fullName: System.Data.Common.CommandTrees.DbIntersectExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbLambdaExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambdaExpression
  nameWithType: DbLambdaExpression
  fullName: System.Data.Common.CommandTrees.DbLambdaExpression
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsEmptyExpression
  nameWithType: DbIsEmptyExpression
  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsNullExpression
  nameWithType: DbIsNullExpression
  fullName: System.Data.Common.CommandTrees.DbIsNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbIsOfExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsOfExpression
  nameWithType: DbIsOfExpression
  fullName: System.Data.Common.CommandTrees.DbIsOfExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,TSelector>
  nameWithType: Func<DbExpression,DbExpression,TSelector>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSelector
    name: TSelector
    nameWithType: TSelector
    fullName: TSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbVariableReferenceExpression>
  nameWithType: IEnumerable<DbVariableReferenceExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLikeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLikeExpression
  nameWithType: DbLikeExpression
  fullName: System.Data.Common.CommandTrees.DbLikeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLimitExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLimitExpression
  nameWithType: DbLimitExpression
  fullName: System.Data.Common.CommandTrees.DbLimitExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRelationshipNavigationExpression
  nameWithType: DbRelationshipNavigationExpression
  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
- uid: System.Data.Metadata.Edm.RelationshipType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: System.Data.Metadata.Edm.RelationshipType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
- uid: System.Data.Common.CommandTrees.DbNotExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNotExpression
  nameWithType: DbNotExpression
  fullName: System.Data.Common.CommandTrees.DbNotExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
- uid: System.Data.Common.CommandTrees.DbNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNullExpression
  nameWithType: DbNullExpression
  fullName: System.Data.Common.CommandTrees.DbNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbOfTypeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOfTypeExpression
  nameWithType: DbOfTypeExpression
  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbOrExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOrExpression
  nameWithType: DbOrExpression
  fullName: System.Data.Common.CommandTrees.DbOrExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbParameterReferenceExpression
  nameWithType: DbParameterReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Metadata.Edm.EdmProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmProperty
  nameWithType: EdmProperty
  fullName: System.Data.Metadata.Edm.EdmProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
- uid: System.Data.Metadata.Edm.NavigationProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: NavigationProperty
  nameWithType: NavigationProperty
  fullName: System.Data.Metadata.Edm.NavigationProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
- uid: System.Data.Common.CommandTrees.DbScanExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbScanExpression
  nameWithType: DbScanExpression
  fullName: System.Data.Common.CommandTrees.DbScanExpression
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
  parent: System
  isExternal: true
  name: Func<DbExpression,TProjection>
  nameWithType: Func<DbExpression,TProjection>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TProjection
    name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbSortClause>
  nameWithType: IEnumerable<DbSortClause>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbSortClause
    name: DbSortClause
    nameWithType: DbSortClause
    fullName: DbSortClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbTreatExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbTreatExpression
  nameWithType: DbTreatExpression
  fullName: System.Data.Common.CommandTrees.DbTreatExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbUnionAllExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbUnionAllExpression
  nameWithType: DbUnionAllExpression
  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate
  nameWithType: DbExpressionBuilder.Aggregate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct
  nameWithType: DbExpressionBuilder.AggregateDistinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All
  nameWithType: DbExpressionBuilder.All
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And
  nameWithType: DbExpressionBuilder.And
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any
  nameWithType: DbExpressionBuilder.Any
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As
  nameWithType: DbExpressionBuilder.As
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind
  nameWithType: DbExpressionBuilder.Bind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs
  nameWithType: DbExpressionBuilder.BindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case
  nameWithType: DbExpressionBuilder.Case
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo
  nameWithType: DbExpressionBuilder.CastTo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant
  nameWithType: DbExpressionBuilder.Constant
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef
  nameWithType: DbExpressionBuilder.CreateRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply
  nameWithType: DbExpressionBuilder.CrossApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin
  nameWithType: DbExpressionBuilder.CrossJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref
  nameWithType: DbExpressionBuilder.Deref
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct
  nameWithType: DbExpressionBuilder.Distinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide
  nameWithType: DbExpressionBuilder.Divide
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element
  nameWithType: DbExpressionBuilder.Element
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal
  nameWithType: DbExpressionBuilder.Equal
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except
  nameWithType: DbExpressionBuilder.Except
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists
  nameWithType: DbExpressionBuilder.Exists
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter
  nameWithType: DbExpressionBuilder.Filter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin
  nameWithType: DbExpressionBuilder.FullOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef
  nameWithType: DbExpressionBuilder.GetEntityRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey
  nameWithType: DbExpressionBuilder.GetRefKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan
  nameWithType: DbExpressionBuilder.GreaterThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind
  nameWithType: DbExpressionBuilder.GroupBind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs
  nameWithType: DbExpressionBuilder.GroupBindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy
  nameWithType: DbExpressionBuilder.GroupBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin
  nameWithType: DbExpressionBuilder.InnerJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect
  nameWithType: DbExpressionBuilder.Intersect
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke
  nameWithType: DbExpressionBuilder.Invoke
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty
  nameWithType: DbExpressionBuilder.IsEmpty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull
  nameWithType: DbExpressionBuilder.IsNull
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf
  nameWithType: DbExpressionBuilder.IsOf
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly
  nameWithType: DbExpressionBuilder.IsOfOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join
  nameWithType: DbExpressionBuilder.Join
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join<TSelector>
  nameWithType: DbExpressionBuilder.Join<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda
  nameWithType: DbExpressionBuilder.Lambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin
  nameWithType: DbExpressionBuilder.LeftOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan
  nameWithType: DbExpressionBuilder.LessThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual
  nameWithType: DbExpressionBuilder.LessThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like
  nameWithType: DbExpressionBuilder.Like
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit
  nameWithType: DbExpressionBuilder.Limit
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus
  nameWithType: DbExpressionBuilder.Minus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo
  nameWithType: DbExpressionBuilder.Modulo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply
  nameWithType: DbExpressionBuilder.Multiply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate
  nameWithType: DbExpressionBuilder.Navigate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate
  nameWithType: DbExpressionBuilder.Negate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New
  nameWithType: DbExpressionBuilder.New
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection
  nameWithType: DbExpressionBuilder.NewCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection
  nameWithType: DbExpressionBuilder.NewEmptyCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow
  nameWithType: DbExpressionBuilder.NewRow
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not
  nameWithType: DbExpressionBuilder.Not
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual
  nameWithType: DbExpressionBuilder.NotEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "Null"
  nameWithType: DbExpressionBuilder.Null
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType
  nameWithType: DbExpressionBuilder.OfType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly
  nameWithType: DbExpressionBuilder.OfTypeOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or
  nameWithType: DbExpressionBuilder.Or
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy
  nameWithType: DbExpressionBuilder.OrderBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending
  nameWithType: DbExpressionBuilder.OrderByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply
  nameWithType: DbExpressionBuilder.OuterApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter
  nameWithType: DbExpressionBuilder.Parameter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus
  nameWithType: DbExpressionBuilder.Plus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project
  nameWithType: DbExpressionBuilder.Project
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property
  nameWithType: DbExpressionBuilder.Property
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey
  nameWithType: DbExpressionBuilder.RefFromKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan
  nameWithType: DbExpressionBuilder.Scan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select<TProjection>
  nameWithType: DbExpressionBuilder.Select<TProjection>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany
  nameWithType: DbExpressionBuilder.SelectMany
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany<TSelector>
  nameWithType: DbExpressionBuilder.SelectMany<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip
  nameWithType: DbExpressionBuilder.Skip
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort
  nameWithType: DbExpressionBuilder.Sort
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take
  nameWithType: DbExpressionBuilder.Take
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy
  nameWithType: DbExpressionBuilder.ThenBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending
  nameWithType: DbExpressionBuilder.ThenByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause
  nameWithType: DbExpressionBuilder.ToSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending
  nameWithType: DbExpressionBuilder.ToSortClauseDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs
  nameWithType: DbExpressionBuilder.TreatAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus
  nameWithType: DbExpressionBuilder.UnaryMinus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union
  nameWithType: DbExpressionBuilder.Union
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll
  nameWithType: DbExpressionBuilder.UnionAll
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable
  nameWithType: DbExpressionBuilder.Variable
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where
  nameWithType: DbExpressionBuilder.Where
