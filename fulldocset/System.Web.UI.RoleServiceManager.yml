### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Configura il percorso di un&quot;implementazione personalizzata del servizio ruolo."
  remarks: "La classe RoleServiceManager corrisponde alla <xref:System.Web.UI.ScriptManager.RoleService%2A>proprietà del <xref:System.Web.UI.ScriptManager>o <xref:System.Web.UI.ScriptManagerProxy>controllo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       Il ruolo del servizio Web viene utilizzato dalle applicazioni compatibili con AJAX per recuperare informazioni sui ruoli per l&quot;utente autenticato corrente tramite una chiamata asincrona di servizio Web. È possibile utilizzare RoleServiceManager per specificare il percorso di un&quot;implementazione alternativa del ruolo del servizio Web anziché utilizzare il servizio Web incorporato.       Per utilizzare il servizio di ruolo nell&quot;applicazione, è necessario abilitarla nel file di configurazione e dichiararlo nella pagina. Se si utilizza il ruolo predefinito del servizio Web, è necessario abilitarlo, ma non è necessario dichiarare in modo esplicito il ruolo di gestore del servizio nella pagina.       Per creare un servizio ruolo personalizzato, è necessario implementare un servizio Web che dispone di due metodi: `GetRolesForCurrentUser` e `IsCurrentUserInRole`. Questi metodi devono avere la stessa firma dei metodi corrispondenti del ruolo predefinito del servizio Web.       Nell&quot;esempio seguente viene illustrata la struttura della classe base che deve essere implementata in un classe del servizio Web di ruolo personalizzata.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] per utilizzare un servizio Web ruolo personalizzato, è possibile aggiungere il servizio in modo dichiarativo nel markup inserendo un `RoleService` elemento all&quot;interno di <xref:System.Web.UI.ScriptManager>controllare, come illustrato nell&quot;esempio seguente.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```È possibile impostare anche a livello di codice il <xref:System.Web.UI.RoleServiceManager.Path%2A>proprietà per l&quot;utilizzo di un servizio Web ruolo personalizzato.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> classe."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Ottiene o imposta un valore che indica se è necessario recuperare l&quot;elenco di ruoli per l&quot;utente attualmente connesso."
  remarks: "Se la proprietà LoadRoles è impostata su `true`, l&quot;elenco di ruoli viene recuperato dalla <xref:System.Web.UI.RoleServiceManager>classe utilizzando il <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>metodo.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> L&quot;elenco viene quindi serializzato nel markup della pagina.      > [!NOTE] > LoadRoles quando è `true`, tutti i ruoli a cui appartiene l&quot;utente autenticato corrente vengono inviati al browser. Poiché gli utenti possono potenzialmente di visualizzare le informazioni sui ruoli, può trattarsi di un problema di sicurezza.       La proprietà LoadRoles può essere specificata nel <xref:System.Web.UI.ScriptManager>controllo o in un oggetto associato <xref:System.Web.UI.ScriptManagerProxy>controllo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Se LoadRoles è impostata su `true` per un&quot;istanza del proxy, l&quot;elenco di ruoli viene recuperato e aggiunto alla pagina. Se è LoadRoles `false`, i ruoli non vengono aggiunti al markup della pagina. In tal caso, è possibile utilizzare il metodo per archiviare le informazioni sui ruoli in memoria nel browser."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è necessario recuperare l&quot;elenco di ruoli; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Ottiene o imposta il percorso del servizio ruolo."
  remarks: "Se la proprietà Path non è impostata, il valore restituito è <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> In tal caso, ASP.NET usa l&quot;autenticazione predefinita del servizio Web che corrisponde al percorso predefinito interno seguenti: ~ / /RolesService.svc.. Lo stesso comportamento si verifica se si imposta percorso di una stringa vuota o a `null`.       Percorso può essere specificato nel <xref:System.Web.UI.ScriptManager>controllo o in un oggetto associato <xref:System.Web.UI.ScriptManagerProxy>controllo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Impostato al percorso di <xref:System.Web.UI.ScriptManagerProxy>livello, le condizioni seguenti sono vere:-se sono presenti più oggetti proxy nella gerarchia, percorso non è necessario impostare per ogni istanza del proxy.</xref:System.Web.UI.ScriptManagerProxy>      -Se percorso è impostato in modo esplicito per un oggetto proxy, il valore deve essere uguale per tutti gli altri oggetti proxy impostato per questa proprietà. Se si impostano percorsi diversi per gli oggetti proxy differenti nella gerarchia del controllo, un <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Il percorso del servizio Web ruolo personalizzato."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "È stato impostato più di un percorso univoco nella gerarchia del controllo."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
