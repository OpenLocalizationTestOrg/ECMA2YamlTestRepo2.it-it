### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder
  id: AttributeTableBuilder
  children:
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  langs:
  - csharp
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder
  type: Class
  summary: "Crea e popola un <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref> che viene utilizzato il <xref href=&quot;System.Activities.Presentation.Metadata.MetadataStore&quot;> </xref> per fornire registrazione e ricerca degli attributi."
  remarks: "Utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, e <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A>per popolare il generatore, quindi chiamare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>di acquisire un <xref:System.Activities.Presentation.Metadata.AttributeTable>contenente la raccolta desiderata di attributi.</xref:System.Activities.Presentation.Metadata.AttributeTable> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public class AttributeTableBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTableBuilder&quot;> </xref> classe."
  syntax:
    content: public AttributeTableBuilder ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  id: AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Specifica un callback che verrà richiamato quando sono necessario metadati per il tipo specificato."
  remarks: "La prima volta un <xref:System.Activities.Presentation.Metadata.AttributeTable>restituito da <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>viene eseguita una query per gli attributi per `type`, `callback` viene chiamato per fornire le informazioni sui metadati.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTable>"
  syntax:
    content: public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo per cui il callback fornirà i metadati."
    - id: callback
      type: System.Activities.Presentation.Metadata.AttributeCallback
      description: "Il metodo di callback."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto degli attributi specificati a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti.       Quando si compila una tabella di attributi di grandi dimensioni, utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>per rinviare la creazione degli attributi finché sono necessari.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo da aggiungere attributi a livello di classe."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi che vengono aggiunti al generatore."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto degli attributi specificati a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti.       Quando si compila una tabella di attributi di grandi dimensioni, utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>per rinviare la creazione degli attributi finché sono necessari.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Il tipo che contiene il membro identificato da `descriptor`."
    - id: descriptor
      type: System.ComponentModel.MemberDescriptor
      description: "L&quot;evento o informazioni sulle proprietà che vengono aggiunti gli attributi."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi che vengono aggiunti al generatore."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto degli attributi specificati a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti.       Quando si compila una tabella di attributi di grandi dimensioni, utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>per rinviare la creazione degli attributi finché sono necessari.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Il tipo che contiene il membro identificato da `member`."
    - id: member
      type: System.Reflection.MemberInfo
      description: "L&quot;evento o informazioni sulle proprietà che vengono aggiunti gli attributi."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi che vengono aggiunti al generatore."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>member</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto degli attributi specificati a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti.       Quando si compila una tabella di attributi di grandi dimensioni, utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>per rinviare la creazione degli attributi finché sono necessari.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, string memberName, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Il tipo che contiene il membro identificato da `memberName`."
    - id: memberName
      type: System.String
      description: "Il nome delle informazioni di evento o proprietà che vengono aggiunti gli attributi."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi che vengono aggiunti al generatore."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto degli attributi specificati a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti.       Quando si compila una tabella di attributi di grandi dimensioni, utilizzare <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>per rinviare la creazione degli attributi finché sono necessari.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Il tipo che contiene la dipendenza identificata da `dp`."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Per aggiungere attributi a una proprietà di dipendenza."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi che vengono aggiunti al generatore."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>dp</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  id: AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Aggiunge il contenuto della tabella di attributi fornito a questo generatore."
  remarks: "Se un attributo è in conflitto con un altro attributo già incluso nel generatore, l&quot;ultimo attributo aggiunto sostituisce quelli precedenti."
  syntax:
    content: public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);
    parameters:
    - id: table
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "Tabella di attributi di origine."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>table</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  id: CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Crea una tabella di attributi che contiene tutte le definizioni di attributi fornite tramite <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>chiamate.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>"
  remarks: "La tabella è uno snapshot dello stato corrente del generatore di attributi; eventuali attributi aggiunti da successive <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>chiamate non vengono incluse nella tabella.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>       Se per dichiarare gli attributi sono stati utilizzati i metodi di callback, tali metodi non verranno valutati durante CreateTable. Al contrario, la tabella conterrà tali callback e li valuterà in base alle esigenze."
  syntax:
    content: public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();
    parameters: []
    return:
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "Un <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref> che può essere passato all&quot;archivio di metadati."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  id: ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Verifica che la tabella di attributi compilata contenga informazioni valide sugli attributi."
  remarks: "Alcuni override di <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>non è possibile convalidare che i valori passati ai relativi parametri rappresentano validi membri delle classi.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> ValidateTable verifica che tutte le informazioni sugli attributi personalizzati corrispondano ai membri effettivi. Questo metodo può richiedere molto tempo e non è consigliato a meno che non sia richiesta esplicitamente la convalida."
  syntax:
    content: public void ValidateTable ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  exceptions:
  - type: System.Activities.Presentation.Metadata.AttributeTableValidationException
    commentId: T:System.Activities.Presentation.Metadata.AttributeTableValidationException
    description: "lo stato della tabella non è valido."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Metadata.AttributeTableValidationException
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTableValidationException
  nameWithType: AttributeTableValidationException
  fullName: System.Activities.Presentation.Metadata.AttributeTableValidationException
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Metadata.AttributeCallback
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeCallback
  nameWithType: AttributeCallback
  fullName: System.Activities.Presentation.Metadata.AttributeCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
- uid: System.Activities.Presentation.Metadata.AttributeTable
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTable
  nameWithType: AttributeTable
  fullName: System.Activities.Presentation.Metadata.AttributeTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder.AttributeTableBuilder
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback
  nameWithType: AttributeTableBuilder.AddCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes
  nameWithType: AttributeTableBuilder.AddCustomAttributes
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable
  nameWithType: AttributeTableBuilder.AddTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable
  nameWithType: AttributeTableBuilder.CreateTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable
  nameWithType: AttributeTableBuilder.ValidateTable
