### YamlMime:ManagedReference
items:
- uid: System.Data.EntityKey
  id: EntityKey
  children:
  - System.Data.EntityKey.#ctor
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  - System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  - System.Data.EntityKey.EntityContainerName
  - System.Data.EntityKey.EntityKeyValues
  - System.Data.EntityKey.EntityNotValidKey
  - System.Data.EntityKey.EntitySetName
  - System.Data.EntityKey.Equals(System.Data.EntityKey)
  - System.Data.EntityKey.Equals(System.Object)
  - System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.EntityKey.GetHashCode
  - System.Data.EntityKey.IsTemporary
  - System.Data.EntityKey.NoEntitySetKey
  - System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  - System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  langs:
  - csharp
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
  type: Class
  summary: "Fornisce un riferimento durevole a un oggetto che rappresenta un&quot;istanza di un tipo di entità."
  remarks: "Gli oggetti di EntityKey sono immutabili. vale a dire, dopo essere stati costruiti non possono essere modificati.       Per ulteriori informazioni, vedere [utilizzo delle chiavi di entità](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)."
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The examples show you how to create and use an EntityKey.  \n  \n [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#entitykeyclass_trygetobjectbykey)]\n [!code-cs[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#entitykeyclass_trygetobjectbykey)]  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")]

      [System.Runtime.Serialization.DataContract(IsReference=true)]

      public sealed class EntityKey : IEquatable<System.Data.EntityKey>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Data.EntityKey>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor
  id: '#ctor'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: System.Data.EntityKey.EntityKey()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityKey&quot;> </xref> classe."
  syntax:
    content: public EntityKey ();
    parameters: []
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityKey&quot;> </xref> classe con un nome di set di entità e un oggetto generico <xref:System.Collections.Generic.KeyValuePair>insieme.</xref:System.Collections.Generic.KeyValuePair>"
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "Oggetto <xref:System.String>che è il nome del set di entità qualificato dal nome del contenitore di entità.</xref:System.String>"
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Un generico <xref:System.Collections.Generic.KeyValuePair>insieme.</xref:System.Collections.Generic.KeyValuePair>       Ogni coppia chiave/valore è un nome di proprietà come chiave e il valore di tale proprietà come valore. Deve esistere una sola coppia per ogni proprietà che fa parte di <xref href=&quot;System.Data.EntityKey&quot;> </xref>. L&quot;ordine delle coppie chiave/valore non è importante, ma ogni proprietà chiave deve essere incluso. I nomi delle proprietà sono nomi semplici che non sono qualificati con un nome del tipo di entità o il nome dello schema."
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityKey&quot;> </xref> classe con un nome di set di entità e un &lt;xref:System.Collections.Generic.IEnumerable%601&gt; insieme di <xref href=&quot;System.Data.EntityKeyMember&quot;> </xref> oggetti."
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "Oggetto <xref:System.String>che è il nome del set di entità qualificato dal nome del contenitore di entità.</xref:System.String>"
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
      description: "Un &lt;xref:System.Collections.Generic.IEnumerable%601&gt; insieme di <xref href=&quot;System.Data.EntityKeyMember&quot;> </xref> oggetti con cui inizializzare la chiave."
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,String,Object)
  nameWithType: EntityKey.EntityKey(String,String,Object)
  fullName: System.Data.EntityKey.EntityKey(String,String,Object)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.EntityKey&quot;> </xref> classe con un nome del set di entità e una coppia di chiavi di entità specifico."
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "Oggetto <xref:System.String>che è il nome del set di entità qualificato dal nome del contenitore di entità.</xref:System.String>"
    - id: keyName
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta il nome della chiave.</xref:System.String>"
    - id: keyValue
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta il valore di chiave.</xref:System.Object>"
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityContainerName
  id: EntityContainerName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: System.Data.EntityKey.EntityContainerName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Ottiene o imposta il nome del contenitore di entità."
  syntax:
    content: public string EntityContainerName { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore che rappresenta il nome del contenitore di entità per l&quot;entità a cui il <xref href=&quot;System.Data.EntityKey&quot;> </xref> appartiene.</xref:System.String>"
  overload: System.Data.EntityKey.EntityContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityKeyValues
  id: EntityKeyValues
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: System.Data.EntityKey.EntityKeyValues
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Ottiene o imposta i valori di chiave associati a questo <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "La <xref:System.Data.EntityKey>classe contiene una copia dei valori che costituiscono la chiave logica specificata per questo tipo di entità.</xref:System.Data.EntityKey>       I membri del <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>godere di un nome di proprietà e un valore in un <xref:System.Collections.Generic.KeyValuePair%602>, dove la chiave è il nome della proprietà e il valore è il valore effettivo della proprietà nell&quot;oggetto.</xref:System.Collections.Generic.KeyValuePair%602> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  syntax:
    content: public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }
    return:
      type: System.Data.EntityKeyMember[]
      description: "Oggetto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; dei valori di chiave per questo <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.EntityKey.EntityKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityNotValidKey
  id: EntityNotValidKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: System.Data.EntityKey.EntityNotValidKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Una semplice <xref href=&quot;System.Data.EntityKey&quot;> </xref> identifica un&quot;entità che ha generato da un errore [trattare](~/add/includes/ajax-current-ext-md.md) operazione."
  remarks: "Esistono diversi modi per ottenere un&quot;entità non valida. Lo scenario più comune è quando un [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] query viene utilizzata la [trattare](../Topic/TREAT%20\\(Entity%20SQL\\).md) operatore di interpretare un&quot;istanza di un tipo polimorfico di un determinato tipo e l&quot;istanza in questione non corrisponde. ([Trattare](../Topic/TREAT%20\\(Entity%20SQL\\).md) è simile a c# `as` operator). In questo caso, la query restituisce un&quot;entità che non è valida e la chiave di entità dell&quot;entità risultante viene impostata su EntityNotValidKey."
  syntax:
    content: public static readonly System.Data.EntityKey EntityNotValidKey;
    return:
      type: System.Data.EntityKey
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntitySetName
  id: EntitySetName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: System.Data.EntityKey.EntitySetName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Ottiene o imposta il nome del set di entità."
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore che rappresenta il nome dell&quot;entità è impostato per l&quot;entità a cui il <xref href=&quot;System.Data.EntityKey&quot;> </xref> appartiene.</xref:System.String>"
  overload: System.Data.EntityKey.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  id: Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: System.Data.EntityKey.Equals(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:-le chiavi temporanee utilizzano l&quot;uguaglianza dei riferimenti. Ovvero, due riferimenti alla stessa temporaneo <xref:System.Data.EntityKey>istanza sono uguali, ma nessun altro <xref:System.Data.EntityKey>istanze sono uguali.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Le chiavi permanenti determinano l&quot;uguaglianza in base ai valori delle proprietà chiave contenute e <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> Ovvero, è possibile avere due <xref:System.Data.EntityKey>le istanze sono uguali se i relativi set di entità sono uguali e ai valori di chiave sono uguali.</xref:System.Data.EntityKey>       Inoltre, le chiavi temporanee hanno nessuna <xref:System.Data.Metadata.Edm.EntitySet>o valori di chiave, ma l&quot;istruzione Do dalle chiavi permanenti</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public bool Equals (System.Data.EntityKey other);
    parameters:
    - id: other
      type: System.Data.EntityKey
      description: "Un <xref href=&quot;System.Data.EntityKey&quot;> </xref> oggetto da confrontare con questa istanza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa istanza e <code> other </code> hanno valori uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: System.Data.EntityKey.Equals(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato."
  remarks: "Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:-le chiavi temporanee utilizzano l&quot;uguaglianza dei riferimenti. Ovvero, due riferimenti alla stessa temporaneo <xref:System.Data.EntityKey>istanza sono uguali, ma nessun altro <xref:System.Data.EntityKey>istanze sono uguali.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Le chiavi permanenti determinano l&quot;uguaglianza in base ai valori delle proprietà chiave contenute e <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> Ovvero, è possibile avere due <xref:System.Data.EntityKey>le istanze sono uguali se i relativi <xref:System.Data.Metadata.Edm.EntitySet>oggetti sono uguali e relativi valori di chiave sono uguali.</xref:System.Data.Metadata.Edm.EntitySet> </xref:System.Data.EntityKey>       Inoltre, le chiavi temporanee hanno nessuna <xref:System.Data.Metadata.Edm.EntitySet>o valori di chiave, ma l&quot;istruzione Do dalle chiavi permanenti</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Un <xref:System.Object>da confrontare con questa istanza.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa istanza e <code> obj </code> hanno valori uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  id: GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: System.Data.EntityKey.GetEntitySet(MetadataWorkspace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Ottiene il set di entità per la chiave di entità dall&quot;area di lavoro metadati specificata."
  remarks: "Il set di entità è accessibile in base al nome di contenitore di entità e nome della chiave del set di entità."
  syntax:
    content: public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "Area di lavoro metadati che contiene l&quot;entità."
    return:
      type: System.Data.Metadata.Edm.EntitySet
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> per la chiave di entità."
  overload: System.Data.EntityKey.GetEntitySet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Impossibile trovare il set di entità nell&quot;area di lavoro metadati specificata."
  platform:
  - net462
- uid: System.Data.EntityKey.GetHashCode
  id: GetHashCode
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: System.Data.EntityKey.GetHashCode()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Funge da funzione hash per l&quot;oggetto corrente <xref href=&quot;System.Data.EntityKey&quot;> </xref> oggetto. GetHashCode è adatto per algoritmi hash e strutture di dati, ad esempio una tabella hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.EntityKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.IsTemporary
  id: IsTemporary
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: System.Data.EntityKey.IsTemporary
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.EntityKey&quot;> </xref> è temporaneo."
  remarks: "Quando viene creata una nuova entità, il [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] definisce una chiave temporanea e imposta la proprietà IsTemporary `true`. Quando si chiama il <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>(metodo), il [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] viene assegnato un tasto permanente e imposta la proprietà IsTemporary `false`.</xref:System.Data.Objects.ObjectContext.SaveChanges%2A>      > [!NOTE] > Le chiavi temporanee vengono costruite automaticamente dal framework; non possono essere costruite direttamente da un utente.       Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:-le chiavi temporanee utilizzano l&quot;uguaglianza dei riferimenti. Ovvero, due riferimenti alla stessa temporaneo <xref:System.Data.EntityKey>istanza sono uguali, ma nessun altro <xref:System.Data.EntityKey>istanze sono uguali.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Le chiavi permanenti determinano l&quot;uguaglianza in base ai valori delle proprietà chiave contenute e <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> Ovvero, è possibile avere due <xref:System.Data.EntityKey>le istanze sono uguali se i relativi set di entità sono uguali e ai valori di chiave sono uguali.</xref:System.Data.EntityKey>       Inoltre, le chiavi temporanee hanno nessuna <xref:System.Data.Metadata.Edm.EntitySet>o valori di chiave, ma l&quot;istruzione Do dalle chiavi permanenti</xref:System.Data.Metadata.Edm.EntitySet>       Quando il <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A>metodo viene chiamato su un&quot;entità <xref:System.Data.Objects.ObjectStateEntry>e le transizioni di entità dal <xref:System.Data.EntityState>allo stato <xref:System.Data.EntityState>stato, il [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] automaticamente calcola una nuova chiave permanente per l&quot;entità e Sincronizza tutti i riferimenti di chiave temporanei.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A>"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.EntityKey&quot;> </xref> temporanea; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.IsTemporary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.NoEntitySetKey
  id: NoEntitySetKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: System.Data.EntityKey.NoEntitySetKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Un singleton <xref href=&quot;System.Data.EntityKey&quot;> </xref> da cui viene identificata un&quot;entità di sola lettura."
  remarks: "Un&quot;entità di sola lettura identifica un&quot;entità che è valida in ogni modo, ad eccezione del fatto che non è associata a un set di entità effettivo. Questa situazione può verificarsi come parte del risultato di un [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] query che crea e restituisce un&quot;istanza di entità specificata all&quot;interno del testo della query (in contrapposizione a un&quot;entità che è stata recuperata da una tabella di database). Un&quot;entità che non dispone di un&quot;entità set non può essere persistente nel database fino a quando non è associata a un set di entità. Pertanto, il materializzatore considererà questo tipo di entità come se il <xref:System.Data.Objects.MergeOption>è stato specificato l&quot;opzione di unione, indipendentemente dall&quot;opzione di unione effettiva che è stato specificato.</xref:System.Data.Objects.MergeOption> Verrà creato un oggetto entità, ma la propria identità non verranno risolte e non essere aggiunto per il gestore degli stati come parte del processo di materializzazione."
  syntax:
    content: public static readonly System.Data.EntityKey NoEntitySetKey;
    return:
      type: System.Data.EntityKey
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Metodo helper che viene utilizzato per deserializzare un <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "OnDeserialized è utilizzato da Object Services durante la deserializzazione di un <xref:System.Data.EntityKey>.</xref:System.Data.EntityKey> Per ulteriori informazioni, vedere [serializzazione di oggetti](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)."
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Descrive l&quot;origine e destinazione di un flusso serializzato specificato e fornisce un ulteriore contesto definito dal chiamante."
  overload: System.Data.EntityKey.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  id: OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserializing(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Metodo helper che viene utilizzato per deserializzare un <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "OnDeserializing è utilizzato da Object Services durante la deserializzazione di un <xref:System.Data.EntityKey>.</xref:System.Data.EntityKey> Per ulteriori informazioni, vedere [serializzazione di oggetti](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)."
  syntax:
    content: public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Descrive l&quot;origine e destinazione di un flusso serializzato specificato e fornisce un ulteriore contesto definito dal chiamante."
  overload: System.Data.EntityKey.OnDeserializing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Equality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Equality(EntityKey,EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Confronta due <xref href=&quot;System.Data.EntityKey&quot;> </xref> oggetti."
  remarks: "Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:-le chiavi temporanee utilizzano l&quot;uguaglianza dei riferimenti. Ovvero, due riferimenti alla stessa temporaneo <xref:System.Data.EntityKey>istanza sono uguali, ma nessun altro <xref:System.Data.EntityKey>istanze sono uguali.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Le chiavi permanenti determinano l&quot;uguaglianza in base ai valori delle proprietà chiave contenute e <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> Ovvero, è possibile avere due <xref:System.Data.EntityKey>le istanze sono uguali se i relativi set di entità sono uguali e ai valori di chiave sono uguali.</xref:System.Data.EntityKey>       Inoltre, le chiavi temporanee hanno nessuna <xref:System.Data.Metadata.Edm.EntitySet>o valori di chiave, ma l&quot;istruzione Do dalle chiavi permanenti</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public static bool op_Equality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: "Oggetto <xref href=&quot;System.Data.EntityKey&quot;> </xref> da confrontare."
    - id: key2
      type: System.Data.EntityKey
      description: "Oggetto <xref href=&quot;System.Data.EntityKey&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>key1</code> and <code>key2</code> values are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.EntityKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Inequality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Inequality(EntityKey,EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Confronta due <xref href=&quot;System.Data.EntityKey&quot;> </xref> oggetti."
  remarks: "Le chiavi temporanee hanno una semantica di confronto diversa dalle chiavi permanenti:-le chiavi temporanee utilizzano l&quot;uguaglianza dei riferimenti. Ovvero, due riferimenti alla stessa temporaneo <xref:System.Data.EntityKey>istanza sono uguali, ma nessun altro <xref:System.Data.EntityKey>istanze sono uguali.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Le chiavi permanenti determinano l&quot;uguaglianza in base ai valori delle proprietà chiave contenute e <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> Ovvero, è possibile avere due <xref:System.Data.EntityKey>le istanze sono uguali se i relativi set di entità sono uguali e ai valori di chiave sono uguali.</xref:System.Data.EntityKey>       Inoltre, le chiavi temporanee hanno nessuna <xref:System.Data.Metadata.Edm.EntitySet>o valori di chiave, ma l&quot;istruzione Do dalle chiavi regolari</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: "Oggetto <xref href=&quot;System.Data.EntityKey&quot;> </xref> da confrontare."
    - id: key2
      type: System.Data.EntityKey
      description: "Oggetto <xref href=&quot;System.Data.EntityKey&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>key1</code> and <code>key2</code> values are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.EntityKey.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.EntityKey.#ctor
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: System.Data.EntityKey.EntityKey()
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Object>>
  nameWithType: IEnumerable<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
- uid: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<EntityKeyMember>
  nameWithType: IEnumerable<EntityKeyMember>
  fullName: System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.EntityKeyMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: EntityKeyMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,String,Object)
  nameWithType: EntityKey.EntityKey(String,String,Object)
  fullName: System.Data.EntityKey.EntityKey(String,String,Object)
- uid: System.Data.EntityKey.EntityContainerName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: System.Data.EntityKey.EntityContainerName
- uid: System.Data.EntityKey.EntityKeyValues
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: System.Data.EntityKey.EntityKeyValues
- uid: System.Data.EntityKeyMember[]
  parent: System.Data
  isExternal: false
  name: EntityKeyMember
  nameWithType: EntityKeyMember
  fullName: System.Data.EntityKeyMember[]
  spec.csharp:
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: EntityKeyMember[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityKey.EntityNotValidKey
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: System.Data.EntityKey.EntityNotValidKey
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.EntityKey.EntitySetName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: System.Data.EntityKey.EntitySetName
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: System.Data.EntityKey.Equals(EntityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityKey.Equals(System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: System.Data.EntityKey.Equals(Object)
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: System.Data.EntityKey.GetEntitySet(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityKey.GetHashCode
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: System.Data.EntityKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityKey.IsTemporary
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: System.Data.EntityKey.IsTemporary
- uid: System.Data.EntityKey.NoEntitySetKey
  parent: System.Data.EntityKey
  isExternal: false
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: System.Data.EntityKey.NoEntitySetKey
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserializing(StreamingContext)
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Equality(EntityKey,EntityKey)
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Inequality(EntityKey,EntityKey)
- uid: System.Data.EntityKey.#ctor*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey.EntityKey
- uid: System.Data.EntityKey.EntityContainerName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
- uid: System.Data.EntityKey.EntityKeyValues*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
- uid: System.Data.EntityKey.EntitySetName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
- uid: System.Data.EntityKey.Equals*
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals
  nameWithType: EntityKey.Equals
- uid: System.Data.EntityKey.GetEntitySet*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet
  nameWithType: EntityKey.GetEntitySet
- uid: System.Data.EntityKey.GetHashCode*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode
  nameWithType: EntityKey.GetHashCode
- uid: System.Data.EntityKey.IsTemporary*
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
- uid: System.Data.EntityKey.OnDeserialized*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized
  nameWithType: EntityKey.OnDeserialized
- uid: System.Data.EntityKey.OnDeserializing*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing
  nameWithType: EntityKey.OnDeserializing
- uid: System.Data.EntityKey.op_Equality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality
  nameWithType: EntityKey.op_Equality
- uid: System.Data.EntityKey.op_Inequality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality
  nameWithType: EntityKey.op_Inequality
