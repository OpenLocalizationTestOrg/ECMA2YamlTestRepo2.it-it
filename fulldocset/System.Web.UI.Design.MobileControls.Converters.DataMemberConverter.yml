### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  id: DataMemberConverter
  children:
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: "DataMemberConverter"
  nameWithType: DataMemberConverter
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  type: Class
  summary: Provides a type converter for a property representing a data member in a data source. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: >-
      [System.Obsolete("The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.")]

      public class DataMemberConverter : System.ComponentModel.TypeConverter
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "DataMemberConverter()"
  nameWithType: DataMemberConverter.DataMemberConverter()
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.DataMemberConverter()
  type: Constructor
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Instantiates a new instance of the <see cref="T:System.Web.UI.Design.MobileControls.Converters.DataMemberConverter"></see> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: public DataMemberConverter ();
    parameters: []
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "CanConvertFrom(ITypeDescriptorContext,Type)"
  nameWithType: DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Gets a value indicating whether the specified source type can be converted to the type of the associated control property using the specified context and type. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data bound control at design time, and instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that represents the data-bound component or the control that the property belongs to."
    - id: sourceType
      type: System.Type
      description: "The type to convert from."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)"
  nameWithType: DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Converts the specified object to the type of the associated control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that represents the data-bound component or the control that the property belongs to."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that can be used to provide additional culture information."
    - id: value
      type: System.Object
      description: "The value to convert from."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom*
  exceptions:
  - type: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    description: "\n    value is not  and not a string."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "GetStandardValues(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Returns a list of values that can be assigned to a control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  object that represents the data-bound component or the control that the property belongs to."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "To be added."
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "GetStandardValuesExclusive(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: "The GetStandardValuesExclusive method is called by the designer host before calling <xref:System.Web.UI.Design.MobileControls.Converters.DataFieldConverter.GetStandardValues%2A>.  \n  \n> [!NOTE]\n>  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  object that represents the data bound component or control the property belongs to."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  langs:
  - csharp
  name: "GetStandardValuesSupported(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.Design.MobileControls.Converters
  summary: Gets a value indicating whether this object returns a standard set of values that can be picked from a list in the design host using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.
  remarks: >-
    > [!NOTE]

    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  object that represents the data-bound component or the control that the property belongs to."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: "System.ComponentModel.TypeConverter"
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "DataMemberConverter()"
  nameWithType: DataMemberConverter.DataMemberConverter()
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.DataMemberConverter()
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "CanConvertFrom(ITypeDescriptorContext,Type)"
  nameWithType: DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: "Boolean"
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: "ITypeDescriptorContext"
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: "Type"
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)"
  nameWithType: DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: "Object"
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: "CultureInfo"
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValues(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: "TypeConverter+StandardValuesCollection"
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValuesExclusive(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValuesSupported(ITypeDescriptorContext)"
  nameWithType: DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "DataMemberConverter"
  nameWithType: DataMemberConverter.DataMemberConverter
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "CanConvertFrom"
  nameWithType: DataMemberConverter.CanConvertFrom
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "ConvertFrom"
  nameWithType: DataMemberConverter.ConvertFrom
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValues"
  nameWithType: DataMemberConverter.GetStandardValues
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValuesExclusive"
  nameWithType: DataMemberConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  isExternal: false
  name: "GetStandardValuesSupported"
  nameWithType: DataMemberConverter.GetStandardValuesSupported
