### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  summary: "Espone un flusso un&quot;unnamed pipe, che supporta sincrone e asincrone di lettura e operazioni di scrittura."
  remarks: "Le unnamed pipe consentono di fornire sicuro e proteggere la comunicazione interprocesso tra padre e figlio processi. La classe AnonymousPipeServerStream consente a un processo padre inviare o ricevere informazioni da un processo figlio.       Le unnamed pipe sono senza nome pipe unidirezionali che in genere trasferiscono dati tra processi padre e figlio. Le unnamed pipe sono sempre locali. non possono essere utilizzati in una rete. Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>le modalità di lettura.</xref:System.IO.Pipes.PipeTransmissionMode>       Il lato client di un&quot;unnamed pipe deve essere creato da un handle di pipe fornito dal lato server chiamando il <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>metodo.</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> La stringa viene quindi passata come parametro durante la creazione del processo client. Dal processo client, viene quindi passato per il <xref:System.IO.Pipes.AnonymousPipeClientStream>costruttore come il `pipeHandleAsString` parametro.</xref:System.IO.Pipes.AnonymousPipeClientStream>       L&quot;oggetto AnonymousPipeServerStream deve eliminare l&quot;handle del client utilizzando il <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>metodo per ricevere una notifica quando il client viene chiusa.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>      > [!NOTE] > Per [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] e [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], un massimo di 10 pipe possa connettersi contemporaneamente attraverso la rete."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an AnonymousPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the AnonymousPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe."
  remarks: "Per i <xref:System.IO.Pipes.AnonymousPipeServerStream>costruttori senza un <xref:System.IO.Pipes.PipeDirection>parametro, la direzione predefinita è <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.AnonymousPipeServerStream> Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Questo costruttore crea un <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto che contiene la dimensione del buffer, nessuna sicurezza della pipe e un <xref:System.IO.HandleInheritability>valore di <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe con la direzione della pipe specificati."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Questo costruttore crea un <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto che contiene la dimensione del buffer, nessuna sicurezza della pipe e un <xref:System.IO.HandleInheritability>valore di <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe con la modalità ereditabilità e la direzione della pipe specificati."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Questo costruttore crea un <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto con la dimensione del buffer e nessuna sicurezza della pipe.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/d22da34b-b931-48af-8c21-_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/d22da34b-b931-48af-8c21-_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/d22da34b-b931-48af-8c21-_1.cpp)]"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che determina se l&quot;handle sottostante può essere ereditato dai processi figlio. Deve essere impostato su uno <xref:System.IO.HandleInheritability>o <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>non è impostata su <xref:System.IO.HandleInheritability> o <xref:System.IO.HandleInheritability>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe dall&quot;handle di pipe specificati."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Handle sicuro per la pipe che questo <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> sarà incapsulato dall&quot;oggetto."
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Un handle sicuro per il <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> oggetto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serverSafePipeHandle</code>o <code>clientSafePipeHandle</code> è un handle valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverSafePipeHandle</code>or <code>clientSafePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o, ad esempio un errore del disco.       - oppure - il flusso è stato chiuso."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe con la direzione della pipe indicata, la modalità di ereditarietà e dimensioni del buffer."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Questo costruttore crea un <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto senza sicurezza di pipe.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che determina se l&quot;handle sottostante può essere ereditato dai processi figlio. Deve essere impostato su uno <xref:System.IO.HandleInheritability>o <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
    - id: bufferSize
      type: System.Int32
      description: "Le dimensioni del buffer. Questo valore deve essere maggiore o uguale a 0."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>non è impostata su <xref:System.IO.HandleInheritability> o <xref:System.IO.HandleInheritability>.       - oppure - <code>bufferSize</code> è minore di 0."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe con la direzione della pipe indicata, la modalità di ereditarietà, dimensione del buffer e sicurezza di pipe."
  remarks: "Oggetto <xref:System.IO.Pipes.PipeDirection>valore <xref:System.IO.Pipes.PipeDirection>non è supportato perché le unnamed pipe vengono definite come unidirezionali.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno dei valori di enumerazione che determina la direzione della pipe.       Le unnamed pipe possono essere solo in una direzione, pertanto `direction` non può essere impostata su <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Uno dei valori di enumerazione che determina se l&quot;handle sottostante può essere ereditato dai processi figlio."
    - id: bufferSize
      type: System.Int32
      description: "Le dimensioni del buffer. Questo valore deve essere maggiore o uguale a 0."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "Oggetto che determina il controllo di accesso e controllo di sicurezza per la pipe."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>non è impostata su <xref:System.IO.HandleInheritability> o <xref:System.IO.HandleInheritability>.       - oppure - <code>bufferSize</code> è minore di 0."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene l&quot;handle sicuro per il <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> oggetto che è connesso il <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> oggetto."
  remarks: "Il <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>metodo deve essere chiamato dopo che è stato passato un handle del client a un processo client.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> Se non viene chiamato questo metodo, il <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto non verrà notificato quando il client Elimina relativo <xref:System.IO.Pipes.PipeStream>oggetto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Un handle per il <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> oggetto che è connesso il <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> oggetto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Chiude la copia locale del <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> handle dell&quot;oggetto."
  remarks: "Il metodo DisposeLocalCopyOfClientHandle deve essere chiamato dopo l&quot;handle del client è stato passato al client. Se non viene chiamato questo metodo, il <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto non verrà notificato quando il client Elimina relativo <xref:System.IO.Pipes.PipeStream>oggetto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public void DisposeLocalCopyOfClientHandle ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che il <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> istanza venga recuperata tramite garbage collection."
  syntax:
    content: ~AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene il connesso <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> handle dell&quot;oggetto sotto forma di stringa."
  remarks: "Il <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>metodo deve essere chiamato dopo che è stato passato un handle del client a un processo client.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> Se non viene chiamato questo metodo, il <xref:System.IO.Pipes.AnonymousPipeServerStream>oggetto non verrà notificato quando il client Elimina relativo <xref:System.IO.Pipes.PipeStream>oggetto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_2_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_2_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_2_1.cpp)]"
  syntax:
    content: public string GetClientHandleAsString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta il connesso <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> handle dell&quot;oggetto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta la modalità di lettura per il <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> oggetto. Per le unnamed pipe, la modalità di trasmissione deve essere <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>in modalità lettura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, the <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "La modalità di lettura per il <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> oggetto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La modalità di trasmissione non è valida. Per le unnamed pipe, solo <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> è supportato."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La proprietà è impostata su <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, che non è supportato per le unnamed pipe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La connessione è interrotta oppure si verifica un altro errore dei / o."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene la modalità di trasmissione della pipe supportata dalla pipe corrente."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>in modalità lettura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the TransmissionMode property is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_0_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_0_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_0_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Il <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> supportata dalla pipe corrente."
  overload: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose
  nameWithType: AnonymousPipeServerStream.Dispose
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeServerStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
