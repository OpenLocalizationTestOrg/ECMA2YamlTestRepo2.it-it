### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  summary: "Specifica la formula utilizzata per calcolare il <xref:System.Diagnostics.PerformanceCounter.NextValue*>metodo per un <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> istanza.</xref:System.Diagnostics.PerformanceCounter.NextValue*>"
  remarks: "Alcuni tipi di contatori rappresentano dati non elaborati, mentre altri rappresentano valori calcolati basati su uno o più campioni del contatore. Le seguenti categorie di classificano i tipi di contatori disponibili.      -Media: misurare un valore nel tempo e visualizzare la media delle ultime due misurazioni. Associata a ogni contatore Media è un contatore di base che tiene traccia del numero di campioni coinvolti.      -Differenza: sottrarre l&quot;ultima misurazione dalla precedente e Visualizza la differenza, in caso positivo; Se è negativo, verranno inoltre visualizzati uno zero.      -Istantaneo: Mostra la misurazione più recente.      -Percentuale: visualizza i valori calcolati come percentuale.      -Frequenza: un numero crescente di eventi di esempio nel tempo e dividere la modifica dei valori di conteggio per la variazione nel tempo per visualizzare una frequenza di attività.       Durante il campionamento dei dati del contatore delle prestazioni, utilizzando un tipo di contatore che rappresenta una media può rendere i valori di dati non elaborati significativo per l&quot;uso. Ad esempio, il contatore di dati non elaborati `NumberOfItems64` può esporre dati abbastanza casuali da campione a campione. La formula per il calcolo della media dei valori restituiti dal contatore sarebbe (X 0 + X 1 + + X n) / n, dove ogni X i è un campione di contatore.       I contatori della frequenza sono simili ai contatori di Media, ma più utili nelle situazioni in cui la velocità di aumentano man mano che viene utilizzata una risorsa. È una formula che calcola rapidamente la media ((X n - 0) / T n -T (0)) / frequenza, dove ogni X è un esempio di contatore e ogni T i è l&quot;ora in cui è stato eseguito il campione corrispondente. Il risultato è l&quot;utilizzo medio al secondo.      > [!NOTE] > Se non diversamente specificato, la base temporale è secondi.       Durante la strumentazione di applicazioni (creazione e la scrittura di contatori delle prestazioni personalizzati), se si lavora con i tipi di contatori delle prestazioni che si basano su un contatore di base associato che viene usato nei calcoli. Il contatore di base deve essere immediatamente dopo il contatore associato nel <xref:System.Diagnostics.CounterCreationDataCollection>insieme utilizzato dall&quot;applicazione.</xref:System.Diagnostics.CounterCreationDataCollection> Nella tabella seguente sono elencati i tipi di contatore di base con i tipi di contatore delle prestazioni corrispondenti.      | Tipo di contatore di base | Tipi di contatori delle prestazioni |   |-----------------------|-------------------------------|   |`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|   |`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|   |`RawBase`|`RawFraction`|   |`SampleBase`|`SampleFraction`|"
  example:
  - "The following examples demonstrate several of the counter types in the PerformanceCounterType enumeration.  \n  \n `AverageCount64`  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_1.vb)]  \n  \n `AverageTimer32`  \n  \n [!code-vb[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_2.vb)]\n [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_2.cpp)]\n [!code-cs[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_2.cs)]  \n  \n `ElapsedTime`  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_3.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_3.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_3.vb)]  \n  \n `NumberOfItems32`  \n  \n [!code-cs[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_4.cs)]\n [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_4.cpp)]\n [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_4.vb)]  \n  \n `NumberOfItems64`  \n  \n [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_5.cpp)]\n [!code-cs[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_5.cs)]\n [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_5.vb)]  \n  \n `SampleFraction`  \n  \n [!code-vb[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_6.vb)]\n [!code-cs[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_6.cs)]  \n  \n `RateOfCountsPerSecond32`  \n  \n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_7.cs)]\n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_7.vb)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_7.cpp)]  \n  \n `RateOfCountsPerSecond64`  \n  \n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_8.vb)]\n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_8.cs)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_8.cpp)]  \n  \n `RawFraction`  \n  \n [!code-cs[PerformanceCounterType.RawFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_9.cs)]\n [!code-cpp[PerformanceCounterType.RawFraction#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_9.cpp)]\n [!code-vb[PerformanceCounterType.RawFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_9.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))]

      public enum PerformanceCounterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di base che viene utilizzato nel calcolo delle medie tempo o conteggio, ad esempio <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;> </xref>. Memorizza il denominatore per il calcolo di un contatore da presente &quot;tempo per ogni operazione&quot; o &quot;conteggio per ogni operazione&quot;."
  syntax:
    content: AverageBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore medio che mostra il numero di elementi elaborato, in Media, durante un&quot;operazione. I contatori di questo tipo di visualizzano un rapporto tra gli elementi elaborati e il numero di operazioni completate. Il rapporto viene calcolato confrontando il numero di elementi elaborati durante l&quot;ultimo intervallo al numero di operazioni completate durante l&quot;ultimo intervallo."
  remarks: "Formula: (N 1 -N 0)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, and the B 1 and B 0 are their corresponding `AverageBase` values. Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk Bytes/Transfer."
  syntax:
    content: AverageCount64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di Media che misura il tempo che necessario, in Media, per completare un processo o un&quot;operazione. I contatori di questo tipo visualizzano un rapporto tra il tempo totale trascorso dell&quot;intervallo di campionamento per il numero di processi o operazioni completate durante tale periodo. Questo tipo di contatore misura il tempo in tick dell&quot;orologio di sistema."
  remarks: "Formula: ((N 1 -N 0)/F)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, B 1 and B 0 are their corresponding `AverageBase` values, and F is the number of ticks per second. The value of F is factored into the equation so that the result can be displayed in seconds. Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk sec/Transfer."
  syntax:
    content: AverageTimer32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di differenza che mostra la modifica dell&quot;attributo misurato tra i due intervalli di campionamento più recente."
  remarks: 'Formula: N 1 -N 0, dove N 1 e N 0 sono valori letti del contatore delle prestazioni.'
  syntax:
    content: CounterDelta32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di differenza che mostra la modifica dell&quot;attributo misurato tra i due intervalli di campionamento più recente. Ha lo stesso come il <xref uid=&quot;langword_csharp_CounterDelta32&quot; name=&quot;CounterDelta32&quot; href=&quot;&quot;> </xref> tipo contatore, ad eccezione del fatto che usa campi di dimensioni maggiori per contenere valori più grandi."
  remarks: 'Formula: N 1 -N 0, dove N 1 e N 0 sono valori letti del contatore delle prestazioni.'
  syntax:
    content: CounterDelta64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di base che indica il numero di elementi campionati. Viene utilizzato come il denominatore nei calcoli per ottenere una media tra gli elementi campionati durante gli intervalli di più, il elementi simili. Used with <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>."
  syntax:
    content: CounterMultiBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che visualizza il tempo attivo di uno o più componenti come percentuale del tempo totale dell&quot;intervallo di campionamento. Poiché il numeratore registra il tempo attivo dei componenti che funzionano contemporaneamente, la percentuale risultante può superare il 100%."
  remarks: "Questo contatore è un multitimer. I multitimer raccolgono dati da più di un&quot;istanza di un componente, ad esempio un disco o processore. Questo tipo di contatore differisce da `CounterMultiTimer100Ns` in che misura il tempo in unità di tick del timer delle prestazioni di sistema, piuttosto che in unità di 100 nanosecondi.       Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100 / B, dove N 1 e N 0 sono valori letti del contatore delle prestazioni, D 1 e D 0 sono i corrispondenti valori di tempo in Tick del timer delle prestazioni di sistema e la variabile B indica il numero di base per i componenti monitorati (utilizzando un contatore di base del tipo `CounterMultiBase`). Di conseguenza, il numeratore rappresenta la parte dell&quot;intervallo di campionamento durante i quali i componenti monitorati erano attivi e il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento."
  syntax:
    content: CounterMultiTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra il tempo attivo di uno o più componenti come percentuale del tempo totale dell&quot;intervallo di campionamento. Misura il tempo in unità di 100 nanosecondi (ns)."
  remarks: "Questo tipo di contatore è un multitimer. I multitimer sono progettati per monitorare più di un&quot;istanza di un componente, ad esempio un disco o processore.       Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100 / B, dove N 1 e N 0 sono valori letti del contatore delle prestazioni, D 1 e D 0 sono i corrispondenti valori di tempo in unità di 100 nanosecondi, e la variabile B indica il numero di base per i componenti monitorati (utilizzando un contatore di base del tipo `CounterMultiBase`). Di conseguenza, il numeratore rappresenta la parte dell&quot;intervallo di campionamento durante i quali i componenti monitorati erano attivi e il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento."
  syntax:
    content: CounterMultiTimer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra il tempo attivo di uno o più componenti come percentuale del tempo totale dell&quot;intervallo di campionamento. I contatori di questo tipo di misurano il tempo in unità di 100 nanosecondi (ns). Il tempo di attività che derivano misurando il tempo che i componenti non erano attivi e sottraendo il risultato moltiplicando il 100% per il numero di oggetti monitorati."
  remarks: "Questo tipo di contatore è un multitimer inverso. I multitimer sono progettati per monitorare più di un&quot;istanza di un componente, ad esempio un disco o processore. I contatori inversi misurare il tempo che un componente non è attivo e derivare il tempo attivo la misurazione del tempo inattivo Formula: (B - ((N 1 - N 0) / (D 1 - D 0))) x 100, dove il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento, il numeratore rappresenta il tempo durante l&quot;intervallo in componenti monitorati erano inattivi e B rappresenta il numero di componenti monitorati , utilizzando un contatore di base del tipo `CounterMultiBase`."
  syntax:
    content: CounterMultiTimer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra il tempo attivo di uno o più componenti come percentuale del tempo totale dell&quot;intervallo di campionamento. Deriva il tempo attivo misurando il tempo che i componenti non erano attivi e sottraendo il risultato da 100% per il numero di oggetti monitorati."
  remarks: "Questo tipo di contatore è un multitimer inverso. I multitimer monitorare più di un&quot;istanza di un componente, ad esempio un disco o processore. I contatori inversi misurano il tempo che un componente non è attivo e derivano il tempo attivo da tale misura.       Questo contatore è diverso da `CounterMultiTimer100NsInverse` in che misura il tempo in unità di tick del timer delle prestazioni di sistema, piuttosto che in unità di 100 nanosecondi.       Formula: (B - ((N 1 - N 0) / (D 1 - D 0))) x 100, dove il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento, il numeratore rappresenta il tempo durante l&quot;intervallo quando i componenti monitorati erano inattivi e B rappresenta il numero di componenti monitorati, utilizzando un contatore di base del tipo `CounterMultiBase`."
  syntax:
    content: CounterMultiTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che indica il tempo medio che un componente è attivo come percentuale del tempo di campionamento totale."
  remarks: 'Formula: (N 1 - N 0) / (D 1 - D 0), dove N 1 e N 0 sono valori letti del contatore delle prestazioni, mentre 1 D e D 0 sono i valori di tempo corrispondente. Di conseguenza, il numeratore rappresenta la parte dell&quot;intervallo di campionamento durante i quali i componenti monitorati erano attivi e il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento.'
  syntax:
    content: CounterTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che visualizza la percentuale media di tempo di attività osservato durante l&quot;intervallo di campionamento. Il valore di questi contatori viene calcolato monitorando la percentuale di tempo che il servizio è inattivo e sottraendo tale valore dal 100 percento."
  remarks: "Questo è un tipo di contatore inverso. I contatori inversi misurano il tempo che un componente è attivo e derivano il tempo attivo da tale misura. Questo tipo di contatore è identico `CounterTimer100NsInv` ad eccezione del fatto che misura il tempo in unità di tick del timer delle prestazioni di sistema anziché nell&quot;unità di 100 nanosecondi.       Formula: (1 - ((N 1 - N 0) / (D 1 - D 0))) x 100, dove il numeratore rappresenta il tempo durante l&quot;intervallo quando i componenti monitorati erano inattivi, e il denominatore si rappresenta il tempo totale trascorso dell&quot;intervallo di campionamento."
  syntax:
    content: CounterTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di Media progettato per monitorare la durata media di una coda a una risorsa nel tempo. Mostra la differenza tra le lunghezze di coda osservate durante gli ultimi due intervalli di campionamento divisi per la durata dell&quot;intervallo. Questo tipo di contatore in genere viene utilizzato per tenere traccia del numero di elementi in coda o in attesa."
  remarks: 'Formula: (N 1 - N 0) / (D 1 - D 0), dove il numeratore rappresenta il numero di elementi nella coda e il denominatore si rappresenta il tempo trascorso durante l&quot;ultimo intervallo campione.'
  syntax:
    content: CountPerTimeInterval32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore medio che controlla la durata media di una coda a una risorsa nel tempo. I contatori di questo tipo di visualizzano la differenza tra le lunghezze di coda osservate durante gli ultimi due intervalli di campionamento, divisi per la durata dell&quot;intervallo. Questo tipo di contatore è identico <xref uid=&quot;langword_csharp_CountPerTimeInterval32&quot; name=&quot;CountPerTimeInterval32&quot; href=&quot;&quot;> </xref> ad eccezione del fatto che usa campi di dimensioni maggiori per poter contenere valori più grandi. Questo tipo di contatore in genere viene utilizzato per tenere traccia di un volume elevato o molto grande numero di elementi in coda o in attesa."
  remarks: 'Formula: (N 1 - N 0) / (D 1 - D 0), dove il numeratore rappresenta il numero di elementi in una coda e il denominatore si rappresenta il tempo trascorso durante l&quot;intervallo di campionamento.'
  syntax:
    content: CountPerTimeInterval64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un timer di differenza che mostra il tempo totale trascorso tra l&quot;avvio del componente o un processo e il momento in cui questo valore viene calcolato."
  remarks: "Formula: (D 0 - N 0) / F, where D 0 represents the current time, N 0 represents the time the object was started, and F represents the number of time units that elapse in one second. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ System Up Time."
  syntax:
    content: ElapsedTime
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore istantaneo che mostra il valore osservato più recentemente. Utilizzato, ad esempio, per mantenere un semplice conteggio di elementi o operazioni."
  remarks: "Formula: None. Does not display an average, but shows the raw data as it is collected.  \n  \n Counters of this type include Memory\\Available Bytes."
  syntax:
    content: NumberOfItems32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore istantaneo che mostra il valore osservato più recentemente. Utilizzato, ad esempio, per mantenere un semplice conteggio di un numero molto elevato di operazioni o elementi. Ha lo stesso come <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref> ad eccezione del fatto che usa campi di dimensioni maggiori per poter contenere valori più grandi."
  remarks: 'Formula: nessuna. Non viene visualizzata una media, ma mostra i dati non elaborati verrà raccolti.'
  syntax:
    content: NumberOfItems64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore istantaneo che mostra il valore osservato più recentemente in formato esadecimale. Utilizzato, ad esempio, per mantenere un semplice conteggio di elementi o operazioni."
  remarks: 'Formula: nessuna. Non viene visualizzata una media, ma mostra i dati non elaborati verrà raccolti.'
  syntax:
    content: NumberOfItemsHEX32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore istantaneo che mostra il valore osservato più recentemente. Utilizzato, ad esempio, per mantenere un semplice conteggio di un numero molto elevato di operazioni o elementi. Ha lo stesso come <xref uid=&quot;langword_csharp_NumberOfItemsHEX32&quot; name=&quot;NumberOfItemsHEX32&quot; href=&quot;&quot;> </xref> ad eccezione del fatto che usa campi di dimensioni maggiori per poter contenere valori più grandi."
  remarks: 'Formula: nessuna. Non viene visualizzata una media, ma mostra i dati non elaborati verrà raccolti'
  syntax:
    content: NumberOfItemsHEX64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di differenza che mostra il numero medio di operazioni completate durante ogni secondo dell&quot;intervallo di campionamento. I contatori di questo tipo di misurano il tempo in tick dell&quot;orologio di sistema."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Operations/sec."
  syntax:
    content: RateOfCountsPerSecond32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di differenza che mostra il numero medio di operazioni completate durante ogni secondo dell&quot;intervallo di campionamento. I contatori di questo tipo di misurano il tempo in tick dell&quot;orologio di sistema. Questo tipo di contatore è lo stesso come il <xref uid=&quot;langword_csharp_RateOfCountsPerSecond32&quot; name=&quot;RateOfCountsPerSecond32&quot; href=&quot;&quot;> </xref> tipo, ma usa i campi di dimensioni maggiori per contenere valori più elevati per tenere traccia di un numero di volumi elevati di elementi o operazioni al secondo, ad esempio una velocità di trasmissione in byte."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Bytes/sec."
  syntax:
    content: RateOfCountsPerSecond64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di base che memorizza il denominatore di un contatore che presenta una frazione aritmetica generale. Verificare che questo valore è maggiore di zero prima di utilizzarlo come denominatore in un <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;> </xref> valore di calcolo."
  syntax:
    content: RawBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale istantaneo che mostra la percentuale di un subset e il suo insieme come una percentuale. Ad esempio, confronta il numero di byte in uso su un disco per il numero totale di byte sul disco. I contatori di questo tipo di visualizzano solo la percentuale corrente, non una media nel tempo."
  remarks: "Formula: (N 0 / D 0) x 100, where D 0 represents a measured attribute (using a base counter of type `RawBase`) and N 0 represents one component of that attribute.  \n  \n Counters of this type include Paging File\\\\% Usage Peak."
  syntax:
    content: RawFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di base che archivia il numero di campionamento consente di interrompere eseguito e viene utilizzato come un denominatore nella frazione di campionamento. La frazione di campionamento è il numero di campioni che sono stati 1 (o <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>) per un interrupt di esempio. Verificare che questo valore è maggiore di zero prima di utilizzarlo come denominatore nel calcolo di <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: SampleBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore medio che mostra il numero medio di operazioni completate in un secondo. Quando un contatore di questo tipo di campionamento dei dati, ogni interruzione del campione restituisce uno o zero. I dati del contatore sono il numero di quelli che sono stati campionati. Misura il tempo in unità di tick del timer delle prestazioni di sistema."
  remarks: 'Formula: (N 1-N 0) / ((D 1-D 0) / F), dove il numeratore (N) rappresenta il numero di operazioni completate, il denominatore (D) rappresenta il tempo trascorso in unità di tick del timer delle prestazioni di sistema e F rappresenta il numero di segni di graduazione in un secondo. F viene inserito nell&quot;equazione, in modo che il risultato può essere visualizzato in secondi.'
  syntax:
    content: SampleCounter
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra il medio rapporto tra riscontri e tutte le operazioni durante gli ultimi due intervalli di campionamento."
  remarks: "Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.  \n  \n Counters of this type include Cache\\Pin Read Hits %."
  syntax:
    content: SampleFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra il tempo attivo di un componente come percentuale del tempo trascorso totale dell&quot;intervallo di campionamento. Misura il tempo in unità di 100 nanosecondi (ns). I contatori di questo tipo sono progettati per misurare l&quot;attività di un componente alla volta."
  remarks: "Formula: (N 1 - N 0) / (D 1 - D 0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % User Time."
  syntax:
    content: Timer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Un contatore di percentuale che mostra la percentuale media di tempo attivo osservato durante l&quot;intervallo di campionamento."
  remarks: "This is an inverse counter. Counters of this type calculate active time by measuring the time that the service was inactive and then subtracting the percentage of active time from 100 percent.  \n  \n Formula: (1- ((N 1 - N 0) / (D 1 - D 0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % Processor Time."
  syntax:
    content: Timer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
