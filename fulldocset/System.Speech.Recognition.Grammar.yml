### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "Un oggetto runtime che fa riferimento a una grammatica di riconoscimento vocale, quale un&quot;applicazione può utilizzare per definire i vincoli per il riconoscimento vocale."
  remarks: "Una grammatica di riconoscimento vocale è un set di regole o i vincoli che definiscono quali motore di riconoscimento vocale possa riconoscere come input significativo. Per ulteriori informazioni sulla creazione e utilizzo le grammatiche riconoscimento vocale, vedere [il riconoscimento vocale](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919), [creare le grammatiche con XML](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [creare le grammatiche con GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), e [creare le grammatiche con SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906).       Dopo che si crea una grammatica, è necessario compilarlo in un oggetto grammatica che è possibile caricare un modulo di riconoscimento vocale e che l&quot;applicazione può utilizzare in fase di esecuzione per gestire il riconoscimento vocale. È possibile utilizzare un <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore per creare un&quot;istanza di grammatica da un <xref:System.Speech.Recognition.GrammarBuilder>o <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>oggetto, o da un file o un <xref:System.IO.Stream>che contiene una descrizione di una grammatica in un formato supportato.</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> I formati supportati includono i seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un file binario con cfg file costruttori di grammatica di estensione che accettano i file di grammatica di formato XML nei relativi argomenti compilare le grammatiche XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale. È possibile ridurre la quantità di tempo necessario per costruire un oggetto grammatica da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       Di un&quot;applicazione riconoscimento vocale, come gestito da un <xref:System.Speech.Recognition.SpeechRecognizer>o <xref:System.Speech.Recognition.SpeechRecognitionEngine>di oggetto, in grado di caricare più le grammatiche di riconoscimento vocale.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> L&quot;applicazione è possibile in modo indipendente di abilitare o disabilitare le grammatiche singoli impostando il <xref:System.Speech.Recognition.Grammar.Enabled%2A>, proprietà e modificare il comportamento di riconoscimento tramite le proprietà di grammatica, ad esempio il <xref:System.Speech.Recognition.Grammar.Priority%2A>e <xref:System.Speech.Recognition.Grammar.Weight%2A>proprietà.</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       La grammatica <xref:System.Speech.Recognition.Grammar.SpeechRecognized>evento viene generato quando l&quot;input corrisponde a un percorso tramite la grammatica.</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] > È consigliata per verificare la sicurezza di qualsiasi URI o DLL utilizzato per creare un oggetto di grammatica.   >> Windows e la piattaforma di riconoscimento vocale forniscono la sicurezza per le applicazioni di creazione di un&quot;istanza di grammatica da una DLL o da una grammatica che supporta lo scripting.   >> Script negli oggetti grammatica vengono sempre eseguiti come se scaricato da una pagina web nel `Internet Zone`. Common Language Runtime (CLR) consente di isolare le DLL caricate per ottenere una definizione di grammatica."
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Questo costruttore non passare alcun parametro per il gestore di inizializzazione e la descrizione non deve definire un gestore di inizializzazione che richiede argomenti.       Questo costruttore è possibile creare un <xref:System.Speech.Recognition.Grammar>istanza uno dei formati seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un formato binario del file con estensione cfg questo costruttore compila i file di grammatica di formato XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar> È possibile ridurre la quantità di tempo necessario per costruire un <xref:System.Speech.Recognition.Grammar>oggetto da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Una grammatica SRGS è possibile definire una regola di radice. Per creare un <xref:System.Speech.Recognition.Grammar>dell&quot;oggetto da un flusso e si specifica una regola radice, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Per creare un <xref:System.Speech.Recognition.Grammar>dell&quot;oggetto da un flusso e specificare un URI di base da utilizzare per risolvere i riferimenti relativi regola, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Flusso che descrive una grammatica di riconoscimento vocale in un formato supportato."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>descrive una grammatica non contiene una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Il flusso non contiene una descrizione valida di una grammatica o descrive una grammatica che contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> oggetto."
  remarks: "Per ulteriori informazioni sull&quot;utilizzo di <xref:System.Speech.Recognition.GrammarBuilder>classe per definire una grammatica, vedere [creare le grammatiche con GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "Un&quot;istanza di <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> che contiene i vincoli per la grammatica di riconoscimento vocale."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> oggetto."
  remarks: "Questo costruttore non passare i parametri per il gestore di inizializzazione e <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>non deve contenere un gestore di inizializzazione che richiede argomenti.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Oggetto <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>può disporre di una regola radice.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Per creare un <xref:System.Speech.Recognition.Grammar>oggetto che specifica una regola di radice, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>o <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Per creare un riconoscimento vocale <xref:System.Speech.Recognition.Grammar>da un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>e specificare un URI di base da utilizzare per risolvere i riferimenti relativi regola, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "I vincoli per la grammatica di riconoscimento vocale."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>non contiene una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un file."
  remarks: "Questo costruttore non passare alcun parametro per il gestore di inizializzazione e la descrizione non deve definire un gestore di inizializzazione che richiede argomenti.       Questo costruttore è possibile creare un <xref:System.Speech.Recognition.Grammar>istanza uno dei formati seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un formato binario del file con estensione cfg questo costruttore compila i file di grammatica di formato XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar> È possibile ridurre la quantità di tempo necessario per costruire un <xref:System.Speech.Recognition.Grammar>oggetto da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Una grammatica SRGS è possibile definire una regola di radice. Per creare un <xref:System.Speech.Recognition.Grammar>da una stringa dell&quot;oggetto e specificare una regola radice, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Per creare un <xref:System.Speech.Recognition.Grammar>oggetto che specifica un URI di base da utilizzare per risolvere i riferimenti relativi regola, aprire il file in un flusso di file e utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file che descrive una grammatica di riconoscimento vocale in un formato supportato."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>contiene una stringa vuota (&quot;&quot;), o il file viene descritta una grammatica non contiene una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Il file non contiene una descrizione valida o descrive una grammatica che contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref:System.IO.Stream>e specifica una regola radice.</xref:System.IO.Stream>"
  remarks: "Questo costruttore non passare alcun parametro per il gestore di inizializzazione e la descrizione non deve definire un gestore di inizializzazione che richiede argomenti.       Questo costruttore è possibile creare un <xref:System.Speech.Recognition.Grammar>istanza uno dei formati seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un formato binario del file con estensione cfg questo costruttore compila i file di grammatica di formato XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar> È possibile ridurre la quantità di tempo necessario per costruire un <xref:System.Speech.Recognition.Grammar>oggetto da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Per creare un <xref:System.Speech.Recognition.Grammar>da un flusso e specificare un URI di base da utilizzare per risolvere i riferimenti relativi regola, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Flusso che descrive una grammatica di riconoscimento vocale in un formato supportato."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>non può essere risolto o non è pubblica o <code>ruleName</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e la descrizione di grammatica non definisce una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Il flusso non contiene una descrizione valida o descrive una grammatica che contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> dell&quot;oggetto e specifica una regola radice."
  remarks: "Questo costruttore non passare i parametri per il gestore di inizializzazione e <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>non deve contenere un gestore di inizializzazione che richiede argomenti.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Per creare un <xref:System.Speech.Recognition.Grammar>dell&quot;oggetto da un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>e specificare un URI di base da utilizzare per risolvere i riferimenti relativi regola, utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "I vincoli per la grammatica di riconoscimento vocale."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola radice predefinita del <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>non può essere risolto o non è pubblica o <code>ruleName</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e <code>srgsDocument</code> non contiene una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da un file e specifica una regola radice."
  remarks: "Questo costruttore non passare alcun parametro per il gestore di inizializzazione e la descrizione non deve definire un gestore di inizializzazione che richiede argomenti.       Questo costruttore è possibile creare un <xref:System.Speech.Recognition.Grammar>istanza uno dei formati seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un formato binario del file con estensione cfg questo costruttore compila i file di grammatica di formato XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar> È possibile ridurre la quantità di tempo necessario per costruire un <xref:System.Speech.Recognition.Grammar>oggetto da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Per creare un <xref:System.Speech.Recognition.Grammar>che specifica un URI di base da utilizzare per risolvere i riferimenti relativi regola, aprire un flusso di file per il file e utilizzare il <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttore.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso del file che descrive una grammatica di riconoscimento vocale in un formato supportato."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>non può essere risolto o non è pubblico, <code>path</code> è una stringa vuota (&quot;&quot;), o <code>ruleName</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e la descrizione di grammatica non definisce una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Il file non contiene una descrizione valida o descrive una grammatica che contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref:System.IO.Stream>e specifica una regola radice.</xref:System.IO.Stream>"
  remarks: "Inoltre è possibile specificare parametri per un gestore di inizializzazione."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>connessa a un oggetto di input/output (inclusi i file di risorse di Visual Studio e DLL) che contiene una specifica di grammatica.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare al gestore di inizializzazione specificato per il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>proprietà per il punto di ingresso o la regola radice del <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da creare.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Questo parametro può essere null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>è connesso a una grammatica che:-non contiene la regola specificata <code>ruleName</code>       - richiede parametri di inizializzazione diversi da quelle specificate <code>parameters</code>       - contiene un riferimento di regola relativo che non può essere risolto dal tipo di base predefinito <xref:System.Uri> regola per le grammatiche"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un flusso, specifica una regola radice e definisce una base identificatore URI (Uniform Resource) per risolvere i riferimenti relativi regola."
  remarks: "Questo costruttore non passare alcun parametro per il gestore di inizializzazione e la descrizione non deve definire un gestore di inizializzazione che richiede argomenti.       Questo costruttore è possibile creare un <xref:System.Speech.Recognition.Grammar>istanza uno dei formati seguenti:-file di formato XML conformi al W3C [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -le grammatiche che sono state compilate in un formato binario del file con estensione cfg questo costruttore compila i file di grammatica di formato XML in un formato binario da ottimizzarle per il caricamento e l&quot;utilizzo dal motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar> È possibile ridurre la quantità di tempo necessario per costruire un <xref:System.Speech.Recognition.Grammar>oggetto da una grammatica XML in formato compilando la grammatica in anticipo, utilizzando uno del <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metodi.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Questo costruttore non convalida `baseUri`. Tuttavia, il `LoadGrammar` metodo di un <xref:System.Speech.Recognition.SpeechRecognitionEngine>o <xref:System.Speech.Recognition.SpeechRecognizer>oggetto genera un&quot;eccezione se non è in grado di risolvere tutti i riferimenti regola nella descrizione della grammatica.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Se `baseUri` non `null`, `LoadGrammar` metodo utilizza l&quot;URI per risolvere eventuali riferimenti regola che è in grado di risolvere in caso contrario. Se `baseUri` rappresenta un file, quindi il `LoadGrammar` Usa il file e la directory del file durante il tentativo di risolvere i riferimenti relativi regola."
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Flusso che descrive una grammatica di riconoscimento vocale in un formato supportato."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: baseUri
      type: System.Uri
      description: "L&quot;URI di base da utilizzare per risolvere qualsiasi riferimento di regola relativo nella descrizione grammatica, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>non può essere risolto o non è pubblica o <code>ruleName</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e la descrizione di grammatica non definisce una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Il flusso non contiene una descrizione valida o descrive una grammatica che contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un&quot;istanza di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>e specifica il nome di una regola per il punto di ingresso alla grammatica."
  remarks: "Inoltre è possibile specificare parametri per un gestore di inizializzazione."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Un&quot;istanza di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> che contiene i vincoli per la grammatica di riconoscimento vocale."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare al gestore di inizializzazione specificato per il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>proprietà per il punto di ingresso o la regola radice del <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da creare.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Questo parametro può essere null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Uno dei parametri contiene un valore non valido.      -La <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> specificato da <code> srgsDocument </code> non contiene la regola specificata dal <code> ruleName </code>.      -Il contenuto dei parametri di matrice non corrispondono agli argomenti di uno qualsiasi dei gestori di inizializzazione della regola."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> oggetto, specifica una regola radice e definisce una base identificatore URI (Uniform Resource) per risolvere i riferimenti relativi regola."
  remarks: "Questo costruttore non passare i parametri per il gestore di inizializzazione e <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>non deve contenere un gestore di inizializzazione che richiede argomenti.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Questo costruttore non convalida `baseUri`. Tuttavia, il `LoadGrammar` metodo di un <xref:System.Speech.Recognition.SpeechRecognitionEngine>o <xref:System.Speech.Recognition.SpeechRecognizer>oggetto genera un&quot;eccezione se non è in grado di risolvere tutti i riferimenti regola nella descrizione della grammatica.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Se `baseUri` non `null`, `LoadGrammar` metodo utilizza l&quot;URI per risolvere eventuali riferimenti regola che è in grado di risolvere in caso contrario. Se `baseUri` rappresenta un file, quindi il `LoadGrammar` metodo utilizza il file sia la directory del file durante il tentativo di risolvere i riferimenti relativi regola."
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "I vincoli per la grammatica di riconoscimento vocale."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola radice predefinita del <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
    - id: baseUri
      type: System.Uri
      description: "L&quot;URI di base da utilizzare per risolvere qualsiasi riferimento di regola relativo nel <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>non può essere risolto o non è pubblica o <code>ruleName</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e <code>srgsDocument</code> non contiene una regola radice."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>contiene un riferimento di regola che non può essere risolti."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un file che contiene una definizione di grammatica e specifica il nome di una regola per il punto di ingresso alla grammatica..."
  remarks: "Inoltre è possibile specificare parametri per un gestore di inizializzazione."
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso in un file, incluse le DLL, che contiene una specifica di grammatica."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare al gestore di inizializzazione specificato per il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>proprietà per il punto di ingresso o la regola radice del <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da creare.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Questo parametro può essere null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Uno dei parametri contiene un valore non valido.      -Il file specificato da <code> path </code> non contiene una grammatica valida o la regola specificata <code> ruleName </code>.      -Il contenuto dei parametri di matrice non corrispondono agli argomenti di uno qualsiasi dei gestori di inizializzazione della regola.      -La grammatica contiene un riferimento di regola relativo che non può essere risolto dal tipo di base predefinito <xref:System.Uri>regola per le grammatiche.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe un <xref:System.IO.Stream>e specifica una regola radice e un URI di base per risolvere i relativi riferimenti.</xref:System.IO.Stream>"
  remarks: "Inoltre è possibile specificare parametri per un gestore di inizializzazione."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>connessa a un oggetto di input/output (inclusi i file di risorse di Visual Studio e DLL) che contiene una specifica di grammatica.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: baseUri
      type: System.Uri
      description: "L&quot;URI di base da utilizzare per risolvere qualsiasi riferimento di regola relativo nella descrizione grammatica, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare al gestore di inizializzazione specificato per il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>proprietà per il punto di ingresso o la regola radice del <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da creare.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Questo parametro può essere null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Uno dei parametri contiene un valore non valido.      -La <code> stream </code> è connesso a una grammatica non contiene la regola specificata dal <code> ruleName </code>.      -Il contenuto dei parametri di matrice non corrispondono agli argomenti di uno qualsiasi dei gestori di inizializzazione della regola.      -La grammatica contiene un riferimento di regola relativo che non può essere risolto dal tipo di base predefinito <xref:System.Uri>regola per le grammatiche o l&quot;URI fornito da <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> classe da un&quot;istanza di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>e specifica il nome di una regola per il punto di ingresso nella grammatica e un URI di base per risolvere i relativi riferimenti."
  remarks: "Inoltre è possibile specificare parametri per un gestore di inizializzazione."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Un&quot;istanza di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> che contiene i vincoli per la grammatica di riconoscimento vocale."
    - id: ruleName
      type: System.String
      description: "Identificatore della regola da usare come punto di ingresso della grammatica, riconoscimento vocale o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per utilizzare la regola di primo livello predefinita della descrizione della grammatica."
    - id: baseUri
      type: System.Uri
      description: "L&quot;URI di base da utilizzare per risolvere qualsiasi riferimento di regola relativo nella descrizione grammatica, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare al gestore di inizializzazione specificato dalla proprietà per il punto di ingresso o la regola radice di <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>il <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> da creare. Questo parametro può essere null.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Uno dei parametri contiene un valore non valido.      -La <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> specificato da <code> srgsDocument </code> non contiene la regola specificata <code> ruleName </code>.      -Il contenuto dei parametri di matrice non corrispondono agli argomenti di uno qualsiasi dei gestori di inizializzazione della regola.      -La grammatica contiene un riferimento di regola relativo che non può essere risolto dal tipo di base predefinito <xref:System.Uri>regola per le grammatiche o l&quot;URI fornito da <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene o imposta un valore che controlla se un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> può essere utilizzato da un riconoscimento vocale per eseguire il riconoscimento."
  remarks: "Un&quot;istanza di <xref:System.Speech.Recognition.Grammar>sia abilitato o disabilitato in modo indipendente da vengano caricati da un motore di riconoscimento vocale.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "Il <xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref> restituisce proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se un riconoscimento vocale può eseguire il riconoscimento utilizzando la grammatica di riconoscimento vocale; in caso contrario la proprietà restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Indica se una grammatica è fortemente tipizzata."
  remarks: "Oggetto fortemente tipizzato <xref:System.Speech.Recognition.Grammar>oggetto (`IsStg` è uguale a `true`) può restituire risultati fortemente tipizzati (oggetti piuttosto che di testo non elaborato) a un&quot;applicazione client.</xref:System.Speech.Recognition.Grammar> Ad esempio, in cui potrebbe restituire una grammatica fortemente tipizzato <xref:System.DateTime>oggetti anziché raw input riconosciuto.</xref:System.DateTime>       È possibile implementare le grammatiche fortemente tipizzati mediante l&quot;aggiunta di codice per le regole di una grammatica. Mentre un motore di riconoscimento elabora ogni regola, acquisire come input i risultati parziali correnti, viene eseguito il codice associato e le informazioni testuali diventano gli oggetti di tipo completo. In questo modo un client rendere più facilmente utilizzare controllo semantico avanzata, supporto per più impostazioni cultura e la logica di grammatica interno.       Le istanze di fortemente tipizzata <xref:System.Speech.Recognition.Grammar>gli oggetti vengono in genere ottenuti dalle risorse in un assembly come un <xref:System.Type>di Common Language Runtime (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> I tipi localizzati utilizzati per supportare lingue diverse sono riportati esempi di tali <xref:System.Speech.Recognition.Grammar>oggetti.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "Il <xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref> restituisce proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se la grammatica è fortemente tipizzata; in caso contrario la proprietà restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene se un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> è stata caricata da un riconoscimento vocale."
  remarks: "Una volta un <xref:System.Speech.Recognition.Grammar>sono stati caricati, i valori di <xref:System.Speech.Recognition.Grammar.Weight%2A>, e <xref:System.Speech.Recognition.Grammar.Priority%2A>non può essere modificato.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "Il <xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref> restituisce proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se la grammatica di riconoscimento vocale riferimento attualmente caricata in un riconoscimento vocale; in caso contrario la proprietà restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Il <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> metodo restituisce un&quot;istanza della localizzata un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto derivato da <xref:System.Type>.</xref:System.Type>"
  remarks: "Localizzare le grammatiche ottenute con `LoadLocalizedGrammarFromType` vengono in genere fortemente tipizzata (vedere <xref:System.Speech.Recognition.Grammar.IsStg%2A>Per ulteriori informazioni per le grammatiche fortemente tipizzate).</xref:System.Speech.Recognition.Grammar.IsStg%2A> Se `onInitParameters` è un riferimento null (Nothing in Visual Basic) versione localizzata grammatica deve contenere alcun metodo di inizializzazione, o un metodo che non accetta argomenti."
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "In un assembly, il <xref:System.Type>di un oggetto in base a <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>.</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "Parametri da passare a un metodo di inizializzazione del localizedobject dipende <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Questo parametro può essere null."
    return:
      type: System.Speech.Recognition.Grammar
      description: "Il <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> il metodo restituisce un oggetto valido in base a <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se si è verificato un errore."
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene o imposta il nome di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà restituisce il nome del <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene o imposta il valore di priorità di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto."
  remarks: "Il `Priority` proprietà viene utilizzata per selezionare una grammatica quando più di una grammatica verrà producono un risultato di riconoscimento identici. Se un riconoscimento vocale ha più di un riconoscimento grammatica vocale caricati e abilitato che corrispondono all&quot;input, la corrispondenza è il risultato migliore dal riconoscimento, quindi il riconoscimento utilizza la grammatica che ha la massima `Priority`. Se anche le grammatiche che producono il risultato di riconoscimento identici hanno lo stesso `Priority` valore, quindi la grammatica che utilizza il riconoscimento non è definita."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "Il <xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref> proprietà restituisce un valore intero che rappresenta la priorità relativa di un oggetto specifico <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. L&quot;intervallo è compreso tra -128 e 127 inclusi. Il valore predefinito è 0."
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene o imposta un valore con il nome di una risorsa binaria che è stato utilizzato per il caricamento corrente <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>."
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "Il <xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref> proprietà restituisce il nome della risorsa binaria da cui la grammatica fortemente tipizzato, usato da <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, è stato caricato."
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene il nome del punto di regola o voce di radice di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto."
  remarks: "Per costruire un <xref:System.Speech.Recognition.Grammar>dell&quot;oggetto e impostare il nome per la regola di radice, utilizzare uno del <xref:System.Speech.Recognition.Grammar.%23ctor%2A>costruttori che accettano il `ruleName` parametro.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Se la regola radice di un <xref:System.Speech.Recognition.Grammar>non ha un nome, la proprietà restituisce `null`.</xref:System.Speech.Recognition.Grammar>       Le regole di radice di <xref:System.Speech.Recognition.Grammar>istanze costruito da <xref:System.Speech.Recognition.GrammarBuilder>oggetti non dispongono in genere alcun nome, pertanto RuleName restituisce `null`.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "Il <xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref> proprietà restituisce l&quot;identificatore per la regola radice della grammatica di riconoscimento vocale a cui fa riferimento. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Generato quando un riconoscimento vocale esegue il riconoscimento utilizzando il <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto."
  remarks: "Il riconoscimento vocale genera anche un `SpeechRecognized` evento quando riconosce l&quot;input. Il <xref:System.Speech.Recognition.Grammar>dell&quot;oggetto SpeechRecognized viene generato prima del riconoscimento vocale `SpeechRecognized` evento.</xref:System.Speech.Recognition.Grammar> Per ulteriori informazioni, vedere il <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, e <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>eventi.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       Qualsiasi attività specifiche di una particolare grammatica deve sempre essere gestite da gestori di per il <xref:System.Speech.Recognition.Grammar>evento dell&quot;oggetto SpeechRecognized.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Il <xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref> metodo consente di inizializzare una grammatica fortemente tipizzata."
  remarks: "Oggetto fortemente tipizzato <xref:System.Speech.Recognition.Grammar>oggetto (`IsStg` è uguale a `true`) può restituire risultati fortemente tipizzati (oggetti piuttosto che di testo non elaborato) a un&quot;applicazione client.</xref:System.Speech.Recognition.Grammar> Ad esempio, in cui potrebbe restituire una grammatica fortemente tipizzato <xref:System.DateTime>oggetti anziché raw input riconosciuto.</xref:System.DateTime>       È possibile implementare le grammatiche fortemente tipizzati mediante l&quot;aggiunta di codice per le regole di una grammatica. Mentre un motore di riconoscimento elabora ogni regola, acquisire come input i risultati parziali correnti, viene eseguito il codice associato e le informazioni testuali diventano gli oggetti di tipo completo. In questo modo un client rendere più facilmente utilizzare controllo semantico avanzata, supporto per più impostazioni cultura e la logica di grammatica interno.       Le istanze di fortemente tipizzata <xref:System.Speech.Recognition.Grammar>gli oggetti vengono in genere ottenuti dalle risorse in un assembly come un <xref:System.Type>di Common Language Runtime (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> I tipi localizzati utilizzati per supportare lingue diverse sono riportati esempi di tali <xref:System.Speech.Recognition.Grammar>oggetti.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Parametri da passare per inizializzare la grammatica fortemente tipizzata. Questo parametro può essere null."
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Ottiene o imposta il valore di peso di un <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> oggetto."
  remarks: "A causa della complessità di utilizzo del motore di riconoscimento di **peso**, il relativo effetto sulle prestazioni di una particolare grammatica non è stimabile direttamente a quello di <xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       Il riconoscimento vocale è un sistema ponderato. Restituisce tutti i percorsi di riconoscimento possibili in base a una combinazione del peso della grammatica, i pesi definiti per le alternative all&quot;interno di grammatica e le probabilità definite dai modelli di riconoscimento vocale. Il motore di riconoscimento vocale utilizza la combinazione di questi pesi e le probabilità di ranghi riconoscimenti alternative potenziali. Le grammatiche con pesi superiori fornirà informazioni sulla valutazione delle alternative di riconoscimento delle grammatiche con pesi inferiore.       L&quot;effetto della proprietà peso in un riconoscimento vocale è dipendente dall&quot;implementazione di riconoscimento. Anche se la proprietà di peso può essere utilizzata per ottimizzare l&quot;accuratezza del riconoscimento vocale per un&quot;applicazione, deve essere utilizzato solo dopo aver controllato Studio diagnostica di un ambiente particolare riconoscimento e con le informazioni complete sul motore di riconoscimento in uso."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "Il <xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref> restituisce proprietà valore che indica il peso relativo che un&quot;istanza del motore di riconoscimento è consigliabile assegnare alla grammatica durante l&quot;elaborazione di input vocale a virgola mobile. L&quot;intervallo è compreso tra 0,0 e 1,0 inclusi. Il valore predefinito è 1.0."
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
