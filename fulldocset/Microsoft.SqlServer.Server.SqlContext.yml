### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlContext
  id: SqlContext
  children:
  - Microsoft.SqlServer.Server.SqlContext.IsAvailable
  - Microsoft.SqlServer.Server.SqlContext.Pipe
  - Microsoft.SqlServer.Server.SqlContext.TriggerContext
  - Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  langs:
  - csharp
  name: SqlContext
  nameWithType: SqlContext
  fullName: Microsoft.SqlServer.Server.SqlContext
  type: Class
  summary: "Rappresenta un&quot;astrazione del contesto del chiamante, che fornisce l&quot;accesso per il <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref>, <xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;> </xref>, e <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> oggetti. Questa classe non può essere ereditata."
  remarks: "Oggetto SqlContext può essere utilizzato per ottenere il contesto del trigger (per il codice eseguito in un trigger) e l&quot;oggetto pipe (quando disponibile, ad esempio nelle stored procedure). E può essere utilizzato per ottenere un <xref:System.Security.Principal.WindowsIdentity>oggetto che rappresenta l&quot;identità di Microsoft Windows del client chiamante, se il client autenticato al server usando l&quot;autenticazione integrata.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_11_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_11_1.cs)]"
  syntax:
    content: public sealed class SqlContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  id: IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Specifica se il codice chiamante è in esecuzione all&quot;interno di SQL Server e, se la connessione di contesto è possibile accedere."
  remarks: "Se questa proprietà restituisce false, tutti gli altri <xref:Microsoft.SqlServer.Server.SqlContext>membri generano un <xref:System.InvalidOperationException>Se utilizzato.</xref:System.InvalidOperationException> </xref:Microsoft.SqlServer.Server.SqlContext>       Se questa proprietà restituisce false, qualsiasi tentativo di aprire un oggetto connessione contenente &quot;connessione di contesto = true&quot; nella stringa di connessione ha esito negativo.       Questa proprietà è di sola lettura.       Quando si utilizza ADO.NET per accedere ai dati, se un frammento di codice è in esecuzione all&quot;interno di SQL Server (utilizzando l&quot;integrazione common language runtime) e all&quot;esterno di SQL Server, questa proprietà può essere utilizzata per controllare se la connessione di contesto è disponibile."
  syntax:
    content: public static bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se la connessione di contesto è disponibile e l&quot;altro <xref href=&quot;Microsoft.SqlServer.Server.SqlContext&quot;> </xref> membri sono accessibili."
  overload: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  id: Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Ottiene l&quot;oggetto pipe che consente al chiamante di inviare set di risultati, i messaggi e i risultati dell&quot;esecuzione di comandi al client."
  remarks: "Se chiamato da fuori di SQL Server, un <xref:System.NotSupportedException>viene generata un&quot;eccezione.</xref:System.NotSupportedException>       Questa proprietà è di sola lettura."
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlPipe
      description: "Un&quot;istanza di <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> se è disponibile, una pipe o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene chiamato in un contesto in cui pipe non è disponibile (ad esempio, in una funzione definita dall&quot;utente)."
  overload: Microsoft.SqlServer.Server.SqlContext.Pipe*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  id: TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Ottiene il contesto di trigger utilizzato per fornire al chiamante le informazioni su ciò che ha causato l&quot;attivazione del trigger e una mappa delle colonne che sono stati aggiornati."
  remarks: "Il <xref:Microsoft.SqlServer.Server.SqlTriggerContext>oggetto può essere recuperato solo dall&quot;interno di un trigger CLR.</xref:Microsoft.SqlServer.Server.SqlTriggerContext>       Se si accede alla proprietà di TriggerContext da esterno a SQL Server, un <xref:System.NotSupportedException>viene generata un&quot;eccezione.</xref:System.NotSupportedException>       Questa proprietà è di sola lettura."
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlTriggerContext
      description: "Un&quot;istanza di <xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;> </xref> se è disponibile, il contesto di un trigger o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se chiamata all&quot;esterno di una chiamata del trigger."
  overload: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  id: WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "L&quot;identità di Microsoft Windows del chiamante."
  remarks: "Codice di Common language runtime (CLR) all&quot;interno di SQL Server viene sempre richiamato nel contesto dell&quot;account del processo. Se è necessario per il codice eseguire un&quot;azione utilizzando l&quot;identità dell&quot;utente chiamante anziché l&quot;identità del processo di SQL Server, un token di rappresentazione deve essere ottenuto tramite questa proprietà. Dopo aver ottenuto il <xref:System.Security.Principal.WindowsIdentity>dell&quot;oggetto, i chiamanti possono rappresentare l&quot;account del client ed eseguire azioni per suo conto.</xref:System.Security.Principal.WindowsIdentity>       Se chiamato da fuori di SQL Server, un <xref:System.NotSupportedException>viene generata un&quot;eccezione.</xref:System.NotSupportedException>       Solo gli assembly contrassegnati con `EXTERNAL_ACCESS` o `UNSAFE` le autorizzazioni possono accedere a questa proprietà.       Questa proprietà è di sola lettura."
  example:
  - "The following example shows how to get the Windows identity of the calling client and impersonate the client. See \"Impersonation Sample\" in SQL Server Books Online for an example of impersonation using the WindowsIdentity property.  \n  \n [!code-cs[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/csharp/p-microsoft.sqlserver.se_6_1.cs)]\n [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/visualbasic/p-microsoft.sqlserver.se_6_1.vb)]"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Oggetto <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> istanza che rappresenta l&quot;identità Windows del chiamante, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il client è stato autenticato tramite l&quot;autenticazione di SQL Server."
  overload: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlPipe
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlTriggerContext
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlTriggerContext
  nameWithType: SqlTriggerContext
  fullName: Microsoft.SqlServer.Server.SqlTriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
