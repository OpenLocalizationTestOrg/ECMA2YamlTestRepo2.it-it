### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: "Rappresenta un contenitore che può archiviare più oggetti dati."
  remarks: "Pacchetto è una classe astratta che può essere utilizzata per organizzare gli oggetti in una singola entità di un formato fisico definito per l&quot;accesso efficiente e portabilità.       Un file ZIP è il formato fisico primario per il pacchetto.  Altre implementazioni di pacchetto è potrebbero utilizzare gli altri formati fisici, ad esempio un documento XML, un database o un servizio Web.       Ad esempio un file system, gli elementi contenuti in un pacchetto vengono fatto riferimento in un&quot;organizzazione gerarchica di cartelle e file.       Sebbene pacchetto stesso è una classe astratta, la <xref:System.IO.Packaging.ZipPackage>classe derivata viene utilizzata come impostazione predefinita il <xref:System.IO.Packaging.Package.Open%2A>metodo.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.ZipPackage>       Oggetto <xref:System.IO.Packaging.PackagePart>(&quot;parte&quot;) è la classe astratta che rappresenta un oggetto che viene archiviato in un pacchetto.</xref:System.IO.Packaging.PackagePart>       Oggetto <xref:System.IO.Packaging.PackageRelationship>(&quot;relazione&quot;) definisce un&quot;associazione tra un&quot;origine pacchetto o <xref:System.IO.Packaging.PackagePart>e un oggetto di destinazione.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackageRelationship>  A <xref:System.IO.Packaging.PackageRelationship>può essere uno dei due tipi, ognuno dei quali può essere uno dei due formati:-una relazione a livello di pacchetto (creati il <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName>(metodo)) mette in correlazione un pacchetto con: - una parte nel pacchetto di destinazione.</xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName> </xref:System.IO.Packaging.PackageRelationship>          -Una risorsa di destinazione all&quot;esterno del pacchetto.      -A parte a livello di relazione (creati il <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>(metodo)) mette in correlazione <xref:System.IO.Packaging.PackagePart>a uno:: un&quot;altra parte nel pacchetto di destinazione.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>          -Una risorsa di destinazione all&quot;esterno del pacchetto.       La relazione di origine pacchetto o origine <xref:System.IO.Packaging.PackagePart>viene considerato il &quot;proprietario&quot; della relazione.</xref:System.IO.Packaging.PackagePart>  Quando viene eliminato l&quot;oggetto di origine, vengono eliminate anche tutte le relazioni di proprietà dell&quot;oggetto di origine.  Il processo di creazione o eliminazione di una relazione non modifica fisicamente gli oggetti di origine o di destinazione in alcun modo.       Oggetto <xref:System.IO.Packaging.PackageDigitalSignature>(&quot;firma digitale&quot;) è una composizione di parti e relazioni che rappresentano una firma digitale inclusa in un pacchetto.</xref:System.IO.Packaging.PackageDigitalSignature>  La firma digitale identifica il creatore e convalida che le parti e relazioni firmate contenute nel pacchetto non sono state modificate.       I pacchetti supportano anche Digital Rights Management (DRM) che consente agli elementi di contenuto in un pacchetto di crittografia con diritti di accesso specifiche consentiti agli utenti autorizzati.       In base all&quot;architettura di pacchetto, un <xref:System.Windows.Xps.Packaging.XpsDocument>è progettato per l&quot;archiviazione di documenti in base all&quot;apertura di un tipo di pacchetto [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</xref:System.Windows.Xps.Packaging.XpsDocument>       [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]utilizza i pacchetti per archiviare il contenuto, risorse e le relazioni per pagine e documenti utilizzando un file ZIP standard per impostazione predefinita. Come con qualsiasi file ZIP, è possibile usare l&quot;applicazione di <xref:System.IO.Packaging>classi per archiviare e facoltativamente proteggere qualsiasi tipo o il numero di file di dati in un singolo contenitore accesso efficiente.</xref:System.IO.Packaging>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows the basic steps for creating a Package.  In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.  (This is similar to the case in which an HTML file has an \\<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.  The first, a \"package-level\" relationship, defines the document part as the package's root element.  A second, \"part-level\" relationship defines the association between the document part (the \"source\" of the part-level relationship) and its use of the image part (the \"target\" of the part-level relationship).  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> classe che utilizza un determinato <xref href=&quot;System.IO.FileAccess&quot;> </xref>."
  remarks: "Il pacchetto è un costruttore protetto della <xref:System.IO.Packaging.Package>classe base astratta.</xref:System.IO.Packaging.Package> Quando viene chiamato in una classe derivata, il costruttore di pacchetto consente di inizializzare una nuova istanza della classe derivata."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Le autorizzazioni dei / o file per il pacchetto."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <code> openFileAccess </code> non è valido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inizializza una nuova istanza del <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> classe che utilizza una determinata <xref href=&quot;System.IO.FileAccess&quot;> </xref> e opzione di streaming."
  remarks: "Il pacchetto è un costruttore protetto della classe <xref:System.IO.Packaging.Package>astratta classe base astratta base.</xref:System.IO.Packaging.Package> Quando viene chiamato in una classe derivata, il costruttore di pacchetto consente di inizializzare una nuova istanza della classe derivata."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Le autorizzazioni dei / o file per il pacchetto."
    - id: streaming
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per aprire il pacchetto del flusso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <code> openFileAccess </code> non è valido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Salva e chiude il pacchetto più tutti i flussi parte sottostante."
  remarks: "Per la <xref:System.IO.Packaging.Package>classe Chiudi e <xref:System.IO.Packaging.Package.Dispose%2A>eseguono la stessa operazione, non è necessario chiamare <xref:System.IO.Packaging.Package.Dispose%2A>Se si chiama Close o viceversa.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package>       Chiudere e <xref:System.IO.Packaging.Package.Dispose%2A>chiamare internamente <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A> </xref:System.IO.Packaging.Package.Dispose%2A>      > [!NOTE] > Il `using` istruzione (diverso dal `using` direttiva dello spazio dei nomi) è il modo consigliato per chiudere e <xref:System.IO.Packaging.Package.Dispose%2A>un pacchetto.</xref:System.IO.Packaging.Package.Dispose%2A>  [Scrittura di un pacchetto di esempio](http://go.microsoft.com/fwlink/?LinkID=160055) e [la lettura di un pacchetto di esempio](http://go.microsoft.com/fwlink/?LinkID=160034) viene illustrato come chiudere ed eliminare un pacchetto utilizzando la `using` istruzione."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.Package.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Crea una nuova parte non compressa con un URI specificato e il tipo di contenuto."
  remarks: "CreatePart Inizializza un vuoto <xref:System.IO.Stream>per la nuova parte.</xref:System.IO.Stream>  L&quot; <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>metodo può essere utilizzato per ottenere un riferimento all&quot;istanza del flusso associata con la parte.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       La parte <xref:System.IO.Packaging.PackagePart.CompressionOption%2A>è <xref:System.IO.Packaging.CompressionOption?displayProperty=fullName>.</xref:System.IO.Packaging.CompressionOption?displayProperty=fullName> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       Per ulteriori informazioni sulle parti del pacchetto, vedere la sezione 1.1 la specifica Open Packaging Conventions (OPC) disponibile per il download al [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] della nuova parte."
    - id: contentType
      type: System.String
      description: "Il tipo di contenuto del flusso di dati."
    return:
      type: System.IO.Packaging.PackagePart
      description: "La nuova parte creata."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una parte con specificato <code> partUri </code> è già presente nel pacchetto."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura (non è possibile aggiungere una nuova parte)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Crea una nuova parte con un determinato URI, tipo di contenuto e l&quot;opzione di compressione."
  remarks: "Per impostazione predefinita <xref:System.IO.Packaging.ZipPackage>derivata CreatePart metodo solo supporta due `compressionOption` valori, <xref:System.IO.Packaging.CompressionOption>o <xref:System.IO.Packaging.CompressionOption>la compressione.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Altri <xref:System.IO.Packaging.CompressionOption>valori di <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, o <xref:System.IO.Packaging.CompressionOption>utilizzare <xref:System.IO.Packaging.CompressionOption>compressione.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       CreatePart crea un vuoto <xref:System.IO.Stream>per la nuova parte.</xref:System.IO.Stream>  L&quot; <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>metodo può essere utilizzato per ottenere un riferimento all&quot;istanza del flusso associata con la parte.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] della nuova parte."
    - id: contentType
      type: System.String
      description: "Il tipo di contenuto del flusso di dati."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "L&quot;opzione di compressione per il flusso di dati, <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> o <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> la compressione."
    return:
      type: System.IO.Packaging.PackagePart
      description: "La nuova parte creata."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una parte con specificato <code> partUri </code> è già presente nel pacchetto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> compressionOption </code> valore non è valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura (non è possibile aggiungere una nuova parte)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando sottoposto a override in una classe derivata, crea una nuova parte nel pacchetto."
  remarks: "Il metodo di CreatePartCore derivato viene chiamato dal <xref:System.IO.Packaging.Package.CreatePart%2A>metodo per creare una parte in base al formato fisico implementato nella classe derivata.</xref:System.IO.Packaging.Package.CreatePart%2A>       Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>derivato implementazione della classe della classe astratta <xref:System.IO.Packaging.Package>classe viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, <xref:System.IO.Packaging.Package.CreatePart%2A>chiama internamente CreatePartCore del <xref:System.IO.Packaging.ZipPackage>classe per creare una nuova parte in un file ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.CreatePart%2A>       Per impostazione predefinita <xref:System.IO.Packaging.ZipPackage>derivata CreatePartCore metodo solo supporta due `compressionOption` valori, <xref:System.IO.Packaging.CompressionOption>o <xref:System.IO.Packaging.CompressionOption>la compressione.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Altri <xref:System.IO.Packaging.CompressionOption>valori di <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, o <xref:System.IO.Packaging.CompressionOption>utilizzare <xref:System.IO.Packaging.CompressionOption>compressione.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       Per ulteriori informazioni sulle parti del pacchetto e il modello di pacchetto, vedere il capitolo 1 della specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] per la parte da creare."
    - id: contentType
      type: System.String
      description: "Il tipo di contenuto del flusso di dati."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "L&quot;opzione di compressione per il flusso di dati."
    return:
      type: System.IO.Packaging.PackagePart
      description: "La parte creata."
  overload: System.IO.Packaging.Package.CreatePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Crea una relazione a livello di pacchetto a una parte con un URI specificato, la modalità di destinazione e il tipo di relazione."
  remarks: "Una relazione a livello di pacchetto definisce un&quot;associazione tra il pacchetto e una parte di destinazione associata o la risorsa.  Una relazione a livello di pacchetto può essere uno dei due formati.      -Tra un <xref:System.IO.Packaging.Package>a una parte di destinazione nel pacchetto.</xref:System.IO.Packaging.Package>      -Tra un <xref:System.IO.Packaging.Package>a una risorsa di destinazione all&quot;esterno del pacchetto.</xref:System.IO.Packaging.Package>       In una relazione di pacchetto, il pacchetto viene considerato il &quot;proprietario&quot; della relazione.  Quando il pacchetto viene eliminato, vengono eliminate anche tutte le relazioni di proprietà del pacchetto.       CreateRelationship modifica fisicamente la parte di destinazione o di una risorsa in alcun modo.       La destinazione di una relazione non può essere un&quot;altra relazione.       Se `targetMode` è specificato come <xref:System.IO.Packaging.TargetMode>, `targetUri` deve essere un URI relativo che viene stabilito in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  L&quot;URI relativo interno può essere un percorso assoluto che inizia con una barra (&quot;/&quot;) carattere, ad esempio &quot;/ Page1&quot; o &quot;/ /images/picture4.jpg&quot;, o un percorso relativo, ad esempio &quot;... / /imagespicture1.jpg &quot;che risolve contro nella radice del pacchetto (&quot;/ &quot;) come URI di base.       Se `targetMode` è specificato come <xref:System.IO.Packaging.TargetMode>, `targetUri` possono essere entrambi assoluto o relativo URI corretto in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; è un esempio di un URI assoluto che fa riferimento a una risorsa di destinazione esterna &quot;Page2&quot;.  &quot;images/picture1.jpg&quot; è un esempio di un URI relativo che fa riferimento a una destinazione esterna risorse &quot;1.jpg&quot; ma che viene risolto in base all&quot;URI del pacchetto stesso.       `relationshipType`deve essere un [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] che viene stabilita in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).  La tabella seguente mostra il livello di pacchetto `relationshipType` URI definito dalla specifica Open Packaging Conventions (OPC).      | Relazione a livello di pacchetto | URI del tipo di relazione |   |---------------------------------|---------------------------|   | Proprietà di base | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-proprietà dati |   | Firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/firma |   | Certificato di firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ certificato di firma |   | L&quot;origine della firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/origine |   | Anteprima | http://schemas.openxmlformats.org/package/2006/relationships/meta dati/anteprima |       Per ulteriori informazioni sulla creazione di pacchetti e le relazioni di pacchetto, vedere la sezione 1.3 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use CreateRelationship to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] della parte di destinazione."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Indica se la parte di destinazione è <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> o <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> al pacchetto."
    - id: relationshipType
      type: System.String
      description: "URI che definisce in modo univoco il ruolo della relazione."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "La relazione a livello di pacchetto per la parte specificata."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <code> targetMode </code> non è valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Crea una relazione a livello di pacchetto a una parte con un URI specificato, la modalità di destinazione, un tipo di relazione e [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Una relazione a livello di pacchetto definisce un&quot;associazione tra il pacchetto e una parte di destinazione associata o la risorsa.  Una relazione a livello di pacchetto può essere uno dei due formati.      -Tra un <xref:System.IO.Packaging.Package>a una parte di destinazione nel pacchetto.</xref:System.IO.Packaging.Package>      -Tra un <xref:System.IO.Packaging.Package>a una risorsa di destinazione all&quot;esterno del pacchetto.</xref:System.IO.Packaging.Package>       In una relazione di pacchetto, il pacchetto viene considerato il &quot;proprietario&quot; della relazione.  Quando il pacchetto viene eliminato, vengono eliminate anche tutte le relazioni di proprietà del pacchetto.       CreateRelationship modifica fisicamente la parte di destinazione o di una risorsa in alcun modo.       La destinazione di una relazione non può essere un&quot;altra relazione.       `id`deve essere un identificatore XML valido.  Il `id` tipo è xsd: ID e deve seguire le convenzioni di denominazione previste in XML Schema Part 2: Datatypes specifica (vedere [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).       Se `id` è specificato come `null` verrà generato automaticamente un ID univoco.  Un `id` specificato da un oggetto vuoto stringa non è valida.       Se `targetMode` è specificato come <xref:System.IO.Packaging.TargetMode>, `targetUri` deve essere un URI relativo che viene stabilito in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  L&quot;URI relativo interno può essere un percorso assoluto che inizia con una barra (&quot;/&quot;) carattere, ad esempio &quot;/ Page1&quot; o &quot;/ /images/picture4.jpg&quot;, o un percorso relativo, ad esempio &quot;... / /imagespicture1.jpg &quot;che risolve contro nella radice del pacchetto (&quot;/ &quot;) come URI di base.       Se `targetMode` è specificato come <xref:System.IO.Packaging.TargetMode>, `targetUri` possono essere entrambi assoluto o relativo URI corretto in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; è un esempio di un URI assoluto che fa riferimento a una risorsa di destinazione esterna &quot;Page2&quot;.  &quot;images/picture1.jpg&quot; è un esempio di un URI relativo che fa riferimento a una destinazione esterna risorse &quot;1.jpg&quot; ma che viene risolto in base all&quot;URI del pacchetto stesso.       `relationshipType`deve essere un URI che viene stabilito in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).  La tabella seguente mostra il livello di pacchetto `relationshipType` URI definito dalla specifica Open Packaging Conventions (OPC).      | Relazione a livello di pacchetto | URI del tipo di relazione |   |---------------------------------|---------------------------|   | Proprietà di base | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-proprietà dati |   | Firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/firma |   | Certificato di firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ certificato di firma |   | L&quot;origine della firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/origine |   | Anteprima | http://schemas.openxmlformats.org/package/2006/relationships/meta dati/anteprima |       Per ulteriori informazioni sulla creazione di pacchetti e le relazioni di pacchetto, vedere la sezione 1.3 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] della parte di destinazione."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Indica se la parte di destinazione è <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> o <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> al pacchetto."
    - id: relationshipType
      type: System.String
      description: "URI che definisce in modo univoco il ruolo della relazione."
    - id: id
      type: System.String
      description: "Un identificatore XML univoco."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "La relazione a livello di pacchetto per la parte specificata."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <code> targetMode </code> non è valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>non è un identificatore XML valido. una parte con l&quot;oggetto specificato o <code>id</code> è già presente nel pacchetto."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Elimina una parte con un URI specificato dal pacchetto."
  remarks: "`partUri`deve essere un URI relativo che è costituito da un percorso assoluto che inizia con una barra (&quot;/&quot;) caratteri.  Il percorso assoluto è relativo alla radice del pacchetto e viene stabilito in base al [RFC 3986](http://tools.ietf.org/html/rfc3986) specifica della sintassi generica identificatore URI (Uniform Resource).  &quot;/ Page1&quot; e &quot;/ /images/picture4.jpg&quot; sono esempi di URI di parte validi.       Se una parte con l&quot;oggetto specificato, viene generata alcuna eccezione `partUri` non è incluso nel pacchetto.  (È possibile utilizzare il <xref:System.IO.Packaging.Package.PartExists%2A>metodo per determinare se una parte con un oggetto specificato `partUri` nel pacchetto.)</xref:System.IO.Packaging.Package.PartExists%2A>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] della parte da eliminare."
  overload: System.IO.Packaging.Package.DeletePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando sottoposto a override in una classe derivata, Elimina una parte con un URI specificato."
  remarks: "Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>derivato implementazione della classe della classe astratta <xref:System.IO.Packaging.Package>classe viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, <xref:System.IO.Packaging.Package.DeletePart%2A>chiama internamente DeletePartCore della <xref:System.IO.Packaging.ZipPackage>classe per eseguire l&quot;operazione di eliminazione effettiva in base al formato fisico implementato nella classe derivata.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.DeletePart%2A>       Per ulteriori informazioni sulle parti del pacchetto e il modello di pacchetto, vedere il capitolo 1 della specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il <xref:System.IO.Packaging.PackagePart.Uri*>del <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> da eliminare.</xref:System.IO.Packaging.PackagePart.Uri*>"
  overload: System.IO.Packaging.Package.DeletePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Elimina una relazione a livello di pacchetto."
  remarks: "Una relazione a livello di pacchetto definisce un&quot;associazione tra il pacchetto e una parte di destinazione associata o la risorsa.  Una relazione a livello di pacchetto può essere uno dei due formati.      -Tra un <xref:System.IO.Packaging.Package>a una parte di destinazione nel pacchetto.</xref:System.IO.Packaging.Package>      -Tra un <xref:System.IO.Packaging.Package>a una risorsa di destinazione all&quot;esterno del pacchetto.</xref:System.IO.Packaging.Package>       In una relazione di pacchetto, il pacchetto viene considerato il &quot;proprietario&quot; della relazione.  Quando il pacchetto viene eliminato, vengono eliminate anche tutte le relazioni di proprietà del pacchetto.       Se una relazione con l&quot;oggetto specificato, viene generata alcuna eccezione `id` non è incluso nel pacchetto.       DeleteRelationship modifica fisicamente la parte di destinazione in alcun modo.       Per ulteriori informazioni sulle relazioni di pacchetto, vedere la sezione 1.3 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "Il <xref:System.IO.Packaging.PackageRelationship.Id*>del <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> da eliminare.</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.Package.DeleteRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>non è un identificatore XML valido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Scarica e Salva il contenuto di tutte le parti e relazioni, chiude il pacchetto e rilascia tutte le risorse."
  remarks: "Per assicurarsi che tutte le modifiche sono state salvate correttamente, Dispose inoltre finalizza, scarica e chiude tutte le parti e relazioni che sono contenute nel pacchetto.       Per la <xref:System.IO.Packaging.Package>classe Dispose e <xref:System.IO.Packaging.Package.Close%2A>eseguono la stessa operazione, non c&quot;è alcun motivo per chiamare il metodo Dispose se si chiama <xref:System.IO.Packaging.Package.Close%2A>, o viceversa.</xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package>       <xref:System.IO.Packaging.Package.Close%2A>e Dispose chiama internamente <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A></xref:System.IO.Packaging.Package.Close%2A>       Le classi derivate che allocano e gestiscono le risorse di memoria non devono eseguire l&quot;override di questo metodo per rilasciare le risorse quando viene chiamato Dispose. Classe derivata esegue l&quot;override devono anche chiamare <xref:System.IO.Packaging.Package.Flush%2A>e il metodo Dispose della classe base per assicurarsi che la pulizia della classe base viene sempre eseguita.</xref:System.IO.Packaging.Package.Flush%2A>      > [!NOTE] > Il `using` istruzione (diverso dal `using` direttiva dello spazio dei nomi) è il modo consigliato per <xref:System.IO.Packaging.Package.Close%2A>ed eliminare un pacchetto.</xref:System.IO.Packaging.Package.Close%2A> [Scrittura di un pacchetto di esempio](http://go.microsoft.com/fwlink/?LinkID=160055) viene illustrato come chiudere ed eliminare un pacchetto utilizzando la `using` istruzione."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.IO.Packaging.Package.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Ottiene l&quot;accesso al file delle impostazioni per il pacchetto."
  remarks: "La proprietà FileOpenAccess non ha alcun valore predefinito.  L&quot;impostazione di accesso file è incluso il <xref:System.IO.Packaging.Package.%23ctor%2A>costruttore chiamare quando si crea un nuovo pacchetto o nel <xref:System.IO.Packaging.Package.Open%2A>chiamare quando si apre un pacchetto esistente.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.Package.%23ctor%2A>"
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href=&quot;System.IO.FileAccess&quot;></xref> values: <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, or <xref href=&quot;System.IO.FileAccess&quot;></xref>.'
  overload: System.IO.Packaging.Package.FileOpenAccess*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Salva il contenuto di tutte le parti e relazioni che sono contenute nel pacchetto."
  remarks: "Scaricare chiama internamente la classe derivata <xref:System.IO.Packaging.Package.FlushCore%2A>implementazione per eseguire l&quot;operazione di scaricamento specifico formato effettivo.</xref:System.IO.Packaging.Package.FlushCore%2A>  La classe derivata <xref:System.IO.Packaging.Package.FlushCore%2A>metodo è responsabile per il salvataggio effettivamente il contenuto di parti e relazioni per l&quot;implementazione della classe derivata fisica specifica.</xref:System.IO.Packaging.Package.FlushCore%2A>       Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>implementazione della classe astratta derivata <xref:System.IO.Packaging.Package>classe di base viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage> Nell&quot;operazione di impostazione predefinita, lo svuotamento internamente chiamate <xref:System.IO.Packaging.Package.FlushCore%2A>per salvare le parti e relazioni in un pacchetto di file ZIP.</xref:System.IO.Packaging.Package.FlushCore%2A>       Scaricamento viene chiamato automaticamente dal <xref:System.IO.Packaging.Package.Close%2A>e <xref:System.IO.Packaging.Package.Dispose%2A>metodi.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>  Quando <xref:System.IO.Packaging.Package.Close%2A>o <xref:System.IO.Packaging.Package.Dispose%2A>viene chiamato non è necessario chiamare scaricare separatamente.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.Package.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola lettura e non può essere modificato."
  platform:
  - net462
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando sottoposto a override in una classe derivata, Salva il contenuto di tutte le parti e relazioni nell&quot;archivio di classe derivata."
  remarks: "FlushCore viene chiamato dal <xref:System.IO.Packaging.Package.Flush%2A>metodo per eseguire l&quot;operazione di scaricamento effettivo dipende dal formato fisico implementato nella classe derivata.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  overload: System.IO.Packaging.Package.FlushCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Restituisce la parte con un URI specificato."
  remarks: "Un <xref:System.InvalidOperationException>viene generata se una parte con specificato `partUri` non esiste.</xref:System.InvalidOperationException>       Il <xref:System.IO.Packaging.Package.PartExists%2A>metodo può essere utilizzato per determinare se `partUri` fa riferimento a una parte esistente</xref:System.IO.Packaging.Package.PartExists%2A>       Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>implementazione della classe astratta derivata <xref:System.IO.Packaging.Package>classe di base viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, viene chiamato internamente GetPart <xref:System.IO.Packaging.Package.GetPartCore%2A>del <xref:System.IO.Packaging.ZipPackage>classe per restituire una parte richiesta da un file ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] della parte da restituire."
    return:
      type: System.IO.Packaging.PackagePart
      description: "La parte con specificato <code> partUri </code>."
  overload: System.IO.Packaging.Package.GetPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una parte con specificato <code> partUri </code> non è incluso nel pacchetto."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando sottoposto a override in una classe derivata, restituisce la parte interessata da un URI specificato."
  remarks: "Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>implementazione della classe astratta derivata <xref:System.IO.Packaging.Package>classe viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, <xref:System.IO.Packaging.Package.GetPart%2A>chiama internamente GetPartCore del <xref:System.IO.Packaging.ZipPackage>classe per recuperare una parte da un file ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPart%2A>       Per ulteriori informazioni sulle parti del pacchetto e il modello di pacchetto, vedere il capitolo 1 della specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] della parte da recuperare."
    return:
      type: System.IO.Packaging.PackagePart
      description: "La parte richiesta; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se una parte con specificato <code> partUri </code> non è incluso nel pacchetto."
  overload: System.IO.Packaging.Package.GetPartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Restituisce una raccolta di tutte le parti del pacchetto."
  remarks: "GetParts restituisce una raccolta di tutte le parti che sono contenuti nel pacchetto incluse <xref:System.IO.Packaging.PackageRelationship>parti.</xref:System.IO.Packaging.PackageRelationship>       Non restituisce mai GetParts `null`; tuttavia, la raccolta restituita conterrà zero elementi se il pacchetto non contiene parti.       Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>implementazione della classe astratta derivata <xref:System.IO.Packaging.Package>classe di base viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, chiama GetParts il <xref:System.IO.Packaging.Package.GetPartsCore%2A>metodo la <xref:System.IO.Packaging.ZipPackage>classe per restituire le parti da un file ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartsCore%2A>       Per ulteriori informazioni sui pacchetti e le parti del pacchetto, vedere la sezione 1.1 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.  For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: "Una raccolta di tutti i <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elementi contenuti nel pacchetto."
  overload: System.IO.Packaging.Package.GetParts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando sottoposto a override in una classe derivata, restituisce una matrice di tutte le parti del pacchetto."
  remarks: "L&quot;implementazione di GetPartsCore classe derivata viene chiamato dal <xref:System.IO.Packaging.Package.GetParts%2A>metodo per accedere e restituire la matrice delle parti in base al formato fisico implementato nella classe derivata.</xref:System.IO.Packaging.Package.GetParts%2A>       Per impostazione predefinita, un <xref:System.IO.Packaging.ZipPackage>implementazione della classe astratta derivata <xref:System.IO.Packaging.Package>classe viene fornita e utilizzata.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Nell&quot;operazione di impostazione predefinita, <xref:System.IO.Packaging.Package.GetParts%2A>chiama internamente <xref:System.IO.Packaging.Package.GetPartCore%2A>del <xref:System.IO.Packaging.ZipPackage>classe per recuperare le parti da un file ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A> </xref:System.IO.Packaging.Package.GetParts%2A>       Per ulteriori informazioni sulle parti del pacchetto e il modello di pacchetto, vedere il capitolo 1 della specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: "Matrice di tutte le parti che sono contenuti nel pacchetto."
  overload: System.IO.Packaging.Package.GetPartsCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Restituisce la relazione a livello di pacchetto con l&quot;identificatore specificato."
  remarks: "`id`deve essere un identificatore XML valido.  Il `id` tipo è xsd: ID e deve seguire le convenzioni di denominazione previste in XML Schema Part 2: Datatypes specifica (vedere [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).       Per ulteriori informazioni sulla creazione di pacchetti e le relazioni di pacchetto, vedere la sezione 1.3 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "Il <xref:System.IO.Packaging.PackageRelationship.Id*>della relazione da restituire.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Relazione con l&quot;oggetto specificato a livello di pacchetto <code> id </code>."
  overload: System.IO.Packaging.Package.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>non è un identificatore XML valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una relazione con l&quot;oggetto specificato <code> id </code> non è incluso nel pacchetto."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Restituisce una raccolta di tutte le relazioni a livello di pacchetto."
  remarks: "Non restituisce mai GetRelationships `null`; tuttavia la raccolta restituita può contenere zero elementi se il pacchetto non contiene alcuna relazione di livello di pacchetto.       Una relazione a livello di pacchetto definisce un&quot;associazione tra il pacchetto e una parte di destinazione associata o la risorsa.  Una relazione a livello di pacchetto può essere uno dei due formati.      -Tra un <xref:System.IO.Packaging.Package>a una parte di destinazione nel pacchetto.</xref:System.IO.Packaging.Package>      -Tra un <xref:System.IO.Packaging.Package>a una risorsa di destinazione all&quot;esterno del pacchetto.</xref:System.IO.Packaging.Package>       In una relazione di pacchetto, il pacchetto viene considerato il &quot;proprietario&quot; della relazione.  Quando il pacchetto viene eliminato, vengono eliminate anche tutte le relazioni di proprietà del pacchetto.  Il processo di creazione o eliminazione della relazione non modifica fisicamente la parte di destinazione o di una risorsa in alcun modo.       Per ulteriori informazioni sulla creazione di pacchetti e le relazioni di pacchetto, vedere la sezione 1.3 della specifica Open Packaging Conventions (OPC) disponibile per il download in [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Raccolta di tutte le relazioni a livello di pacchetto sono contenuti nel pacchetto."
  overload: System.IO.Packaging.Package.GetRelationships*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Restituisce una raccolta di tutte le relazioni a livello di pacchetto che corrispondono a un determinato <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
  remarks: "<xref:System.IO.Packaging.Package.GetRelationships%2A>non restituiranno mai `null`; tuttavia, la raccolta restituita può contenere zero elementi se non sono presenti relazioni a livello di pacchetto che corrispondono alla stringa `relationshipType`.</xref:System.IO.Packaging.Package.GetRelationships%2A>       La tabella seguente mostra il livello di pacchetto `relationshipType` URI definito dalla specifica Open Packaging Conventions (OPC).      | Relazione a livello di pacchetto | URI del tipo di relazione |   |---------------------------------|---------------------------|   | Proprietà di base | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-proprietà dati |   | Firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/firma |   | Certificato di firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ certificato di firma |   | L&quot;origine della firma digitale | http://schemas.openxmlformats.org/package/2006/relationships/digit al-firma/origine |   | Anteprima | http://schemas.openxmlformats.org/package/2006/relationships/meta dati/anteprima |       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "Il <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>di corrispondenza e tornare nella raccolta.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Una raccolta di relazioni a livello di pacchetto che corrispondono alla stringa <code> relationshipType </code>."
  overload: System.IO.Packaging.Package.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>è una stringa vuota."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto in un flusso dei / o specificato."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il flusso dei / o in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Per aprire il pacchetto richiede la lettura o lettura/scrittura autorizzazione e il valore specificato <code> stream </code> è di sola scrittura; in alternativa, aprire il pacchetto richiede la scrittura o lettura/scrittura e il valore specificato <code> stream </code> è di sola lettura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto in un percorso e il nome specificato."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Questo <xref:System.IO.Packaging.Package.Open%2A>metodo apre il pacchetto con gli attributi predefiniti <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, e <xref:System.IO.FileShare>(per specificare diversi attributi che utilizzano uno degli altri overload del metodo Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.Packaging.Package.Open%2A>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso e il nome del pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto con una determinata modalità flusso e file dei / o."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il flusso dei / o in cui aprire il pacchetto."
    - id: packageMode
      type: System.IO.FileMode
      description: "La modalità file in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>packageMode</code>valore non è valido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Per aprire il pacchetto richiede la lettura o lettura/scrittura autorizzazione e il valore specificato <code> stream </code> è di sola scrittura; in alternativa, aprire il pacchetto richiede la scrittura o lettura/scrittura e il valore specificato <code> stream </code> è di sola lettura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto in un percorso specificato utilizzando una modalità di file specificato."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Questo metodo Open apre il pacchetto con gli attributi predefiniti <xref:System.IO.FileAccess>e <xref:System.IO.FileShare>(per specificare diversi attributi che utilizzano uno degli altri overload del metodo Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso e il nome del pacchetto."
    - id: packageMode
      type: System.IO.FileMode
      description: "La modalità file in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore per <code> packageMode </code> non è valido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto con un determinato flusso dei / o, modalità file e impostazione di accesso al file."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il flusso dei / o in cui aprire il pacchetto."
    - id: packageMode
      type: System.IO.FileMode
      description: "La modalità file in cui aprire il pacchetto."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "L&quot;accesso al file in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Per aprire il pacchetto richiede la lettura o lettura/scrittura autorizzazione e il valore specificato <code> stream </code> è di sola scrittura; o aprire il pacchetto richiede la scrittura o lettura/scrittura e il valore specificato <code> stream </code> è di sola lettura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto in un percorso specificato utilizzando una modalità di file specificato e l&quot;impostazione di accesso al file."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Questo metodo Open apre il pacchetto con un valore predefinito <xref:System.IO.FileShare>attributo (per specificare un attributo diverso, utilizzare il <xref:System.IO.Packaging.Package.Open%2A>overload del metodo).</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.FileShare>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso e il nome del pacchetto."
    - id: packageMode
      type: System.IO.FileMode
      description: "La modalità file in cui aprire il pacchetto."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "L&quot;accesso al file in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Apre un pacchetto in un percorso specificato utilizzando una modalità di file specificato, l&quot;accesso ai file e impostazione di condivisione di file."
  remarks: "<xref:System.IO.Packaging.ZipPackage>è il tipo di pacchetto predefinito utilizzato dal metodo di apertura.</xref:System.IO.Packaging.ZipPackage>       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso e il nome del pacchetto."
    - id: packageMode
      type: System.IO.FileMode
      description: "La modalità file in cui aprire il pacchetto."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "L&quot;accesso al file in cui aprire il pacchetto."
    - id: packageShare
      type: System.IO.FileShare
      description: "Il condivisione file in modalità in cui aprire il pacchetto."
    return:
      type: System.IO.Packaging.Package
      description: "Il pacchetto aperto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Ottiene le proprietà principali del pacchetto."
  remarks: "Per ulteriori informazioni sulle proprietà di un pacchetto di base, vedere la sezione 3.1 la specifica Open Packaging Conventions (OPC) disponibile per il download al [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "Le proprietà principali del pacchetto."
  overload: System.IO.Packaging.Package.PackageProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Indica se una parte con un URI specificato è contenuto nel pacchetto."
  remarks: "Il `partUri` deve iniziare con un carattere barra rovesciata &quot;/&quot; e deve essere assoluto dalla radice del pacchetto.       Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.Uri>Parte per controllare for.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una parte con specificato <code> partUri </code> nel pacchetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.PartExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura (Impossibile leggere le informazioni)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Indica se una relazione a livello di pacchetto con un ID specificato è contenuta nel pacchetto."
  remarks: "Per ulteriori informazioni, vedere la specifica Open Packaging Conventions (OPC) disponibile per il download all&quot;indirizzo [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "La <xref:System.IO.Packaging.PackageRelationship.Id*>della relazione da controllare for.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una relazione a livello di pacchetto con l&quot;oggetto specificato <code> id </code> nel pacchetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>non è un identificatore XML valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il pacchetto non è aperto (<>*> o <> </> *> è stato chiamato)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il pacchetto è di sola scrittura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Questo membro supporta il [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] dell&quot;infrastruttura e non è previsto per l&quot;utilizzo dell&quot;applicazione.  Utilizzare il tipo indipendente <xref:System.IO.Packaging.Package.Dispose*>metodo invece.</xref:System.IO.Packaging.Package.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.IO.Packaging.Package.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart[]
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    nameWithType: PackagePart
    fullName: PackagePart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.#ctor*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package
  nameWithType: Package.Package
- uid: System.IO.Packaging.Package.Close*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close
  nameWithType: Package.Close
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreatePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore
  nameWithType: Package.CreatePartCore
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.DeletePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart
  nameWithType: Package.DeletePart
- uid: System.IO.Packaging.Package.DeletePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore
  nameWithType: Package.DeletePartCore
- uid: System.IO.Packaging.Package.DeleteRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship
  nameWithType: Package.DeleteRelationship
- uid: System.IO.Packaging.Package.Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose
  nameWithType: Package.Dispose
- uid: System.IO.Packaging.Package.FileOpenAccess*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush
  nameWithType: Package.Flush
- uid: System.IO.Packaging.Package.FlushCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore
  nameWithType: Package.FlushCore
- uid: System.IO.Packaging.Package.GetPart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart
  nameWithType: Package.GetPart
- uid: System.IO.Packaging.Package.GetPartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore
  nameWithType: Package.GetPartCore
- uid: System.IO.Packaging.Package.GetParts*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts
  nameWithType: Package.GetParts
- uid: System.IO.Packaging.Package.GetPartsCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore
  nameWithType: Package.GetPartsCore
- uid: System.IO.Packaging.Package.GetRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship
  nameWithType: Package.GetRelationship
- uid: System.IO.Packaging.Package.GetRelationships*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships
  nameWithType: Package.GetRelationships
- uid: System.IO.Packaging.Package.GetRelationshipsByType*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: Package.GetRelationshipsByType
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
- uid: System.IO.Packaging.Package.PackageProperties*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
- uid: System.IO.Packaging.Package.PartExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists
  nameWithType: Package.PartExists
- uid: System.IO.Packaging.Package.RelationshipExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists
  nameWithType: Package.RelationshipExists
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: Package.System.IDisposable.Dispose
