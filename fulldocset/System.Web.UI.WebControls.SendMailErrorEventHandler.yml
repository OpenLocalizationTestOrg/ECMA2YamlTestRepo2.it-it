### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SendMailErrorEventHandler
  id: SendMailErrorEventHandler
  langs:
  - csharp
  name: SendMailErrorEventHandler
  nameWithType: SendMailErrorEventHandler
  fullName: System.Web.UI.WebControls.SendMailErrorEventHandler
  type: Delegate
  summary: "Rappresenta il metodo che gestisce il <xref uid=&quot;langword_csharp_SendMailError&quot; name=&quot;SendMailError&quot; href=&quot;&quot;> </xref> eventi dei controlli, ad esempio il <xref href=&quot;System.Web.UI.WebControls.ChangePassword&quot;> </xref> (controllo), il <xref href=&quot;System.Web.UI.WebControls.CreateUserWizard&quot;> </xref> (controllo) e <xref href=&quot;System.Web.UI.WebControls.PasswordRecovery&quot;> </xref> controllo."
  remarks: "Quando si crea un delegato SendMailErrorEventHandler, si identifica il metodo che gestirà l&quot;evento. Per associare l&quot;evento al gestore dell&quot;evento, aggiungere un&quot;istanza del delegato all&quot;evento. Il gestore eventi viene chiamato ogni volta che si verifica l&quot;evento, a meno che non venga rimosso il delegato dall&quot;evento. Per ulteriori informazioni sui delegati del gestore eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](~/add/includes/ajax-current-ext-md.md).       La gestione di `SendMailError` evento consente all&quot;applicazione Web continuare l&quot;esecuzione, anche se si verifica un&quot;eccezione durante il tentativo di inviare un messaggio di posta elettronica. Ad esempio, questo è utile se l&quot;eccezione si verifica quando un utente sta tramite una procedura guidata più passaggi. È preferibile per registrare l&quot;errore, visualizzare un messaggio informativo all&quot;utente e consentire all&quot;utente di completare la procedura guidata, anziché terminare l&quot;applicazione.       Se non si crea un gestore eventi per il <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>evento, o se si crea un gestore eventi, ma lasciare il <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>proprietà impostata su `false`, l&quot;applicazione Web verrà arrestata se si verifica un errore durante l&quot;invio di un messaggio di posta elettronica e ASP.NET verrà visualizzato un messaggio di errore.</xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> </xref:System.Web.UI.WebControls.ChangePassword.SendMailError>       Il <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>metodo consente inoltre alle classi derivate di gestire l&quot;evento anziché il SendMailErrorEventHandler.</xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe che deriva da <xref:System.Web.UI.WebControls.ChangePassword>o <xref:System.Web.UI.WebControls.CreateUserWizard>.</xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.ChangePassword>       Per ulteriori informazioni sulla gestione degli eventi, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md)."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> event named `SendMailError`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code attempts to use SMTP to send an e-mail message to the user to confirm the change. This is done in the `SendingMail` event handler. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_2.cs)]"
  syntax:
    content: public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
