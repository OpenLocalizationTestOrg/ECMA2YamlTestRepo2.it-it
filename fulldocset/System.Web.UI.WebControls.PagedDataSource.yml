### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagedDataSource
  id: PagedDataSource
  children:
  - System.Web.UI.WebControls.PagedDataSource.#ctor
  - System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.PagedDataSource.Count
  - System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  - System.Web.UI.WebControls.PagedDataSource.DataSource
  - System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  - System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  - System.Web.UI.WebControls.PagedDataSource.IsLastPage
  - System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.PagedDataSource.PageCount
  - System.Web.UI.WebControls.PagedDataSource.PageSize
  - System.Web.UI.WebControls.PagedDataSource.SyncRoot
  - System.Web.UI.WebControls.PagedDataSource.VirtualCount
  langs:
  - csharp
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
  type: Class
  summary: "Incapsula le proprietà correlate al paging di un controllo con associazione a dati (ad esempio <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>, e <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>) che consentono di eseguire il paging. Questa classe non può essere ereditata."
  remarks: "La classe PagedDataSource incapsula le proprietà che consentono controlli origine dati, ad esempio il <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>, per eseguire il paging.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataGrid> Questa classe è utilizzata dagli sviluppatori di controlli quando si fornisce il supporto del paging a un controllo con associazione a dati personalizzato.       Questa classe utilizza il miglior metodo possibile per enumerare i dati appartenenti alla pagina corrente. Se l&quot;origine dati sottostante supporta l&quot;accesso indicizzato (ad esempio <xref:System.Array?displayProperty=fullName>e <xref:System.Collections.IList?displayProperty=fullName>), questa classe viene utilizzata tale</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> In caso contrario, viene utilizzato l&quot;enumeratore creato dal <xref:System.Collections.IEnumerable.GetEnumerator%2A>metodo.</xref:System.Collections.IEnumerable.GetEnumerator%2A>       Per un elenco di valori di proprietà iniziali per un&quot;istanza di PagedDataSource, vedere il <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>costruttore.</xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> classe."
  remarks: "Utilizzare questo costruttore per creare e inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.PagedDataSource>classe.</xref:System.Web.UI.WebControls.PagedDataSource>       La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Web.UI.WebControls.PagedDataSource>.</xref:System.Web.UI.WebControls.PagedDataSource>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|   | <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|&10; |   | <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public PagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.PagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se è abilitato il paging personalizzato in un controllo con associazione a dati."
  remarks: "Utilizzare la proprietà AllowCustomPaging per indicare se è abilitato il paging personalizzato. Il paging personalizzato è un tipo opzionale di paging fornito in particolare il <xref:System.Web.UI.WebControls.DataGrid>controllo.</xref:System.Web.UI.WebControls.DataGrid> Controlli con associazione a dati ASP.NET versione 2.0 (ad esempio <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>) usa il paging sul lato server e non supporta il paging personalizzato.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Il paging personalizzato e il paging sul lato server si escludono a vicenda. Se si imposta AllowCustomPaging `true`, verificare che <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>è impostato su `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>       Per ulteriori informazioni sul paging personalizzato, vedere <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitato il paging personalizzato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il paging è abilitato in un controllo con associazione a dati."
  remarks: "Utilizzare la proprietà AllowPaging per specificare se un controllo con associazione a dati paging è abilitato. Controlli con associazione a dati ASP.NET versione 2.0 (ad esempio <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>) usare anche il paging sul lato server per fornire funzionalità di paging automatico.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Per ulteriori informazioni sul paging sul lato server, vedere <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> Quando si utilizza il <xref:System.Web.UI.WebControls.DataGrid>(controllo), è anche possibile fornire la logica di paging personalizzata.</xref:System.Web.UI.WebControls.DataGrid> Per ulteriori informazioni sullo spostamento personalizzato, vedere <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>e <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>       Per ulteriori informazioni sul supporto di paging per i controlli con associazione a dati, vedere il `AllowPaging` proprietà del controllo con associazione a dati."
  syntax:
    content: public bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il paging è abilitato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se è abilitato il paging sul lato server."
  remarks: "Controlli con associazione a dati ASP.NET versione 2.0 (ad esempio <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>) forniscono funzionalità di paging automatico mediante il paging sul lato server.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Quando si utilizza un controllo con associazione a dati ASP.NET 2.0, è possibile impostare questa proprietà su `true`.      > [!NOTE] > Il paging sul lato server e il paging personalizzato si escludono a vicenda. Se si imposta AllowServerPaging `true`, verificare che <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>è impostato su `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitato il paging sul lato server. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia tutti gli elementi dall&quot;origine dati specificata &lt;xref:System.Array?displayProperty=fullName&gt;, a partire dall&quot;indice specificato di &lt;xref:System.Array?displayProperty=fullName&gt;."
  remarks: "Utilizzare questo metodo per copiare il contenuto dell&quot;origine dati specificato <xref:System.Array?displayProperty=fullName>, a partire dall&quot;indice specificato.</xref:System.Array?displayProperty=fullName> Il <xref:System.Array?displayProperty=fullName>viene spesso utilizzato per scorrere gli elementi nell&quot;origine dati.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "In base zero &lt;xref:System.Array?displayProperty=fullName&gt; che riceve gli elementi copiati dall&quot;origine dati."
    - id: index
      type: System.Int32
      description: "La prima posizione nell&quot;oggetto specificato &lt;xref:System.Array?displayProperty=fullName&gt; per ricevere il contenuto copiato."
  overload: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero di elementi da utilizzare dall&quot;origine dati."
  remarks: "Utilizzare la proprietà Count per determinare il numero di elementi da utilizzare dall&quot;origine dati. Il valore restituito varia a seconda se il paging è abilitato e se viene usato il paging personalizzato.      -Se il paging è disattivato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>proprietà `false`), il valore della <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>proprietà viene restituita.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -Se il paging è abilitato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>proprietà `true`) ed è abilitato il paging personalizzato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>proprietà impostata su `true`), il valore della <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>proprietà viene restituita.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -Se il paging è abilitato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>proprietà `true`) e <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>è impostata su `false`, il valore della <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>proprietà viene restituita.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -Se il paging è abilitato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>proprietà `true`), il paging personalizzato è disabilitato (impostando il <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>proprietà `false`) e <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>proprietà è impostata su `true`, il valore della <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>proprietà viene sottratto dal valore del <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A>proprietà prima che venga restituito.</xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      > [!NOTE] > Se il <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>contiene proprietà `null`, viene restituito 0.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi da utilizzare dall&quot;origine dati."
  overload: System.Web.UI.WebControls.PagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;indice della pagina corrente."
  remarks: "Utilizzare la proprietà CurrentPageIndex per specificare o per determinare l&quot;indice della pagina corrente."
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "Indice della pagina corrente."
  overload: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;origine dati."
  remarks: "Utilizzare la proprietà origine dati per specificare o per determinare l&quot;origine dati il paging."
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "Oggetto &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; implementato l&quot;oggetto che rappresenta l&quot;origine dati."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero di elementi nell&quot;origine dati."
  remarks: "Utilizzare la proprietà DataSourceCount per determinare il numero di elementi nell&quot;origine dati. Se viene usato il paging personalizzato o il paging sul lato server, il valore di <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>proprietà viene restituita; in caso contrario, viene restituito il numero totale di elementi nell&quot;origine dati.</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>      > [!NOTE] > Se il <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>contiene proprietà `null`, viene restituito 0.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi nell&quot;origine dati."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;origine dati non è un &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; implementato l&quot;oggetto."
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  id: FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;indice del primo record visualizzati nella pagina."
  remarks: "Utilizzare la proprietà FirstIndexInPage per determinare l&quot;indice del primo elemento nella pagina corrente.      > [!NOTE] > Se il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>è impostata su `false`, o <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>o <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>sono impostate su `true`, o <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>contiene proprietà `null`, viene restituito 0.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int FirstIndexInPage { get; }
    return:
      type: System.Int32
      description: "L&quot;indice del primo record visualizzati nella pagina."
  overload: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implementato l&quot;oggetto che contiene tutti gli elementi nell&quot;origine dati."
  remarks: "Utilizzare questo metodo per creare un <xref:System.Collections.IEnumerator?displayProperty=fullName>che sia possibile scorrere per ottenere ogni elemento nell&quot;origine dati.</xref:System.Collections.IEnumerator?displayProperty=fullName> Per accedere all&quot;elemento in corrispondenza della posizione corrente nell&quot;enumeratore, utilizzare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Utilizzare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo per spostare l&quot;elemento successivo della raccolta.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> Per spostare l&quot;enumeratore sulla propria posizione iniziale, usare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>metodo.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Quando si inizialmente l&quot;enumeratore di ottenere o utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>per spostare l&quot;enumeratore al primo elemento nella raccolta, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> In caso contrario, l&quot;elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà non è definita.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Oggetto &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implementato l&quot;oggetto che contiene tutti gli elementi nell&quot;origine dati."
  overload: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce il <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che rappresenta le proprietà di ciascun elemento utilizzato per associare i dati."
  remarks: "Utilizzare il metodo GetItemProperties per creare un <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>che rappresenta le proprietà di ciascun elemento utilizzato per associare i dati.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> Se il <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>proprietà `null` o non è un <xref:System.ComponentModel.ITypedList?displayProperty=fullName>implementato l&quot;oggetto, `null` viene restituito.</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> Per ulteriori informazioni sul metodo GetItemProperties, vedere <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>.</xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> restituiti gli oggetti che contiene il nome dell&quot;elenco. Può trattarsi di <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> che rappresenta le proprietà di ciascun elemento utilizzato per associare i dati."
  overload: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce il nome dell&quot;elenco. Questo metodo non è applicabile per questa classe."
  remarks: "Questo metodo viene ereditato dal <xref:System.ComponentModel.ITypedList?displayProperty=fullName>e non applicabile per questa classe.</xref:System.ComponentModel.ITypedList?displayProperty=fullName> È stato implementato per restituire <xref:System.String.Empty?displayProperty=fullName>per tutti i casi.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> restituiti gli oggetti che contiene il nome dell&quot;elenco. Può trattarsi di <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: '&lt;XRef:System.String?displayProperty=FullName&gt; per tutti i casi.'
  overload: System.Web.UI.WebControls.PagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  id: IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se è abilitato il paging personalizzato."
  remarks: "Utilizzare la proprietà IsCustomPagingEnabled per determinare se è abilitato il paging personalizzato.      > [!NOTE] > Sia il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>e <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>le proprietà devono essere `true` per questa proprietà restituire `true`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public bool IsCustomPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitato il paging personalizzato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  id: IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se la pagina corrente è la prima pagina."
  remarks: "Utilizzare la proprietà IsFirstPage per determinare se la pagina corrente è la prima pagina."
  syntax:
    content: public bool IsFirstPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la pagina corrente è la prima pagina. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  id: IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se la pagina corrente è l&quot;ultima pagina."
  remarks: "Utilizzare la proprietà IsLastPage per determinare se la pagina corrente è l&quot;ultima pagina."
  syntax:
    content: public bool IsLastPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la pagina corrente è l&quot;ultima pagina. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  id: IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il paging è abilitato."
  remarks: "Utilizzare la proprietà IsPagingEnabled per determinare se il paging è abilitato.      > [!NOTE] > Il <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>proprietà deve essere `true` e <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>proprietà non può essere impostata su 0 per questa proprietà restituire `true`.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il paging è abilitato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se l&quot;origine dati è di sola lettura."
  remarks: "Questa proprietà viene implementata per restituire sempre `false`, che indica che l&quot;origine dati può essere modificato in tutti i casi."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>per tutti i casi."
  overload: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se è abilitato il supporto del paging sul lato server."
  remarks: "Il paging sul lato server è abilitato quando la <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>e <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>sono entrambe impostate su `true`, e la quantità di dati recuperati dall&quot;origine dati non può essere visualizzata in una singola pagina.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il paging è abilitato e il paging sul lato server è indicato il <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>proprietà; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se l&quot;accesso all&quot;origine dati è sincronizzato (thread-safe)."
  remarks: "Questa proprietà è derivata dalla <xref:System.Collections.ICollection?displayProperty=fullName>classe e viene eseguito l&quot;override per restituire sempre `false` per indicare che questa classe non è thread-safe.</xref:System.Collections.ICollection?displayProperty=fullName>       Per ulteriori informazioni sulla proprietà IsSynchronized, vedere il <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>per tutti i casi."
  overload: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero totale di pagine necessario per visualizzare tutti gli elementi nell&quot;origine dati."
  remarks: "Utilizzare la proprietà PageCount per determinare il numero di pagine necessario per visualizzare tutti gli elementi nell&quot;origine dati.      > [!NOTE] > Se il <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>proprietà `null`, viene restituito 0.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> Se il <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>è impostata su `false` o <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>è impostata su 0 o meno, viene restituito 1.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "Il numero di pagine necessario per visualizzare tutti gli elementi nell&quot;origine dati."
  overload: System.Web.UI.WebControls.PagedDataSource.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il numero di elementi da visualizzare in una singola pagina."
  remarks: "Utilizzare la proprietà PageSize per specificare o per determinare il numero di elementi da visualizzare in una singola pagina."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Il numero di elementi da visualizzare in una singola pagina."
  overload: System.Web.UI.WebControls.PagedDataSource.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  remarks: "L&quot;oggetto restituito in questa implementazione è il <xref:System.Web.UI.WebControls.PagedDataSource>oggetto stesso.</xref:System.Web.UI.WebControls.PagedDataSource>       Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>proprietà, vedere il <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  overload: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  id: VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il numero di elementi nell&quot;origine dati quando viene usato il paging personalizzato."
  remarks: "Utilizzare la proprietà VirtualCount quando il paging personalizzato o il paging sul lato server viene utilizzato per determinare il numero di elementi nell&quot;origine dati. Per ulteriori informazioni sulla proprietà VirtualCount, vedere <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>"
  syntax:
    content: public int VirtualCount { get; set; }
    return:
      type: System.Int32
      description: "Il numero virtuale di elementi nell&quot;origine dati quando viene usato il paging personalizzato."
  overload: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource.PagedDataSource
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: PagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.PagedDataSource.Count*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: PagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: PagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: PagedDataSource.GetListName
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
