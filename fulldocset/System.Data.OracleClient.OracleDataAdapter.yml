### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleDataAdapter
  id: OracleDataAdapter
  children:
  - System.Data.OracleClient.OracleDataAdapter.#ctor
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  - System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.OracleClient.OracleDataAdapter.ClearBatch
  - System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  - System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  - System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  - System.Data.OracleClient.OracleDataAdapter.InsertCommand
  - System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OracleClient.OracleDataAdapter.RowUpdated
  - System.Data.OracleClient.OracleDataAdapter.RowUpdating
  - System.Data.OracleClient.OracleDataAdapter.SelectCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  - System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  - System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  - System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OracleDataAdapter
  nameWithType: OracleDataAdapter
  fullName: System.Data.OracleClient.OracleDataAdapter
  type: Class
  summary: "Rappresenta un set di comandi dati e una connessione a un database che vengono utilizzate per compilare il <xref href=&quot;System.Data.DataSet&quot;> </xref> e aggiornare il database. Questa classe non può essere ereditata."
  remarks: "Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework. Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/add/includes/ajax-current-ext-md.md).       L&quot;oggetto OracleDataAdapter funge da ponte tra un **DataSet** e il database per il recupero e il salvataggio dei dati. L&quot;oggetto OracleDataAdapter fornisce questo bridge utilizzando <xref:System.Data.Common.DbDataAdapter.Fill%2A>per caricare i dati dal database nel <xref:System.Data.DataSet>e l&quot;utilizzo di <xref:System.Data.Common.DbDataAdapter.Update%2A>per inviare le modifiche apportate nel <xref:System.Data.DataSet>fino all&quot;origine dati.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Quando l&quot;oggetto OracleDataAdapter riempie una <xref:System.Data.DataSet>, crea le tabelle e colonne per i dati restituiti se non esiste già.</xref:System.Data.DataSet> Tuttavia, le informazioni sulla chiave primarie non è incluso nello schema creato in modo implicito, a meno che la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>proprietà è impostata su <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> L&quot;utente potrebbe avere il OracleDataAdapter creare lo schema di <xref:System.Data.DataSet>incluse informazioni sulla chiave primarie, prima di inserire i dati mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.DataSet> Per ulteriori informazioni, vedere [aggiungendo i vincoli esistenti a un set di dati](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Per impostazione predefinita, i campi numerici importato in un <xref:System.Data.DataTable>con <xref:System.Data.Common.DbDataAdapter.Fill%2A>vengono mappati a <xref:System.Data.OracleClient.OracleNumber>oggetti.</xref:System.Data.OracleClient.OracleNumber> </xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.DataTable> È possibile determinare l&quot;overflow di <xref:System.Data.OracleClient.OracleNumber>e genera un&quot;eccezione di Oracle, tramite l&quot;importazione di un valore numerico non integrale troppo grande o troppo elevata precisione per il <xref:System.Data.OracleClient.OracleNumber>delle limitazioni di precisione.</xref:System.Data.OracleClient.OracleNumber> </xref:System.Data.OracleClient.OracleNumber> Fare riferimento alla descrizione di <xref:System.Data.OracleClient.OracleNumber>Per ulteriori informazioni.</xref:System.Data.OracleClient.OracleNumber>       L&quot;oggetto OracleDataAdapter include anche il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, e `TableMappings` proprietà per il caricamento e l&quot;aggiornamento dei dati.</xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>       Il Provider di dati .NET Framework per Oracle non supporta le istruzioni SQL in batch. Tuttavia, consente di utilizzare più `REF CURSOR` l&quot;output di parametri per riempire un **set di dati**, ciascun relativi proprietari <xref:System.Data.DataTable>.</xref:System.Data.DataTable> È necessario definire i parametri, contrassegnarli come parametri di output e indicare che sono `REF CURSOR` tipi di dati. Si noti che non è possibile utilizzare il <xref:System.Data.Common.DbDataAdapter.Update%2A>metodo quando l&quot;oggetto OracleDataAdapter viene riempito con `REF CURSOR` parametri restituiti da una stored procedure, poiché Oracle non fornisce le informazioni necessarie per determinare il nome di tabella e i nomi delle colonne utilizzati quando viene eseguita l&quot;istruzione SQL.</xref:System.Data.Common.DbDataAdapter.Update%2A> Nell&quot;esempio c# seguente si presuppone di aver creato questa stored procedure.       Creare il seguente package Oracle sul server Oracle.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Creare il seguente corpo package Oracle sul server Oracle.      ```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```Nell&quot;esempio c# seguente viene illustrato come ottenere informazioni di tabella e colonna utilizzando la stored procedure.      ```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;;   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add(&quot;EMPCURSOR&quot;, OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add(&quot;DEPTCURSOR&quot;, OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add(&quot;Table&quot;, &quot;Emp&quot;);   da.TableMappings.Add(&quot;Table1&quot;, &quot;Dept&quot;);   da.Fill(ds);      ds.Relations.Add(&quot;EmpDept&quot;, ds.Tables[&quot;Dept&quot;].Columns[&quot;Deptno&quot;],          ds.Tables[&quot;Emp&quot;].Columns[&quot;Deptno&quot;], false);   ```Nell&quot;esempio di Visual Basic seguente viene illustrato come utilizzare un OracleDataAdapter per riempire un <xref:System.Data.DataSet>utilizzando Oracle `REF CURSOR`.</xref:System.Data.DataSet> Questi esempi vengono utilizzate tabelle definite nello schema Oracle Scott/Tiger e richiedono il seguente package PL/SQL e il corpo del package. È necessario creare per il server per utilizzare gli esempi.       Creare il seguente package Oracle sul server Oracle.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Creare il seguente corpo package Oracle sul server Oracle.      ```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```Questo esempio di Visual Basic viene eseguita una stored procedure PL/SQL archiviati che restituisce due `REF CURSOR` parametri e compila un <xref:System.Data.DataSet>con le righe restituite.</xref:System.Data.DataSet>      ```vb#      &quot; GetConnectionString() returns a connection string for   &quot; the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add(&quot;EMPCURSOR&quot;, OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add(&quot;DEPTCURSOR&quot;, OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add(&quot;Table&quot;, &quot;Emp&quot;)       da.TableMappings.Add(&quot;Table1&quot;, &quot;Dept&quot;)       da.Fill(ds)          ds.Relations.Add(&quot;EmpDept&quot;, ds.Tables(&quot;Dept&quot;).Columns(&quot;Deptno&quot;), _         ds.Tables(&quot;Emp&quot;).Columns(&quot;Deptno&quot;), False)   ```Dopo aver utilizzato l&quot;oggetto OracleDataAdapter per eseguire un `Fill` o `FillSchema` operazione, il `DataColumn.ReadOnly` proprietà restituisce sempre false, indipendentemente dal fatto che una colonna può essere aggiornata o non, perché il server Oracle non restituisce queste informazioni."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Obsolete("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter()
  nameWithType: OracleDataAdapter.OracleDataAdapter()
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> classe."
  remarks: "Quando si crea un&quot;istanza di <xref:System.Data.OracleClient.OracleDataAdapter>, le seguenti proprietà di lettura/scrittura impostate sui valori predefiniti, come illustrato nella tabella.</xref:System.Data.OracleClient.OracleDataAdapter>      | Proprietà | Il valore predefinito |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.SelectCommand = New OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection)  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n    OracleDataAdapter custDA = new OracleDataAdapter();  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.SelectCommand = new OracleCommand(\"SELECT DeptNo, CompanyName FROM Dept\", myOracleConnection);  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, CompanyName) \" +  \n                                            \"VALUES (:pDeptNo, :pCompanyName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, CompanyName = :pCompanyName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pCompanyName\", OracleType.VarChar, 14, \"CompanyName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pCompanyName\", OracleType.VarChar, 14, \"CompanyName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  id: '#ctor(System.Data.OracleClient.OracleCommand)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(OracleCommand)
  nameWithType: OracleDataAdapter.OracleDataAdapter(OracleCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(OracleCommand)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> classe con l&quot;istruzione SQL SELECT specificata."
  remarks: "Questa implementazione del <xref:System.Data.OracleClient.OracleDataAdapter>costruttore imposta la <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>proprietà sul valore specificato nel `selectCommand` parametro.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter>       Quando si crea un&quot;istanza di <xref:System.Data.OracleClient.OracleDataAdapter>, le seguenti proprietà di lettura/scrittura impostate sui valori predefiniti, come illustrato nella tabella.</xref:System.Data.OracleClient.OracleDataAdapter>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim myOracleCommand As OracleCommand = New OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection)  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(myOracleCommand)  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n    OracleCommand myOracleCommand = new OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection);  \n    OracleDataAdapter custDA = new OracleDataAdapter(myOracleCommand);  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (System.Data.OracleClient.OracleCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> che è una stored procedure o un&quot;istruzione SQL SELECT e viene impostato come il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(String,OracleConnection)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> classe con un&quot;istruzione SQL SELECT e un <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: "Questa implementazione del <xref:System.Data.OracleClient.OracleDataAdapter>può essere utile in un&quot;applicazione che deve chiamare il `Fill` metodo per due o più <xref:System.Data.OracleClient.OracleDataAdapter>oggetti.</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim mySelectText As String = \"SELECT DeptNo, DName FROM Dept\"  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myOracleConnection)   \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n  \n    string mySelectText = \"SELECT DeptNo, DName FROM Dept\";  \n  \n    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myOracleConnection );  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (string selectCommandText, System.Data.OracleClient.OracleConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Stringa che rappresenta un&quot;istruzione SQL SELECT o una stored procedure da utilizzare per il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OracleClient.OracleConnection
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> che rappresenta la connessione."
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(String,String)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,String)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> classe con un&quot;istruzione SQL SELECT e una stringa di connessione."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myConnectionText As String = \"Data Source=Oracle8i;Integrated Security=yes\"  \n    Dim mySelectText As String = \"SELECT DeptNo, DName FROM Dept\"  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myConnectionText )   \n    Dim myOracleConnection As OracleConnection = custDA.SelectCommand.Connection  \n  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey     \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    string myConnectionText = \"Data Source=Oracle8i;Integrated Security=yes\";  \n  \n    string mySelectText = \"SELECT DeptNo, DName FROM Dept\";  \n  \n    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myConnectionText );  \n   OracleConnection myOracleConnection = custDA.SelectCommand.Connection;  \n  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Stringa che rappresenta un&quot;istruzione SQL SELECT o una stored procedure da utilizzare per il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>proprietà del <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "La stringa di connessione."
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: OracleDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "Da aggiungere."
    return:
      type: System.Int32
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: OracleDataAdapter.ClearBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Da aggiungere."
    - id: command
      type: System.Data.IDbCommand
      description: "Da aggiungere."
    - id: statementType
      type: System.Data.StatementType
      description: "Da aggiungere."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Da aggiungere."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Da aggiungere."
    - id: command
      type: System.Data.IDbCommand
      description: "Da aggiungere."
    - id: statementType
      type: System.Data.StatementType
      description: "Da aggiungere."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Da aggiungere."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per eliminare i record nel database."
  remarks: "Quando la proprietà DeleteCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>non verrà duplicato.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> In alternativa, DeleteCommand mantiene un riferimento a <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand> creato in precedenza       Durante un&quot;operazione di aggiornamento, se DeleteCommand non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, è possibile utilizzare la <xref:System.Data.OracleClient.OracleCommandBuilder>classe per generare automaticamente DeleteCommand e comandi aggiuntivi necessari per risolvere le differenze tra la <xref:System.Data.DataSet>al database.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.DataSet> A tale scopo, impostare la <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>proprietà di <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> La logica di generazione richiede inoltre informazioni sulle colonne chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  Dim parm As OracleParameter  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the DeleteCommand.  \n  \n  cmd = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", conn)  \n  \n  parm = cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  parm.SourceVersion = DataRowVersion.Original  \n  \n  da.DeleteCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  OracleParameter parm;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the DeleteCommand.  \n  \n  cmd = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", conn);  \n  \n  parm = cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  parm.SourceVersion = DataRowVersion.Original;  \n  \n  da.DeleteCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> utilizzato durante un&quot;operazione di aggiornamento per eliminare i record nel database che corrispondono alle righe eliminate nel <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: OracleDataAdapter.ExecuteBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Da aggiungere."
    - id: parameterIndex
      type: System.Int32
      description: "Da aggiungere."
    return:
      type: System.Data.IDataParameter
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Da aggiungere."
    - id: recordsAffected
      type: System.Int32
      description: "Da aggiungere."
    - id: error
      type: System.Exception
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: OracleDataAdapter.InitializeBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per inserire nuovi record nel database."
  remarks: "Quando la proprietà InsertCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OracleClient.OracleCommand>oggetto, il <xref:System.Data.OracleClient.OracleCommand>non verrà duplicato.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> In alternativa, InsertCommand mantiene un riferimento a <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand> creato in precedenza       Durante un&quot;operazione di aggiornamento, se InsertCommand non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, è possibile utilizzare la <xref:System.Data.OracleClient.OracleCommandBuilder>classe per generare automaticamente InsertCommand e comandi aggiuntivi necessari per risolvere le differenze tra la <xref:System.Data.DataSet>al database.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.DataSet> A tale scopo, impostare la <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>proprietà di <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> La logica di generazione richiede inoltre informazioni sulle colonne chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, è possibile aggiungere queste righe per il <xref:System.Data.DataSet>in base all&quot;impostazione di <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A>proprietà del <xref:System.Data.OracleClient.OracleCommand>oggetto.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>       Quando si aggiorna una colonna con il `LONG RAW` tipo di dati, viene generata un&quot;eccezione quando si immette un valore di `NULL` nella colonna. Oracle `LONG RAW` tipo di dati è deprecato in Oracle versione 8.0. Per evitare questo errore, utilizzare il `BLOB` del tipo di dati anziché `LONG RAW`."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the InsertCommand.  \n  \n  cmd = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                       \"VALUES (:pDeptNo, :pDName)\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  da.InsertCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the InsertCommand.  \n  \n  cmd = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                       \"VALUES (:pDeptNo, :pDName)\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  da.InsertCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand InsertCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> utilizzato durante un&quot;operazione di aggiornamento per inserire i record nel database che corrispondono alle nuove righe di <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OracleDataAdapter.RowUpdated
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Si verifica durante un&quot;operazione di aggiornamento dopo l&quot;esecuzione di un comando nel database."
  remarks: "Quando si utilizza il `Update` (metodo), sono disponibili due eventi che si verificano per ogni riga di dati aggiornata. L&quot;ordine di esecuzione è il seguente: 1.  I valori di <xref:System.Data.DataRow>vengono spostati i valori dei parametri.</xref:System.Data.DataRow>      2.  Il `OnRowUpdating` viene generato l&quot;evento.      3.  Esegue il comando.      4.  Se il `UpdateRowSource` enumerazione è impostata su `FirstReturnedRecord`, il primo risultato restituito è inserito nel **DataRow**.      5.  Se sono presenti parametri di output, questi vengono collocati nel **DataRow**.      6.  Il `OnRowUpdated` viene generato l&quot;evento.      7.  `AcceptChanges`viene chiamato."
  syntax:
    content: public event System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OracleClient.OracleRowUpdatedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OracleDataAdapter.RowUpdating
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Si verifica durante la <xref:System.Data.Common.DbDataAdapter.Update*>prima dell&quot;esecuzione di un comando sull&quot;origine dati.</xref:System.Data.Common.DbDataAdapter.Update*>"
  remarks: "Quando si utilizza il `Update` (metodo), sono disponibili due eventi che si verificano per ogni riga di dati aggiornata. L&quot;ordine di esecuzione è il seguente: 1.  I valori di <xref:System.Data.DataRow>vengono spostati i valori dei parametri.</xref:System.Data.DataRow>      2.  Il `OnRowUpdating` viene generato l&quot;evento.      3.  Esegue il comando.      4.  Se il `UpdateRowSource` enumerazione è impostata su `FirstReturnedRecord`, il primo risultato restituito è inserito nel **DataRow**.      5.  Se sono presenti parametri di output, questi vengono collocati nel **DataRow**.      6.  Il `OnRowUpdated` viene generato l&quot;evento.      7.  `AcceptChanges`viene chiamato."
  syntax:
    content: public event System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OracleClient.OracleRowUpdatingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per selezionare i record nel database."
  remarks: "Quando SelectCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>non verrà duplicato.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> Mantiene un riferimento all&quot;oggetto creato in precedenza invece SelectCommand <xref:System.Data.OracleClient.OracleCommand>oggetto.</xref:System.Data.OracleClient.OracleCommand>       Se SelectCommand non restituisce alcuna riga, non vengono aggiunte tabelle per il **DataSet**, e viene generata alcuna eccezione."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the SelectCommand and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the InsertCommand.  \n  \n  cmd = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                       \"VALUES (pDeptNo, pDName)\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  da.InsertCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the InsertCommand.  \n  \n  cmd = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                       \"VALUES (:pDeptNo, :pDName)\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  da.InsertCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand SelectCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> utilizzato durante un&quot;operazione di riempimento per selezionare i record dal database per la selezione nel <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Stringa che rappresenta il comando."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Stringa che rappresenta il comando."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Stringa che rappresenta il comando."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Per una descrizione di questo membro, vedere <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.Data.IDbDataAdapter>interfaccia.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Stringa che rappresenta il comando."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleDataAdapter>esegue il cast dell&quot;istanza di un <xref:System.ICloneable>interfaccia.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nuovo oggetto che è una copia di questa istanza."
  overload: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: OracleDataAdapter.TerminateBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta un valore che abilita o disabilita il supporto per l&quot;elaborazione batch e specifica il numero di comandi che possono essere eseguite in un batch."
  remarks: "Utilizzare la proprietà UpdateBatchSize per aggiornare un&quot;origine dati con le modifiche apportate da un <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Questo può aumentare le prestazioni dell&quot;applicazione riducendo il numero di round trip al server.       Se si esegue un batch di dimensioni estremamente grande, le prestazioni risulteranno ridotte. Pertanto, è necessario verificare l&quot;impostazione di dimensioni di batch ottimale prima di implementare l&quot;applicazione.       Un <xref:System.ArgumentOutOfRangeException>viene generata se il valore è impostato su un numero minore di zero.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Il numero di righe da elaborare per ogni batch.       <table><thead><tr><th> Valore:       </th><th> Effetto:       </th></tr></thead><tbody><tr><td> 0       </td><td> Non sussiste alcun limite alla dimensione del batch.       </td></tr><tr><td> 1       </td><td> Disabilita l&quot;aggiornamento in batch.       </td></tr><tr><td> &gt; 1       </td><td> Le modifiche vengono inviate utilizzando i batch di operazioni UpdateBatchSize alla volta.       </td></tr></tbody></table>       Quando si imposta un valore diverso da 1, tutti i comandi associati il <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> necessario avere i <xref:System.Data.IDbCommand.UpdatedRowSource*>proprietà impostata su <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>.</xref:System.Data.IDbCommand.UpdatedRowSource*> In caso contrario viene generata un&quot;eccezione."
  overload: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta un&quot;istruzione SQL o stored procedure utilizzata per aggiornare i record nel database."
  remarks: "Quando UpdateCommand è assegnata a un oggetto creato in precedenza <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>non verrà duplicato.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> Mantiene un riferimento all&quot;oggetto creato in precedenza invece UpdateCommand <xref:System.Data.OracleClient.OracleCommand>oggetto.</xref:System.Data.OracleClient.OracleCommand>       Durante un&quot;operazione di aggiornamento, se <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>non è impostata e chiave primaria sono presenti informazioni nel **set di dati**, è possibile utilizzare la <xref:System.Data.OracleClient.OracleCommandBuilder>classe per generare automaticamente <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>e comandi aggiuntivi necessari per risolvere le differenze tra la <xref:System.Data.DataSet>al database.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> A tale scopo, impostare la <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>proprietà di <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> La logica di generazione richiede inoltre informazioni sulle colonne chiave deve essere presente in <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se l&quot;esecuzione di questo comando restituisce le righe, queste righe potrebbero essere unite con il <xref:System.Data.DataSet>in base all&quot;impostazione di <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A>proprietà del <xref:System.Data.OracleClient.OracleCommand>oggetto.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>       Quando si aggiorna una colonna con il `LONG RAW` tipo di dati, viene generata un&quot;eccezione quando si immette un valore di `NULL` nella colonna. Oracle `LONG RAW` tipo di dati è deprecato in Oracle versione 8.0. Per evitare questo errore, utilizzare il `BLOB` del tipo di dati anziché `LONG RAW`."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  Dim parm As OracleParameter  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = pDName AND Loc = pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the UpdateCommand.  \n  \n  cmd = New OracleCommand(\"UPDATE Dept SET DeptNo = pDeptNo, DName = pDName \" & _  \n                       \"WHERE DeptNo = poldDeptNo\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  parm = cmd.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  parm.SourceVersion = DataRowVersion.Original  \n  \n  da.UpdateCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  OracleParameter parm;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = pDName AND Loc = pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the UpdateCommand.  \n  \n  cmd = new OracleCommand(\"UPDATE Dept SET DeptNo = pDeptNo, DName = pDName \" +  \n                       \"WHERE DeptNo = poldDeptNo\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  parm = cmd.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  parm.SourceVersion = DataRowVersion.Original;  \n  \n  da.UpdateCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> utilizzato durante un&quot;operazione di aggiornamento per aggiornare i record nel database che corrispondono alle righe modificate nel <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter()
  nameWithType: OracleDataAdapter.OracleDataAdapter()
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter()
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(OracleCommand)
  nameWithType: OracleDataAdapter.OracleDataAdapter(OracleCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(OracleCommand)
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(String,OracleConnection)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(String,String)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,String)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,String)
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: OracleDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: OracleDataAdapter.ClearBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ClearBatch()
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: OracleDataAdapter.ExecuteBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch()
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: OracleDataAdapter.InitializeBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.InitializeBatching()
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OracleDataAdapter.RowUpdated
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdated
- uid: System.Data.OracleClient.OracleRowUpdatedEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleRowUpdatedEventHandler
  nameWithType: OracleRowUpdatedEventHandler
  fullName: System.Data.OracleClient.OracleRowUpdatedEventHandler
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OracleDataAdapter.RowUpdating
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdating
- uid: System.Data.OracleClient.OracleRowUpdatingEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleRowUpdatingEventHandler
  nameWithType: OracleRowUpdatingEventHandler
  fullName: System.Data.OracleClient.OracleRowUpdatingEventHandler
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: OracleDataAdapter.TerminateBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.TerminateBatching()
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter
  nameWithType: OracleDataAdapter.OracleDataAdapter
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: OracleDataAdapter.AddToBatch
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: OracleDataAdapter.ClearBatch
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: OracleDataAdapter.ExecuteBatch
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: OracleDataAdapter.GetBatchedParameter
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: OracleDataAdapter.InitializeBatching
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OracleDataAdapter.OnRowUpdated
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OracleDataAdapter.OnRowUpdating
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleDataAdapter.System.ICloneable.Clone
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: OracleDataAdapter.TerminateBatching
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
