### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  id: CompositionScopeDefinition
  children:
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface
  langs:
  - csharp
  name: CompositionScopeDefinition
  nameWithType: CompositionScopeDefinition
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  type: Class
  summary: "Rappresenta un nodo in un albero di cataloghi con ambiti, indicare un catalogo sottostante e i relativi ambiti figlio."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy))]

      public class CompositionScopeDefinition : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: CompositionScopeDefinition()
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition()
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&quot;> </xref> classe."
  syntax:
    content: protected CompositionScopeDefinition ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})'
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&quot;> </xref> classe con il catalogo sottostante specificato e gli elementi figlio."
  syntax:
    content: public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> children);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Il catalogo sottostante per il catalogo."
    - id: children
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}
      description: "Raccolta di ambiti figlio del catalogo."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})'
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&quot;> </xref> classe con il catalogo sottostante specificato, gli elementi figlio e superficie pubblica."
  syntax:
    content: public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> children, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition> publicSurface);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Il catalogo sottostante per il catalogo."
    - id: children
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}
      description: "Raccolta di ambiti figlio del catalogo."
    - id: publicSurface
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}
      description: "Superficie pubblica per il catalogo."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: Changed
  nameWithType: CompositionScopeDefinition.Changed
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Si verifica quando il catalogo sottostante è stata modificata, se il catalogo supporta le notifiche."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: Changing
  nameWithType: CompositionScopeDefinition.Changing
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Si verifica quando cambia il catalogo sottostante, se il catalogo supporta le notifiche."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children
  id: Children
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: Children
  nameWithType: CompositionScopeDefinition.Children
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Recupera gli ambiti figlio del catalogo."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> Children { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}
      description: "Raccolta di ambiti figlio del catalogo."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositionScopeDefinition.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Chiamato dal <xref uid=&quot;langword_csharp_Dispose()&quot; name=&quot;Dispose()&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_Finalize()&quot; name=&quot;Finalize()&quot; href=&quot;&quot;> </xref> metodi per rilasciare le risorse gestite e non gestite usate dall&quot;istanza corrente del <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&quot;> </xref> classe."
  remarks: "Questo metodo viene chiamato solo dal pubblico `Dispose()` e `Finalize()` metodi; non chiamare questo metodo direttamente. Quando si implementa il modello dispose, il parametro booleano del `Dispose(Boolean)` metodo deve essere utilizzato come indicato di seguito: - il `Dispose()` metodo dell&quot;oggetto corrente deve chiamare `Dispose(Boolean)` con il parametro booleano impostato su `true` per rilasciare le risorse gestite e non gestite.      -La `Finalize()` metodo dell&quot;oggetto corrente deve chiamare `Dispose(Boolean)` con il parametro booleano impostato su `false` per rilasciare solo le risorse non gestite.       Per ulteriori informazioni, vedere."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CompositionScopeDefinition.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Restituisce un enumeratore che scorre il catalogo."
  syntax:
    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "Un enumeratore che può essere utilizzato per scorrere il catalogo."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: CompositionScopeDefinition.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ottiene una raccolta di esportazioni che corrispondono alle condizioni specificate dalla definizione di importazione."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Condizioni che specificano quali esportazioni per trovare la corrispondenza."
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "Una raccolta di esportazioni che corrispondono alle condizioni specificate."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Genera il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed&quot;> </xref> evento."
  syntax:
    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "Contiene i dati per il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed&quot;> </xref> evento."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Genera il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing&quot;> </xref> evento."
  syntax:
    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "Contiene i dati per il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing&quot;> </xref> evento."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface
  id: PublicSurface
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  langs:
  - csharp
  name: PublicSurface
  nameWithType: CompositionScopeDefinition.PublicSurface
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ottiene una raccolta di parti visibili all&quot;ambito padre del catalogo."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition> PublicSurface { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}
      description: "Una raccolta di parti visibili nell&quot;ambito padre del catalogo."
  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: CompositionScopeDefinition()
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition()
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition()
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<CompositionScopeDefinition>
  nameWithType: IEnumerable<CompositionScopeDefinition>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
    name: CompositionScopeDefinition
    nameWithType: CompositionScopeDefinition
    fullName: CompositionScopeDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ExportDefinition>
  nameWithType: IEnumerable<ExportDefinition>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Changed
  nameWithType: CompositionScopeDefinition.Changed
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: ComposablePartCatalogChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Changing
  nameWithType: CompositionScopeDefinition.Changing
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Children
  nameWithType: CompositionScopeDefinition.Children
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositionScopeDefinition.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: GetEnumerator()
  nameWithType: CompositionScopeDefinition.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ComposablePartDefinition>
  nameWithType: IEnumerator<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: CompositionScopeDefinition.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: PublicSurface
  nameWithType: CompositionScopeDefinition.PublicSurface
  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: CompositionScopeDefinition
  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Children
  nameWithType: CompositionScopeDefinition.Children
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: Dispose
  nameWithType: CompositionScopeDefinition.Dispose
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: GetEnumerator
  nameWithType: CompositionScopeDefinition.GetEnumerator
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: GetExports
  nameWithType: CompositionScopeDefinition.GetExports
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: OnChanged
  nameWithType: CompositionScopeDefinition.OnChanged
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: OnChanging
  nameWithType: CompositionScopeDefinition.OnChanging
- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface*
  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
  isExternal: false
  name: PublicSurface
  nameWithType: CompositionScopeDefinition.PublicSurface
