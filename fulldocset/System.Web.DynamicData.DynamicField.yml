### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "Rappresenta un campo di dati che viene visualizzato in un controllo con associazione a dati che utilizza le funzionalità ASP.NET Dynamic Data."
  remarks: "In questo argomento:- [Introduzione](#introduction)      -   [sintassi dichiarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # DynamicField l&quot;introduzione è utilizzata dai controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>controlli, per visualizzare un valore di campo che utilizza le funzionalità di ASP.NET Dynamic Data nelle pagine personalizzate.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             La classe DynamicField fornisce funzionalità che è simile a quello della <xref:System.Web.UI.WebControls.BoundField>classe.</xref:System.Web.UI.WebControls.BoundField> Tuttavia, poiché nelle applicazioni di dati dinamica viene utilizzato un oggetto di DynamicField, è possibile sfruttare le seguenti funzionalità di Dynamic Data:: automaticamente il rendering del controllo appropriato per un campo utilizzando i modelli di campo, in base al tipo di dati. I modelli di campo possono essere modificati a livello globale per l&quot;intera applicazione.      -Che fornisce la convalida di dati predefinito in base allo schema di database. È anche possibile aggiungere tipi di convalida personalizzando il modello di dati.      -Personalizzazione del rendering dei dati per i singoli campi utilizzando attributi nel modello di dati o tramite il <xref:System.Web.DynamicData.DynamicField.UIHint%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       L&quot;oggetto DynamicField esegue il rendering di ogni campo tramite un `DynamicControl` controllo. Per specificare il campo dei dati da visualizzare in un oggetto DynamicField, impostare il <xref:System.Web.DynamicData.DynamicField.DataField%2A>proprietà sul nome del campo.</xref:System.Web.DynamicData.DynamicField.DataField%2A> È possibile applicare una stringa di formattazione personalizzata per il valore del campo impostando la <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Per impostazione predefinita la stringa di formattazione viene applicata ai valori di campo solo quando il controllo con associazione a dati è in modalità di sola lettura. Per applicare la stringa di formattazione per i valori visualizzati quando il controllo con associazione a dati è in modalità di modifica, impostare il <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>proprietà `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> Se è un valore del campo `null`, è possibile visualizzare una didascalia personalizzata impostando il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> L&quot;oggetto DynamicField automaticamente anche possibile convertire una stringa vuota (&quot;&quot;) campo valori null impostando la <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>proprietà `true`.</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>      <a name=&quot;declarative_syntax&quot;></a># # Sintassi dichiarativa```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> classe."
  remarks: "Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.DynamicData.DynamicField>classe.</xref:System.Web.DynamicData.DynamicField> Questo costruttore viene comunemente utilizzato quando si aggiungono campi a un controllo con associazione a dati creato dinamicamente.       Per aggiungere dinamicamente un <xref:System.Web.DynamicData.DynamicField>dell&quot;oggetto a un controllo con associazione a dati, creare un nuovo <xref:System.Web.DynamicData.DynamicField>dell&quot;oggetto, impostarne le proprietà e quindi aggiungerlo alla raccolta di campi del controllo con associazione a dati.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> Ad esempio, se si utilizza il <xref:System.Web.UI.WebControls.GridView>di controllo, aggiungere il <xref:System.Web.DynamicData.DynamicField>dell&quot;oggetto per il <xref:System.Web.UI.WebControls.GridView.Columns%2A>insieme.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Anche se in modo dinamico, è possibile aggiungere campi a un controllo con associazione a dati, è consigliabile che i campi in modo statico dichiarati e quindi nascondere o visualizzare, a seconda dei casi. Dichiarazione di tutti i campi in modo statico riduce le dimensioni dello stato di visualizzazione per il controllo con associazione a dati padre."
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta un valore che indica se la stringa formattata che viene specificato da di <xref:System.Web.DynamicData.DynamicField.DataFormatString*>proprietà viene applicata al valore del campo quando il campo dei dati è in modalità di modifica.</xref:System.Web.DynamicData.DynamicField.DataFormatString*>"
  remarks: "Controlli con associazione a dati (ad esempio <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.GridView>) sono diverse modalità di visualizzazione che consentono all&quot;utente di leggere, modificare o inserire record.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> Per impostazione predefinita, la stringa di formattazione specificata dal <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>proprietà viene applicata ai valori di campo solo quando il controllo con associazione a dati è in modalità di sola lettura.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Per applicare la stringa di formattazione per i valori visualizzati quando il controllo con associazione a dati è in modalità di modifica, impostare la proprietà ApplyFormatInEditMode su `true`.      > [!NOTE] > A <xref:System.Web.DynamicData.DynamicField>oggetto non rimuove automaticamente la formattazione quando il campo viene aggiornato nell&quot;origine dati.</xref:System.Web.DynamicData.DynamicField> Se si desidera la formattazione, come parte del valore archiviato, è necessario rimuovere la formattazione a livello di codice."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> Applica formattazione in modalità di modifica; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene il <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> oggetto dall&quot;oggetto <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> associato all&quot;oggetto."
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "La colonna di metadati."
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Fornisce un meccanismo per modificare un <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> oggetto è stato creato tramite il <xref:System.Web.DynamicData.DynamicField.InitializeCell*>metodo.</xref:System.Web.DynamicData.DynamicField.InitializeCell*>"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "Controllo da modificare."
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta un valore che indica se i valori di stringa vuota (&quot;&quot;) vengono convertiti automaticamente in valori null quando viene aggiornato il campo dei dati nell&quot;origine dati."
  remarks: "In alcuni casi l&quot;utente potrebbe immettere una stringa vuota per un valore del campo durante l&quot;aggiornamento o inserimento di record. Utilizzare la proprietà ConvertEmptyStringToNull per specificare se un valore stringa vuota viene convertito automaticamente su null quando viene aggiornato il campo dei dati nell&quot;origine dati.       Per impostazione predefinita, un <xref:System.Web.DynamicData.DynamicField>oggetto visualizza i valori null come stringhe vuote.</xref:System.Web.DynamicData.DynamicField> Per visualizzare un valore diverso, impostare il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>      > [!NOTE] > Il <xref:System.Web.UI.WebControls.Parameter>oggetto dell&quot;origine dati controllare che il controllo padre <xref:System.Web.DynamicData.DynamicField>dell&quot;oggetto è associato a include anche una proprietà denominata <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.Parameter> Questa proprietà esegue la stessa funzione. Assicurarsi che entrambe le proprietà vengono impostate in modo appropriato."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per convertire automaticamente i valori di stringa vuota in valori null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Copia le proprietà dell&quot;oggetto corrente <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto specificata <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> oggetto."
  remarks: "Il metodo CopyProperties è un metodo di supporto. Viene utilizzato dal <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>metodo per copiare le proprietà dell&quot;oggetto corrente <xref:System.Web.DynamicData.DynamicField>dell&quot;oggetto per il <xref:System.Web.DynamicData.DynamicField>oggetto passato il `newField` parametro.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "Il <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> per copiare le proprietà dell&quot;oggetto corrente <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> per."
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Fornisce un meccanismo per le classi che derivano da <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> per eseguire l&quot;override come un <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> viene creato l&quot;oggetto."
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "Un nuovo controllo dinamico."
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Crea e restituisce una nuova istanza di <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> classe."
  remarks: "Il metodo CreateField è un metodo di supporto. Viene utilizzato per il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>metodo per creare un oggetto vuoto <xref:System.Web.DynamicData.DynamicField>oggetto.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Una nuova istanza di <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> classe."
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta il nome del campo dati da associare il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà DataField per specificare il campo dei dati da associare il <xref:System.Web.DynamicData.DynamicField>oggetto.</xref:System.Web.DynamicData.DynamicField> Il campo dei dati può essere la colonna nome o per le colonne chiave esterna, il nome della relazione.       Per impostazione predefinita, viene visualizzato il campo dei dati specificato per il <xref:System.Web.DynamicData.DynamicField>utilizzando il modello di campo che è associato il tipo di dati del campo.</xref:System.Web.DynamicData.DynamicField> È possibile modificare il modello di campo che viene eseguito il rendering per il campo dei dati impostando la <xref:System.Web.DynamicData.DynamicField.UIHint%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.UIHint%2A> È anche possibile formattare il testo visualizzato impostando il <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Se è un valore del campo `null`, una stringa vuota (&quot;&quot;) viene visualizzato per il valore per impostazione predefinita. Per specificare una didascalia alternativa, impostare il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>       **Nota** se si desidera modificare la visualizzazione e il comportamento di un campo dati a livello globale, è necessario applicare attributi per il modello di dati anziché impostare questa proprietà in una particolare istanza di <xref:System.Web.DynamicData.DynamicField>oggetto.</xref:System.Web.DynamicData.DynamicField> Per ulteriori informazioni, vedere [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).       Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>metodo viene chiamato per generare un evento di modifica dello stato quando è impostata la proprietà DataField.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Il valore della proprietà DataField archiviato nella vista stato."
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Il nome dei dati di campo che il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> è associato l&quot;oggetto."
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta la stringa che specifica il formato di visualizzazione per il valore del campo dati."
  remarks: "Utilizzare la proprietà DataFormatString per specificare un formato di visualizzazione personalizzato per i valori visualizzati di <xref:System.Web.DynamicData.DynamicField>oggetto.</xref:System.Web.DynamicData.DynamicField> Se la proprietà DataFormatString non è impostata, il valore del campo viene visualizzato senza alcuna formattazione speciale.       Per impostazione predefinita, la stringa di formattazione viene applicata al valore di campo solo quando il controllo con associazione a dati che contiene il <xref:System.Web.DynamicData.DynamicField>oggetto è in modalità di sola lettura.</xref:System.Web.DynamicData.DynamicField> Per applicare la stringa di formattazione per il valore del campo in modalità di modifica, impostare il <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>proprietà `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>       Il formato di visualizzazione specificato mediante la proprietà DataFormatString è specifico per questa istanza della <xref:System.Web.DynamicData.DynamicField>classe.</xref:System.Web.DynamicData.DynamicField> È anche possibile modificare il formato di visualizzazione per un campo dati in tutta l&quot;applicazione applicando il <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>per il modello di data e l&quot;impostazione di <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>denominato parametro nel costruttore.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Per ulteriori informazioni, vedere [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Stringa di formattazione che specifica il formato di visualizzazione per il valore del campo dati. Il valore predefinito è una stringa vuota (&quot;&quot;), che indica che il valore è applicata alcuna formattazione speciale."
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Estrae il valore del campo dati da una cella della tabella corrente e aggiunge il valore al dizionario specificato."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Dizionario che conterrà i valori di cella."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "La cella che contiene i controlli di testo di <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uno dei valori di enumerazione che specifica lo stato di riga."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i valori dei campi di sola lettura in `dictionary`; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Recupera il valore dell&quot;attributo specificato."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "Chiave dell&quot;attributo da ottenere."
    return:
      type: System.String
      description: "Il valore dell&quot;attributo."
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta il testo che viene visualizzato nell&quot;intestazione del controllo associato a dati che contiene il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà HeaderText per identificare un campo in un controllo con associazione a dati con un nome descrittivo. L&quot;applicazione più comune della proprietà HeaderText consiste nel fornire nomi di colonna significativi ai campi di dati in un <xref:System.Web.UI.WebControls.GridView>o <xref:System.Web.UI.WebControls.DetailsView>controllo.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Per impostazione predefinita, la proprietà HeaderText Usa il nome visualizzato impostato per il campo dei dati tramite il <xref:System.ComponentModel.DisplayNameAttribute>attributo.</xref:System.ComponentModel.DisplayNameAttribute> Se il nome visualizzato non è impostato, la proprietà HeaderText utilizza il valore della <xref:System.Web.DynamicData.DynamicField.DataField%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.DataField%2A>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "Il testo che viene visualizzato nell&quot;intestazione del controllo associato a dati che contiene il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto si trova all&quot;interno di un controllo con associazione a dati che non è associato a un controllo origine dati che implementa il <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interfaccia."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta un valore che indica se i valori dei campi dati sono codificati in HTML prima che vengano visualizzati un <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà HtmlEncode per specificare se i valori di campo sono codificati in HTML per le rispettive rappresentazioni di stringa prima che vengano visualizzati.      > [!NOTE] > Codifica HTML campo valori consente di impedire la visualizzazione di attacchi di script e di contenuto dannoso. Questa proprietà deve essere abilitata quando possibile. Per ulteriori informazioni, vedere [Panoramica attacchi tramite Script](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i valori dei campi sono codificati in HTML prima che vengano visualizzati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Aggiunge il testo o i controlli per la cella specificata."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "L&quot;oggetto che contiene i controlli di testo di <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Uno dei valori di enumerazione che specifica la funzione del `cell` oggetto."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uno dei valori di enumerazione che specifica lo stato di riga."
    - id: rowIndex
      type: System.Int32
      description: "L&quot;indice della riga che di `cell` oggetto è contenuto in."
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta la didascalia visualizzata per un campo dati quando il valore del campo <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Talvolta un valore di campo viene archiviato come null nell&quot;origine dati. È possibile specificare una didascalia da visualizzare per i campi di dati che hanno un valore null impostando la proprietà NullDisplayText personalizzata. Se questa proprietà non è impostata, i valori di campo null vengono visualizzati come stringhe vuote (&quot;&quot;)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "La didascalia visualizzata per un campo dati quando il valore del campo <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Il valore predefinito è una stringa vuota (&quot;&quot;), a indicare che questa proprietà non è impostata."
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene lo stato di sola lettura del campo dinamico."
  remarks: "Se la proprietà di sola lettura è `true`, <xref:System.Web.DynamicData.DynamicField>controllo carica un modello di sola lettura.</xref:System.Web.DynamicData.DynamicField> Questa proprietà richiede che sia attivato lo stato di visualizzazione."
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "Lo stato di sola lettura del campo dinamico."
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Imposta un attributo che è associato il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "Il nome dell&quot;attributo da impostare."
    - id: value
      type: System.String
      description: "Il valore dell&quot;attributo."
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta l&quot;espressione di ordinamento viene utilizzato quando il campo dei dati viene utilizzato per ordinare l&quot;origine dati."
  remarks: "La proprietà SortExpression tenta di utilizzare il valore della <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>proprietà dell&quot;oggetto colonna di cui è associato il <xref:System.Web.DynamicData.DynamicField>oggetto impostando il <xref:System.Web.DynamicData.DynamicField.DataField%2A>proprietà.</xref:System.Web.DynamicData.DynamicField.DataField%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>       Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>metodo viene chiamato per generare un evento di modifica dello stato quando è impostata la proprietà SortExpression.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Il valore della proprietà SortExpression memorizzato nella visualizzazione stato."
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "L&quot;espressione di ordinamento che viene utilizzato quando il campo dei dati viene utilizzato per ordinare l&quot;origine dati."
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> oggetto si trova all&quot;interno di un controllo con associazione a dati che non è associato a un controllo origine dati che implementa il <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interfaccia."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta il modello di campo da utilizzare per visualizzare il campo dei dati."
  remarks: "Utilizzare la proprietà di UIHint per specificare il modello di campo da utilizzare per visualizzare l&quot;interfaccia utente per un campo dati. Modelli di campo per impostazione predefinita sono controlli utente e i relativi nomi contengono un suffisso per identificare i modelli di campo che vengono utilizzati per le operazioni di modifica e le operazioni di inserimento. I suffissi sono rispettivamente Edit e INSERT. Quando si imposta un valore alla proprietà UIHint, impostare il nome senza il suffisso. Dynamic Data identificherà la modalità corrente del campo dati e verrà eseguito il rendering del modello di campo corretto.       Se la proprietà di UIHint non è impostata, Dynamic Data per impostazione predefinita verrà visualizzato il modello di campo in base al tipo di campo. Per ulteriori informazioni, vedere [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md).       Il modello di campo specificato mediante la proprietà UIHint è specifico per questa istanza della <xref:System.Web.DynamicData.DynamicField>classe.</xref:System.Web.DynamicData.DynamicField> È anche possibile modificare il modello di campo utilizzato da un campo dati in tutta l&quot;applicazione applicando la <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>al modello di dati.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Impostazione della proprietà UIHint sostituisce i metadati applicati al modello di dati. Per ulteriori informazioni sugli attributi dei metadati, vedere [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).       Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>metodo viene chiamato per generare un evento di modifica dello stato quando è impostata la proprietà UIHint.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Il valore di UIHint proprietà è archiviato nella vista stato."
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "Il nome del modello di campo da utilizzare per visualizzare il campo dei dati."
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene o imposta un valore che specifica se il controllo convalida l&quot;input per il client."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo convalida input client; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ottiene il <xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>oggetto dall&quot;oggetto <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> associato all&quot;oggetto.</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Il nome del gruppo di convalida a cui appartiene questo controllo di convalida. Il valore predefinito è una stringa vuota (&quot;&quot;), a indicare che questa proprietà non è impostata."
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
