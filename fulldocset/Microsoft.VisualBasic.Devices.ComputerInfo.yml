### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.ComputerInfo
  id: ComputerInfo
  children:
  - Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  langs:
  - csharp
  name: ComputerInfo
  nameWithType: ComputerInfo
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo
  type: Class
  summary: "Fornisce proprietà per ottenere informazioni sulla memoria, gli assembly caricati, nome del computer e sistema operativo."
  remarks: "Le proprietà esposte dal `My.Computer.Info` oggetto restituiscono informazioni relative al computer da cui viene distribuita l&quot;applicazione, come determinato in fase di esecuzione. In genere, questi dati è diverso da quelli disponibili nel computer di sviluppo."
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))]

      public class ComputerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Devices.ComputerInfo&quot;> </xref> classe."
  syntax:
    content: public ComputerInfo ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  id: AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene la quantità totale di memoria fisica disponibile per il computer."
  remarks: "Il `My.Computer.Info.AvailablePhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista."
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: public ulong AvailablePhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "Oggetto <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref> contenente il numero di byte di memoria fisica disponibile per il computer."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;applicazione non è possibile ottenere lo stato della memoria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  id: AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene la quantità totale di spazio di indirizzi virtuali disponibile del computer."
  remarks: "Il `My.Computer.Info.AvailableVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista."
  example:
  - "This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#3](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#3)]"
  syntax:
    content: public ulong AvailableVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "Oggetto <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref> contenente il numero di byte di spazio degli indirizzi virtuali disponibile del computer."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;applicazione non è possibile ottenere lo stato della memoria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  id: InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene le impostazioni cultura correnti dell&quot;interfaccia utente installata con il sistema operativo."
  remarks: "Il `My.Computer.Info.InstalledUICulture` proprietà ha lo stesso comportamento come il <xref:System.Globalization.CultureInfo.InstalledUICulture%2A>proprietà.</xref:System.Globalization.CultureInfo.InstalledUICulture%2A>       In un sistema operativo localizzato, ad esempio versione giapponese di Windows 2000 Professional, questa proprietà restituisce le impostazioni cultura del sistema operativo."
  example:
  - "This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.  \n  \n [!code-vb[VbVbalrMyComputer#4](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#4)]"
  syntax:
    content: public System.Globalization.CultureInfo InstalledUICulture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>oggetto rappresenta le impostazioni cultura dell&quot;interfaccia utente installate nel computer.</xref:System.Globalization.CultureInfo>"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  id: OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene il nome completo del sistema operativo."
  remarks: "Questa proprietà restituisce informazioni dettagliate sul nome del sistema operativo se Strumentazione gestione Windows (WMI) è installato nel computer. In caso contrario, questa proprietà restituisce la stessa stringa come il `My.Computer.Info.OSPlatform` proprietà che fornisce informazioni meno dettagliate di WMI può fornire."
  example:
  - "This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#5](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#5)]"
  syntax:
    content: public string OSFullName { get; }
    return:
      type: System.String
      description: "Oggetto <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> contenente il nome del sistema operativo."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il codice chiamante non dispone di attendibilità totale."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  id: OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene l&quot;identificatore di piattaforma per il sistema operativo del computer."
  remarks: "Il `My.Computer.Info.OSPlatform` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Platform%2A>proprietà dell&quot;oggetto restituito dal <xref:System.Environment.OSVersion%2A>proprietà.</xref:System.Environment.OSVersion%2A> </xref:System.OperatingSystem.Platform%2A>"
  example:
  - "This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#6](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#6)]"
  syntax:
    content: public string OSPlatform { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> contenente l&quot;identificatore di piattaforma per il sistema operativo del computer, scelto ai nomi dei membri di <xref href=&quot;System.PlatformID&quot;> </xref> enumerazione."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "L&quot;applicazione non è possibile ottenere le informazioni sulla piattaforma del sistema operativo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  id: OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene la versione del sistema operativo del computer."
  remarks: "Il `My.Computer.Info.OSVersion` proprietà formatta la versione &quot;revisione&quot;.       Il `My.Computer.Info.OSVersion` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Version%2A>proprietà dell&quot;oggetto restituito dal <xref:System.Environment.OSVersion%2A>proprietà.</xref:System.Environment.OSVersion%2A> </xref:System.OperatingSystem.Version%2A>"
  example:
  - "This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#7](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#7)]"
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: "Oggetto <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> contenente il numero di versione corrente del sistema operativo."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "L&quot;applicazione non è possibile ottenere le informazioni sulla versione del sistema operativo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  id: TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene la quantità totale di memoria fisica per il computer."
  remarks: "Il `My.Computer.Info.TotalPhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista..."
  example:
  - "This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#8](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#8)]"
  syntax:
    content: public ulong TotalPhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "Oggetto <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref> contenente il numero di byte di memoria fisica per il computer."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;applicazione non è possibile ottenere lo stato della memoria."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  id: TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene la quantità totale di spazio degli indirizzi virtuali disponibile per il computer."
  remarks: "Il `My.Computer.Info.TotalVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista..."
  example:
  - "This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#9](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#9)]"
  syntax:
    content: public ulong TotalVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "Oggetto <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref> contenente il numero di byte di spazio degli indirizzi virtuali disponibile per il computer."
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "L&quot;applicazione non è possibile ottenere lo stato della memoria."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ExecutionEngineException
  parent: System
  isExternal: false
  name: ExecutionEngineException
  nameWithType: ExecutionEngineException
  fullName: System.ExecutionEngineException
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo
  nameWithType: ComputerInfo.ComputerInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
