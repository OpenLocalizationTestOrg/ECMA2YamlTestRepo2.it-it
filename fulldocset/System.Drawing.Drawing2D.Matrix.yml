### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.Matrix
  id: Matrix
  children:
  - System.Drawing.Drawing2D.Matrix.#ctor
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Clone
  - System.Drawing.Drawing2D.Matrix.Dispose
  - System.Drawing.Drawing2D.Matrix.Elements
  - System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  - System.Drawing.Drawing2D.Matrix.Finalize
  - System.Drawing.Drawing2D.Matrix.GetHashCode
  - System.Drawing.Drawing2D.Matrix.Invert
  - System.Drawing.Drawing2D.Matrix.IsIdentity
  - System.Drawing.Drawing2D.Matrix.IsInvertible
  - System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.OffsetX
  - System.Drawing.Drawing2D.Matrix.OffsetY
  - System.Drawing.Drawing2D.Matrix.Reset
  - System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  - System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  - System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  langs:
  - csharp
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
  type: Class
  summary: "Incapsula una matrice affine 3x3 che rappresenta una trasformazione geometrica. Questa classe non può essere ereditata."
  remarks: "In [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] è possibile archiviare una trasformazione affine in un oggetto matrice. Poiché la terza colonna di una matrice che rappresenta una trasformazione affine è sempre (0, 0, 1), specificare solo i numeri di sei nelle prime due colonne quando si costruisce un oggetto matrice. L&quot;istruzione `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` costruisce la matrice mostrata nella figura seguente.       ![Trasformazioni](~/add/media/aboutgdip05-art10.gif &quot;trasformazioni&quot;) # # trasformazione composta trasformazioni composte A è una sequenza di trasformazioni, un seguito dagli altri. Prendere in considerazione le matrici e le trasformazioni nell&quot;elenco seguente: | | |   |-|-|   | Matrice | Ruotare di 90 gradi |   | Matrice B | Scala di un fattore pari a 2 nella direzione x |   | Matrice C | Tradurre 3 unità nella direzione y |       Se si inizia con il punto (2, 1), rappresentato dalla matrice [1 1 2]: e moltiplicare A, B, quindi quindi C, il punto (2, 1) subirà le tre trasformazioni nell&quot;ordine elencato.       [2 1 1] ABC = [1-2 5] anziché memorizzare le tre parti della trasformazione composita in tre matrici distinte, è possibile moltiplicare A, B e C insieme per ottenere un singolo 3x3 che archivia l&quot;intera trasformazione composta. Si supponga che ABC = D. Quindi un punto moltiplicato per D offre lo stesso risultato di un punto moltiplicato per A, quindi B, quindi C.       [2 1 1] D = [1-2 5] l&quot;illustrazione seguente mostra le matrici A, B, C e D.       ![Trasformazioni](~/add/media/aboutgdip05-art12.gif &quot;trasformazioni&quot;) il fatto che la matrice di una trasformazione composta può essere formata dalla moltiplicazione di matrici di trasformazione individuali significa che qualsiasi sequenza di trasformazioni affini può essere archiviato in un singolo oggetto matrice.      > [!CAUTION] > L&quot;ordine di una trasformazione composta è importante. In generale, ruotare, ridimensionare e quindi convertire non è la stessa scala, rotazione e quindi convertire. Analogamente, l&quot;ordine di moltiplicazione è importante. In generale, ABC non è uguale a BAC.       La classe Matrix fornisce diversi metodi per la creazione di una trasformazione composta: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>e <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</xref:System.Drawing.Drawing2D.Matrix.Translate%2A> </xref:System.Drawing.Drawing2D.Matrix.Shear%2A> </xref:System.Drawing.Drawing2D.Matrix.Scale%2A> </xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> </xref:System.Drawing.Drawing2D.Matrix.Rotate%2A> </xref:System.Drawing.Drawing2D.Matrix.Multiply%2A> L&quot;esempio seguente crea la matrice di trasformazione composita prima ruotata di 30 gradi, quindi ridimensiona di un fattore pari a 2 nella direzione y, quindi converte di 5 unità nella direzione x: [!code-vb [System.Drawing.CoordinateSystems#11](~/add/codesnippet/visualbasic/t-system.drawing.drawing_10_1.vb)][!code-cs[System.Drawing.CoordinateSystems#11  ](~/add/codesnippet/csharp/t-system.drawing.drawing_10_1.cs)]"
  syntax:
    content: 'public sealed class Matrix : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix()
  nameWithType: Matrix.Matrix()
  fullName: System.Drawing.Drawing2D.Matrix.Matrix()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> classe come matrice di identità."
  syntax:
    content: public Matrix ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Point[])'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(Rectangle,Point[])
  nameWithType: Matrix.Matrix(Rectangle,Point[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Rectangle,Point[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> classe per la trasformazione geometrica definita dal rettangolo specificato e dalla matrice di punti."
  remarks: "Questo metodo inizializza la nuova matrice in modo che rappresenti la trasformazione geometrica che viene eseguito il mapping il rettangolo specificato da di `rect` parametro al parallelogramma definito da tre punti nel `plgpts` parametro. Nell&quot;angolo superiore sinistro del rettangolo di cui viene eseguito il mapping al primo punto di `plgpts` matrice, viene eseguito il mapping nell&quot;angolo superiore destro e il secondo punto e nell&quot;angolo in basso a sinistra viene eseguito il mapping al terzo punto. Il punto in basso a destra del parallelogramma è dato dai primi tre."
  syntax:
    content: public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura che rappresenta il rettangolo da trasformare."
    - id: plgpts
      type: System.Drawing.Point[]
      description: "Una matrice di tre <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresenta i punti del parallelogramma nel quale devono essere trasformati gli angoli superiore sinistro, superiore destro e inferiore sinistro del rettangolo. Nell&quot;angolo inferiore destro del parallelogramma è dato dai primi tre."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(RectangleF,PointF[])
  nameWithType: Matrix.Matrix(RectangleF,PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(RectangleF,PointF[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> classe per la trasformazione geometrica definita dal rettangolo specificato e dalla matrice di punti."
  remarks: "Questo metodo inizializza la nuova <xref:System.Drawing.Drawing2D.Matrix>in modo che rappresenti la trasformazione geometrica che viene eseguito il mapping il rettangolo specificato da di `rect` parametro al parallelogramma definito da tre punti nel `plgpts` parametro.</xref:System.Drawing.Drawing2D.Matrix> Nell&quot;angolo superiore sinistro del rettangolo di cui viene eseguito il mapping al primo punto di `plgpts` matrice, viene eseguito il mapping nell&quot;angolo superiore destro e il secondo punto e nell&quot;angolo in basso a sinistra viene eseguito il mapping al terzo punto. Il punto in basso a destra del parallelogramma è dato dai primi tre."
  syntax:
    content: public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che rappresenta il rettangolo da trasformare."
    - id: plgpts
      type: System.Drawing.PointF[]
      description: "Una matrice di tre <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresenta i punti del parallelogramma nel quale devono essere trasformati gli angoli superiore sinistro, superiore destro e inferiore sinistro del rettangolo. Nell&quot;angolo inferiore destro del parallelogramma è dato dai primi tre."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(Single,Single,Single,Single,Single,Single)
  nameWithType: Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> classe con gli elementi specificati."
  syntax:
    content: public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);
    parameters:
    - id: m11
      type: System.Single
      description: "Il valore nella prima riga e nella prima colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m12
      type: System.Single
      description: "Il valore nella prima riga e nella seconda colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m21
      type: System.Single
      description: "Il valore nella seconda riga e nella prima colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m22
      type: System.Single
      description: "Il valore nella seconda riga e nella seconda colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: dx
      type: System.Single
      description: "Il valore nella terza riga e nella prima colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: dy
      type: System.Single
      description: "Il valore nella terza riga e nella seconda colonna della nuova <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Clone()
  nameWithType: Matrix.Clone()
  fullName: System.Drawing.Drawing2D.Matrix.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una copia esatta di questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Clone ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> creato da questo metodo."
  overload: System.Drawing.Drawing2D.Matrix.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Dispose()
  nameWithType: Matrix.Dispose()
  fullName: System.Drawing.Drawing2D.Matrix.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Rilascia tutte le risorse usate da questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "La chiamata `Dispose` le risorse utilizzate da questo <xref:System.Drawing.Drawing2D.Matrix>oggetto riallocazione per altri scopi.</xref:System.Drawing.Drawing2D.Matrix>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Elements
  id: Elements
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Elements
  nameWithType: Matrix.Elements
  fullName: System.Drawing.Drawing2D.Matrix.Elements
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene una matrice di valori a virgola mobile che rappresenta gli elementi di questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Gli elementi m11, m12, m21, m22, dx e dy del <xref:System.Drawing.Drawing2D.Matrix>sono rappresentati dai valori nella matrice in tale ordine.</xref:System.Drawing.Drawing2D.Matrix>"
  syntax:
    content: public float[] Elements { get; }
    return:
      type: System.Single[]
      description: "Matrice di valori a virgola mobile che rappresenta gli elementi di questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Elements*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Drawing.Drawing2D.Matrix.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Verifica se l&quot;oggetto specificato è un <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> ed è uguale a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da testare."
    return:
      type: System.Boolean
      description: "Questo metodo restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <code> obj </code> specificato <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> identica a questa <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Finalize()
  nameWithType: Matrix.Finalize()
  fullName: System.Drawing.Drawing2D.Matrix.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Consente a un oggetto tentare di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da garbage collection."
  syntax:
    content: ~Matrix ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Drawing.Drawing2D.Matrix.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Restituisce un codice hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il codice hash per questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Invert
  id: Invert
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Drawing.Drawing2D.Matrix.Invert()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inverte la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>, se è invertibile."
  remarks: ''
  example:
  - "The following code example creates a matrix and inverts it:  \n  \n```c#  \nMatrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  \n myMatrix.Invert();  \n```"
  syntax:
    content: public void Invert ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Invert*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity
  id: IsIdentity
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Drawing.Drawing2D.Matrix.IsIdentity
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> è la matrice identità."
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> identità; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible
  id: IsInvertible
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
  fullName: System.Drawing.Drawing2D.Matrix.IsInvertible
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> è invertibile."
  syntax:
    content: public bool IsInvertible { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> è invertibile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.IsInvertible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  id: Multiply(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Multiply(Matrix)
  nameWithType: Matrix.Multiply(Matrix)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica la classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> per la matrice specificata nel <code> matrix </code> parametro, anteponendo la classe specificata <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.
  syntax:
    content: public void Multiply (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> con cui questa <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> deve essere moltiplicata."
  overload: System.Drawing.Drawing2D.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Multiply(Matrix,MatrixOrder)
  nameWithType: Matrix.Multiply(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica la classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> per la matrice specificata nel <code> matrix </code> parametro e nell&quot;ordine specificato nella <code> order </code> parametro."
  remarks: "Se l&quot;ordine specificato è <xref:System.Drawing.Drawing2D.MatrixOrder>, questo <xref:System.Drawing.Drawing2D.Matrix>viene moltiplicato per la matrice specificata in un ordine antecedente.</xref:System.Drawing.Drawing2D.Matrix> </xref:System.Drawing.Drawing2D.MatrixOrder> Se l&quot;ordine specificato è <xref:System.Drawing.Drawing2D.MatrixOrder>, questo <xref:System.Drawing.Drawing2D.Matrix>viene moltiplicato per la matrice specificata in un ordine di aggiunta.</xref:System.Drawing.Drawing2D.Matrix> </xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates three matrices.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).  \n  \n-   Applies the transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.  \n  \n Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/cpp/8671b24d-b76c-4435-bbb4-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/visualbasic/8671b24d-b76c-4435-bbb4-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/csharp/8671b24d-b76c-4435-bbb4-_1.cs)]"
  syntax:
    content: public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> con cui questa <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> deve essere moltiplicata."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che rappresenta l&quot;ordine della moltiplicazione."
  overload: System.Drawing.Drawing2D.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.OffsetX
  id: OffsetX
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Drawing.Drawing2D.Matrix.OffsetX
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene il valore di traslazione x (il valore dx o l&quot;elemento nella terza riga e nella prima colonna) di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public float OffsetX { get; }
    return:
      type: System.Single
      description: "Il valore di traslazione x di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.OffsetX*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.OffsetY
  id: OffsetY
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Drawing.Drawing2D.Matrix.OffsetY
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene il valore di traslazione y (il valore dy oppure l&quot;elemento nella terza riga e nella seconda colonna) di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public float OffsetY { get; }
    return:
      type: System.Single
      description: "Il valore di traslazione y di <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.OffsetY*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Reset
  id: Reset
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Reset()
  nameWithType: Matrix.Reset()
  fullName: System.Drawing.Drawing2D.Matrix.Reset()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Reimposta la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> per presentare gli elementi della matrice di identità."
  remarks: "Gli elementi sulla diagonale principale della matrice di identità sono 1. Tutti gli altri elementi della matrice di identità sono 0."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates a scaling matrix.  \n  \n-   Lists the matrix elements to the screen.  \n  \n-   Resets the matrix to identity.  \n  \n-   Lists the elements to the screen.  \n  \n-   Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.  \n  \n-   Lists the elements of the translated matrix to the screen.  \n  \n-   Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).  \n  \n-   Applies the transform to the rectangle.  \n  \n-   Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.  \n  \n Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/cpp/m-system.drawing.drawing_5_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.drawing_5_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/csharp/m-system.drawing.drawing_5_1.cs)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  id: Rotate(System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Rotate(Single)
  nameWithType: Matrix.Rotate(Single)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Antepone alla classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> una rotazione in senso orario, intorno all&quot;origine e in base all&quot;angolo specificato."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Rotate (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo di rotazione, in gradi."
  overload: System.Drawing.Drawing2D.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Rotate(Single,MatrixOrder)
  nameWithType: Matrix.Rotate(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica una rotazione in senso orario di un valore specificato nella <code> angle </code> parametro intorno all&quot;origine (coordinate zero x e y) per questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  \n  \n-   Creates a matrix and rotates it 45 degrees.  \n  \n-   Applies this matrix transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/cpp/4dc64a49-8a71-40e5-a40b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/visualbasic/4dc64a49-8a71-40e5-a40b-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/csharp/4dc64a49-8a71-40e5-a40b-_1.cs)]"
  syntax:
    content: public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo (estensione) di rotazione, espresso in gradi."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica l&quot;ordine (antecedente o posticipato) in cui viene applicata la rotazione a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  id: RotateAt(System.Single,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: RotateAt(Single,PointF)
  nameWithType: Matrix.RotateAt(Single,PointF)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica una rotazione in senso orario alla classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> intorno al punto specificato nella <code> point </code> parametro e anteponendo la rotazione."
  remarks: ''
  example:
  - "The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#5](~/add/codesnippet/csharp/m-system.drawing.drawing_11_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#5](~/add/codesnippet/cpp/m-system.drawing.drawing_11_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.drawing_11_1.vb)]"
  syntax:
    content: public void RotateAt (float angle, System.Drawing.PointF point);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo (estensione) di rotazione, espresso in gradi."
    - id: point
      type: System.Drawing.PointF
      description: "Oggetto <xref href=&quot;System.Drawing.PointF&quot;> </xref> che rappresenta il centro della rotazione."
  overload: System.Drawing.Drawing2D.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: RotateAt(Single,PointF,MatrixOrder)
  nameWithType: Matrix.RotateAt(Single,PointF,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica una rotazione in senso orario intorno al punto specificato a questa <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  \n  \n-   Creates a matrix and rotates it 45 degrees around a specified point.  \n  \n-   Applies this matrix transform is to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the RotateAt method).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/cpp/fc8aec2b-1f13-41da-9f14-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/visualbasic/fc8aec2b-1f13-41da-9f14-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/csharp/fc8aec2b-1f13-41da-9f14-_1.cs)]"
  syntax:
    content: public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Angolo di rotazione, in gradi."
    - id: point
      type: System.Drawing.PointF
      description: "Oggetto <xref href=&quot;System.Drawing.PointF&quot;> </xref> che rappresenta il centro della rotazione."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica l&quot;ordine (antecedente o posticipato) in cui viene applicata la rotazione."
  overload: System.Drawing.Drawing2D.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  id: Scale(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Scale(Single,Single)
  nameWithType: Matrix.Scale(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di scala specificato a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> facendo precedere il vettore di scala."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Scale (float scaleX, float scaleY);
    parameters:
    - id: scaleX
      type: System.Single
      description: "Il valore per il quale modificare le proporzioni <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nella direzione dell&quot;asse x."
    - id: scaleY
      type: System.Single
      description: "Il valore per il quale modificare le proporzioni <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nella direzione dell&quot;asse y."
  overload: System.Drawing.Drawing2D.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Scale(Single,Single,MatrixOrder)
  nameWithType: Matrix.Scale(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di scala specificato (<code> scaleX </code> e <code> scaleY </code>) a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> utilizzando l&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  \n  \n-   Applies this matrix transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/cpp/05985bb7-69b2-4fd4-9c7f-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/visualbasic/05985bb7-69b2-4fd4-9c7f-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/csharp/05985bb7-69b2-4fd4-9c7f-_1.cs)]"
  syntax:
    content: public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: scaleX
      type: System.Single
      description: "Il valore per il quale modificare le proporzioni <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nella direzione dell&quot;asse x."
    - id: scaleY
      type: System.Single
      description: "Il valore per il quale modificare le proporzioni <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nella direzione dell&quot;asse y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica l&quot;ordine (antecedente o posticipato) in cui il vettore di scala viene applicato a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  id: Shear(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Shear(Single,Single)
  nameWithType: Matrix.Shear(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di taglio specificato a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> anteponendo la trasformazione di taglio."
  remarks: "La trasformazione applicata in questo metodo è una distorsione pure solo se uno dei parametri è 0. Applicato a un rettangolo all&quot;origine, quando il `shearY` fattore è 0, la trasformazione sposta il bordo inferiore in senso orizzontale da `shearX` volte l&quot;altezza del rettangolo. Quando il `shearX` fattore è 0, sposta verticalmente il bordo destro `shearY` volte la larghezza del rettangolo. Attenzione è nell&quot;ordine quando entrambi i parametri sono diversi da zero, perché i risultati sono difficili da prevedere. Ad esempio, se entrambi i fattori sono 1, la trasformazione è a istanza singola (pertanto non invertibile), riducendo l&quot;intero piano in una singola riga."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following action:  \n  \n-   Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.  \n  \n-   Draws another rectangle using a red pen.  \n  \n-   Draws an ellipse using a blue pen.  \n  \n The result is a green rectangle, a red parallelogram and a transformed, blue ellipse. Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call. The other two figures are transformed prior to drawing. The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram. Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/cpp/m-system.drawing.drawing_3_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/csharp/m-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: public void Shear (float shearX, float shearY);
    parameters:
    - id: shearX
      type: System.Single
      description: "Il fattore di taglio orizzontale."
    - id: shearY
      type: System.Single
      description: "Fattore di taglio verticale."
  overload: System.Drawing.Drawing2D.Matrix.Shear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Shear(Single,Single,MatrixOrder)
  nameWithType: Matrix.Shear(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di taglio specificato a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nell&quot;ordine specificato."
  remarks: "La trasformazione applicata in questo metodo è una distorsione pure solo se uno dei parametri è 0. Applicato a un rettangolo all&quot;origine, quando il `shearY` fattore è 0, la trasformazione sposta il bordo inferiore in senso orizzontale da `shearX` volte l&quot;altezza del rettangolo. Quando il `shearX` fattore è 0, sposta verticalmente il bordo destro `shearY` volte la larghezza del rettangolo. Attenzione è nell&quot;ordine quando entrambi i parametri sono diversi da zero, perché i risultati sono difficili da prevedere. Ad esempio, se entrambi i fattori sono 1, la trasformazione è a istanza singola (pertanto non invertibile), riducendo l&quot;intero piano in una singola riga."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.
  syntax:
    content: public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: shearX
      type: System.Single
      description: "Il fattore di taglio orizzontale."
    - id: shearY
      type: System.Single
      description: "Fattore di taglio verticale."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica l&quot;ordine (antecedente o posticipato) in cui viene applicato il taglio."
  overload: System.Drawing.Drawing2D.Matrix.Shear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  id: TransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformPoints(Point[])
  nameWithType: Matrix.TransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica la trasformazione geometrica rappresentata dalla <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> a una matrice di punti specificata."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates an array of points that form a rectangle.  \n  \n-   Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  \n  \n-   Applies this matrix transform to the array of points.  \n  \n-   Draws the transformed array to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/cpp/m-system.drawing.drawing_1_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.drawing_1_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/csharp/m-system.drawing.drawing_1_1.cs)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresenta i punti da trasformare."
  overload: System.Drawing.Drawing2D.Matrix.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  id: TransformPoints(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformPoints(PointF[])
  nameWithType: Matrix.TransformPoints(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica la trasformazione geometrica rappresentata dalla <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> a una matrice di punti specificata."
  remarks: ''
  example:
  - For an example, see [TransformPoints(Point\[\])](assetId:///M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void TransformPoints (System.Drawing.PointF[] pts);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.PointF&quot;> </xref> strutture che rappresenta i punti da trasformare."
  overload: System.Drawing.Drawing2D.Matrix.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  id: TransformVectors(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformVectors(Point[])
  nameWithType: Matrix.TransformVectors(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Si applica solo la scala e i componenti di rotazione <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nella matrice di punti specificata."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates an array of points that form a rectangle.  \n  \n-   Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.  \n  \n-   Lists the matrix elements to the screen.  \n  \n-   Applies this matrix transform to the array of points.  \n  \n-   Draws the transformed array to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/cpp/m-system.drawing.drawing_12_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.drawing_12_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/csharp/m-system.drawing.drawing_12_1.cs)]"
  syntax:
    content: public void TransformVectors (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresenta i punti da trasformare."
  overload: System.Drawing.Drawing2D.Matrix.TransformVectors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  id: TransformVectors(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformVectors(PointF[])
  nameWithType: Matrix.TransformVectors(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica ciascun vettore in una matrice per la matrice. Gli elementi di traslazione di questa matrice (terza riga) vengono ignorati."
  remarks: ''
  example:
  - For an example, see [TransformVectors(Point\[\])](assetId:///M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void TransformVectors (System.Drawing.PointF[] pts);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresenta i punti da trasformare."
  overload: System.Drawing.Drawing2D.Matrix.TransformVectors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  id: Translate(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Translate(Single,Single)
  nameWithType: Matrix.Translate(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di traslazione specificato (<code> offsetX </code> e <code> offsetY </code>) a questo <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> facendo precedere il vettore di traslazione."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Translate (float offsetX, float offsetY);
    parameters:
    - id: offsetX
      type: System.Single
      description: "Valore x per il quale traslare la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: offsetY
      type: System.Single
      description: "Valore y per il quale traslare la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Translate(Single,Single,MatrixOrder)
  nameWithType: Matrix.Translate(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Applica il vettore di traslazione specificato alla classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).  \n  \n-   Creates a matrix and translates it by 100 in both axes.  \n  \n-   Applies this matrix transform to the rectangle,  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/cpp/48411d65-00d9-48ff-a809-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/visualbasic/48411d65-00d9-48ff-a809-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/csharp/48411d65-00d9-48ff-a809-_1.cs)]"
  syntax:
    content: public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: offsetX
      type: System.Single
      description: "Valore x per il quale traslare la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: offsetY
      type: System.Single
      description: "Valore y per il quale traslare la <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica l&quot;ordine (antecedente o posticipato) in cui viene applicata la traslazione alla classe <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  id: VectorTransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: VectorTransformPoints(Point[])
  nameWithType: Matrix.VectorTransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica ciascun vettore in una matrice per la matrice. Gli elementi di traslazione di questa matrice (terza riga) vengono ignorati."
  syntax:
    content: public void VectorTransformPoints (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Matrice di <xref href=&quot;System.Drawing.Point&quot;> </xref> strutture che rappresenta i punti da trasformare."
  overload: System.Drawing.Drawing2D.Matrix.VectorTransformPoints*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.Matrix.#ctor
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix()
  nameWithType: Matrix.Matrix()
  fullName: System.Drawing.Drawing2D.Matrix.Matrix()
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(Rectangle,Point[])
  nameWithType: Matrix.Matrix(Rectangle,Point[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Rectangle,Point[])
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(RectangleF,PointF[])
  nameWithType: Matrix.Matrix(RectangleF,PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(RectangleF,PointF[])
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(Single,Single,Single,Single,Single,Single)
  nameWithType: Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Single,Single,Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.Matrix.Clone
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Clone()
  nameWithType: Matrix.Clone()
  fullName: System.Drawing.Drawing2D.Matrix.Clone()
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.Matrix.Dispose
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Dispose()
  nameWithType: Matrix.Dispose()
  fullName: System.Drawing.Drawing2D.Matrix.Dispose()
- uid: System.Drawing.Drawing2D.Matrix.Elements
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Elements
  nameWithType: Matrix.Elements
  fullName: System.Drawing.Drawing2D.Matrix.Elements
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Drawing.Drawing2D.Matrix.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.Matrix.Finalize
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Finalize()
  nameWithType: Matrix.Finalize()
  fullName: System.Drawing.Drawing2D.Matrix.Finalize()
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Drawing.Drawing2D.Matrix.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.Matrix.Invert
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Drawing.Drawing2D.Matrix.Invert()
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Drawing.Drawing2D.Matrix.IsIdentity
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
  fullName: System.Drawing.Drawing2D.Matrix.IsInvertible
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply(Matrix)
  nameWithType: Matrix.Multiply(Matrix)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix)
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply(Matrix,MatrixOrder)
  nameWithType: Matrix.Multiply(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.Matrix.OffsetX
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Drawing.Drawing2D.Matrix.OffsetX
- uid: System.Drawing.Drawing2D.Matrix.OffsetY
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Drawing.Drawing2D.Matrix.OffsetY
- uid: System.Drawing.Drawing2D.Matrix.Reset
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Reset()
  nameWithType: Matrix.Reset()
  fullName: System.Drawing.Drawing2D.Matrix.Reset()
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate(Single)
  nameWithType: Matrix.Rotate(Single)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single)
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate(Single,MatrixOrder)
  nameWithType: Matrix.Rotate(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt(Single,PointF)
  nameWithType: Matrix.RotateAt(Single,PointF)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt(Single,PointF,MatrixOrder)
  nameWithType: Matrix.RotateAt(Single,PointF,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale(Single,Single)
  nameWithType: Matrix.Scale(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale(Single,Single,MatrixOrder)
  nameWithType: Matrix.Scale(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear(Single,Single)
  nameWithType: Matrix.Shear(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear(Single,Single,MatrixOrder)
  nameWithType: Matrix.Shear(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints(Point[])
  nameWithType: Matrix.TransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(Point[])
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints(PointF[])
  nameWithType: Matrix.TransformPoints(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(PointF[])
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors(Point[])
  nameWithType: Matrix.TransformVectors(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(Point[])
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors(PointF[])
  nameWithType: Matrix.TransformVectors(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(PointF[])
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate(Single,Single)
  nameWithType: Matrix.Translate(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate(Single,Single,MatrixOrder)
  nameWithType: Matrix.Translate(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: VectorTransformPoints(Point[])
  nameWithType: Matrix.VectorTransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(Point[])
- uid: System.Drawing.Drawing2D.Matrix.#ctor*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
- uid: System.Drawing.Drawing2D.Matrix.Clone*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Clone
  nameWithType: Matrix.Clone
- uid: System.Drawing.Drawing2D.Matrix.Dispose*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Dispose
  nameWithType: Matrix.Dispose
- uid: System.Drawing.Drawing2D.Matrix.Elements*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Elements
  nameWithType: Matrix.Elements
- uid: System.Drawing.Drawing2D.Matrix.Equals*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
- uid: System.Drawing.Drawing2D.Matrix.Finalize*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Finalize
  nameWithType: Matrix.Finalize
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
- uid: System.Drawing.Drawing2D.Matrix.Invert*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
- uid: System.Drawing.Drawing2D.Matrix.Multiply*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
- uid: System.Drawing.Drawing2D.Matrix.OffsetX*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
- uid: System.Drawing.Drawing2D.Matrix.OffsetY*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
- uid: System.Drawing.Drawing2D.Matrix.Reset*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Reset
  nameWithType: Matrix.Reset
- uid: System.Drawing.Drawing2D.Matrix.Rotate*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate
  nameWithType: Matrix.Rotate
- uid: System.Drawing.Drawing2D.Matrix.RotateAt*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt
  nameWithType: Matrix.RotateAt
- uid: System.Drawing.Drawing2D.Matrix.Scale*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale
  nameWithType: Matrix.Scale
- uid: System.Drawing.Drawing2D.Matrix.Shear*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear
  nameWithType: Matrix.Shear
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints
  nameWithType: Matrix.TransformPoints
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors
  nameWithType: Matrix.TransformVectors
- uid: System.Drawing.Drawing2D.Matrix.Translate*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate
  nameWithType: Matrix.Translate
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: VectorTransformPoints
  nameWithType: Matrix.VectorTransformPoints
