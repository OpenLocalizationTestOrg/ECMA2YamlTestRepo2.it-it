### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbEnumerator
  id: DbEnumerator
  children:
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.Current
  - System.Data.Common.DbEnumerator.MoveNext
  - System.Data.Common.DbEnumerator.Reset
  langs:
  - csharp
  name: DbEnumerator
  nameWithType: DbEnumerator
  fullName: System.Data.Common.DbEnumerator
  type: Class
  summary: "Espone il <xref:System.Collections.IEnumerable.GetEnumerator*>metodo, che supporta un&quot;iterazione semplice su una raccolta da un provider di dati .NET Framework.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  remarks: "La classe DbEnumerator è implementata da un provider di dati .NET Framework per fornire il supporto di associazione dati.       Per impostazione predefinita, l&quot;oggetto DbEnumerator deve essere utilizzato con un solo set di risultati. Ad esempio, se si esegue un&quot;istruzione del batch contenente due istruzioni SQL SELECT che restituiscono schemi diversi, la seconda istruzione potrebbe non restituisca l&quot;intero schema. Per evitare questa situazione, ottenere un DbEnumerator per ogni set di risultati e quindi chiamare il `NextResult` metodo di un oggetto DataReader provider di dati .NET Framework."
  syntax:
    content: 'public class DbEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  id: '#ctor(System.Data.Common.DbDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> classe con il lettore di dati n offrono."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "Oggetto DataReader attraverso il quale eseguire l&quot;iterazione."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  id: '#ctor(System.Data.IDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "Il <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> da scorrere."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  id: '#ctor(System.Data.Common.DbDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> classe utilizzando un lettore specificato e indica se chiudere automaticamente il lettore dopo l&quot;iterazione nei dati."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "Oggetto DataReader attraverso il quale eseguire l&quot;iterazione."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per chiudere automaticamente DataReader dopo l&quot;iterazione nei dati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  id: '#ctor(System.Data.IDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>e indica se chiudere automaticamente il <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> dopo l&quot;iterazione nei relativi dati."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "Il <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> da scorrere."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per chiudere automaticamente il <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> dopo l&quot;iterazione nei dati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Current
  id: Current
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene l&quot;elemento corrente nella raccolta."
  remarks: "Dopo la creazione di un enumeratore o dopo un <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A>deve essere chiamato per passare l&quot;enumeratore al primo elemento della raccolta prima di leggere il valore dell&quot;elemento corrente; in caso contrario, non è definito corrente.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> </xref:System.Data.Common.DbEnumerator.Reset%2A> Corrente genera anche un&quot;eccezione se l&quot;ultima chiamata a <xref:System.Data.Common.DbEnumerator.MoveNext%2A>ha restituito false, che indica la fine della raccolta.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> Corrente non si sposta la posizione dell&quot;enumeratore e le chiamate successive a corrente restituiscono lo stesso oggetto finché non <xref:System.Data.Common.DbEnumerator.MoveNext%2A>o <xref:System.Data.Common.DbEnumerator.Reset%2A>viene chiamato.</xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio l&quot;aggiunta, modifica o eliminazione di elementi, l&quot;enumeratore viene invalidato e la successiva chiamata a <xref:System.Data.Common.DbEnumerator.MoveNext%2A>o <xref:System.Data.Common.DbEnumerator.Reset%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Se la raccolta viene modificata tra <xref:System.Data.Common.DbEnumerator.MoveNext%2A>e corrente, corrente restituisce l&quot;elemento su cui è impostata, anche se l&quot;enumeratore risulta già invalidato.</xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "L&quot;elemento corrente nella raccolta."
  overload: System.Data.Common.DbEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;enumeratore è posizionato davanti al primo elemento della raccolta o dopo l&quot;ultimo elemento."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.MoveNext
  id: MoveNext
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Sposta l&quot;enumeratore all&quot;elemento successivo della raccolta."
  remarks: "Dopo la creazione di un enumeratore o dopo una chiamata a <xref:System.Data.Common.DbEnumerator.Reset%2A>, un enumeratore è posizionato davanti al primo elemento della raccolta e la prima chiamata a MoveNext sposta l&quot;enumeratore sul primo elemento della raccolta.</xref:System.Data.Common.DbEnumerator.Reset%2A> Una volta raggiunta la fine della raccolta, le chiamate successive a MoveNext restituiscono false fino <xref:System.Data.Common.DbEnumerator.Reset%2A>viene chiamato.</xref:System.Data.Common.DbEnumerator.Reset%2A> Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio l&quot;aggiunta, modifica o eliminazione di elementi, l&quot;enumeratore viene invalidato e la successiva chiamata a MoveNext o <xref:System.Data.Common.DbEnumerator.Reset%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;enumeratore è avanzato all&quot;elemento successivo; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;enumeratore ha superato la fine della raccolta."
  overload: System.Data.Common.DbEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La raccolta è stata modificata dopo la creazione dell&quot;enumeratore."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Reset
  id: Reset
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Imposta l&quot;enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta."
  remarks: "Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e la successiva chiamata al <xref:System.Data.Common.DbEnumerator.MoveNext%2A>o reimpostazione genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Data.Common.DbEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La raccolta è stata modificata dopo la creazione dell&quot;enumeratore."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
- uid: System.Data.Common.DbEnumerator.Current
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
- uid: System.Data.Common.DbEnumerator.Reset
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
- uid: System.Data.Common.DbEnumerator.#ctor*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator
  nameWithType: DbEnumerator.DbEnumerator
- uid: System.Data.Common.DbEnumerator.Current*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: DbEnumerator.MoveNext
- uid: System.Data.Common.DbEnumerator.Reset*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset
  nameWithType: DbEnumerator.Reset
