### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHostBase
  id: ServiceHostBase
  children:
  - System.ServiceModel.ServiceHostBase.#ctor
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  langs:
  - csharp
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
  type: Class
  summary: "Estende la classe ServiceHostBase per implementare host che espongono modelli di programmazione personalizzati."
  remarks: "Utilizzare la classe ServiceHostBase per creare host che forniscono un modello di programmazione personalizzato. Il [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] modello di programmazione servizio utilizza la <xref:System.ServiceModel.ServiceHost>classe.</xref:System.ServiceModel.ServiceHost>       Nota speciale in caso di derivazione da questa classe C++ gestito:-inserire la pulizia codice in (On) (Begin) Close (e/o OnAbort), non in un distruttore.      -Consente di evitare i distruttori; provocano al compilatore di generare automaticamente <xref:System.IDisposable>.</xref:System.IDisposable>      -Evitare i membri non di riferimento. possono causare al compilatore di generare automaticamente <xref:System.IDisposable>.</xref:System.IDisposable>      -Consente di evitare i finalizzatori. ma se si include uno, è necessario annullare l&quot;avviso di compilazione e chiamare <xref:System.GC.SuppressFinalize%28System.Object%29>e il finalizzatore stesso mediante (On) (Begin) Close (e/o OnAbort) al fine di emulare ciò che sarebbe stata generata automaticamente <xref:System.IDisposable>comportamento.</xref:System.IDisposable> </xref:System.GC.SuppressFinalize%28System.Object%29>"
  example:
  - "This sample uses the <xref:System.ServiceModel.ServiceHost> class, which is derived from ServiceHostBase.  \n  \n [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_10_1.cs)]\n [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_10_1.vb)]"
  syntax:
    content: 'public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.IDisposable
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> classe."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#30](~/add/codesnippet/csharp/m-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: protected ServiceHostBase ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  id: AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge un indirizzo di base per l&quot;host del servizio."
  remarks: "Questa proprietà consente agli utenti di estendere <xref:System.ServiceModel.ServiceHostBase>per fornire l&quot;indirizzo di base dopo la creazione dell&quot;host.</xref:System.ServiceModel.ServiceHostBase> AddBaseAddress può essere utilizzato per aggiungere indirizzi di base a un host esistente, ma genera un&quot;eccezione se la descrizione è già inizializzata."
  syntax:
    content: protected void AddBaseAddress (Uri baseAddress);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: "Oggetto <xref:System.Uri>che contiene l&quot;indirizzo di base per i servizi ospitati nell&quot;host corrente.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <code> baseAddress </code> non può essere chiamato."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  id: AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge gli endpoint del servizio per tutti gli indirizzi di base in ogni contratto trovato nell&quot;host del servizio con l&quot;associazione predefinita."
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Raccolta di sola lettura di endpoint predefiniti."
  overload: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge l&quot;endpoint di servizio specificato al servizio ospitato."
  remarks: "Quando si utilizza il metodo, l&quot;host del servizio esegue una convalida di &quot;by-name-configurazione&quot; alla descrizione del contratto. In altre parole, l&quot;host verifica che <xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A>presente nell&quot;elenco di nomi di configurazione dei contratti di servizio implementati dal servizio.</xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> Se la convalida ha esito positivo, la descrizione nel <xref:System.ServiceModel.Description.ServiceEndpoint>viene utilizzato perché è, anche se il <xref:System.ServiceModel.Description.ContractDescription>riflesso il servizio è diverso.</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.ServiceEndpoint>       Ad esempio, si supponga che la descrizione in ServiceEndpoint e la descrizione del contratto riflessa dal servizio hanno lo stesso nome, ma i comportamenti dell&quot;operazione diverse. L&quot;implicazione di &quot;by-name-configurazione&quot; solo la convalida è che non vengono convalidati i comportamenti sono gli stessi che esistono uno degli aggiornamenti per una descrizione a causa di un&quot;altra descrizione.       Se il `address` è un URI relativo, uno degli indirizzi di base di <xref:System.ServiceModel.ServiceHost>(a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint.</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "L&quot;endpoint del servizio."
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Endpoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host non è presente in Created o in uno stato di apertura o è presente alcun <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>Address</code>, <code>Binding, </code> or <code>Contract</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge un endpoint del servizio al servizio ospitato con un contratto specificato, l&quot;associazione e indirizzo dell&quot;endpoint."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#40](~/add/codesnippet/csharp/edf6e090-b786-4010-8e21-_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "Il contratto implementato dall&quot;endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "Il <xref:System.ServiceModel.Channels.Binding>dell&quot;endpoint aggiunto.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "L&quot;indirizzo dell&quot;endpoint aggiunto. Può trattarsi di un URI assoluto o relativo. Se è un URI relativo, uno degli indirizzi di base del <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Il <xref:System.ServiceModel.Description.ServiceEndpoint>aggiunto al servizio ospitato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host non è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato oppure non esiste alcun <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato e pertanto non è possibile aggiungere un endpoint o l&quot;associazione non dispone di un trasporto dello schema di associazione.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge un endpoint del servizio al servizio ospitato con un contratto specificato, l&quot;associazione e un URI che contiene l&quot;indirizzo dell&quot;endpoint."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "Il contratto implementato dall&quot;endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "Il <xref:System.ServiceModel.Channels.Binding>dell&quot;endpoint aggiunto.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "Il <xref:System.Uri>che contiene l&quot;indirizzo dell&quot;endpoint aggiunto.</xref:System.Uri> Può trattarsi di un URI assoluto o relativo. Se è un URI relativo, uno degli indirizzi di base del <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Il <xref:System.ServiceModel.Description.ServiceEndpoint>aggiunto al servizio ospitato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host non è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato oppure non esiste alcun <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato e pertanto non è possibile aggiungere un endpoint.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge un endpoint del servizio al servizio ospitato con un contratto specificato, associazione, l&quot;indirizzo dell&quot;endpoint e URI che contiene l&quot;indirizzo su cui è in ascolto."
  remarks: "Se il `address` è un URI relativo, uno degli indirizzi di base di <xref:System.ServiceModel.ServiceHost>(a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint.</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "Il contratto implementato dall&quot;endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "Il <xref:System.ServiceModel.Channels.Binding>dell&quot;endpoint aggiunto.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "L&quot;indirizzo dell&quot;endpoint aggiunto. Questo indirizzo può essere un URI assoluto o relativo. Se è un URI relativo, uno degli indirizzi di base del <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint."
    - id: listenUri
      type: System.Uri
      description: "Il <xref:System.Uri>che contiene l&quot;indirizzo al quale l&quot;endpoint in ascolto dei messaggi in arrivo.</xref:System.Uri> Può trattarsi di un URI relativo o assoluto."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Il <xref:System.ServiceModel.Description.ServiceEndpoint>aggiunto al servizio ospitato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host non è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato oppure non esiste alcun <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato e pertanto non è possibile aggiungere un endpoint.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aggiunge un endpoint del servizio al servizio ospitato con il contratto specificato, l&quot;associazione e gli URI contenenti gli indirizzi endpoint e in ascolto."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "Il contratto implementato dall&quot;endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "Il <xref:System.ServiceModel.Channels.Binding>dell&quot;endpoint aggiunto.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "Il <xref:System.Uri>che contiene l&quot;indirizzo dell&quot;endpoint aggiunto.</xref:System.Uri> Se è un URI relativo, uno degli indirizzi di base del <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (a seconda del protocollo di associazione) viene utilizzato come indirizzo di base dell&quot;endpoint."
    - id: listenUri
      type: System.Uri
      description: "Il <xref:System.Uri>che contiene l&quot;indirizzo su cui l&quot;endpoint in ascolto dei messaggi in arrivo.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Il <xref:System.ServiceModel.Description.ServiceEndpoint>aggiunto al servizio ospitato.</xref:System.ServiceModel.Description.ServiceEndpoint> Può trattarsi di un URI assoluto o relativo."
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host non è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato oppure non esiste alcun <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato e pertanto non è possibile aggiungere un endpoint.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Carica le informazioni di descrizione del servizio dal file di configurazione e le applica al runtime che viene creato."
  syntax:
    content: protected virtual void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La descrizione del servizio ospitato è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authentication
  id: Authentication
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene il comportamento di autenticazione del servizio."
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthenticationBehavior
      description: "Il comportamento di autenticazione del servizio."
  overload: System.ServiceModel.ServiceHostBase.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authorization
  id: Authorization
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene il comportamento dell&quot;autorizzazione per il servizio ospitato."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#36](~/add/codesnippet/csharp/p-system.servicemodel.se_20_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthorizationBehavior
      description: "Il <xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref> per il servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.Authorization*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  id: BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene gli indirizzi di base utilizzati dal servizio ospitato."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> BaseAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "Oggetto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; di tipo <xref:System.Uri>che contiene gli indirizzi di base per il servizio ospitato.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.BaseAddresses*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  id: ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene la raccolta di ChannelDispatcher utilizzati dall&quot;host del servizio."
  syntax:
    content: public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }
    return:
      type: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
      description: "Il <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherCollection&quot;> </xref> che contiene i ChannelDispatcher utilizzati dall&quot;host del servizio."
  overload: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene o imposta l&quot;intervallo di tempo consentito per la chiusura dell&quot;host del servizio."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#33](~/add/codesnippet/csharp/p-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica l&quot;intervallo di tempo consentito per la chiusura dell&quot;host del servizio.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.CloseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore, espresso in millisecondi, è minore di zero o maggiore di <xref:System.Int32.MaxValue>(2.147.483.647 o, in notazione esadecimale, 0X7FFFFFFF).</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host si trova un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;host è già in un <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "L&quot;host si trova un <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Quando viene implementato in una classe derivata, crea la descrizione del servizio ospitato."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#41](~/add/codesnippet/csharp/08a56b4f-56f2-446f-b0f7-_1.cs)]'
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "Il &lt;xref:System.Collections.Generic.IDictionary%602&gt; che contiene il <xref:System.ServiceModel.Description.ContractDescription>oggetti per il servizio.</xref:System.ServiceModel.Description.ContractDescription>"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "Il <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Credentials
  id: Credentials
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene le credenziali per il servizio ospitato."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#37](~/add/codesnippet/csharp/p-system.servicemodel.se_11_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Credentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "Il <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> per il servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene l&quot;intervallo di tempo consentito per la chiusura dell&quot;host del servizio predefinito."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica l&quot;intervallo di tempo consentito per la chiusura dell&quot;host del servizio predefinito.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene l&quot;intervallo di tempo consentito per l&quot;apertura dell&quot;host del servizio predefinito."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#35](~/add/codesnippet/csharp/p-system.servicemodel.se_16_1.cs)]'
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica l&quot;intervallo di tempo consentito per l&quot;apertura dell&quot;host del servizio predefinito.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Description
  id: Description
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene la descrizione del servizio ospitato."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#38](~/add/codesnippet/csharp/p-system.servicemodel.se_3_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceDescription Description { get; }
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "Il <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> per il servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Extensions
  id: Extensions
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene le estensioni per l&quot;host del servizio specificato corrente."
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
      description: "Un &lt;xref:System.ServiceModel.IExtensionCollection%601&gt; di tipo <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>."
  overload: System.ServiceModel.ServiceHostBase.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  id: ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Recupera i contratti implementati dal servizio ospitato."
  syntax:
    content: protected System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> ImplementedContracts { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "Il &lt;xref:System.Collections.Generic.IDictionary%602&gt; che contiene il <xref:System.ServiceModel.Description.ContractDescription>oggetti per il servizio.</xref:System.ServiceModel.Description.ContractDescription>"
  overload: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Aumenta il limite sulla velocità di flusso dei messaggi al servizio ospitato da un incremento specificato."
  remarks: "Questo limite è possibile accedere tramite il <xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>proprietà.</xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>"
  example:
  - '[!code-cs[S_SelfHost#42](~/add/codesnippet/csharp/84777560-890d-4922-a9a5-_1.cs)]'
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: "Il numero di messaggi di cui aumentare il limite di controllo di flusso."
    return:
      type: System.Int32
      description: "Il nuovo limite dopo l&quot;aggiunta dell&quot;incremento."
  overload: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore è minore di zero."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Crea e inizializza l&quot;host del servizio con le descrizioni del contratto e del servizio."
  syntax:
    content: protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "Oggetto <xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> che contiene gli indirizzi di base per il servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.InitializeDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza il runtime per l&quot;host del servizio."
  syntax:
    content: protected virtual void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La descrizione del servizio ospitato è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  id: LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Carica l&quot;elemento del servizio dal file di configurazione del servizio ospitato."
  syntax:
    content: protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);
    parameters:
    - id: serviceSection
      type: System.ServiceModel.Configuration.ServiceElement
      description: "Il <xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref> deve essere caricata dalla configurazione."
  overload: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceSection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La descrizione del servizio ospitato è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene o imposta il limite di controllo di flusso per i messaggi ricevuti dal servizio ospitato."
  remarks: "È possibile incrementare questo limite utilizzando il <xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>metodo.</xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>"
  example:
  - '[!code-cs[S_SelfHost#39](~/add/codesnippet/csharp/p-system.servicemodel.se_10_1.cs)]'
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: "Il limite di controllo di flusso per i messaggi ricevuti dal servizio ospitato."
  overload: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore è minore di zero."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Interrompe il servizio."
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Avvia un&quot;operazione asincrona richiamata alla chiusura dell&quot;host del servizio."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di chiusura deve essere completata prima del timeout.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Il <xref:System.AsyncCallback>delegato che riceve la notifica del completamento di chiusura dell&quot;operazione asincrona.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto, specificato dall&quot;applicazione, che contiene informazioni sullo stato associate all&quot;operazione di chiusura asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento l&quot;operazione di chiusura asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Avvia un&quot;operazione asincrona richiamata all&quot;apertura dell&quot;host del servizio."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di apertura deve essere completata prima del timeout.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Il <xref:System.AsyncCallback>delegato che riceve la notifica del completamento di apertura dell&quot;operazione asincrona.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto, specificato dall&quot;applicazione, che contiene informazioni sullo stato associate all&quot;operazione di apertura asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento l&quot;operazione di apertura asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Chiude il servizio ospitato, compresi i ChannelDispatcher e i contesti di istanza associata e i listener."
  remarks: "Chiamare OnClose esegue le operazioni seguenti:-chiude tutti gli input per <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, con la chiusura anche i relativi <xref:System.ServiceModel.Channels.IChannelListener>istanze.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> Viene arrestata l&quot;accettazione di nuovi canali.      -Chiama <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>su tutti <xref:System.ServiceModel.InstanceContext>oggetti, interrompendo così l&quot;accettazione di nuovi messaggi.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>      -Attende che tutti <xref:System.ServiceModel.InstanceContext>oggetti per la chiusura, che si verifica quando i canali associati completano l&quot;invio di tutti i messaggi in sospeso.</xref:System.ServiceModel.InstanceContext>      -Chiude il <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>oggetti associati all&quot;host.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di chiusura deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Rilascia le risorse utilizzate dall&quot;host del servizio."
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Completa un&quot;operazione asincrona richiamata alla chiusura dell&quot;host del servizio."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>restituito da una chiamata al &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; metodo.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Completa un&quot;operazione asincrona richiamata all&quot;apertura dell&quot;host del servizio."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>restituito da una chiamata al &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; metodo.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Apre i ChannelDispatcher."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di apertura deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene le credenziali del servizio, il comportamento del servizio di autenticazione e autorizzazione per il servizio ospitato."
  remarks: "Una volta che questi comportamenti vengono inizializzati all&quot;apertura del servizio, non possono essere modificate."
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnOpened*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene o imposta l&quot;intervallo di tempo consentito per l&quot;apertura dell&quot;host del servizio."
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica l&quot;intervallo di tempo consentito per l&quot;apertura dell&quot;host del servizio.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OpenTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore è minore di zero o maggiore di <xref:System.Int32.MaxValue>(2.147.483.647 o, in notazione esadecimale, 0X7FFFFFFF).</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;host si trova un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;host è già in un <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "L&quot;host si trova un <xref:System.ServiceModel.CommunicationState>stato e non può essere modificato.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  id: ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Rilascia i contatori delle prestazioni dispatcher del canale e del servizio per il servizio ospitato."
  remarks: "Questo metodo viene richiamato quando la chiamata <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>e <xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>.</xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29> </xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>"
  syntax:
    content: protected void ReleasePerformanceCounters ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  id: SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Imposta l&quot;indirizzo dell&quot;endpoint dell&quot;endpoint specificato per l&quot;indirizzo specificato."
  syntax:
    content: public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "L&quot;endpoint del servizio."
    - id: relativeAddress
      type: System.String
      description: "L&quot;indirizzo dell&quot;endpoint."
  overload: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Chiude l&quot;host del servizio."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Si verifica quando viene ricevuto un messaggio sconosciuto."
  remarks: >-
    > [!WARNING]

    >  When using <xref:System.ServiceModel.WorkflowServiceHost>, exposing a hosting endpoint, and a UnknownMessageReceived exception is thrown, the host passes the message to the event handler. If an attempt is made to read this message an <xref:System.InvalidOperationException> is thrown. The description of the exception will say “This message cannot support the operation because it has been read.”  The WCF infrastructure reads the message while extracting the message parameters. This message is then passed to the event handler and any attempt to read it causes an exception. If you need to access message parameters in your <xref:System.InvalidOperationException> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] hosting endpoints see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.ServiceHostBase.#ctor
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ServiceEndpoint>
  nameWithType: ReadOnlyCollection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHostBase.Authentication
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
- uid: System.ServiceModel.Description.ServiceAuthenticationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthenticationBehavior
  nameWithType: ServiceAuthenticationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthenticationBehavior
- uid: System.ServiceModel.ServiceHostBase.Authorization
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherCollection
  nameWithType: ChannelDispatcherCollection
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.Credentials
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: true
  name: IExtensionCollection<ServiceHostBase>
  nameWithType: IExtensionCollection<ServiceHostBase>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.ServiceHostBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
- uid: System.ServiceModel.Configuration.ServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.#ctor*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase.ServiceHostBase
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress
  nameWithType: ServiceHostBase.AddBaseAddress
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints
  nameWithType: ServiceHostBase.AddDefaultEndpoints
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHostBase.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHostBase.ApplyConfiguration
- uid: System.ServiceModel.ServiceHostBase.Authentication*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
- uid: System.ServiceModel.ServiceHostBase.Authorization*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
- uid: System.ServiceModel.ServiceHostBase.CreateDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHostBase.CreateDescription
- uid: System.ServiceModel.ServiceHostBase.Credentials*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHostBase.InitializeDescription
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime
  nameWithType: ServiceHostBase.InitializeRuntime
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection
  nameWithType: ServiceHostBase.LoadConfigurationSection
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort
  nameWithType: ServiceHostBase.OnAbort
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose
  nameWithType: ServiceHostBase.OnBeginClose
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen
  nameWithType: ServiceHostBase.OnBeginOpen
- uid: System.ServiceModel.ServiceHostBase.OnClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose
  nameWithType: ServiceHostBase.OnClose
- uid: System.ServiceModel.ServiceHostBase.OnClosed*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHostBase.OnClosed
- uid: System.ServiceModel.ServiceHostBase.OnEndClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose
  nameWithType: ServiceHostBase.OnEndClose
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen
  nameWithType: ServiceHostBase.OnEndOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen
  nameWithType: ServiceHostBase.OnOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpened*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened
  nameWithType: ServiceHostBase.OnOpened
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters
  nameWithType: ServiceHostBase.ReleasePerformanceCounters
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress
  nameWithType: ServiceHostBase.SetEndpointAddress
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ServiceHostBase.System.IDisposable.Dispose
