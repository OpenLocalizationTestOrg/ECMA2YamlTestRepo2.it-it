### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionScope
  id: TransactionScope
  children:
  - System.Transactions.TransactionScope.#ctor
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.Complete
  - System.Transactions.TransactionScope.Dispose
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
  type: Class
  summary: "Rende transazionale un blocco di codice. Questa classe non può essere ereditata."
  remarks: "Il <xref:System.Transactions>infrastruttura offre un modello di programmazione esplicito basato sulla <xref:System.Transactions.Transaction>classe, nonché un modello di programmazione implicito mediante la classe TransactionScope, in cui le transazioni vengono gestite automaticamente dall&quot;infrastruttura.</xref:System.Transactions.Transaction> </xref:System.Transactions>      > [!IMPORTANT] > Si consiglia di creare transazioni implicite utilizzando la classe TransactionScope, in modo che il contesto di transazione di ambiente viene gestito automaticamente. È inoltre possibile utilizzare il TransactionScope e <xref:System.Transactions.DependentTransaction>classe per le applicazioni che richiedono l&quot;utilizzo della stessa transazione tra più chiamate di funzione o chiamate di più thread.</xref:System.Transactions.DependentTransaction> Per ulteriori informazioni su questo modello, vedere il [implementazione un implicita delle transazioni con ambito di transazione](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) argomento. Per ulteriori informazioni sulla scrittura di un&quot;applicazione transazionale, vedere [la scrittura di applicazioni transazionali A](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Al momento di creare un&quot;istanza di un TransactionScope dal `new` istruzione, il gestore delle transazioni determina la transazione a partecipare. Una volta deciso, l&quot;ambito partecipa sempre a tale transazione. La decisione si basa su due fattori: se una transazione di ambiente è presente e il valore della `TransactionScopeOption` parametro nel costruttore.  La transazione di ambiente è la transazione eseguita dal codice. È possibile ottenere un riferimento a questa transazione chiamando statica <xref:System.Transactions.Transaction.Current%2A>proprietà della <xref:System.Transactions.Transaction>classe.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.Current%2A> Per ulteriori informazioni sull&quot;utilizzo di questo parametro, vedere la sezione &quot;Gestione del flusso delle transazioni&quot; del [implementazione un implicita delle transazioni con ambito di transazione](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) argomento.       Se si verifica alcuna eccezione all&quot;interno dell&quot;ambito di transazione (, ovvero tra l&quot;inizializzazione di TransactionScope oggetto e la chiamata al relativo <xref:System.Transactions.TransactionScope.Dispose%2A>metodo), quindi la transazione di cui fa parte l&quot;ambito può continuare.</xref:System.Transactions.TransactionScope.Dispose%2A> Se si verifica un&quot;eccezione nell&quot;ambito della transazione, verrà eseguito il rollback della transazione di cui fa parte.       Quando l&quot;applicazione ha completato tutte le operazioni che si desidera eseguire in una transazione, è necessario chiamare il <xref:System.Transactions.TransactionScope.Complete%2A>metodo solo una volta per informare un gestore delle transazioni che può essere eseguito il commit della transazione.</xref:System.Transactions.TransactionScope.Complete%2A> Impossibile chiamare questo metodo interrompe la transazione.       Una chiamata al <xref:System.Transactions.TransactionScope.Dispose%2A>metodo contrassegna la fine dell&quot;ambito della transazione.</xref:System.Transactions.TransactionScope.Dispose%2A> Le eccezioni che si verificano dopo la chiamata di questo metodo non possono influenzare la transazione.       Se si modifica il valore di <xref:System.Transactions.Transaction.Current%2A>all&quot;interno di un ambito, viene generata un&quot;eccezione quando <xref:System.Transactions.TransactionScope.Dispose%2A>viene chiamato.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.Transactions.Transaction.Current%2A> Tuttavia, al termine dell&quot;ambito, viene ripristinato il valore precedente. Inoltre, se si chiama <xref:System.Transactions.TransactionScope.Dispose%2A>su <xref:System.Transactions.Transaction.Current%2A>all&quot;interno di un ambito di transazione che ha creato la transazione, la transazione si interrompe alla fine dell&quot;ambito.</xref:System.Transactions.Transaction.Current%2A> </xref:System.Transactions.TransactionScope.Dispose%2A>"
  example:
  - "The following example demonstrates how to use the TransactionScope class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/t-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/t-system.transactions.tr_0_1.cs)]"
  syntax:
    content: 'public sealed class TransactionScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe."
  remarks: "Questo costruttore crea un nuovo ambito della transazione con l&quot;opzione di ambito di transazione uguale a <xref:System.Transactions.TransactionScopeOption>.</xref:System.Transactions.TransactionScopeOption> Ciò significa che il nuovo ambito è necessaria una transazione e viene utilizzata la transazione di ambiente, se ne esiste già. In caso contrario, crea una nuova transazione prima di entrare nell&quot;ambito."
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "La transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con l&quot;opzione di flusso asincrono specificati."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  id: '#ctor(System.Transactions.TransactionScopeOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con i requisiti specificati."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "La transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>dopo che l&quot;ambito della transazione, timeout e interrompe la transazione.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "La transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con i requisiti e il valore di timeout specificato."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>dopo che l&quot;ambito della transazione, timeout e interrompe la transazione.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con i requisiti specificati."
  remarks: "Quando si utilizza il `transactionOptions` parametro per specificare un <xref:System.Transactions.IsolationLevel>e nell&quot;ambito viene creata una transazione in un secondo momento, la nuova transazione viene associata al livello di isolamento specificato.</xref:System.Transactions.IsolationLevel> Se viene passato un livello di isolamento con una transazione, la transazione deve disporre di un livello di isolamento identici o viene generata un&quot;eccezione."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Oggetto <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> struttura che descrive le opzioni di transazione da utilizzare se è stata creata una nuova transazione. Se viene utilizzata una transazione esistente, il valore di timeout in questo parametro si applica all&quot;ambito della transazione. Se il tempo scade prima che l&quot;ambito è stato eliminato, la transazione viene interrotta."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con i requisiti specificati e l&quot;opzione di flusso asincrono."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con il valore di timeout specificato e i requisiti di interoperabilità COM COM+ e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  remarks: '**Nota** questo metodo utilizza <xref:System.Security.Permissions.SecurityAction>per evitare che venga chiamato da codice non attendibile; tuttavia, solo il chiamante immediato è necessario disporre di `FullTrust` set di autorizzazioni.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "La transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>dopo che l&quot;ambito della transazione, timeout e interrompe la transazione.</xref:System.TimeSpan>"
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> enumerazione che descrive l&quot;interazione tra la transazione associata con transazioni in COM+."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "La transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all&quot;interno dell&quot;ambito."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>dopo che l&quot;ambito della transazione, timeout e interrompe la transazione.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con il valore di timeout specificato, i requisiti e opzione di flusso asincrono."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>dopo che l&quot;ambito della transazione, timeout e interrompe la transazione.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con l&quot;ambito specificato e i requisiti di interoperabilità COM+ e le opzioni di transazione."
  remarks: "Quando si utilizza il `transactionOptions` parametro per specificare un <xref:System.Transactions.IsolationLevel>e nell&quot;ambito viene creata una transazione in un secondo momento, la nuova transazione viene associata al livello di isolamento specificato.</xref:System.Transactions.IsolationLevel> Se viene passato un livello di isolamento con una transazione, la transazione deve disporre di un livello di isolamento identici o viene generata un&quot;eccezione.       **Nota** questo metodo utilizza <xref:System.Security.Permissions.SecurityAction>per evitare che venga chiamato da codice non attendibile; tuttavia, solo il chiamante immediato è necessario disporre di `FullTrust` set di autorizzazioni.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Oggetto <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> struttura che descrive le opzioni di transazione da utilizzare se è stata creata una nuova transazione. Se viene utilizzata una transazione esistente, il valore di timeout in questo parametro si applica all&quot;ambito della transazione. Se il tempo scade prima che l&quot;ambito è stato eliminato, la transazione viene interrotta."
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> enumerazione che descrive l&quot;interazione tra la transazione associata con transazioni in COM+."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Inizializza una nuova istanza di <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe con i requisiti specificati e l&quot;opzione di flusso asincrono."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumerazione che descrive i requisiti della transazione associati a questo ambito di transazione."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Oggetto <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> struttura che descrive le opzioni di transazione da utilizzare se è stata creata una nuova transazione. Se viene utilizzata una transazione esistente, il valore di timeout in questo parametro si applica all&quot;ambito della transazione. Se il tempo scade prima che l&quot;ambito è stato eliminato, la transazione viene interrotta."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Un&quot;istanza di <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumerazione che descrive se la transazione di ambiente associata all&quot;ambito di transazione trasmetterà tra le continuazioni thread quando si utilizza l&quot;attività o async/await async .NET modelli di programmazione."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Complete
  id: Complete
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Indica che tutte le operazioni all&quot;interno dell&quot;ambito completate."
  remarks: "Quando si è soddisfatti che tutte le operazioni all&quot;interno dell&quot;ambito completate correttamente, è necessario chiamare questo metodo solo una volta per informare la gestione transazioni che lo stato di tutte le risorse sia coerente e la transazione può essere eseguito il commit. È consigliabile inserire la chiamata come ultima istruzione nel `using` blocco.       Per ulteriori informazioni sull&quot;utilizzo di questo metodo, vedere il [implementazione un implicita delle transazioni con ambito di transazione](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) argomento.       Impossibile chiamare questo metodo interrompe la transazione, poiché il gestore delle transazioni viene interpretato come un errore di sistema o le eccezioni generate all&quot;interno dell&quot;ambito della transazione. Tuttavia, è necessario notare che questo metodo non garantisce l&quot;esecuzione del commit della transazione. È semplicemente un modo per informare il gestore delle transazioni le informazioni sullo stato. Dopo aver chiamato questo metodo, è non possibile accedere non è più la transazione di ambiente tramite il <xref:System.Transactions.Transaction.Current%2A>, proprietà e si tenta di eseguire i risultati in tal caso, viene generata un&quot;eccezione.</xref:System.Transactions.Transaction.Current%2A>       Si verifica l&quot;effettiva operazione di commit tra le risorse di `End Using` istruzione se il <xref:System.Transactions.TransactionScope>oggetto creato la transazione.</xref:System.Transactions.TransactionScope> Se non è stata creata la transazione, il commit viene eseguito ogni volta che <xref:System.Transactions.CommittableTransaction.Commit%2A>viene chiamato dal proprietario del <xref:System.Transactions.CommittableTransaction>oggetto.</xref:System.Transactions.CommittableTransaction> </xref:System.Transactions.CommittableTransaction.Commit%2A> A questo punto il gestore delle transazioni chiama la risorsa Gestioni e fornire le istruzioni per eseguire il commit o rollback, in base a se questo metodo è stato chiamato sul <xref:System.Transactions.TransactionScope>oggetto.</xref:System.Transactions.TransactionScope>"
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_1_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_1_1.cs)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.TransactionScope.Complete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo metodo è già stato chiamato una volta."
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Dispose
  id: Dispose
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Termina l&quot;ambito della transazione."
  remarks: "Chiamare questo metodo contrassegna la fine dell&quot;ambito della transazione. Se il <xref:System.Transactions.TransactionScope>oggetto creato la transazione e <xref:System.Transactions.TransactionScope.Complete%2A>nell&quot;ambito, è stato chiamato il <xref:System.Transactions.TransactionScope>oggetto tenta di eseguire il commit della transazione quando questo metodo viene chiamato.</xref:System.Transactions.TransactionScope> </xref:System.Transactions.TransactionScope.Complete%2A> </xref:System.Transactions.TransactionScope>       L&quot;utilizzo del linguaggio c# `using` costruzione assicura che questo metodo viene chiamato anche se si verifica un&quot;eccezione. Le eccezioni che si verificano dopo la chiamata di questo metodo non possono influenzare la transazione. Questo metodo anche Ripristina la transazione di ambiente e lo stato originale. Oggetto <xref:System.Transactions.TransactionAbortedException>viene generata se non viene effettivamente eseguito il commit della transazione.</xref:System.Transactions.TransactionAbortedException>       Questo metodo è sincrono e blocca fino a quando la transazione è stato eseguito il commit o interrotta. Per questo motivo, è necessario estremamente importante quando si utilizza questo metodo in un&quot;applicazione Windows Form (WinForm) oppure può verificarsi un deadlock. Se si chiama questo metodo all&quot;interno di un evento di controllo Windows Form (ad esempio, facendo clic su un pulsante) e utilizzare sincroni <xref:System.Windows.Forms.Control.Invoke%2A>metodo per indicare al controllo per eseguire alcune attività dell&quot;interfaccia utente (ad esempio, la modifica dei colori) durante l&quot;elaborazione della transazione, si verificherà un deadlock.</xref:System.Windows.Forms.Control.Invoke%2A> In questo modo il <xref:System.Windows.Forms.Control.Invoke%2A>metodo è sincrono e blocca il thread di lavoro finché il thread dell&quot;interfaccia utente non termina il processo.</xref:System.Windows.Forms.Control.Invoke%2A> Tuttavia, in questo scenario, il thread dell&quot;interfaccia utente è inoltre in attesa per il thread di lavoro eseguire il commit della transazione. Il risultato è che nessuno è in grado di procedere e l&quot;ambito per un periodo illimitato attende il completamento del Commit. È consigliabile utilizzare <xref:System.Windows.Forms.Control.BeginInvoke%2A>anziché <xref:System.Windows.Forms.Control.Invoke%2A>laddove possibile, perché è asincrona e pertanto meno soggetto a deadlock.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A>       Per ulteriori informazioni sull&quot;utilizzo di questo metodo, vedere il [implementazione un implicita delle transazioni con ambito di transazione](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) argomento."
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_0_1.cs)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.TransactionScope.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionScope.#ctor
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.Complete
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
- uid: System.Transactions.TransactionScope.Dispose
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
- uid: System.Transactions.TransactionScope.#ctor*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
- uid: System.Transactions.TransactionScope.Complete*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete
  nameWithType: TransactionScope.Complete
- uid: System.Transactions.TransactionScope.Dispose*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose
  nameWithType: TransactionScope.Dispose
