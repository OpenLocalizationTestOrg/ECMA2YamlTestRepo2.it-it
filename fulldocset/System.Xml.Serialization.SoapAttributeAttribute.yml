### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapAttributeAttribute
  id: SoapAttributeAttribute
  children:
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  - System.Xml.Serialization.SoapAttributeAttribute.DataType
  - System.Xml.Serialization.SoapAttributeAttribute.Namespace
  langs:
  - csharp
  name: "SoapAttributeAttribute"
  nameWithType: SoapAttributeAttribute
  fullName: System.Xml.Serialization.SoapAttributeAttribute
  type: Class
  summary: Specifies that the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; must serialize the class member as an encoded SOAP attribute.
  remarks: "The SoapAttributeAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, \"Simple Object Access Protocol (SOAP) 1.1\". For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](../Topic/Attributes%20That%20Control%20Encoded%20SOAP%20Serialization.md).  \n  \n To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  \n  \n Apply the SoapAttributeAttribute to a public field to specify that the <xref:System.Xml.Serialization.XmlSerializer> serializes the field as an XML attribute. You can specify an alternative name of the attribute by setting the <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> property. Set the <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> if the attribute must be given a specific XML Schema definition language (XSD) data type. If the attribute belongs to a specific XML namespace, set the <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A> property.  \n  \n For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md)  \n  \n> [!NOTE]\n>  You can use the word `SoapAttribute` in your code instead of the longer SoapAttributeAttribute."
  example:
  - "The following example serializes a class that contains several fields to which a SoapAttributeAttribute is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/CSharp/t-system.xml.serializati_15_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/VisualBasic/t-system.xml.serializati_15_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/CPP/t-system.xml.serializati_15_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapAttributeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: "SoapAttributeAttribute()"
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute"></see> class.
  remarks: Use this constructor to create a <xref:System.Xml.Serialization.SoapAttributeAttribute> when you override the serialization of a class member. Create the <xref:System.Xml.Serialization.SoapAttributeAttribute>, set its properties, and set the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> object. For more details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.
  example:
  - "The following example creates a new <xref:System.Xml.Serialization.SoapAttributeAttribute> that is used to override the serialization of a field. After creating a <xref:System.Xml.Serialization.SoapAttributeAttribute> and setting its properties, the object is set to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. The <xref:System.Xml.Serialization.SoapAttributes> is then added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cpp[SoapAttributeAttributeEx2#1](~/add/codesnippet/CPP/m-system.xml.serializati_10_1.cpp)]\n [!code-vb[SoapAttributeAttributeEx2#1](~/add/codesnippet/VisualBasic/m-system.xml.serializati_10_1.vb)]\n [!code-cs[SoapAttributeAttributeEx2#1](~/add/codesnippet/CSharp/m-system.xml.serializati_10_1.cs)]"
  syntax:
    content: public SoapAttributeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: "SoapAttributeAttribute(String)"
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute"></see> class using the specified value as the name of the XML attribute.
  remarks: ''
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/CSharp/m-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/VisualBasic/m-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/CPP/m-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public SoapAttributeAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "The name of the XML attribute."
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  id: AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: "AttributeName"
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the name of the XML attribute generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt;.
  remarks: Use the AttributeName property to specify an XML attribute name when the default value cannot be used. For example, if the XML attribute name is invalid as a member identifier, use a valid name for the identifier while setting the AttributeName to an invalid name.
  example:
  - "The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The AttributeName property is set for the `Today` field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/CSharp/p-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/VisualBasic/p-system.xml.serializati_0_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/CPP/p-system.xml.serializati_0_1.cpp)]"
  syntax:
    content: public string AttributeName { get; set; }
    return:
      type: System.String
      description: "The name of the XML attribute. The default is the member identifier."
  overload: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: "DataType"
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt;.
  remarks: "The following table lists the XML Schema simple data types with their.NET equivalents.  \n  \n For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.SoapAttributeAttribute> with the DataType set to \"base64Binary\" or \"hexBinary\", as appropriate. For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.SoapAttributeAttribute> with the DataType set to \"date\" or \"time\".  \n  \n For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.SoapAttributeAttribute> with its DataType property set to the XML Schema data type. Note that this does not change the serialization format, only the schema for the member.  \n  \n> [!NOTE]\n>  The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  \n  \n> [!NOTE]\n>  Passing binary data as an XML element is more efficient then passing it as an XML attribute.  \n  \n For more information about XML Schema data types, see the World Wide Consortium (www.w3.org) document named \"XML Schema Part 2: Datatypes\".  \n  \n|XSD data type|.NET data type|  \n|-------------------|--------------------|  \n|anyURI|<xref:System.String>|  \n|base64Binary|Array of <xref:System.Byte> objects|  \n|boolean|<xref:System.Boolean>|  \n|byte|<xref:System.SByte>|  \n|date|<xref:System.DateTime>|  \n|dateTime|<xref:System.DateTime>|  \n|decimal|<xref:System.Decimal>|  \n|double|<xref:System.Double>|  \n|ENTITY|<xref:System.String>|  \n|ENTITIES|<xref:System.String>|  \n|float|<xref:System.Single>|  \n|gDay|<xref:System.String>|  \n|gMonth|<xref:System.String>|  \n|gMonthDay|<xref:System.String>|  \n|gYear|<xref:System.String>|  \n|gYearMonth|<xref:System.String>|  \n|hexBinary|Array of <xref:System.Byte> objects|  \n|ID|<xref:System.String>|  \n|IDREF|<xref:System.String>|  \n|IDREFS|<xref:System.String>|  \n|int|<xref:System.Int32>|  \n|integer|<xref:System.String>|  \n|language|<xref:System.String>|  \n|long|<xref:System.Int64>|  \n|Name|<xref:System.String>|  \n|NCName|<xref:System.String>|  \n|negativeInteger|<xref:System.String>|  \n|NMTOKEN|<xref:System.String>|  \n|NMTOKENS|<xref:System.String>|  \n|normalizedString|<xref:System.String>|  \n|nonNegativeInteger|<xref:System.String>|  \n|nonPositiveInteger|<xref:System.String>|  \n|NOTATION|<xref:System.String>|  \n|positiveInteger|<xref:System.String>|  \n|QName|<xref:System.Xml.XmlQualifiedName>|  \n|duration|<xref:System.String>|  \n|string|<xref:System.String>|  \n|short|<xref:System.Int16>|  \n|time|<xref:System.DateTime>|  \n|token|<xref:System.String>|  \n|unsignedByte|<xref:System.Byte>|  \n|unsignedInt|<xref:System.UInt32>|  \n|unsignedLong|<xref:System.UInt64>|  \n|unsignedShort|<xref:System.UInt16>|"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The DataType property is set for the `GroupNumber` and the `Today` fields.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/CSharp/p-system.xml.serializati_31_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/VisualBasic/p-system.xml.serializati_31_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/CPP/p-system.xml.serializati_31_1.cpp)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: 'An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named &quot;XML Schema Part 2: Datatypes&quot;.'
  overload: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The XML Schema data type you have specified cannot be mapped to the .NET data type."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: "Namespace"
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the XML namespace of the XML attribute.
  remarks: "The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification \"Namespaces in XML\".  \n  \n To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document. The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>. When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name."
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The Namespace property is set for the `GroupName` the field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/CSharp/p-system.xml.serializati_28_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/VisualBasic/p-system.xml.serializati_28_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/CPP/p-system.xml.serializati_28_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "The XML namespace of the XML attribute."
  overload: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: "System.Attribute"
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "SoapAttributeAttribute()"
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "SoapAttributeAttribute(String)"
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "AttributeName"
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "DataType"
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "Namespace"
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "SoapAttributeAttribute"
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "AttributeName"
  nameWithType: SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "DataType"
  nameWithType: SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: "Namespace"
  nameWithType: SoapAttributeAttribute.Namespace
