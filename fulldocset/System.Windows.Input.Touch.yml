### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Touch
  id: Touch
  children:
  - System.Windows.Input.Touch.FrameReported
  langs:
  - csharp
  name: Touch
  nameWithType: Touch
  fullName: System.Windows.Input.Touch
  type: Class
  summary: "Fornisce un servizio a livello di applicazione che elabora l&quot;input multitocco dal sistema operativo e genera il <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> evento."
  remarks: "Il <xref:System.Windows.Input.Touch.FrameReported>evento è incluso in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] per supportare la compatibilità con Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Se non è necessario garantire la compatibilità con Silverlight, utilizzare gli eventi tocco, ad esempio <xref:System.Windows.UIElement.TouchDown>e <xref:System.Windows.UIElement.TouchMove>via <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, o <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       L&quot; <xref:System.Windows.Input.Touch.FrameReported>evento non utilizza lo stesso modello di eventi di altri eventi di input di WPF, ad esempio <xref:System.Windows.UIElement.TouchDown>e <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> </xref:System.Windows.Input.Touch.FrameReported> Anziché essere esposto come un evento specifico di elemento che potenzialmente indirizzata attraverso l&quot;albero degli oggetti di un&quot;interfaccia utente, il <xref:System.Windows.Input.Touch.FrameReported>tratta di un singolo evento che viene gestito a livello di applicazione.</xref:System.Windows.Input.Touch.FrameReported> Pertanto, è possibile utilizzare il `sender` parametro del gestore eventi per determinare quale elemento viene toccato.       Utilizzare il <xref:System.Windows.Input.TouchFrameEventArgs>per ottenere il <xref:System.Windows.Input.TouchPoint>valori rilevanti per l&quot;evento di tocco.</xref:System.Windows.Input.TouchPoint> </xref:System.Windows.Input.TouchFrameEventArgs> Dal <xref:System.Windows.Input.TouchPoint>, è possibile ottenere il <xref:System.Windows.Input.TouchPoint.Position%2A>del tocco e determinare se il <xref:System.Windows.Input.TouchAction>è stato un <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, o <xref:System.Windows.Input.TouchAction>azione.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> È inoltre possibile utilizzare <xref:System.Windows.Input.TouchPoint>per ottenere il <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Dal <xref:System.Windows.Input.TouchDevice>, è possibile determinare il dispositivo <xref:System.Windows.Input.TouchDevice.Id%2A>e ottenere informazioni sull&quot;elemento toccato.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen. Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches. This example requires a Windows Touch–compatible screen.  \n  \n The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.  \n  \n [!code-xml[TouchFrameSample#000](~/add/codesnippet/xaml/wpftouchframesample/mainwindow.xaml#000)]  \n  \n The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n [!code-vb[TouchFrameSample#100](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#100)]\n [!code-cs[TouchFrameSample#100](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#100)]"
  syntax:
    content: public static class Touch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Touch.FrameReported
  id: FrameReported
  parent: System.Windows.Input.Touch
  langs:
  - csharp
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Si verifica quando viene inviato un messaggio di tocco."
  remarks: "Un frame è uno di una serie di messaggi multitocco o punti di tocco. È possibile rispondere agli elementi gestendo l&quot;evento FrameReported e accedere ai dettagli del <xref:System.Windows.Input.TouchPoint>dal <xref:System.Windows.Input.TouchFrameEventArgs>dati dell&quot;evento.</xref:System.Windows.Input.TouchFrameEventArgs> </xref:System.Windows.Input.TouchPoint>       L&quot;evento FrameReported non utilizza lo stesso modello di eventi come altro [!INCLUDE[TLA#tla_titlewinclient](~/add/includes/tlasharptla-titlewinclient-md.md)] eventi di input, ad esempio <xref:System.Windows.UIElement.TouchDown>e <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> Anziché essere esposto come un evento specifico di elemento che potenzialmente indirizzata attraverso l&quot;albero degli oggetti di un&quot;interfaccia utente, l&quot;evento FrameReported è un singolo evento che viene gestito a livello di applicazione. Pertanto, è possibile utilizzare il `sender` parametro del gestore eventi per determinare quale elemento viene toccato."
  example:
  - "The following example handles the FrameReported event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: public static event System.Windows.Input.TouchFrameEventHandler FrameReported;
    return:
      type: System.Windows.Input.TouchFrameEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Touch.FrameReported
  parent: System.Windows.Input.Touch
  isExternal: false
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
- uid: System.Windows.Input.TouchFrameEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TouchFrameEventHandler
  nameWithType: TouchFrameEventHandler
  fullName: System.Windows.Input.TouchFrameEventHandler
