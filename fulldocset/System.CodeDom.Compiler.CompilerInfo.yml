### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerInfo
  id: CompilerInfo
  children:
  - System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  - System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider
  - System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  - System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  - System.CodeDom.Compiler.CompilerInfo.GetExtensions
  - System.CodeDom.Compiler.CompilerInfo.GetHashCode
  - System.CodeDom.Compiler.CompilerInfo.GetLanguages
  - System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  langs:
  - csharp
  name: CompilerInfo
  nameWithType: CompilerInfo
  fullName: System.CodeDom.Compiler.CompilerInfo
  type: Class
  summary: "Rappresenta le impostazioni di configurazione di un provider del linguaggio. Questa classe non può essere ereditata."
  remarks: "Use the CompilerInfo class to determine whether a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation is configured on the computer, or to examine the configuration and compiler settings for a specific language provider.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings. Each configured language provider has a corresponding compiler configuration element. Each element defines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation type, supported language names, supported file name extensions, and compiler parameters.  \n  \n The .NET Framework defines the initial compiler settings in the machine configuration file. Developers and compiler vendors can add configuration settings for a new <xref:System.CodeDom.Compiler.CodeDomProvider> implementation.  \n  \n The CompilerInfo class provides read-only access to these settings in the machine configuration file. Use the <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, and <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> members to examine the corresponding configuration attributes for a language provider. Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method to obtain the compiler options and warning level attribute values for a language provider.  \n  \n For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For details about link demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example displays language provider configuration settings. Command-line arguments are used to specify a language, file name extension, or provider type. For the given input, the example determines the corresponding language provider and displays the configured language compiler settings.  \n  \n [!code-cpp[CodeDom_CompilerInfo#1](~/add/codesnippet/cpp/t-system.codedom.compile_6_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_6_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#1](~/add/codesnippet/csharp/t-system.codedom.compile_6_1.cs)]"
  syntax:
    content: public sealed class CompilerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  id: CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene il tipo di configurato <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> implementazione."
  remarks: "File di configurazione del computer contiene il nome completo del tipo per ogni <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione nel computer.</xref:System.CodeDom.Compiler.CodeDomProvider> Il valore della proprietà CodeDomProviderType un <xref:System.Type>istanza che rappresenta un&quot;implementazione del provider di lingua configurate.</xref:System.Type>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public Type CodeDomProviderType { get; }
    return:
      type: System.Type
      description: "Sola lettura <xref:System.Type>istanza che rappresenta il tipo di provider di lingua configurate.</xref:System.Type>"
  overload: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "Il provider del linguaggio non è configurato in questo computer."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Impossibile trovare il tipo perché è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota.       - oppure - Impossibile trovare il tipo perché il nome per il <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> Impossibile trovare nel file di configurazione."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  id: CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene le impostazioni del compilatore configurato per l&quot;implementazione del provider del linguaggio."
  remarks: "Use the CreateDefaultCompilerParameters method to examine the compiler settings of the <xref:System.CodeDom.Compiler.CompilerInfo> instances returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> methods.  \n  \n The [\\&lt;system.codedom\\&gt; Element](../Topic/%3Csystem.codedom%3E%20Element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. Each language provider configuration element can contain optional `compilerOptions` and `warningLevel` attributes. These attributes define the default values for the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> and <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> properties.  \n  \n If the language provider configuration element does not define the `compilerOptions` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=fullName> property value is an empty string (\"\"). If the language provider configuration element does not define the `warningLevel` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=fullName> property value is –1."
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/m-system.codedom.compile_0_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/m-system.codedom.compile_0_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/m-system.codedom.compile_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Sola lettura <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> istanza che contiene le opzioni del compilatore e le impostazioni configurate per il provider del linguaggio."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  id: CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce un <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> istanza per le impostazioni del provider del linguaggio corrente."
  remarks: "Il metodo CreateProvider restituisce un <xref:System.CodeDom.Compiler.CodeDomProvider>istanza per le impostazioni del provider del linguaggio corrente.</xref:System.CodeDom.Compiler.CodeDomProvider>       Utilizzare il metodo CreateProvider per ottenere un <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione per un <xref:System.CodeDom.Compiler.CompilerInfo>istanza restituita dal <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>o <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>metodo.</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_3_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_3_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_3_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();
    parameters: []
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Un provider di CodeDOM associato alla configurazione del provider del linguaggio."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  id: CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce un <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> istanza per le impostazioni correnti di provider e le opzioni specificate."
  remarks: "Il metodo CreateProvider restituisce un <xref:System.CodeDom.Compiler.CodeDomProvider>istanza per le impostazioni correnti di provider e le opzioni del provider specificato.</xref:System.CodeDom.Compiler.CodeDomProvider> Per informazioni sulle opzioni del provider supportati, vedere la documentazione specifica del provider CodeDOM.       Utilizzare il metodo CreateProvider per ottenere un <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione per un <xref:System.CodeDom.Compiler.CompilerInfo>istanza restituita dal <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName>o <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName>metodo.</xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo> </xref:System.CodeDom.Compiler.CodeDomProvider>"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary<string,string> providerOptions);
    parameters:
    - id: providerOptions
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Raccolta di opzioni del provider dal file di configurazione."
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Un provider CodeDOM associato alla configurazione del provider del linguaggio e opzioni specificate."
  overload: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerOptions </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider non supporta opzioni."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Determina se l&quot;oggetto specificato rappresenta le stesse lingue del compilatore e del provider di impostazioni corrente <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>."
  remarks: "Questo metodo esegue l&quot;override di <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>metodo.</xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>       Le due istanze sono considerate uguali se i valori delle proprietà seguenti: - il <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>proprietà.</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>      -La <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, e <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>le proprietà del <xref:System.CodeDom.Compiler.CompilerParameters>istanza restituita dal <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A>metodo.</xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> </xref:System.CodeDom.Compiler.CompilerParameters> </xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> </xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> </xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> o </code> è un <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref> oggetto e il relativo valore è lo stesso di questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  id: GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce il file di estensioni supportate dal provider del linguaggio."
  remarks: "Il [ \\&lt;system.codedom\\&gt; Elemento](../Topic/%3Csystem.codedom%3E%20Element.md) nella configurazione del computer contenente le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione nel computer.</xref:System.CodeDom.Compiler.CodeDomProvider> Ogni provider configurato supporta uno o più estensioni di file. Ad esempio, un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>potrebbe supportare le estensioni di nome file &quot;cs&quot; e &quot;c#&quot;.</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_7_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_7_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_7_1.cs)]"
  syntax:
    content: public string[] GetExtensions ();
    parameters: []
    return:
      type: System.String[]
      description: "Matrice di estensioni di file supportati dal provider del linguaggio."
  overload: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  id: GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce il codice hash per l&quot;istanza corrente."
  remarks: "Questo metodo esegue l&quot;override di <xref:System.Object.GetHashCode%2A?displayProperty=fullName>metodo.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Questo metodo genera lo stesso codice hash per due oggetti uguali in base al <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>metodo.</xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>"
  example:
  - "The following code example creates an instance of the <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> class. The example displays the provider name, hash code, and default file name extension for the new provider instance. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#3](~/add/codesnippet/cpp/m-system.codedom.compile_5_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#3](~/add/codesnippet/visualbasic/m-system.codedom.compile_5_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#3](~/add/codesnippet/csharp/m-system.codedom.compile_5_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Un codice hash di intero con segno a 32 bit per l&quot;oggetto corrente <xref href=&quot;System.CodeDom.Compiler.CompilerInfo&quot;> </xref> istanza, adatto per l&quot;uso in algoritmi hash e dati strutture, ad esempio una tabella hash."
  overload: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  id: GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Ottiene i nomi di linguaggio supportati dal provider del linguaggio."
  remarks: "Il [ \\&lt;system.codedom\\&gt; Elemento](../Topic/%3Csystem.codedom%3E%20Element.md) nella configurazione del computer contenente le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione nel computer.</xref:System.CodeDom.Compiler.CodeDomProvider> Ogni provider configurato supporta uno o più nomi di linguaggio. Ad esempio, il <xref:System.CodeDom.Compiler.CompilerInfo>dell&quot;oggetto per un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName>potrebbe restituire una matrice con il linguaggio nomi &quot;c#&quot;, &quot;cs&quot; e &quot;csharp&quot;.</xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=fullName> </xref:System.CodeDom.Compiler.CompilerInfo>"
  example:
  - "The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#8](~/add/codesnippet/cpp/m-system.codedom.compile_9_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#8](~/add/codesnippet/visualbasic/m-system.codedom.compile_9_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#8](~/add/codesnippet/csharp/m-system.codedom.compile_9_1.cs)]"
  syntax:
    content: public string[] GetLanguages ();
    parameters: []
    return:
      type: System.String[]
      description: "Matrice di nomi dei linguaggi supportati dal provider del linguaggio."
  overload: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  id: IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  langs:
  - csharp
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Restituisce un valore che indica se l&quot;implementazione del provider del linguaggio è configurato nel computer."
  remarks: "Utilizzare la proprietà IsCodeDomProviderTypeValid per controllare il <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione prima di accedere ai metodi o le proprietà del provider.</xref:System.CodeDom.Compiler.CodeDomProvider> Ad esempio, dopo che ottenere la lingua di impostazioni del provider dal <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>metodo, utilizzare la proprietà IsCodeDomProviderTypeValid per verificare l&quot;implementazione del tipo di provider prima di chiamare il <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A>metodo o utilizzando il <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>proprietà.</xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> </xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>"
  example:
  - "The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer. If there is a provider configured for the specified language, the example displays the language provider configuration settings. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.  \n  \n [!code-cpp[CodeDom_CompilerInfo#7](~/add/codesnippet/cpp/p-system.codedom.compile_12_1.cpp)]\n [!code-vb[CodeDom_CompilerInfo#7](~/add/codesnippet/visualbasic/p-system.codedom.compile_12_1.vb)]\n [!code-cs[CodeDom_CompilerInfo#7](~/add/codesnippet/csharp/p-system.codedom.compile_12_1.cs)]"
  syntax:
    content: public bool IsCodeDomProviderTypeValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tipo di implementazione del provider del linguaggio è configurato nel computer. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
  fullName: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters()
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider()
  nameWithType: CompilerInfo.CreateProvider()
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider()
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider(IDictionary<String,String>)
  nameWithType: CompilerInfo.CreateProvider(IDictionary<String,String>)
  fullName: System.CodeDom.Compiler.CompilerInfo.CreateProvider(IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: CompilerInfo.Equals(Object)
  fullName: System.CodeDom.Compiler.CompilerInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions()
  nameWithType: CompilerInfo.GetExtensions()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetExtensions()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: CompilerInfo.GetHashCode()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages()
  nameWithType: CompilerInfo.GetLanguages()
  fullName: System.CodeDom.Compiler.CompilerInfo.GetLanguages()
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
  fullName: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid
- uid: System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CodeDomProviderType
  nameWithType: CompilerInfo.CodeDomProviderType
- uid: System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateDefaultCompilerParameters
  nameWithType: CompilerInfo.CreateDefaultCompilerParameters
- uid: System.CodeDom.Compiler.CompilerInfo.CreateProvider*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: CreateProvider
  nameWithType: CompilerInfo.CreateProvider
- uid: System.CodeDom.Compiler.CompilerInfo.Equals*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: Equals
  nameWithType: CompilerInfo.Equals
- uid: System.CodeDom.Compiler.CompilerInfo.GetExtensions*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetExtensions
  nameWithType: CompilerInfo.GetExtensions
- uid: System.CodeDom.Compiler.CompilerInfo.GetHashCode*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetHashCode
  nameWithType: CompilerInfo.GetHashCode
- uid: System.CodeDom.Compiler.CompilerInfo.GetLanguages*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: GetLanguages
  nameWithType: CompilerInfo.GetLanguages
- uid: System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid*
  parent: System.CodeDom.Compiler.CompilerInfo
  isExternal: false
  name: IsCodeDomProviderTypeValid
  nameWithType: CompilerInfo.IsCodeDomProviderTypeValid
