### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Menu
  id: Menu
  children:
  - System.Web.UI.WebControls.Menu.#ctor
  - System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Menu.Controls
  - System.Web.UI.WebControls.Menu.CreateChildControls
  - System.Web.UI.WebControls.Menu.DataBind
  - System.Web.UI.WebControls.Menu.DataBindings
  - System.Web.UI.WebControls.Menu.DisappearAfter
  - System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl
  - System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage
  - System.Web.UI.WebControls.Menu.DynamicHorizontalOffset
  - System.Web.UI.WebControls.Menu.DynamicHoverStyle
  - System.Web.UI.WebControls.Menu.DynamicItemFormatString
  - System.Web.UI.WebControls.Menu.DynamicItemTemplate
  - System.Web.UI.WebControls.Menu.DynamicMenuItemStyle
  - System.Web.UI.WebControls.Menu.DynamicMenuStyle
  - System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString
  - System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl
  - System.Web.UI.WebControls.Menu.DynamicSelectedStyle
  - System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl
  - System.Web.UI.WebControls.Menu.DynamicVerticalOffset
  - System.Web.UI.WebControls.Menu.EnsureDataBound
  - System.Web.UI.WebControls.Menu.FindItem(System.String)
  - System.Web.UI.WebControls.Menu.GetDesignModeState
  - System.Web.UI.WebControls.Menu.IncludeStyleBlock
  - System.Web.UI.WebControls.Menu.Items
  - System.Web.UI.WebControls.Menu.ItemWrap
  - System.Web.UI.WebControls.Menu.LevelMenuItemStyles
  - System.Web.UI.WebControls.Menu.LevelSelectedStyles
  - System.Web.UI.WebControls.Menu.LevelSubMenuStyles
  - System.Web.UI.WebControls.Menu.LoadControlState(System.Object)
  - System.Web.UI.WebControls.Menu.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels
  - System.Web.UI.WebControls.Menu.MenuItemClick
  - System.Web.UI.WebControls.Menu.MenuItemClickCommandName
  - System.Web.UI.WebControls.Menu.MenuItemDataBound
  - System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)
  - System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)
  - System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Menu.Orientation
  - System.Web.UI.WebControls.Menu.PathSeparator
  - System.Web.UI.WebControls.Menu.PerformDataBinding
  - System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Menu.RenderingMode
  - System.Web.UI.WebControls.Menu.SaveControlState
  - System.Web.UI.WebControls.Menu.SaveViewState
  - System.Web.UI.WebControls.Menu.ScrollDownImageUrl
  - System.Web.UI.WebControls.Menu.ScrollDownText
  - System.Web.UI.WebControls.Menu.ScrollUpImageUrl
  - System.Web.UI.WebControls.Menu.ScrollUpText
  - System.Web.UI.WebControls.Menu.SelectedItem
  - System.Web.UI.WebControls.Menu.SelectedValue
  - System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)
  - System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)
  - System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)
  - System.Web.UI.WebControls.Menu.SkipLinkText
  - System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl
  - System.Web.UI.WebControls.Menu.StaticDisplayLevels
  - System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage
  - System.Web.UI.WebControls.Menu.StaticHoverStyle
  - System.Web.UI.WebControls.Menu.StaticItemFormatString
  - System.Web.UI.WebControls.Menu.StaticItemTemplate
  - System.Web.UI.WebControls.Menu.StaticMenuItemStyle
  - System.Web.UI.WebControls.Menu.StaticMenuStyle
  - System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString
  - System.Web.UI.WebControls.Menu.StaticPopOutImageUrl
  - System.Web.UI.WebControls.Menu.StaticSelectedStyle
  - System.Web.UI.WebControls.Menu.StaticSubMenuIndent
  - System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl
  - System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Menu.TagKey
  - System.Web.UI.WebControls.Menu.Target
  - System.Web.UI.WebControls.Menu.TrackViewState
  langs:
  - csharp
  name: "Menu"
  nameWithType: Menu
  fullName: System.Web.UI.WebControls.Menu
  type: Class
  summary: Displays a menu in an ASP.NET Web page.
  remarks: "In this topic:  \n  \n-   [Introduction](#introduction)  \n  \n-   [Menu Items](#menu_items)  \n  \n-   [Static Data](#static_data)  \n  \n-   [Binding to Data](#binding_to_data)  \n  \n-   [Customizing the User Interface](#customizing_the_user_interface)  \n  \n-   [Events](#events)  \n  \n-   [Accessibility](#accessibility)  \n  \n-   [Declarative Syntax](#declarative_syntax)  \n  \n<a name=\"introduction\"></a>   \n## Introduction  \n The Menu control is used to display a menu in an ASP.NET Web page and is often used in combination with a <xref:System.Web.UI.WebControls.SiteMapDataSource> control for navigating a Web site. The Menu control supports the following features:  \n  \n-   Data binding that allows the control's menu items to be bound to hierarchal data sources.  \n  \n-   Site navigation through integration with the <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  \n  \n-   Programmatic access to the Menu object model to dynamically create menus, populate menu items, set properties, and so on.  \n  \n-   Customizable appearance through themes, user-defined images, styles, and user-defined templates.  \n  \n When the user clicks a menu item, the Menu control can either navigate to a linked Web page or simply post back to the server. If the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property of a menu item is set, the Menu control navigates to the linked page; otherwise, it posts the page back to the server for processing. By default, a linked page is displayed in the same window or frame as the Menu control. To display the linked content in a different window or frame, use the <xref:System.Web.UI.WebControls.Menu.Target%2A> property of the Menu control.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.Menu.Target%2A> property affects every menu item in the control. To specify a window or frame for an individual menu item, set the <xref:System.Web.UI.WebControls.MenuItem.Target%2A> property of the <xref:System.Web.UI.WebControls.MenuItem> object directly.  \n  \n The Menu control displays two types of menus: a static menu and a dynamic menu. The static menu is always displayed in a Menu control. By default, the menu items at the root level (level 0) are displayed in the static menu. You can display additional menu levels (static submenus) within the static menu by setting the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property. Menu items (if any) with a higher level than the value specified by the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property are displayed in a dynamic menu. A dynamic menu appears only when the user positions the mouse pointer over the parent menu item that contains a dynamic submenu. Dynamic menus automatically disappear after a certain duration. Use the <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> property to specify the duration.  \n  \n> [!NOTE]\n>  A dynamic menu also disappears when the user clicks outside of the menu.  \n  \n You can also limit the number of levels displayed in a dynamic menu by setting the <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> property. Menu levels higher than the specified value are discarded.  \n  \n> [!NOTE]\n>  The Menu control is not designed to be used inside an <xref:System.Web.UI.UpdatePanel> control. You can add the Menu control only to a page outside an <xref:System.Web.UI.UpdatePanel> control. <xref:System.Web.UI.UpdatePanel> controls are used to update selected regions of a page instead of updating the whole page with a postback. For more information, see [UpdatePanel Control Overview](../Topic/UpdatePanel%20Control%20Overview.md) and [Partial-Page Rendering Overview](../Topic/Partial-Page%20Rendering%20Overview.md).  \n  \n<a name=\"menu_items\"></a>   \n## Menu Items  \n A Menu control is made up of a tree of menu items represented by <xref:System.Web.UI.WebControls.MenuItem> objects. Menu items at the top level (level 0) are called root menu items. A menu item that has a parent menu item is called a child menu item. All root menu items are stored in the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection. Child menu items are stored in a parent menu item's <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collection.  \n  \n Each menu item has a <xref:System.Web.UI.WebControls.MenuItem.Text%2A> and a <xref:System.Web.UI.WebControls.MenuItem.Value%2A> property. The value of the <xref:System.Web.UI.WebControls.MenuItem.Text%2A> property is displayed in the Menu control, while the <xref:System.Web.UI.WebControls.MenuItem.Value%2A> property is used to store any additional data about the menu item, such as data passed to the postback event associated with the menu item. When clicked, a menu item can navigate to another Web page indicated by the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property.  \n  \n> [!NOTE]\n>  If the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property is not set for a menu item, the Menu control simply submits the page to the server for processing when the menu item is clicked.  \n  \n You can also optionally display an image in a menu item by setting the <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> property.  \n  \n For more information on menu items, see <xref:System.Web.UI.WebControls.MenuItem>.  \n  \n<a name=\"static_data\"></a>   \n## Static Data  \n The simplest data model of the Menu control is static menu items. To display static menu items using declarative syntax, first nest opening and closing `<Items>` tags between the opening and closing tags of the Menu control. Next, create the menu structure by nesting `<asp:MenuItem>` elements between the opening and closing `<Items>` tags. Each `<asp:MenuItem>` element represents a menu item in the control and maps to a <xref:System.Web.UI.WebControls.MenuItem> object. You can set the properties of each menu item by setting the attributes of its `<asp:MenuItem>` element. To create submenu items, nest additional `<asp:MenuItem>` elements between the opening and closing `<asp:MenuItem>` tags of the parent menu item.  \n  \n<a name=\"binding_to_data\"></a>   \n## Binding to Data  \n The Menu control can use any hierarchal data source control, such as an <xref:System.Web.UI.WebControls.XmlDataSource> control or a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. To bind to a hierarchal data source control, set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the Menu control to the <xref:System.Web.UI.Control.ID%2A> value of the data source control. The Menu control automatically binds to the specified data source control. This is the preferred method to bind to data.  \n  \n When binding to a data source where each data item contains multiple properties (such as an XML element with several attributes), a menu item displays the value returned by the `ToString` method of the data item by default. In the case of an XML element, the menu item displays the element name, which shows the underlying structure of the menu tree but is not very useful otherwise. You can bind a menu item to a specific data item property by using the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection to specify menu item bindings. The <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection contains <xref:System.Web.UI.WebControls.MenuItemBinding> objects that define the relationship between a data item and the menu item it is binding to. You can specify the criteria for binding and the data item property to display in the node. For more information on menu item bindings, see <xref:System.Web.UI.WebControls.MenuItemBinding>.  \n  \n You cannot create empty nodes in a Menu control by setting the <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> or <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> properties to the empty string (\"\"). Setting these properties to the empty string has the same effect as not setting the properties. In that case, the Menu control creates a default binding using the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property. For more information, see [Binding to Databases](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  \n  \n<a name=\"customizing_the_user_interface\"></a>   \n## Customizing the User Interface  \n There are many ways to customize the appearance of the Menu control. First, you can specify whether the Menu control is rendered horizontally or vertically by setting the <xref:System.Web.UI.WebControls.Menu.Orientation%2A> property. You can also specify a different style (such as font size and color) for each of the menu item types.  \n  \n If you use cascading style sheets (CSS) to customize the appearance of the control, use either inline styles or a separate CSS file, but not both. Using both inline styles and a separate CSS file could cause unexpected results. For more information on using style sheets with controls, see [Web Server Controls and CSS Styles](../Topic/ASP.NET%20Web%20Server%20Controls%20and%20CSS%20Styles.md).  \n  \n The following table lists the available menu item styles.  \n  \n|Menu item style property|Description|  \n|------------------------------|-----------------|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|The style settings for a dynamic menu item when the mouse pointer is positioned over it.|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|The style settings for an individual dynamic menu item.|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|The style settings for a dynamic menu.|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|The style settings for the currently selected dynamic menu item.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|The style settings for a static menu item when the mouse pointer is positioned over it.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|The style settings for an individual static menu item.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|The style settings for a static menu.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|The style settings for the currently selected static menu item.|  \n  \n Instead of setting the individual style properties, you can specify styles that are applied to menu items based on their level by using the following style collections.  \n  \n|Level style collections|Description|  \n|-----------------------------|-----------------|  \n|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|A collection of <xref:System.Web.UI.WebControls.MenuItemStyle> objects that control the style of the menu items on a level basis.|  \n|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|A collection of <xref:System.Web.UI.WebControls.MenuItemStyle> objects that control the style of selected menu items on a level basis.|  \n|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|A collection of <xref:System.Web.UI.WebControls.MenuItemStyle> objects that control the style of the submenu items on a level basis.|  \n  \n The first style in the collection corresponds to the style of the menu items at the first depth level in the menu tree. The second style in the collection corresponds to the style of the menu items at the second depth level in the menu tree, and so on. This is most often used to generate table of contents-style navigation menus where menu items at a certain depth should have the same appearance, regardless of whether they have submenus.  \n  \n> [!NOTE]\n>  If you use any of the level style collections listed in the previous table to define the style for the Menu control, these style settings override the individual menu item style properties.  \n  \n Another way to alter the appearance of the control is to customize the images displayed in the Menu control. You can specify your own custom image for the different parts of the control by setting the properties shown in the following table.  \n  \n|Image property|Description|  \n|--------------------|-----------------|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|An optional image displayed at the bottom of a dynamic menu item to separate it from other menu items.|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|An optional image displayed in a dynamic menu item to indicate that it has a submenu.|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|An optional image displayed at the top of a dynamic menu item to separate it from other menu items.|  \n|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|The image displayed at the bottom of a menu item to indicate that the user can scroll down to view additional menu items.|  \n|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|The image displayed at the top of a menu item to indicate that the user can scroll up to view additional menu items.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|An optional image displayed at the bottom of a static menu item to separate it from other menu items.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|An optional image displayed in a static menu item to indicate that it has a submenu.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|An optional image displayed at the top of a static menu item to separate it from other menu items.|  \n  \n For complete control of the user interface (UI), you can define your own custom templates for the Menu control using the following template properties.  \n  \n|Template property|Description|  \n|-----------------------|-----------------|  \n|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|The template that contains the custom content to render for a dynamic menu item.|  \n|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|The template that contains the custom content to render for a static menu item.|  \n  \n You can control the vertical and horizontal position of a dynamic menu relative to its parent menu item by setting the <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> and <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> properties, respectively. To control the indentation of the static submenu items within a static menu, use the <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> property.  \n  \n<a name=\"events\"></a>   \n## Events  \n The Menu control provides several events that you can program against. This allows you to run a custom routine whenever an event occurs. The following table lists the supported events.  \n  \n|Event|Description|  \n|-----------|-----------------|  \n|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Occurs when a menu item is clicked. This event is commonly used to synchronize a Menu control with another control on the page.|  \n|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Occurs when a menu item is bound to data. This event is commonly used to modify a menu item before it is rendered in a Menu control.|  \n  \n<a name=\"accessibility\"></a>   \n## Accessibility  \n For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](../Topic/Accessibility%20in%20Visual%20Studio%20and%20ASP.NET.md) and [ASP.NET Controls and Accessibility](../Topic/ASP.NET%20Controls%20and%20Accessibility.md).  \n  \n<a name=\"declarative_syntax\"></a>   \n## Declarative Syntax  \n  \n```  \n<asp:Menu  \n    AccessKey=\"string\"  \n    BackColor=\"color name|#dddddd\"  \n    BorderColor=\"color name|#dddddd\"  \n    BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  \n        Inset|Outset\"  \n    BorderWidth=\"size\"  \n    CssClass=\"string\"  \n    DataSource=\"string\"  \n    DataSourceID=\"string\"  \n    DisappearAfter=\"integer\"  \n    DynamicBottomSeparatorImageUrl=\"uri\"  \n    DynamicEnableDefaultPopOutImage=\"True|False\"  \n    DynamicHorizontalOffset=\"integer\"  \n    DynamicItemFormatString=\"string\"  \n    DynamicPopOutImageTextFormatString=\"string\"  \n    DynamicPopOutImageUrl=\"uri\"  \n    DynamicTopSeparatorImageUrl=\"uri\"  \n    DynamicVerticalOffset=\"integer\"  \n    Enabled=\"True|False\"  \n    EnableTheming=\"True|False\"  \n    EnableViewState=\"True|False\"  \n    Font-Bold=\"True|False\"  \n    Font-Italic=\"True|False\"  \n    Font-Names=\"string\"  \n    Font-Overline=\"True|False\"  \n    Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \n        Large|X-Large|XX-Large\"  \n    Font-Strikeout=\"True|False\"  \n    Font-Underline=\"True|False\"  \n    ForeColor=\"color name|#dddddd\"  \n    Height=\"size\"  \n    ID=\"string\"  \n    ItemWrap=\"True|False\"  \n    MaximumDynamicDisplayLevels=\"integer\"  \n    OnDataBinding=\"DataBinding event handler\"  \n    OnDataBound=\"DataBound event handler\"  \n    OnDisposed=\"Disposed event handler\"  \n    OnInit=\"Init event handler\"  \n    OnLoad=\"Load event handler\"  \n    OnMenuItemClick=\"MenuItemClick event handler\"  \n    OnMenuItemDataBound=\"MenuItemDataBound event handler\"  \n    OnPreRender=\"PreRender event handler\"  \n    OnUnload=\"Unload event handler\"  \n    Orientation=\"Horizontal|Vertical\"  \n    PathSeparator=\"string\"  \n    runat=\"server\"  \n    ScrollDownImageUrl=\"uri\"  \n    ScrollDownText=\"string\"  \n    ScrollUpImageUrl=\"uri\"  \n    ScrollUpText=\"string\"  \n    SkinID=\"string\"  \n    SkipLinkText=\"string\"  \n    StaticBottomSeparatorImageUrl=\"uri\"  \n    StaticDisplayLevels=\"integer\"  \n    StaticEnableDefaultPopOutImage=\"True|False\"  \n    StaticItemFormatString=\"string\"  \n    StaticPopOutImageTextFormatString=\"string\"  \n    StaticPopOutImageUrl=\"uri\"  \n    StaticSubMenuIndent=\"size\"  \n    StaticTopSeparatorImageUrl=\"uri\"  \n    Style=\"string\"  \n    TabIndex=\"integer\"  \n    Target=\"string\"  \n    ToolTip=\"string\"  \n    Visible=\"True|False\"  \n    Width=\"size\"  \n>  \n        <DataBindings>  \n                <asp:MenuItemBinding  \n                    DataMember=\"string\"  \n                    Depth=\"integer\"  \n                    Enabled=\"True|False\"  \n                    EnabledField=\"string\"  \n                    FormatString=\"string\"  \n                    ImageUrl=\"uri\"  \n                    ImageUrlField=\"string\"  \n                    NavigateUrl=\"uri\"  \n                    NavigateUrlField=\"string\"  \n                    PopOutImageUrl=\"uri\"  \n                    PopOutImageUrlField=\"string\"  \n                    Selectable=\"True|False\"  \n                    SelectableField=\"string\"  \n                    SeparatorImageUrl=\"uri\"  \n                    SeparatorImageUrlField=\"string\"  \n                    Target=\"string\"  \n                    TargetField=\"string\"  \n                    Text=\"string\"  \n                    TextField=\"string\"  \n                    ToolTip=\"string\"  \n                    ToolTipField=\"string\"  \n                    Value=\"string\"  \n                    ValueField=\"string\"  \n                />  \n        </DataBindings>  \n        <DynamicHoverStyle />  \n        <DynamicItemTemplate>  \n            <!-- child controls -->  \n        </DynamicItemTemplate>  \n        <DynamicMenuItemStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|  \n                Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            ItemSpacing=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n        <DynamicMenuStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|  \n                Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n        <DynamicSelectedStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|  \n                Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            ItemSpacing=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n        <Items />  \n        <LevelMenuItemStyles>  \n                <asp:MenuItemStyle  \n                    BackColor=\"color name|#dddddd\"  \n                    BorderColor=\"color name|#dddddd\"  \n                    BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|  \n                        Double|Groove|Ridge|Inset|Outset\"  \n                    BorderWidth=\"size\"  \n                    CssClass=\"string\"  \n                    Font-Bold=\"True|False\"  \n                    Font-Italic=\"True|False\"  \n                    Font-Names=\"string\"  \n                    Font-Overline=\"True|False\"  \n                    Font-Size=\"string|Smaller|Larger|XX-Small|  \n                        X-Small|Small|Medium|Large|X-Large|XX-Large\"  \n                    Font-Strikeout=\"True|False\"  \n                    Font-Underline=\"True|False\"  \n                    ForeColor=\"color name|#dddddd\"  \n                    Height=\"size\"  \n                    HorizontalPadding=\"size\"  \n                    ItemSpacing=\"size\"  \n                    OnDisposed=\"Disposed event handler\"  \n                    VerticalPadding=\"size\"  \n                    Width=\"size\"  \n                />  \n        </LevelMenuItemStyles>  \n        <LevelSelectedStyles>  \n                <asp:MenuItemStyle  \n                    BackColor=\"color name|#dddddd\"  \n                    BorderColor=\"color name|#dddddd\"  \n                    BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|  \n                        Double|Groove|Ridge|Inset|Outset\"  \n                    BorderWidth=\"size\"  \n                    CssClass=\"string\"  \n                    Font-Bold=\"True|False\"  \n                    Font-Italic=\"True|False\"  \n                    Font-Names=\"string\"  \n                    Font-Overline=\"True|False\"  \n                    Font-Size=\"string|Smaller|Larger|XX-Small|  \n                        X-Small|Small|Medium|Large|X-Large|XX-Large\"  \n                    Font-Strikeout=\"True|False\"  \n                    Font-Underline=\"True|False\"  \n                    ForeColor=\"color name|#dddddd\"  \n                    Height=\"size\"  \n                    HorizontalPadding=\"size\"  \n                    ItemSpacing=\"size\"  \n                    OnDisposed=\"Disposed event handler\"  \n                    VerticalPadding=\"size\"  \n                    Width=\"size\"  \n                />  \n        </LevelSelectedStyles>  \n        <LevelSubMenuStyles>  \n                <asp:SubMenuStyle  \n                    BackColor=\"color name|#dddddd\"  \n                    BorderColor=\"color name|#dddddd\"  \n                    BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|  \n                        Double|Groove|Ridge|Inset|Outset\"  \n                    BorderWidth=\"size\"  \n                    CssClass=\"string\"  \n                    Font-Bold=\"True|False\"  \n                    Font-Italic=\"True|False\"  \n                    Font-Names=\"string\"  \n                    Font-Overline=\"True|False\"  \n                    Font-Size=\"string|Smaller|Larger|XX-Small|  \n                        X-Small|Small|Medium|Large|X-Large|XX-Large\"  \n                    Font-Strikeout=\"True|False\"  \n                    Font-Underline=\"True|False\"  \n                    ForeColor=\"color name|#dddddd\"  \n                    Height=\"size\"  \n                    HorizontalPadding=\"size\"  \n                    OnDisposed=\"Disposed event handler\"  \n                    VerticalPadding=\"size\"  \n                    Width=\"size\"  \n                />  \n        </LevelSubMenuStyles>  \n        <StaticHoverStyle />  \n        <StaticItemTemplate>  \n            <!-- child controls -->  \n        </StaticItemTemplate>  \n        <StaticMenuItemStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|  \n                X-Small|Small|Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            ItemSpacing=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n        <StaticMenuStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|  \n                Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n        <StaticSelectedStyle  \n            BackColor=\"color name|#dddddd\"  \n            BorderColor=\"color name|#dddddd\"  \n            BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|  \n                Groove|Ridge|Inset|Outset\"  \n            BorderWidth=\"size\"  \n            CssClass=\"string\"  \n            Font-Bold=\"True|False\"  \n            Font-Italic=\"True|False\"  \n            Font-Names=\"string\"  \n            Font-Overline=\"True|False\"  \n            Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|  \n                Medium|Large|X-Large|XX-Large\"  \n            Font-Strikeout=\"True|False\"  \n            Font-Underline=\"True|False\"  \n            ForeColor=\"color name|#dddddd\"  \n            Height=\"size\"  \n            HorizontalPadding=\"size\"  \n            ItemSpacing=\"size\"  \n            OnDisposed=\"Disposed event handler\"  \n            VerticalPadding=\"size\"  \n            Width=\"size\"  \n        />  \n</asp:Menu>  \n```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192868).  \n  \n The following code example demonstrates how to create a Menu control with static menu items using declarative syntax.  \n  \n [!code-cs[MenuDeclarative#1](~/add/codesnippet/CSharp/t-system.web.ui.webcontr_234_1.aspx)]\n [!code-vb[MenuDeclarative#1](~/add/codesnippet/VisualBasic/t-system.web.ui.webcontr_234_1.aspx)]  \n  \n The following code example demonstrates how to bind the Menu control to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. For this example to work correctly, you must copy the sample site map data below to a file named Web.sitemap.  \n  \n [!code-cs[MenuDataBind#1](~/add/codesnippet/CSharp/t-system.web.ui.webcontr_234_2.aspx)]\n [!code-vb[MenuDataBind#1](~/add/codesnippet/VisualBasic/t-system.web.ui.webcontr_234_2.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n```  \n<siteMap>  \n  <siteMapNode url=\"~\\Home.aspx\"   \n    title=\"Home\"  \n    description=\"Home\">  \n    <siteMapNode url=\"~\\Music.aspx\"  \n      title=\"Music\"  \n      description=\"Music\">  \n      <siteMapNode url=\"~\\Classical.aspx\"   \n        title=\"Classical\"  \n        description=\"Classical\"/>  \n      <siteMapNode url=\"~\\Rock.aspx\"  \n        title=\"Rock\"  \n        description=\"Rock\"/>  \n      <siteMapNode url=\"~\\Jazz.aspx\"  \n        title=\"Jazz\"  \n        description=\"Jazz\"/>  \n    </siteMapNode>  \n    <siteMapNode url=\"~\\Movies.aspx\"  \n      title=\"Movies\"  \n      description=\"Movies\">  \n      <siteMapNode url=\"~\\Action.aspx\"  \n        title=\"Action\"  \n        description=\"Action\"/>  \n      <siteMapNode url=\"~\\Drama.aspx\"  \n        title=\"Drama\"  \n        description=\"Drama\"/>  \n      <siteMapNode url=\"~\\Musical.aspx\"  \n        title=\"Musical\"  \n        description=\"Musical\"/>  \n    </siteMapNode>  \n  </siteMapNode>  \n</siteMap>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("MenuItemClick")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.SupportsEventValidation]

      public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.HierarchicalDataBoundControl
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Menu()"
  nameWithType: Menu.Menu()
  fullName: System.Web.UI.WebControls.Menu.Menu()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Menu"></see> class.
  remarks: Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Menu> class. To dynamically add a <xref:System.Web.UI.WebControls.Menu> control to a page, create a new <xref:System.Web.UI.WebControls.Menu> object, set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A> collection of a container control, such as <xref:System.Web.UI.WebControls.PlaceHolder>.
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.Menu> control to a page.  \n  \n [!code-vb[MenuCtor#1](~/add/codesnippet/VisualBasic/m-system.web.ui.webcontr_229_1.aspx)]\n [!code-cs[MenuCtor#1](~/add/codesnippet/CSharp/m-system.web.ui.webcontr_229_1.aspx)]"
  syntax:
    content: public Menu ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "AddAttributesToRender(HtmlTextWriter)"
  nameWithType: Menu.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter"></see> object.
  remarks: The <xref:System.Web.UI.WebControls.Menu> control overrides the <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> method to reset the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property to <xref:System.String.Empty>. This member is primarily used by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.Menu> class.
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The output stream that renders HTML contents to the client."
  overload: System.Web.UI.WebControls.Menu.AddAttributesToRender*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.Controls
  id: Controls
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Controls"
  nameWithType: Menu.Controls
  fullName: System.Web.UI.WebControls.Menu.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a <see cref="T:System.Web.UI.ControlCollection"></see> that contains the child controls of the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: The Controls property allows you programmatic access to the instance of the <xref:System.Web.UI.ControlCollection> class for the <xref:System.Web.UI.WebControls.Menu> control. You can add controls to the collection, remove controls from the collection, or iterate through the server controls in the collection.
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A <see cref=&quot;T:System.Web.UI.ControlCollection&quot;></see> that contains the child controls"
  overload: System.Web.UI.WebControls.Menu.Controls*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "CreateChildControls()"
  nameWithType: Menu.CreateChildControls()
  fullName: System.Web.UI.WebControls.Menu.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Creates the child controls of a <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "This member is primarily used by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n This method is called by the ASP.NET infrastructure to notify any controls that use composition-based implementation, including controls that derive from <xref:System.Web.UI.WebControls.CompositeDataBoundControl> and <xref:System.Web.UI.WebControls.CompositeControl>. to create any child controls they contain in preparation for postback or rendering."
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.CreateChildControls*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DataBind()"
  nameWithType: Menu.DataBind()
  fullName: System.Web.UI.WebControls.Menu.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Binds the data source to the <see cref="T:System.Web.UI.WebControls.Menu"></see> control. This method cannot be inherited.
  remarks: "This member is used primarily by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n Use the DataBind method to bind data from a data source to the <xref:System.Web.UI.WebControls.Menu> control. This method resolves all data-binding expressions in the active template of the control."
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.DataBind*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DataBindings
  id: DataBindings
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DataBindings"
  nameWithType: Menu.DataBindings
  fullName: System.Web.UI.WebControls.Menu.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a collection of <see cref="T:System.Web.UI.WebControls.MenuItemBinding"></see> objects that define the relationship between a data item and the menu item it is binding to.
  remarks: "The DataBindings collection contains <xref:System.Web.UI.WebControls.MenuItemBinding> objects that define the relationship between a data item and the menu item it is binding to. When binding to a data source where each data item contains multiple properties (such as an XML element with several attributes), a menu item displays the value returned by the `ToString()` method of the data item by default. In the case of an XML element, the menu item displays the element name, which shows the underlying structure of the tree, but is not very useful otherwise. You can bind a menu item to a specific data item property by specifying menu item bindings.  \n  \n When defining the relationship between a data item and a menu item, you must specify both the criteria for binding and the property of a data item to bind to. The criteria indicate when a data item should be bound to a menu item. The criteria can be specified with a depth, a data member, or both. The depth specifies the menu level that gets bound. For example, if you specify a depth of 0, all menu items in the tree structure at level 0 are bound using the menu item binding. A data member specifies the type of the data item in the underlying data source, but can represent different information depending on the data source. For example, the data member for an XML element specifies the name of the element.  \n  \n If multiple <xref:System.Web.UI.WebControls.MenuItemBinding> objects are defined that conflict with each other, the <xref:System.Web.UI.WebControls.Menu> control applies the menu item bindings in the following order of precedence:  \n  \n1.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines both a depth and a data member.  \n  \n2.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines only the depth.  \n  \n3.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines only the data member.  \n  \n4.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines neither the depth nor the data member.  \n  \n Once the binding criteria are established, you can then bind a property of a <xref:System.Web.UI.WebControls.MenuItem> object that is able to be bound to an attribute or field of a data item. For example, you can bind the <xref:System.Web.UI.WebControls.MenuItem.Text%2A> property of a menu item to the text attribute on an XML element by setting the <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> property of a <xref:System.Web.UI.WebControls.MenuItemBinding> object. You can also bind to a static value. If you set the <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> property of a <xref:System.Web.UI.WebControls.MenuItemBinding> object, all menu items to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied share the same static text value. For more information on binding the properties of a <xref:System.Web.UI.WebControls.MenuItem> object to a value, see <xref:System.Web.UI.WebControls.MenuItemBinding>.  \n  \n Although the DataBindings collection can be programmatically populated, it is usually set declaratively. To specify the menu item bindings, first nest opening and closing `<DataBindings>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.Menu> control. Next, place `<asp:MenuItemBinding>` elements between the opening and closing `<DataBindings>` tags for each menu item binding you want to specify."
  example:
  - "The following code example demonstrates how to use the DataBindings collection to define the relationship between the fields of an <xref:System.Web.UI.WebControls.XmlDataSource> control and the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuBindings#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_245_1.aspx)]\n [!code-cs[MenuBindings#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_245_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n```  \n<MapHomeNode url=\"~\\Home.aspx\"   \n  title=\"Home\"  \n  description=\"Home\">  \n  <MapNode url=\"~\\Music.aspx\"  \n    title=\"Music\"  \n    description=\"Music\">  \n    <MapNode url=\"~\\Classical.aspx\"   \n      title=\"Classical\"  \n      description=\"Classical\"/>  \n    <MapNode url=\"~\\Rock.aspx\"  \n      title=\"Rock\"  \n      description=\"Rock\"/>  \n    <MapNode url=\"~\\Jazz.aspx\"  \n      title=\"Jazz\"  \n      description=\"Jazz\"/>  \n  </MapNode>  \n  <MapNode url=\"~\\Movies.aspx\"  \n    title=\"Movies\"  \n    description=\"Movies\">  \n    <MapNode url=\"~\\Action.aspx\"  \n      title=\"Action\"  \n      description=\"Action\"/>  \n    <MapNode url=\"~\\Drama.aspx\"  \n      title=\"Drama\"  \n      description=\"Drama\"/>  \n    <MapNode url=\"~\\Musical.aspx\"  \n      title=\"Musical\"  \n      description=\"Musical\"/>  \n  </MapNode>  \n</MapHomeNode>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemBindingCollection
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItemBindingCollection&quot;></see> that represents the relationship between a data item and the menu item it is binding to."
  overload: System.Web.UI.WebControls.Menu.DataBindings*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DisappearAfter
  id: DisappearAfter
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DisappearAfter"
  nameWithType: Menu.DisappearAfter
  fullName: System.Web.UI.WebControls.Menu.DisappearAfter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the duration for which a dynamic menu is displayed after the mouse pointer is no longer positioned over the menu.
  remarks: "By default, a dynamic menu automatically disappears after a certain duration when the mouse pointer is no longer positioned over the menu. Use the DisappearAfter property to specify the duration.  \n  \n> [!NOTE]\n>  A dynamic menu disappears immediately if the user clicks outside of the menu.  \n  \n You can also specify that a dynamic menu should never automatically disappear by setting this property to -1. In this case, the dynamic menu item will disappear only when the user clicks outside the menu.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](../Topic/ASP.NET%20Themes%20and%20Skins.md)."
  example:
  - "The following code example demonstrates how to use the DisappearAfter property to specify that a dynamic menu should disappear after the user moves the mouse pointer away from the menu for more than two seconds.  \n  \n [!code-cs[MenuDisappearAfter#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_581_1.aspx)]\n [!code-vb[MenuDisappearAfter#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_581_1.aspx)]"
  syntax:
    content: public int DisappearAfter { get; set; }
    return:
      type: System.Int32
      description: "The amount of time (in milliseconds) a dynamic menu is displayed after the mouse pointer is no longer positioned over the menu. The default is 500."
  overload: System.Web.UI.WebControls.Menu.DisappearAfter*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The selected value is less than -1."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl
  id: DynamicBottomSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicBottomSeparatorImageUrl"
  nameWithType: Menu.DynamicBottomSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image to display at the bottom of each dynamic menu item to separate it from other menu items.
  remarks: "Use the DynamicBottomSeparatorImageUrl property to specify an optional custom image to display at the bottom of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line.  \n  \n> [!NOTE]\n>  You can also display a separator image at the top of each dynamic menu item by setting the <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the DynamicBottomSeparatorImageUrl property to display a separator image at the bottom of each dynamic menu item.  \n  \n [!code-cs[MenuDynamicBottomSeparatorImageUrl#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_242_1.aspx)]\n [!code-vb[MenuDynamicBottomSeparatorImageUrl#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_242_1.aspx)]"
  syntax:
    content: public string DynamicBottomSeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to a separator image displayed at the bottom of each dynamic menu item. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage
  id: DynamicEnableDefaultPopOutImage
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicEnableDefaultPopOutImage"
  nameWithType: Menu.DynamicEnableDefaultPopOutImage
  fullName: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the built-in image that indicates that a dynamic menu item has a submenu is displayed.
  remarks: "When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:  \n  \n-   Set the DynamicEnableDefaultPopOutImage property to `true` to use the built-in image (default).  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image.  \n  \n If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is set, that image overrides the built-in image.  \n  \n> [!NOTE]\n>  If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is not set and the DynamicEnableDefaultPopOutImage property is set to `false`, no image is displayed.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property. This text is displayed as a ToolTip when the user positions the mouse pointer over the image. This text also provides assistive technology devices with a description of the image that can be used to make the control more accessible."
  example:
  - "The following code example demonstrates how to use the DynamicEnableDefaultPopOutImage property to hide the image that indicates that a dynamic menu item has a submenu. The <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property must also be set to an empty string (\"\") for the image to be hidden.  \n  \n [!code-cs[MenuDynamicEnableDefaultPopOutImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1063_1.aspx)]\n [!code-vb[MenuDynamicEnableDefaultPopOutImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1063_1.aspx)]"
  syntax:
    content: public bool DynamicEnableDefaultPopOutImage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display the built-in image for dynamic menu items with submenus; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset
  id: DynamicHorizontalOffset
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicHorizontalOffset"
  nameWithType: Menu.DynamicHorizontalOffset
  fullName: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the number of pixels to shift a dynamic menu horizontally relative to its parent menu item.
  remarks: "Use the DynamicHorizontalOffset property to adjust the horizontal position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <xref:System.Web.UI.WebControls.Menu> control is displayed vertically or horizontally (as specified by the <xref:System.Web.UI.WebControls.Menu.Orientation%2A> property). The following table describes the differences.  \n  \n|Orientation|Description|  \n|-----------------|-----------------|  \n|Horizontal|By default, a dynamic menu is displayed directly below its parent menu item. Setting this property shifts the dynamic menu position horizontally from this base position.|  \n|Vertical|By default, a dynamic menu item is displayed next to its parent menu item without any spacing in between. Setting this property controls the horizontal spacing between the dynamic menu and its parent menu item.|  \n  \n> [!NOTE]\n>  You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a vertical menu, a negative value causes a dynamic menu and its parent menu item to overlap."
  example:
  - "The following code example demonstrates how to use the DynamicHorizontalOffset property to specify a 5-pixel gap between a dynamic menu and its parent menu item.  \n  \n [!code-cs[MenuDynamicHorizontalOffset#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_260_1.aspx)]\n [!code-vb[MenuDynamicHorizontalOffset#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_260_1.aspx)]"
  syntax:
    content: public int DynamicHorizontalOffset { get; set; }
    return:
      type: System.Int32
      description: "The number of pixels to shift a dynamic menu horizontally relative to its parent menu item. The default is 0."
  overload: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicHoverStyle
  id: DynamicHoverStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicHoverStyle"
  nameWithType: Menu.DynamicHoverStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicHoverStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style"></see> object that allows you to set the appearance of a dynamic menu item when the mouse pointer is positioned over it.
  remarks: "Use the DynamicHoverStyle property to control the appearance of a dynamic menu item when the mouse pointer is positioned over it. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.Style> object (for example, `DynamicHoverStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `DynamicHoverStyle.ForeColor`).  \n  \n Style properties for a dynamic menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  DynamicHoverStyle."
  example:
  - "The following code example demonstrates how to use the DynamicHoverStyle property to change the background color of a dynamic menu item to light sky blue when the user positions the mouse pointer over it.  \n  \n [!code-vb[MenuDynamicHoverStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1273_1.aspx)]\n [!code-cs[MenuDynamicHoverStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1273_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.Style&quot;></see> that represents the style of a dynamic menu item when the mouse pointer is positioned over it."
  overload: System.Web.UI.WebControls.Menu.DynamicHoverStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicItemFormatString
  id: DynamicItemFormatString
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicItemFormatString"
  nameWithType: Menu.DynamicItemFormatString
  fullName: System.Web.UI.WebControls.Menu.DynamicItemFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets additional text shown with all menu items that are dynamically displayed.
  remarks: "This property can be used to insert text to format dynamic menu items in a menu displayed on mobile devices. The <xref:System.Web.UI.WebControls.Menu> control supports templates for the display of static and dynamic menu items. For mobile devices, templates are ignored, so this property allows you to add characters or text to apply formatting to menu items without using a template.  \n  \n> [!NOTE]\n>  To achieve consistent formatting when you use this property, you should also set the <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> property if you want the formatting to be identical between the static and dynamic menu items.  \n  \n If both template formatting and this property are applied, the template formatting is ignored for mobile devices."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> and DynamicItemFormatString properties to add text to each menu item.  \n  \n [!code-cs[MenuItemFormatString#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_523_1.aspx)]\n [!code-vb[MenuItemFormatString#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_523_1.aspx)]"
  syntax:
    content: public string DynamicItemFormatString { get; set; }
    return:
      type: System.String
      description: "The additional text or characters that appear with all menu items. The default value for this property is &quot;{0}.&quot;"
  overload: System.Web.UI.WebControls.Menu.DynamicItemFormatString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicItemTemplate
  id: DynamicItemTemplate
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicItemTemplate"
  nameWithType: Menu.DynamicItemTemplate
  fullName: System.Web.UI.WebControls.Menu.DynamicItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the template that contains the custom content to render for a dynamic menu.
  remarks: Instead of using the built-in rendering for a dynamic menu, you can define your own look and feel for a dynamic menu item by using the DynamicItemTemplate property. To specify a custom template for a dynamic menu item, first place `<DynamicItemTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.Menu> control. You can then list the contents of the template between the opening and closing `<DynamicItemTemplate>` tags. You can further control the style of a dynamic menu by using the <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> property.
  syntax:
    content: public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <see cref=&quot;T:System.Web.UI.ITemplate&quot;></see> that contains the custom content for a dynamic menu. The default value is null, which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.DynamicItemTemplate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle
  id: DynamicMenuItemStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicMenuItemStyle"
  nameWithType: Menu.DynamicMenuItemStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of the menu items within a dynamic menu.
  remarks: "Use the DynamicMenuItemStyle property to control the appearance of the menu items within a dynamic menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `DynamicMenuItemStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `DynamicMenuItemStyle.ForeColor`).  \n  \n Style properties for a dynamic menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  \n  \n2.  DynamicMenuItemStyle. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>."
  example:
  - "The following code example demonstrates how to use the DynamicMenuItemStyle property to specify a light sky blue background color for the menu items in a dynamic menu.  \n  \n [!code-cs[MenuDynamicMenuItemStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1147_1.aspx)]\n [!code-vb[MenuDynamicMenuItemStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1147_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of the menu items within a dynamic menu."
  overload: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicMenuStyle
  id: DynamicMenuStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicMenuStyle"
  nameWithType: Menu.DynamicMenuStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicMenuStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of a dynamic menu.
  remarks: "Use the DynamicMenuStyle property to control the appearance of a dynamic menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `DynamicMenuStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `DynamicMenuStyle.ForeColor`).  \n  \n Style properties for a dynamic menu item are applied in the following order:  \n  \n1.  DynamicMenuStyle.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>."
  example:
  - "The following code example demonstrates how to use the DynamicMenuStyle property to specify a light sky blue background color for a dynamic menu.  \n  \n [!code-cs[MenuDynamicMenuStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_153_1.aspx)]\n [!code-vb[MenuDynamicMenuStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_153_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }
    return:
      type: System.Web.UI.WebControls.SubMenuStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of a dynamic menu."
  overload: System.Web.UI.WebControls.Menu.DynamicMenuStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString
  id: DynamicPopOutImageTextFormatString
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicPopOutImageTextFormatString"
  nameWithType: Menu.DynamicPopOutImageTextFormatString
  fullName: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the alternate text for the image used to indicate that a dynamic menu item has a submenu.
  remarks: "When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. Use the DynamicPopOutImageTextFormatString property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.  \n  \n There are two ways to display the image:  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to `true` to use the built-in image (default).  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image.  \n  \n> [!NOTE]\n>  This property applies to both the built-in image and the custom image."
  example:
  - "The following code example demonstrates how to use the DynamicPopOutImageTextFormatString property to specify the alternate text for the image used to indicate that a dynamic menu item has a submenu. This text is displayed as a ToolTip when the user positions the mouse pointer over the image.  \n  \n [!code-vb[MenuDynamicPopoutImageText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1042_1.aspx)]\n [!code-cs[MenuDynamicPopoutImageText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1042_1.aspx)]"
  syntax:
    content: public string DynamicPopOutImageTextFormatString { get; set; }
    return:
      type: System.String
      description: "The alternate text for the image used to indicate that a dynamic menu item has a submenu. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl
  id: DynamicPopOutImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicPopOutImageUrl"
  nameWithType: Menu.DynamicPopOutImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to a custom image that is displayed in a dynamic menu item when the dynamic menu item has a submenu.
  remarks: "When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to `true` to use the built-in image (default).  \n  \n-   Set the DynamicPopOutImageUrl property to specify a custom image.  \n  \n If the DynamicPopOutImageUrl property is set, that image overrides the built-in image.  \n  \n If the DynamicPopOutImageUrl property is not set and the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property is set to `false`, no image is displayed.  \n  \n> [!NOTE]\n>  When you set this property, use a slash mark (/) instead of a backslash (\\\\). If you use backslashes in the path, the specified image will not be displayed.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property."
  example:
  - "The following code example demonstrates how to use the DynamicPopOutImageUrl property to specify a custom image to display in a dynamic menu item to indicate that the menu item has a submenu.  \n  \n [!code-vb[MenuDynamicPopoutImageText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_150_1.aspx)]\n [!code-cs[MenuDynamicPopoutImageText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public string DynamicPopOutImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image used to indicate that a dynamic menu item has a submenu. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicSelectedStyle
  id: DynamicSelectedStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicSelectedStyle"
  nameWithType: Menu.DynamicSelectedStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicSelectedStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of the dynamic menu item selected by the user.
  remarks: "Use the DynamicSelectedStyle property to control the appearance of a dynamic menu item when the user selects it from the menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `DynamicSelectedStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `DynamicSelectedStyle.ForeColor`).  \n  \n Style properties for a dynamic menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  DynamicSelectedStyle. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>."
  example:
  - "The following code example demonstrates how to use the DynamicSelectedStyle property to specify a light blue background color for the selected dynamic menu item.  \n  \n [!code-vb[MenuDynamicSelectedStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_951_1.aspx)]\n [!code-cs[MenuDynamicSelectedStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_951_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of the selected dynamic menu item."
  overload: System.Web.UI.WebControls.Menu.DynamicSelectedStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl
  id: DynamicTopSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicTopSeparatorImageUrl"
  nameWithType: Menu.DynamicTopSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image to display at the top of each dynamic menu item to separate it from other menu items.
  remarks: "Use the DynamicTopSeparatorImageUrl property to specify an optional custom image to display at the top of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line.  \n  \n> [!NOTE]\n>  You can also display a separator image at the bottom of each dynamic menu item by setting the <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the DynamicTopSeparatorImageUrl property to display a separator image at the top of each dynamic menu item.  \n  \n [!code-vb[MenuDynamicTopSeparatorImageUrl#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_819_1.aspx)]\n [!code-cs[MenuDynamicTopSeparatorImageUrl#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_819_1.aspx)]"
  syntax:
    content: public string DynamicTopSeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to a separator image displayed at the top of each dynamic menu item. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.DynamicVerticalOffset
  id: DynamicVerticalOffset
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "DynamicVerticalOffset"
  nameWithType: Menu.DynamicVerticalOffset
  fullName: System.Web.UI.WebControls.Menu.DynamicVerticalOffset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the number of pixels to shift a dynamic menu vertically relative to its parent menu item.
  remarks: "Use the DynamicVerticalOffset property to adjust the vertical position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <xref:System.Web.UI.WebControls.Menu> control is displayed vertically or horizontally (as specified by the <xref:System.Web.UI.WebControls.Menu.Orientation%2A> property). The following table describes the differences.  \n  \n|Orientation|Description|  \n|-----------------|-----------------|  \n|Horizontal|By default, a dynamic menu is displayed directly below its parent menu item without any spacing in between. Setting this property controls the vertical spacing between the dynamic menu and its parent menu item.|  \n|Vertical|By default, a dynamic menu item is displayed next to its parent menu item with the top edges aligned. Setting this property shifts the dynamic menu position vertically from this base position.|  \n  \n> [!NOTE]\n>  You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a horizontal menu, a negative value causes a dynamic menu and its parent menu item to overlap."
  example:
  - "The following code example demonstrates how to use the DynamicVerticalOffset property to shift a dynamic menu down by 10 pixels from the top of its parent menu item.  \n  \n [!code-cs[MenuDynamicHorizontalOffset#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1026_1.aspx)]\n [!code-vb[MenuDynamicHorizontalOffset#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1026_1.aspx)]"
  syntax:
    content: public int DynamicVerticalOffset { get; set; }
    return:
      type: System.Int32
      description: "The number of pixels to shift a dynamic menu vertically relative to its parent menu item. The default is 0."
  overload: System.Web.UI.WebControls.Menu.DynamicVerticalOffset*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "EnsureDataBound()"
  nameWithType: Menu.EnsureDataBound()
  fullName: System.Web.UI.WebControls.Menu.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Verifies that the menu control requires data binding and that a valid data source control is specified before calling the &lt;xref:System.Web.UI.WebControls.Menu.DataBind%2A&gt; method.
  remarks: >-
    > [!NOTE]

    >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control.
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.EnsureDataBound*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.FindItem(System.String)
  id: FindItem(System.String)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "FindItem(String)"
  nameWithType: Menu.FindItem(String)
  fullName: System.Web.UI.WebControls.Menu.FindItem(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves the menu item at the specified value path.
  remarks: Use the FindItem method to retrieve a <xref:System.Web.UI.WebControls.MenuItem> object from the <xref:System.Web.UI.WebControls.Menu> control. To retrieve the <xref:System.Web.UI.WebControls.MenuItem> object, you must specify a menu path to the menu item. The menu path is a string of delimited values that form the path from a root menu item to the current menu item. To determine the delimiter character, use the <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> property.
  example:
  - "The following code example demonstrates how to use the FindItem method to retrieve a menu item from a <xref:System.Web.UI.WebControls.Menu> control at a specified value path.  \n  \n [!code-vb[MenuPathSeparator#1](~/add/codesnippet/VisualBasic/m-system.web.ui.webcontr_80_1.aspx)]\n [!code-cs[MenuPathSeparator#1](~/add/codesnippet/CSharp/m-system.web.ui.webcontr_80_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);
    parameters:
    - id: valuePath
      type: System.String
      description: "The value path to the menu item to retrieve."
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "To be added."
  overload: System.Web.UI.WebControls.Menu.FindItem*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "GetDesignModeState()"
  nameWithType: Menu.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Menu.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves the design-time state of the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: The GetDesignModeState method is a helper method used to get the current design-time state of the <xref:System.Web.UI.WebControls.Menu> control.
  syntax:
    content: protected override System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "To be added."
  overload: System.Web.UI.WebControls.Menu.GetDesignModeState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.IncludeStyleBlock
  id: IncludeStyleBlock
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "IncludeStyleBlock"
  nameWithType: Menu.IncludeStyleBlock
  fullName: System.Web.UI.WebControls.Menu.IncludeStyleBlock
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that indicates whether ASP.NET should render a block of cascading style sheet (CSS) definitions for the styles that are used in the menu.
  remarks: "The <xref:System.Web.UI.WebControls.Menu> control uses CSS styles to control its appearance in a browser. By default, it renders a `style` element that contains the CSS definitions for the CSS classes that it uses. You typically set this property to `false` in the following situations:  \n  \n-   You want to provide your own CSS definitions in order to customize the appearance of the menu. You must then provide your own block of CSS definitions in the page, or include a link to an external CSS file that contains the definitions.  \n  \n-   You want to keep the default appearance but prefer to keep the generated CSS definitions in a separate file. You must then provide the file and link to it.  \n  \n In either of these situations, you can get a copy of the default CSS block that the <xref:System.Web.UI.WebControls.Menu> control generates by setting the property to `true`, running the page, and viewing the page in a browser. You can then view the page source in the browser and copy and paste the CSS block into the page markup or into a separate file.  \n  \n If you set this property to `false`, you cannot set style properties. For example, you cannot add a `DynamicHoverStyle-ForeColor` attribute in markup or set the `DynamicHoverStyle.ForeColor` property in code."
  syntax:
    content: public bool IncludeStyleBlock { get; set; }
    return:
      type: System.Boolean
      description: "A value that indicates whether ASP.NET should render a block of CSS definitions for the styles that are used in the menu. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.IncludeStyleBlock*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.Items
  id: Items
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Items"
  nameWithType: Menu.Items
  fullName: System.Web.UI.WebControls.Menu.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a <see cref="T:System.Web.UI.WebControls.MenuItemCollection"></see> object that contains all menu items in the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Use the Items property (collection) to get a <xref:System.Web.UI.WebControls.MenuItemCollection> object that contains all the menu items in a <xref:System.Web.UI.WebControls.Menu> control. This collection is commonly used to quickly iterate through all the menu items, or to access a specific menu item.  \n  \n The Items collection can also be used to programmatically manage the menu items. You can add, insert, remove, and retrieve <xref:System.Web.UI.WebControls.MenuItem> collection objects. Any updates to the collection will automatically be reflected in the <xref:System.Web.UI.WebControls.Menu> control after the next round trip to the server."
  example:
  - "The following code example demonstrates how to use the Items collection to traverse the menu items in the <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItems#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1287_1.aspx)]\n [!code-cs[MenuItems#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1287_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemCollection Items { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemCollection
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItemCollection&quot;></see> that contains all menu items in the <see cref=&quot;T:System.Web.UI.WebControls.Menu&quot;></see> control."
  overload: System.Web.UI.WebControls.Menu.Items*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.ItemWrap
  id: ItemWrap
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "ItemWrap"
  nameWithType: Menu.ItemWrap
  fullName: System.Web.UI.WebControls.Menu.ItemWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the text for menu items should wrap.
  remarks: Use the ItemWrap property to specify whether the text displayed in each menu item wraps. When the text runs out of space, it is automatically split and continued on the following line.
  example:
  - "The following code example demonstrates how to use the ItemWrap property to enable text wrapping in the <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemWrap#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_18_1.aspx)]\n [!code-vb[MenuItemWrap#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public bool ItemWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to wrap the menu item text; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.ItemWrap*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.LevelMenuItemStyles
  id: LevelMenuItemStyles
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "LevelMenuItemStyles"
  nameWithType: Menu.LevelMenuItemStyles
  fullName: System.Web.UI.WebControls.Menu.LevelMenuItemStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection"></see> object that contains the style settings that are applied to menu items based on their level in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Use the LevelMenuItemStyles collection as an alternative to the individual style properties (such as <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) to control the style of menu items at the individual levels of the menu. The styles contained in this collection are applied to the menu items based on their menu level. The first style in the collection corresponds to the style of menu items in the first level of the menu. The second style in the collection corresponds to the style of menu items in the second level of the menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.  \n  \n> [!NOTE]\n>  If a style is defined for a certain level using the LevelMenuItemStyles collection, this overrides any menu item style settings for the menu items at that level."
  example:
  - "The following code example demonstrates how to use the LevelMenuItemStyles collection to apply style settings to the menu items in a <xref:System.Web.UI.WebControls.Menu> control based on their level.  \n  \n [!code-vb[MenuLevelMenuItemStyles#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_497_1.aspx)]\n [!code-cs[MenuLevelMenuItemStyles#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_497_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyleCollection
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyleCollection&quot;></see> that contains the style settings that are applied to menu items based on their level in a <see cref=&quot;T:System.Web.UI.WebControls.Menu&quot;></see> control."
  overload: System.Web.UI.WebControls.Menu.LevelMenuItemStyles*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.LevelSelectedStyles
  id: LevelSelectedStyles
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "LevelSelectedStyles"
  nameWithType: Menu.LevelSelectedStyles
  fullName: System.Web.UI.WebControls.Menu.LevelSelectedStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection"></see> object that contains the style settings that are applied to the selected menu item based on its level in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Use the LevelSelectedStyles collection as an alternative to the <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> and <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> properties to control the style of a selected menu item at the individual levels of the menu. The styles contained in this collection are applied to a selected menu item based on its menu level. The first style in the collection corresponds to the style of a selected menu item in the first level of the menu. The second style in the collection corresponds to the style of a selected menu item in the second level of the menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.  \n  \n> [!NOTE]\n>  If a style is defined for a certain level using the LevelSelectedStyles collection, this overrides the <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> and <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> properties at that level."
  example:
  - "The following code example demonstrates how to use the LevelSelectedStyles collection to apply a style setting to the selected menu item in a <xref:System.Web.UI.WebControls.Menu> control based on its level.  \n  \n [!code-vb[MenuLevelMenuItemStyles#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_932_1.aspx)]\n [!code-cs[MenuLevelMenuItemStyles#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_932_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyleCollection
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyleCollection&quot;></see> that contains the style settings that are applied to the selected menu item based on its level in a <see cref=&quot;T:System.Web.UI.WebControls.Menu&quot;></see> control."
  overload: System.Web.UI.WebControls.Menu.LevelSelectedStyles*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.LevelSubMenuStyles
  id: LevelSubMenuStyles
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "LevelSubMenuStyles"
  nameWithType: Menu.LevelSubMenuStyles
  fullName: System.Web.UI.WebControls.Menu.LevelSubMenuStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection"></see> object that contains the style settings that are applied to the submenu items in the static menu based on their level in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Use the LevelSubMenuStyles collection as an alternative to the individual style properties (such as <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) to control the style of the static submenu items displayed in the static menu at the individual levels. The styles contained in this collection are applied to the static submenu items based on their menu level. The first style in the collection corresponds to the style of the first static submenu level displayed in the static menu. The second style in the collection corresponds to the style of the second submenu level displayed in the static menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.  \n  \n> [!NOTE]\n>  If a style is defined for a certain level using the LevelSubMenuStyles collection, this overrides any static submenu item style settings at that level."
  example:
  - "The following code example demonstrates how to use the LevelSubMenuStyles collection to apply style settings to the submenu items displayed in the static menu of a <xref:System.Web.UI.WebControls.Menu> control based on their level.  \n  \n [!code-cs[MenuLevelSubMenuStyles#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1084_1.aspx)]\n [!code-vb[MenuLevelSubMenuStyles#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1084_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }
    return:
      type: System.Web.UI.WebControls.SubMenuStyleCollection
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyleCollection&quot;></see> that contains the style settings that are applied to the submenu items in the static menu based on their level in a <see cref=&quot;T:System.Web.UI.WebControls.Menu&quot;></see> control."
  overload: System.Web.UI.WebControls.Menu.LevelSubMenuStyles*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "LoadControlState(Object)"
  nameWithType: Menu.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.Menu.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.Menu"></see> control that need to be persisted.
  remarks: >-
    > [!NOTE]

    >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control.
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An <xref:System.Object> that represents the control state to be restored."
  overload: System.Web.UI.WebControls.Menu.LoadControlState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "LoadViewState(Object)"
  nameWithType: Menu.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.Menu.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that contains the saved view-state values for the control."
  overload: System.Web.UI.WebControls.Menu.LoadViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels
  id: MaximumDynamicDisplayLevels
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "MaximumDynamicDisplayLevels"
  nameWithType: Menu.MaximumDynamicDisplayLevels
  fullName: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the number of menu levels to render for a dynamic menu.
  remarks: "You can display multiple menu levels in the static menu by setting the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property to a value greater than 1. You can also display additional levels in dynamic menus by setting this property to a value greater than 0. For example, if you display two menu levels in the static menu (by setting the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property to 2) and then set this property to 3, three additional menu levels are displayed in dynamic menus. All remaining higher menu levels (if any) are discarded.  \n  \n> [!NOTE]\n>  Setting this property to 0 displays a flat menu up to the level specified by the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property, without any dynamic menus."
  example:
  - "The following code example demonstrates how to use the MaximumDynamicDisplayLevels property to limit the number of menu levels to display in a dynamic menu to 1. Only the root menu level is displayed.  \n  \n [!code-cs[MenuMaximumDynamicDisplayLevels#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1344_1.aspx)]\n [!code-vb[MenuMaximumDynamicDisplayLevels#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1344_1.aspx)]"
  syntax:
    content: public int MaximumDynamicDisplayLevels { get; set; }
    return:
      type: System.Int32
      description: "The number of menu levels to render for a dynamic menu. The default is 3."
  overload: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The MaximumDynamicDisplayLevels property is set to a value less than 0."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.MenuItemClick
  id: MenuItemClick
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "MenuItemClick"
  nameWithType: Menu.MenuItemClick
  fullName: System.Web.UI.WebControls.Menu.MenuItemClick
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when a menu item in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control is clicked.
  remarks: "The MenuItemClick event is raised when a menu item is clicked in a <xref:System.Web.UI.WebControls.Menu> control. This allows you to provide an event handler that performs a custom routine, such as synchronizing with another control on the page, whenever this event occurs.  \n  \n A <xref:System.Web.UI.WebControls.MenuEventArgs> object is passed to the event handler, which allows you to access the properties of the menu item that raised the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to create an event handler for the MenuItemClick event that displays the text of the menu item selected by the user.  \n  \n [!code-cs[MenuMenuItemClick#1](~/add/codesnippet/CSharp/e-system.web.ui.webcontr_68_1.aspx)]\n [!code-vb[MenuMenuItemClick#1](~/add/codesnippet/VisualBasic/e-system.web.ui.webcontr_68_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;
    return:
      type: System.Web.UI.WebControls.MenuEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.MenuItemClickCommandName
  id: MenuItemClickCommandName
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "MenuItemClickCommandName"
  nameWithType: Menu.MenuItemClickCommandName
  fullName: System.Web.UI.WebControls.Menu.MenuItemClickCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Contains the command name.
  remarks: This read-only field contains the name of the command used to access menu items. The default value is "Click".
  syntax:
    content: public static readonly string MenuItemClickCommandName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.MenuItemDataBound
  id: MenuItemDataBound
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "MenuItemDataBound"
  nameWithType: Menu.MenuItemDataBound
  fullName: System.Web.UI.WebControls.Menu.MenuItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when a menu item in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control is bound to data.
  remarks: "The MenuItemDataBound event is raised when a menu item is bound to data in a <xref:System.Web.UI.WebControls.Menu> control. This allows you to provide an event handler that performs a custom routine, such as adding custom content or modifying a menu item before it is rendered, whenever this event occurs.  \n  \n A <xref:System.Web.UI.WebControls.MenuEventArgs> object is passed to the event handler, which allows you to access the properties of the menu item that raised the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to create an event handler for the MenuItemDataBound event that modifies the text of the `Home` menu item before it is displayed in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemDataBound#1](~/add/codesnippet/CSharp/e-system.web.ui.webcontr_122_1.aspx)]\n [!code-vb[MenuItemDataBound#1](~/add/codesnippet/VisualBasic/e-system.web.ui.webcontr_122_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;
    return:
      type: System.Web.UI.WebControls.MenuEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnBubbleEvent(Object,EventArgs)"
  nameWithType: Menu.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Determines whether the event for the <see cref="T:System.Web.UI.WebControls.Menu"></see> control is passed up the page's user interface (UI) server control hierarchy.
  remarks: "This member overrides <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "The source of the event."
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains event data."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.WebControls.Menu.OnBubbleEvent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnDataBinding(EventArgs)"
  nameWithType: Menu.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <see cref="E:System.Web.UI.Control.DataBinding"></see> event.
  remarks: "The <xref:System.Web.UI.Control.DataBinding> event is raised when data is bound to the <xref:System.Web.UI.WebControls.Menu> control. This method notifies the control to perform any data-binding logic that is associated with it.  \n  \n The OnDataBinding method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n This method is generally used by control developers when extending the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: protected override void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A  that contains the event data."
  overload: System.Web.UI.WebControls.Menu.OnDataBinding*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnInit(EventArgs)"
  nameWithType: Menu.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <see cref="E:System.Web.UI.Control.Init"></see> event.
  remarks: "When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control's life cycle, the control's view state has yet to be populated. Additionally, you cannot access another server control when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A  that contains the event data."
  overload: System.Web.UI.WebControls.Menu.OnInit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)
  id: OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnMenuItemClick(MenuEventArgs)"
  nameWithType: Menu.OnMenuItemClick(MenuEventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnMenuItemClick(MenuEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick"></see> event.
  remarks: "The OnMenuItemClick method is called by the <xref:System.Web.UI.WebControls.Menu> control to raise the <xref:System.Web.UI.WebControls.Menu.MenuItemClick> event. It is generally used by control developers when extending the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  \n  \n The OnMenuItemClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.MenuEventArgs
      description: "A  that contains the event data."
  overload: System.Web.UI.WebControls.Menu.OnMenuItemClick*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)
  id: OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnMenuItemDataBound(MenuEventArgs)"
  nameWithType: Menu.OnMenuItemDataBound(MenuEventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnMenuItemDataBound(MenuEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound"></see> event.
  remarks: "The OnMenuItemDataBound method is called by the <xref:System.Web.UI.WebControls.Menu> control to raise the <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> event. It is generally used by control developers when extending the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  \n  \n The OnMenuItemDataBound method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.MenuEventArgs
      description: "A  that contains the event data."
  overload: System.Web.UI.WebControls.Menu.OnMenuItemDataBound*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "OnPreRender(EventArgs)"
  nameWithType: Menu.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
  remarks: "The OnPreRender method is called by the <xref:System.Web.UI.WebControls.Menu> control to raise the <xref:System.Web.UI.Control.PreRender> event. It is generally used by control developers when extending the <xref:System.Web.UI.WebControls.Menu> class.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  \n  \n The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Web.UI.WebControls.Menu.OnPreRender*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.Orientation
  id: Orientation
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Orientation"
  nameWithType: Menu.Orientation
  fullName: System.Web.UI.WebControls.Menu.Orientation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the direction in which to render the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Use the Orientation property to specify the direction in which to render the <xref:System.Web.UI.WebControls.Menu> control. The following table lists the available directions.  \n  \n|Orientation|Description|  \n|-----------------|-----------------|  \n|`Orientation.Horizontal`|The <xref:System.Web.UI.WebControls.Menu> control is rendered horizontally.|  \n|`Orientation.Vertical`|The <xref:System.Web.UI.WebControls.Menu> control is rendered vertically.|"
  example:
  - "The following code example demonstrates how to use the Orientation property to display a horizontal menu.  \n  \n [!code-vb[MenuOrientation#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_869_1.aspx)]\n [!code-cs[MenuOrientation#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_869_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Orientation Orientation { get; set; }
    return:
      type: System.Web.UI.WebControls.Orientation
      description: "One of the <see cref=&quot;T:System.Web.UI.WebControls.Orientation&quot;></see> enumeration values. The default is <xref uid=&quot;langword_csharp_Orientation.Vertical&quot; name=&quot;Orientation.Vertical&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.Orientation*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "PathSeparator"
  nameWithType: Menu.PathSeparator
  fullName: System.Web.UI.WebControls.Menu.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the character used to delimit the path of a menu item in a <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "Each menu item (represented by a <xref:System.Web.UI.WebControls.MenuItem> object) in the <xref:System.Web.UI.WebControls.Menu> control has a <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> property that specifies the position of the menu item. The value path is a string of delimited values that form the path from a root menu item to the current menu item. Use the PathSeparator property to specify the delimiting character used to separate the values in the menu path. This value is commonly used when parsing the list for the individual values.  \n  \n Depending on the text displayed in the <xref:System.Web.UI.WebControls.Menu> control, the delimiter character might need to be changed to prevent any conflicts. For example, if you set the delimiter character to a comma, the displayed text should not contain any commas; otherwise, the <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> property cannot be parsed accurately."
  example:
  - "The following code example demonstrates how to use the PathSeparator property to change the delimiter character for a menu item's value path to a comma.  \n  \n [!code-vb[MenuPathSeparator#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1095_1.aspx)]\n [!code-cs[MenuPathSeparator#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1095_1.aspx)]"
  syntax:
    content: public char PathSeparator { get; set; }
    return:
      type: System.Char
      description: "The character used to delimit the path of a menu item. The default value is a slash mark (/)."
  overload: System.Web.UI.WebControls.Menu.PathSeparator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.PerformDataBinding
  id: PerformDataBinding
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "PerformDataBinding()"
  nameWithType: Menu.PerformDataBinding()
  fullName: System.Web.UI.WebControls.Menu.PerformDataBinding()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Binds the items from the data source to the menu items in the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: The PerformDataBinding method is a helper method called by the <xref:System.Web.UI.WebControls.Menu> control to bind the items in the data source to the <xref:System.Web.UI.WebControls.Menu> control.
  syntax:
    content: protected override void PerformDataBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.PerformDataBinding*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "RaisePostBackEvent(String)"
  nameWithType: Menu.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Menu.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Processes an event raised when a form is posted to the server.
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "A <xref:System.String> that represents the event argument passed to the event handler."
  overload: System.Web.UI.WebControls.Menu.RaisePostBackEvent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Render(HtmlTextWriter)"
  nameWithType: Menu.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Renders the menu control on the client browser.
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The  that represents the output stream used to write content to a Web page."
  overload: System.Web.UI.WebControls.Menu.Render*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "RenderBeginTag(HtmlTextWriter)"
  nameWithType: Menu.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the browser or device.
  remarks: "The RenderBeginTag method adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the response stream for the client browser.  \n  \n Override RenderBeginTag when you want to implement custom behavior, for example to write multiple tags to the response stream before any control content, such as `<table><tr><td>`. This method overrides the RenderBeginTag method to add the <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> property.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control."
  syntax:
    content: public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The  containing methods to build and render the device-specific output."
  overload: System.Web.UI.WebControls.Menu.RenderBeginTag*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "RenderContents(HtmlTextWriter)"
  nameWithType: Menu.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: This member overrides &lt;xref:System.Web.UI.WebControls.WebControl.RenderContents%2A&gt;.
  remarks: Override the <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> method to render the contents of the control between the begin and end tags. The default implementation of this method renders any child controls.
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The  containing methods to build and render the device-specific output."
  overload: System.Web.UI.WebControls.Menu.RenderContents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "RenderEndTag(HtmlTextWriter)"
  nameWithType: Menu.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs final markup and writes the HTML closing tag of the control to the output stream emitted to the browser or device.
  remarks: "This method overrides <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=fullName> to render <xref:System.Web.UI.WebControls.Menu> submenus and the <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> property.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control."
  syntax:
    content: public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The  containing methods to build and render the device-specific output."
  overload: System.Web.UI.WebControls.Menu.RenderEndTag*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.RenderingMode
  id: RenderingMode
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "RenderingMode"
  nameWithType: Menu.RenderingMode
  fullName: System.Web.UI.WebControls.Menu.RenderingMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.WebControls.Menu"></see> control renders HTML <xref uid="langword_csharp_table" name="table" href=""></xref> elements and inline styles, or <xref uid="langword_csharp_listitem" name="listitem" href=""></xref> elements and cascading style sheet (CSS) styles.
  remarks: "The value of the RenderingMode property determines how the menu control renders markup for the <xref:System.Web.UI.WebControls.Menu> control.  \n  \n In ASP.NET 3.5 and earlier versions, the <xref:System.Web.UI.WebControls.Menu> control uses HTML `table` elements and inline styles to specify the appearance of the menu in a browser. In ASP.NET 4 and later versions, by default the <xref:System.Web.UI.WebControls.Menu> control uses HTML `listitem` elements and cascading style sheet (CSS) styles.  \n  \n If you do not set this property, the <xref:System.Web.UI.WebControls.Menu> control renders markup that is appropriate to the ASP.NET version that is indicated by the <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName> property. The <xref:System.Web.UI.WebControls.Menu> control uses the following rules:  \n  \n-   If the value of the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is `3.5`, the <xref:System.Web.UI.WebControls.Menu> control uses HTML `table` elements and inline styles.  \n  \n-   If the value of the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is `4.0` or greater, the <xref:System.Web.UI.WebControls.Menu> control uses HTML `listitem` elements and CSS styles.  \n  \n This property is provided for backward compatibility. If the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates that you want controls to generate HTML that is compatible with ASP.NET 4 or later, but you want the <xref:System.Web.UI.WebControls.Menu> control to be an exception that uses earlier behavior, you can set this property to <xref:System.Web.UI.WebControls.MenuRenderingMode>. For example, if you have a Web page that displays text from right to left you might want to set this property to <xref:System.Web.UI.WebControls.MenuRenderingMode> because some browsers do not display the <xref:System.Web.UI.WebControls.MenuRenderingMode> mode markup properly for right-to-left text."
  syntax:
    content: public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }
    return:
      type: System.Web.UI.WebControls.MenuRenderingMode
      description: "A value that specifies whether the <see cref=&quot;T:System.Web.UI.WebControls.Menu&quot;></see> control renders HTML <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;></xref> elements and inline styles, or <xref uid=&quot;langword_csharp_listitem&quot; name=&quot;listitem&quot; href=&quot;&quot;></xref> elements and cascading style sheet (CSS) styles. The default value is <see cref=&quot;T:System.Web.UI.WebControls.MenuRenderingMode&quot;></see>."
  overload: System.Web.UI.WebControls.Menu.RenderingMode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SaveControlState()"
  nameWithType: Menu.SaveControlState()
  fullName: System.Web.UI.WebControls.Menu.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.Menu"></see> control that need to be persisted.
  remarks: "This method is used to save the state of the properties in the <xref:System.Web.UI.WebControls.Menu> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A> property is set to `false`. The SaveControlState method is concerned with state data that is essential for a control's operation (such as an index or keyword) and is separate from the control's view-state data.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control."
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Web.UI.WebControls.Menu.SaveControlState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SaveViewState()"
  nameWithType: Menu.SaveViewState()
  fullName: System.Web.UI.WebControls.Menu.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Saves the state of the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Web.UI.WebControls.Menu.SaveViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.ScrollDownImageUrl
  id: ScrollDownImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "ScrollDownImageUrl"
  nameWithType: Menu.ScrollDownImageUrl
  fullName: System.Web.UI.WebControls.Menu.ScrollDownImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image displayed in a dynamic menu to indicate that the user can scroll down for additional menu items.
  remarks: "This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:  \n  \n```  \nmenuInstance.RenderingCompatibility = new Version(3, 5);  \n```  \n  \n Use the ScrollDownImageUrl property to specify a custom image to display at the bottom of each dynamic menu to indicate that the user can scroll down for additional menu items.  \n  \n> [!NOTE]\n>  If this property is not set, the internal, default image is used.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> property."
  example:
  - "The following code example demonstrates how to use the ScrollDownImageUrl property to display a custom image indicating that the user can scroll down in a dynamic menu for additional menu items.  \n  \n [!code-vb[MenuScrollDownImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_25_1.aspx)]\n [!code-cs[MenuScrollDownImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_25_1.aspx)]"
  syntax:
    content: public string ScrollDownImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image displayed in a dynamic menu to indicate that the user can scroll down for additional menu items. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.ScrollDownImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.ScrollDownText
  id: ScrollDownText
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "ScrollDownText"
  nameWithType: Menu.ScrollDownText
  fullName: System.Web.UI.WebControls.Menu.ScrollDownText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the alternate text for the image specified in the &lt;xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A&gt; property.
  remarks: "This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:  \n  \n```  \nmenuInstance.RenderingCompatibility = new Version(3, 5);  \n```  \n  \n When a dynamic menu item contains additional items at the bottom of the menu, an image is displayed to indicate that the user can scroll down to view additional menu items. Use the ScrollDownText property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.  \n  \n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](../Topic/ASP.NET%20Globalization%20and%20Localization.md)."
  example:
  - "The following code example demonstrates how to use the ScrollDownText property to specify the alternate text for the image used to indicate that the user can scroll down in a dynamic menu for additional menu items.  \n  \n [!code-vb[MenuScrollDownImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1260_1.aspx)]\n [!code-cs[MenuScrollDownImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1260_1.aspx)]"
  syntax:
    content: public string ScrollDownText { get; set; }
    return:
      type: System.String
      description: "The alternate text for the image specified in the &lt;xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A&gt; property. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.ScrollDownText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.ScrollUpImageUrl
  id: ScrollUpImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "ScrollUpImageUrl"
  nameWithType: Menu.ScrollUpImageUrl
  fullName: System.Web.UI.WebControls.Menu.ScrollUpImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image displayed in a dynamic menu to indicate that the user can scroll up for additional menu items.
  remarks: "This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:  \n  \n```  \nmenuInstance.RenderingCompatibility = new Version(3, 5);  \n```  \n  \n Use the ScrollUpImageUrl property to specify a custom image to display at the top of each dynamic menu to indicate that the user can scroll up for additional menu items.  \n  \n> [!NOTE]\n>  If this property is not set, the internal, default image is used.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> property."
  example:
  - "The following code example demonstrates how to use the ScrollUpImageUrl property to display a custom image indicating that the user can scroll up in a dynamic menu for additional menu items.  \n  \n [!code-vb[MenuScrollDownImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_595_1.aspx)]\n [!code-cs[MenuScrollDownImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_595_1.aspx)]"
  syntax:
    content: public string ScrollUpImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image displayed in a dynamic menu to indicate that the user can scroll up for additional menu items. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.ScrollUpImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.ScrollUpText
  id: ScrollUpText
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "ScrollUpText"
  nameWithType: Menu.ScrollUpText
  fullName: System.Web.UI.WebControls.Menu.ScrollUpText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the alternate text for the image specified in the &lt;xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A&gt; property.
  remarks: "This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:  \n  \n```  \nmenuInstance.RenderingCompatibility = new Version(3, 5);  \n```  \n  \n When a dynamic menu item contains additional items at the top of the menu, an image is displayed to indicate that the user can scroll up to view additional menu items. Use the ScrollUpText property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.  \n  \n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](../Topic/ASP.NET%20Globalization%20and%20Localization.md)."
  example:
  - "The following code example demonstrates how to use the ScrollUpText property to specify the alternate text for the image used to indicate that the user can scroll up in a dynamic menu for additional menu items.  \n  \n [!code-vb[MenuScrollDownImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_475_1.aspx)]\n [!code-cs[MenuScrollDownImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_475_1.aspx)]"
  syntax:
    content: public string ScrollUpText { get; set; }
    return:
      type: System.String
      description: "The alternate text for the image specified in the &lt;xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A&gt; property. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.ScrollUpText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SelectedItem
  id: SelectedItem
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SelectedItem"
  nameWithType: Menu.SelectedItem
  fullName: System.Web.UI.WebControls.Menu.SelectedItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the selected menu item.
  remarks: "Use the SelectedItem property to determine the menu item selected by the user.  \n  \n> [!NOTE]\n>  As a shortcut, you can also determine the text of the selected menu item directly by using the <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> property.  \n  \n When the user selects a menu item from a <xref:System.Web.UI.WebControls.Menu> control, the <xref:System.Web.UI.WebControls.Menu.MenuItemClick> event is raised, which allows you to perform a custom routine by providing an event handler."
  example:
  - "The following code example demonstrates how to use the SelectedItem property to determine the selected menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuSelectedItem#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_958_1.aspx)]\n [!code-cs[MenuSelectedItem#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_958_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem SelectedItem { get; }
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.MenuItem&quot;></see> that represents the selected menu item."
  overload: System.Web.UI.WebControls.Menu.SelectedItem*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SelectedValue"
  nameWithType: Menu.SelectedValue
  fullName: System.Web.UI.WebControls.Menu.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the value of the selected menu item.
  remarks: Use the SelectedValue property as a shortcut to determine the text of the selected menu item. To access the other properties of the selected menu item, use the <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> property.
  example:
  - "The following code example demonstrates how to use the SelectedValue property to determine the text of the selected menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuSelectedItem#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_710_1.aspx)]\n [!code-cs[MenuSelectedItem#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_710_1.aspx)]"
  syntax:
    content: public string SelectedValue { get; }
    return:
      type: System.String
      description: "The value of the selected menu item. The default is &lt;xref:System.String&gt;, which indicates that no menu item is currently selected."
  overload: System.Web.UI.WebControls.Menu.SelectedValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)
  id: SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SetDesignModeState(IDictionary)"
  nameWithType: Menu.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.WebControls.Menu.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Sets design-time data for the <see cref="T:System.Web.UI.WebControls.Menu"></see> control.
  remarks: "This method overrides <xref:System.Web.UI.Control.SetDesignModeState%2A>.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control."
  syntax:
    content: protected override void SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> that contains state data for displaying the control."
  overload: System.Web.UI.WebControls.Menu.SetDesignModeState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)
  id: SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SetItemDataBound(MenuItem,Boolean)"
  nameWithType: Menu.SetItemDataBound(MenuItem,Boolean)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataBound(MenuItem,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Sets the &lt;xref:System.Web.UI.WebControls.MenuItem.DataBound%2A&gt; property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem"></see> object with the specified value.
  remarks: The SetItemDataBound method is a helper method used by derived classes to set the <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> property of the specified <xref:System.Web.UI.WebControls.MenuItem> object.
  syntax:
    content: protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.MenuItem
      description: "The  to set."
    - id: dataBound
      type: System.Boolean
      description: "\n     to set the node as data-bound; otherwise, ."
  overload: System.Web.UI.WebControls.Menu.SetItemDataBound*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)
  id: SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SetItemDataItem(MenuItem,Object)"
  nameWithType: Menu.SetItemDataItem(MenuItem,Object)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataItem(MenuItem,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Sets the &lt;xref:System.Web.UI.WebControls.MenuItem.DataItem%2A&gt; property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem"></see> object with the specified value.
  remarks: The SetItemDataItem method is a helper method used by derived classes to set the <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> property of the specified <xref:System.Web.UI.WebControls.MenuItem> object.
  syntax:
    content: protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.MenuItem
      description: "The  to set."
    - id: dataItem
      type: System.Object
      description: "The data item for the ."
  overload: System.Web.UI.WebControls.Menu.SetItemDataItem*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)
  id: SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SetItemDataPath(MenuItem,String)"
  nameWithType: Menu.SetItemDataPath(MenuItem,String)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataPath(MenuItem,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Sets the &lt;xref:System.Web.UI.WebControls.MenuItem.DataPath%2A&gt; property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem"></see> object with the specified value.
  remarks: The SetItemDataPath method is a helper method used by derived classes to set the <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> property of the specified <xref:System.Web.UI.WebControls.MenuItem> object.
  syntax:
    content: protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.MenuItem
      description: "The  to set."
    - id: dataPath
      type: System.String
      description: "The data path for the ."
  overload: System.Web.UI.WebControls.Menu.SetItemDataPath*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "SkipLinkText"
  nameWithType: Menu.SkipLinkText
  fullName: System.Web.UI.WebControls.Menu.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the alternate text for a hidden image read by screen readers to provide the ability to skip the list of links.
  remarks: "Use the SkipLinkText property to specify the alternate text for a hidden image read by screen readers to provide the ability to skip the list of links. The text that you specify provides assistive technology devices with a description of the hidden skip link image that can be used to make the control more accessible.  \n  \n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](../Topic/ASP.NET%20Globalization%20and%20Localization.md).  \n  \n The <xref:System.Web.UI.WebControls.Menu> control provides the SkipLinkText property as a way for the entire control to be skipped by screen readers. If the SkipLinkText property is set, an invisible image with alternate text is rendered, giving the user the option to jump to the end of the control. Screen readers read the alternate text aloud, and the image occupies only one pixel space. For pixel-precise control over the rendering of the page, set the SkipLinkText property to an empty string (\"\") and provide your own mechanism to skip the menu. The SkipLinkText property is set to the empty string by default."
  example:
  - "The following code example demonstrates how to use the SkipLinkText property to specify the alternate text for a hidden image read by screen readers to provide the ability to skip the list of links.  \n  \n [!code-cs[MenuSkipLinkText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_592_1.aspx)]\n [!code-vb[MenuSkipLinkText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_592_1.aspx)]"
  syntax:
    content: public string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "The alternate text of a hidden image read by screen readers to provide the ability to skip the list of links. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.SkipLinkText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl
  id: StaticBottomSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticBottomSeparatorImageUrl"
  nameWithType: Menu.StaticBottomSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image displayed as the separator at the bottom of each static menu item.
  remarks: "Use the StaticBottomSeparatorImageUrl property to specify a custom image to display at the bottom of each static menu item that acts as a separator between menu items.  \n  \n> [!NOTE]\n>  As an alternative, you can also display a separator image at the top of each static menu item by setting the <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the StaticBottomSeparatorImageUrl property to specify a separator image to display at the bottom of each static menu item.  \n  \n [!code-cs[MenuStaticBottomSeparatorImageUrl#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_870_1.aspx)]\n [!code-vb[MenuStaticBottomSeparatorImageUrl#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_870_1.aspx)]"
  syntax:
    content: public string StaticBottomSeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image displayed as the separator at the bottom of each static menu item. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticDisplayLevels
  id: StaticDisplayLevels
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticDisplayLevels"
  nameWithType: Menu.StaticDisplayLevels
  fullName: System.Web.UI.WebControls.Menu.StaticDisplayLevels
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the number of menu levels to display in a static menu.
  remarks: Use the StaticDisplayLevels property to specify the number of menu levels to display in a static menu. All menu levels below the specified value are displayed in a dynamic menu. You can also limit the number of menu levels to display in a dynamic menu by setting the <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> property.
  example:
  - "The following code example demonstrates how to use the StaticDisplayLevels property to display the first two menu levels in the static menu.  \n  \n [!code-vb[MenuStaticDisplayLevels#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1081_1.aspx)]\n [!code-cs[MenuStaticDisplayLevels#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1081_1.aspx)]"
  syntax:
    content: public int StaticDisplayLevels { get; set; }
    return:
      type: System.Int32
      description: "The number of menu levels to display in a static menu. The default is 1."
  overload: System.Web.UI.WebControls.Menu.StaticDisplayLevels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value is less than 1."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage
  id: StaticEnableDefaultPopOutImage
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticEnableDefaultPopOutImage"
  nameWithType: Menu.StaticEnableDefaultPopOutImage
  fullName: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the built-in image is displayed to indicate that a static menu item has a submenu.
  remarks: "When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. There are two ways to display this image:  \n  \n-   Set the StaticEnableDefaultPopOutImage property to `true` to use the built-in image (default).  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> property to specify a custom image.  \n  \n If the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> property is set, that image overrides the built-in image, regardless of the value of the StaticEnableDefaultPopOutImage property.  \n  \n> [!NOTE]\n>  If the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> property is not set and the StaticEnableDefaultPopOutImage property is set to `false`, no image is displayed.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> property."
  example:
  - "The following code example demonstrates how to use the StaticEnableDefaultPopOutImage property to hide the image that indicates that a static menu item has a submenu. The <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> property must also be set to an empty string (\"\") for the image to be hidden.  \n  \n [!code-cs[MenuStaticEnableDefaultPopOutImage#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_281_1.aspx)]\n [!code-vb[MenuStaticEnableDefaultPopOutImage#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_281_1.aspx)]"
  syntax:
    content: public bool StaticEnableDefaultPopOutImage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display the built-in image for static menu items with submenus; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticHoverStyle
  id: StaticHoverStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticHoverStyle"
  nameWithType: Menu.StaticHoverStyle
  fullName: System.Web.UI.WebControls.Menu.StaticHoverStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style"></see> object that allows you to set the appearance of a static menu item when the mouse pointer is positioned over it.
  remarks: "Use the StaticHoverStyle property to control the appearance of a static menu item when the mouse pointer is positioned over it. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.Style> object (for example, `StaticHoverStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `StaticHoverStyle.ForeColor`).  \n  \n Style properties for a static menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  StaticHoverStyle."
  example:
  - "The following code example demonstrates how to use the StaticHoverStyle property to change the background color of a static menu item to light sky blue when the user positions the mouse pointer over it.  \n  \n [!code-cs[MenuStaticHoverStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_275_1.aspx)]\n [!code-vb[MenuStaticHoverStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_275_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style StaticHoverStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.Style&quot;></see> that represents the style of a static menu item when the mouse pointer is positioned over it."
  overload: System.Web.UI.WebControls.Menu.StaticHoverStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticItemFormatString
  id: StaticItemFormatString
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticItemFormatString"
  nameWithType: Menu.StaticItemFormatString
  fullName: System.Web.UI.WebControls.Menu.StaticItemFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets additional text shown with all menu items that are statically displayed.
  remarks: "This property can be used to insert text to format static menu items in a menu. This is particularly useful for mobile devices. The <xref:System.Web.UI.WebControls.Menu> control supports templates for the display of static and dynamic menu items, but templates are ignored on mobile devices. This property allows you to add characters or text and to apply formatting to menu items for both mobile and desktop devices without using a template.  \n  \n> [!NOTE]\n>  To achieve consistent formatting when you use this property, you should also set the <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> property if you want the formatting to be identical between the static and dynamic menu items.  \n  \n If both template formatting and this property are applied, the template formatting is ignored for mobile devices."
  example:
  - "The following code example demonstrates how to use the StaticItemFormatString and <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> properties to add text to each menu item.  \n  \n [!code-cs[MenuItemFormatString#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_975_1.aspx)]\n [!code-vb[MenuItemFormatString#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_975_1.aspx)]"
  syntax:
    content: public string StaticItemFormatString { get; set; }
    return:
      type: System.String
      description: "The additional text or characters that appear with all menu items. The default value for this property is &quot;{0}.&quot;"
  overload: System.Web.UI.WebControls.Menu.StaticItemFormatString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticItemTemplate
  id: StaticItemTemplate
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticItemTemplate"
  nameWithType: Menu.StaticItemTemplate
  fullName: System.Web.UI.WebControls.Menu.StaticItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the template that contains the custom content to render for a static menu.
  remarks: Instead of using the built-in rendering for a static menu, you can define your own user interface (UI) for a static menu item by using the StaticItemTemplate property. To specify a custom template for a static menu item, first place `<StaticTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.Menu> control. You can then list the contents of the template between the opening and closing `<StaticTemplate>` tags. You can further control the style of a static menu by using the <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> property.
  syntax:
    content: public System.Web.UI.ITemplate StaticItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <see cref=&quot;T:System.Web.UI.ITemplate&quot;></see> that contains the custom content for a static menu. The default value is null, which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.StaticItemTemplate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticMenuItemStyle
  id: StaticMenuItemStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticMenuItemStyle"
  nameWithType: Menu.StaticMenuItemStyle
  fullName: System.Web.UI.WebControls.Menu.StaticMenuItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of the menu items in a static menu.
  remarks: "Use the StaticMenuItemStyle property to control the appearance of the menu items in a static menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `StaticMenuItemStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `StaticMenuItemStyle.ForeColor`).  \n  \n Style properties for a static menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  \n  \n2.  StaticMenuItemStyle. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>."
  example:
  - "The following code example demonstrates how to use the StaticMenuItemStyle property to specify a light sky blue background color for the menu items in a static menu.  \n  \n [!code-cs[MenuStaticMenuItemStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_903_1.aspx)]\n [!code-vb[MenuStaticMenuItemStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_903_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of the menu items in a static menu."
  overload: System.Web.UI.WebControls.Menu.StaticMenuItemStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticMenuStyle
  id: StaticMenuStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticMenuStyle"
  nameWithType: Menu.StaticMenuStyle
  fullName: System.Web.UI.WebControls.Menu.StaticMenuStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of a static menu.
  remarks: "Use the StaticMenuStyle property to control the appearance of a static menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `StaticMenuStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `StaticMenuStyle.ForeColor`).  \n  \n Style properties for a static menu item are applied in the following order:  \n  \n1.  StaticMenuStyle.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>."
  example:
  - "The following code example demonstrates how to use the StaticMenuStyle property to specify a light sky blue background color for the entire static menu.  \n  \n [!code-cs[MenuStaticMenuStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_1314_1.aspx)]\n [!code-vb[MenuStaticMenuStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_1314_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }
    return:
      type: System.Web.UI.WebControls.SubMenuStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of a static menu."
  overload: System.Web.UI.WebControls.Menu.StaticMenuStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString
  id: StaticPopOutImageTextFormatString
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticPopOutImageTextFormatString"
  nameWithType: Menu.StaticPopOutImageTextFormatString
  fullName: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the alternate text for the pop-out image used to indicate that a static menu item has a submenu.
  remarks: "When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. Use the StaticPopOutImageTextFormatString property to specify the alternate text for this image.  \n  \n There are two ways to display the image:  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> property to `true` to use the built-in image (default).  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> property to specify a custom image.  \n  \n> [!NOTE]\n>  This property applies to both the built-in image and the custom image."
  example:
  - "The following code example demonstrates how to use the StaticPopOutImageTextFormatString property to specify the alternate text for the image used to indicate that a static menu item has a submenu. This text is displayed as a ToolTip when the user positions the mouse pointer over the image.  \n  \n [!code-cs[MenuStaticPopoutImageText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_278_1.aspx)]\n [!code-vb[MenuStaticPopoutImageText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_278_1.aspx)]"
  syntax:
    content: public string StaticPopOutImageTextFormatString { get; set; }
    return:
      type: System.String
      description: "The alternate text for the pop-out image. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl
  id: StaticPopOutImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticPopOutImageUrl"
  nameWithType: Menu.StaticPopOutImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image displayed to indicate that a static menu item has a submenu.
  remarks: "When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. There are two ways to display this image:  \n  \n-   Set the <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> property to `true` to use the built-in image (default).  \n  \n-   Set the StaticPopOutImageUrl property to specify a custom image.  \n  \n If the StaticPopOutImageUrl property is set, that image overrides the built-in image, regardless of the value of the <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> property.  \n  \n If the StaticPopOutImageUrl property is not set and the <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> property is set to `false`, no image is displayed.  \n  \n> [!NOTE]\n>  When you set this property, use a slash mark (/) instead of a backslash (\\\\). If you use backslashes in the path, the specified image will not be displayed.  \n  \n You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> property."
  example:
  - "The following code example demonstrates how to use the StaticPopOutImageUrl property to specify a custom image to display in a static menu item when the menu item has a submenu.  \n  \n [!code-cs[MenuStaticPopoutImageText#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_216_1.aspx)]\n [!code-vb[MenuStaticPopoutImageText#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_216_1.aspx)]"
  syntax:
    content: public string StaticPopOutImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image displayed to indicate that a static menu item has a submenu. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticSelectedStyle
  id: StaticSelectedStyle
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticSelectedStyle"
  nameWithType: Menu.StaticSelectedStyle
  fullName: System.Web.UI.WebControls.Menu.StaticSelectedStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle"></see> object that allows you to set the appearance of the menu item selected by the user in a static menu.
  remarks: "Use the StaticSelectedStyle property to control the appearance of the menu item selected by the user in a static menu. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object (for example, `StaticSelectedStyle-ForeColor`). The properties can also be set programmatically in the form `Property.Subproperty` (for example, `StaticSelectedStyle.ForeColor`).  \n  \n Style properties for a static menu item are applied in the following order:  \n  \n1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  \n  \n2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n3.  StaticSelectedStyle. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  \n  \n4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  \n  \n> [!IMPORTANT]\n>  Breaking change below.  \n  \n Before .NET Framework 4.0, when defining an `<asp:Menu>` control in the .aspx file, users can set the `StaticSelectedStyle-CssClass` property to set the CSS class of the selected control item. For example, user may have a menu control as below:  \n  \n```  \n<asp:Menu ID=\"Menu1\" runat=\"server\" Orientation=\"Horizontal\"   \n    StaticMenuItemStyle-CssClass=\"MenuItem\"  \n    StaticSelectedStyle-CssClass=\"MenuItem_selected\"  \n    OnMenuItemClick=\"Menu1_MenuItemClick\" Style=\"margin-bottom: 0px\" EnableTheming=\"True\" ClientIDMode=\"Static\">  \n    <Items>  \n        <asp:MenuItem Text=\"item_0\" Value=\"0\" Selected=\"True\"></asp:MenuItem>  \n        <asp:MenuItem Text=\"itme_1\" Value=\"1\"></asp:MenuItem>  \n    </Items>  \n</asp:Menu>  \n```  \n  \n And the menu control is rendered as:  \n  \n```  \n<div id=\"Menu1\" style=\"margin-bottom: 0px\">  \n    <ul class=\"level1\">  \n        <li><a class=\"level1 MenuItem MenuItem_selected \" href=\"#\" onclick=\"__doPostBack('Menu1','0')\">item_0</a></li>  \n        <li><a class=\"level1 MenuItem\" href=\"#\" onclick=\"__doPostBack('Menu1','1')\">itme_1</a></li>  \n    </ul>  \n</div>  \n```  \n  \n However, in .NET Framework 4.0 and later, the selected menu item is set to the `selected` CSS class always instead of the class specified by `StaticSelectedStyle-CssClass`. Therefore, the above ASP.NET code is rendered instead as:  \n  \n```  \n<div id=\"Menu1\" style=\"margin-bottom: 0px\">  \n    <ul class=\"level1\">  \n        <li><a class=\"level1 MenuItem selected \" href=\"#\" onclick=\"__doPostBack('Menu1','0')\">item_0</a></li>  \n        <li><a class=\"level1 MenuItem\" href=\"#\" onclick=\"__doPostBack('Menu1','1')\">itme_1</a></li>  \n    </ul>  \n</div>  \n  \n```"
  example:
  - "The following code example demonstrates how to use the StaticSelectedStyle property to specify a light blue background color for the selected static menu item.  \n  \n [!code-cs[MenuStaticSelectedStyle#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_496_1.aspx)]\n [!code-vb[MenuStaticSelectedStyle#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_496_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }
    return:
      type: System.Web.UI.WebControls.MenuItemStyle
      description: "A reference to the <see cref=&quot;T:System.Web.UI.WebControls.MenuItemStyle&quot;></see> that represents the style of the selected menu item in a static menu."
  overload: System.Web.UI.WebControls.Menu.StaticSelectedStyle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticSubMenuIndent
  id: StaticSubMenuIndent
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticSubMenuIndent"
  nameWithType: Menu.StaticSubMenuIndent
  fullName: System.Web.UI.WebControls.Menu.StaticSubMenuIndent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the amount of space, in pixels, to indent submenus within a static menu.
  remarks: When the static menu displays more than one menu level (if the <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> property is set to a value higher than 1), use the StaticSubMenuIndent property to specify the number of pixels by which to indent the submenu items within the static menu.
  example:
  - "The following code example demonstrates how to use the StaticSubMenuIndent property to indent the submenu items in a static menu by 10 pixels.  \n  \n [!code-cs[MenuStaticSubMenuIndent#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_73_1.aspx)]\n [!code-vb[MenuStaticSubMenuIndent#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_73_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <see cref=&quot;T:System.Web.UI.WebControls.Unit&quot;></see> that represents the amount of space, in pixels, to indent submenus within a static menu. The default is 0."
  overload: System.Web.UI.WebControls.Menu.StaticSubMenuIndent*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the selected  is less than 0."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl
  id: StaticTopSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "StaticTopSeparatorImageUrl"
  nameWithType: Menu.StaticTopSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL to an image displayed as the separator at the top of each static menu item.
  remarks: "Use the StaticTopSeparatorImageUrl property to specify a custom image to display at the top of each static menu item that acts as a separator between menu items.  \n  \n> [!NOTE]\n>  As an alternative, you can also display a separator image at the bottom of each static menu item by setting the <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the StaticTopSeparatorImageUrl property to specify a separator image to display at the top of each static menu item.  \n  \n [!code-vb[MenuStaticTopSeparatorImageUrl#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_44_1.aspx)]\n [!code-cs[MenuStaticTopSeparatorImageUrl#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_44_1.aspx)]"
  syntax:
    content: public string StaticTopSeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image displayed as the separator at the top of each static menu item. The default value is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)"
  nameWithType: Menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Processes an event raised when a form is posted to the server.
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "A <xref:System.String> that represents the event argument passed to the event handler."
  overload: System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "TagKey"
  nameWithType: Menu.TagKey
  fullName: System.Web.UI.WebControls.Menu.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"></see> value that corresponds to a <see cref="T:System.Web.UI.WebControls.Menu"></see> control. This property is used primarily by control developers.
  remarks: Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value that is associated with a <xref:System.Web.UI.WebControls.Menu> control. This property is used primarily by control developers.
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Always returns <xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Menu.TagKey*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.Target
  id: Target
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "Target"
  nameWithType: Menu.Target
  fullName: System.Web.UI.WebControls.Menu.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the target window or frame in which to display the Web page content associated with a menu item.
  remarks: "Use the Target property to specify the window or frame in which to display the Web content linked to a menu item when that menu item is clicked. Values must begin with a letter in the range of A through Z (case-insensitive), except for certain special values that begin with an underscore, as shown in the following table.  \n  \n|Target value|Description|  \n|------------------|-----------------|  \n|`_blank`|Renders the content in a new window without frames.|  \n|`_parent`|Renders the content in the immediate frameset parent.|  \n|`_search`|Renders the content in the search pane.|  \n|`_self`|Renders the content in the frame with focus.|  \n|`_top`|Renders the content in the full window without frames.|  \n  \n> [!NOTE]\n>  Check your browser documentation to determine if the `_search` value is supported.  For example, Internet Explorer versions 5.0 and above support the `_search` target value  \n  \n This property applies to all menu items in a <xref:System.Web.UI.WebControls.Menu> control. You can selectively override this property by setting the <xref:System.Web.UI.WebControls.MenuItem.Target%2A> property of each <xref:System.Web.UI.WebControls.MenuItem> object directly.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.MenuItem.Target%2A> property renders as a target attribute. The target attribute on anchor elements is not allowed in the XHTML 1.1 strict document type definition. If rendered output must conform to XHTML or accessibility standards, do not set the <xref:System.Web.UI.WebControls.MenuItem.Target%2A> property. For more information, see [XHTML Standards in Visual Studio and ASP.NET](../Topic/XHTML%20Standards%20in%20Visual%20Studio%20and%20ASP.NET.md) and [Accessibility in Visual Studio and ASP.NET](../Topic/Accessibility%20in%20Visual%20Studio%20and%20ASP.NET.md)."
  example:
  - "The following code example demonstrates how to use the Target property to specify that the content linked to each menu item should be displayed in a new window when the user clicks that menu item.  \n  \n [!code-cs[MenuTarget#1](~/add/codesnippet/CSharp/p-system.web.ui.webcontr_882_1.aspx)]\n [!code-vb[MenuTarget#1](~/add/codesnippet/VisualBasic/p-system.web.ui.webcontr_882_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "The target window or frame in which to display the linked Web page content. The default value is an empty string (&quot;&quot;), which refreshes the window or frame with focus."
  overload: System.Web.UI.WebControls.Menu.Target*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Menu.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.Menu
  langs:
  - csharp
  name: "TrackViewState()"
  nameWithType: Menu.TrackViewState()
  fullName: System.Web.UI.WebControls.Menu.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.Menu"></see> control so they can be stored in the control's <see cref="T:System.Web.UI.StateBag"></see> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property.
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.Menu.TrackViewState*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.UI.WebControls.HierarchicalDataBoundControl
  isExternal: false
  name: "System.Web.UI.WebControls.HierarchicalDataBoundControl"
- uid: System.Web.UI.WebControls.Menu.#ctor
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Menu()"
  nameWithType: Menu.Menu()
  fullName: System.Web.UI.WebControls.Menu.Menu()
- uid: System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "AddAttributesToRender(HtmlTextWriter)"
  nameWithType: Menu.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: "HtmlTextWriter"
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Menu.Controls
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Controls"
  nameWithType: Menu.Controls
  fullName: System.Web.UI.WebControls.Menu.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: "ControlCollection"
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Menu.CreateChildControls
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "CreateChildControls()"
  nameWithType: Menu.CreateChildControls()
  fullName: System.Web.UI.WebControls.Menu.CreateChildControls()
- uid: System.Web.UI.WebControls.Menu.DataBind
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DataBind()"
  nameWithType: Menu.DataBind()
  fullName: System.Web.UI.WebControls.Menu.DataBind()
- uid: System.Web.UI.WebControls.Menu.DataBindings
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DataBindings"
  nameWithType: Menu.DataBindings
  fullName: System.Web.UI.WebControls.Menu.DataBindings
- uid: System.Web.UI.WebControls.MenuItemBindingCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuItemBindingCollection"
  nameWithType: MenuItemBindingCollection
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection
- uid: System.Web.UI.WebControls.Menu.DisappearAfter
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DisappearAfter"
  nameWithType: Menu.DisappearAfter
  fullName: System.Web.UI.WebControls.Menu.DisappearAfter
- uid: System.Int32
  parent: System
  isExternal: true
  name: "Int32"
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicBottomSeparatorImageUrl"
  nameWithType: Menu.DynamicBottomSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicEnableDefaultPopOutImage"
  nameWithType: Menu.DynamicEnableDefaultPopOutImage
  fullName: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage
- uid: System.Boolean
  parent: System
  isExternal: true
  name: "Boolean"
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicHorizontalOffset"
  nameWithType: Menu.DynamicHorizontalOffset
  fullName: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset
- uid: System.Web.UI.WebControls.Menu.DynamicHoverStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicHoverStyle"
  nameWithType: Menu.DynamicHoverStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicHoverStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "Style"
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.Menu.DynamicItemFormatString
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicItemFormatString"
  nameWithType: Menu.DynamicItemFormatString
  fullName: System.Web.UI.WebControls.Menu.DynamicItemFormatString
- uid: System.Web.UI.WebControls.Menu.DynamicItemTemplate
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicItemTemplate"
  nameWithType: Menu.DynamicItemTemplate
  fullName: System.Web.UI.WebControls.Menu.DynamicItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: "ITemplate"
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicMenuItemStyle"
  nameWithType: Menu.DynamicMenuItemStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle
- uid: System.Web.UI.WebControls.MenuItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuItemStyle"
  nameWithType: MenuItemStyle
  fullName: System.Web.UI.WebControls.MenuItemStyle
- uid: System.Web.UI.WebControls.Menu.DynamicMenuStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicMenuStyle"
  nameWithType: Menu.DynamicMenuStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicMenuStyle
- uid: System.Web.UI.WebControls.SubMenuStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "SubMenuStyle"
  nameWithType: SubMenuStyle
  fullName: System.Web.UI.WebControls.SubMenuStyle
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicPopOutImageTextFormatString"
  nameWithType: Menu.DynamicPopOutImageTextFormatString
  fullName: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicPopOutImageUrl"
  nameWithType: Menu.DynamicPopOutImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl
- uid: System.Web.UI.WebControls.Menu.DynamicSelectedStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicSelectedStyle"
  nameWithType: Menu.DynamicSelectedStyle
  fullName: System.Web.UI.WebControls.Menu.DynamicSelectedStyle
- uid: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicTopSeparatorImageUrl"
  nameWithType: Menu.DynamicTopSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.DynamicVerticalOffset
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicVerticalOffset"
  nameWithType: Menu.DynamicVerticalOffset
  fullName: System.Web.UI.WebControls.Menu.DynamicVerticalOffset
- uid: System.Web.UI.WebControls.Menu.EnsureDataBound
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "EnsureDataBound()"
  nameWithType: Menu.EnsureDataBound()
  fullName: System.Web.UI.WebControls.Menu.EnsureDataBound()
- uid: System.Web.UI.WebControls.Menu.FindItem(System.String)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "FindItem(String)"
  nameWithType: Menu.FindItem(String)
  fullName: System.Web.UI.WebControls.Menu.FindItem(String)
- uid: System.Web.UI.WebControls.MenuItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuItem"
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
- uid: System.Web.UI.WebControls.Menu.GetDesignModeState
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "GetDesignModeState()"
  nameWithType: Menu.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Menu.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: "IDictionary"
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.Menu.IncludeStyleBlock
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "IncludeStyleBlock"
  nameWithType: Menu.IncludeStyleBlock
  fullName: System.Web.UI.WebControls.Menu.IncludeStyleBlock
- uid: System.Web.UI.WebControls.Menu.Items
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Items"
  nameWithType: Menu.Items
  fullName: System.Web.UI.WebControls.Menu.Items
- uid: System.Web.UI.WebControls.MenuItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuItemCollection"
  nameWithType: MenuItemCollection
  fullName: System.Web.UI.WebControls.MenuItemCollection
- uid: System.Web.UI.WebControls.Menu.ItemWrap
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ItemWrap"
  nameWithType: Menu.ItemWrap
  fullName: System.Web.UI.WebControls.Menu.ItemWrap
- uid: System.Web.UI.WebControls.Menu.LevelMenuItemStyles
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelMenuItemStyles"
  nameWithType: Menu.LevelMenuItemStyles
  fullName: System.Web.UI.WebControls.Menu.LevelMenuItemStyles
- uid: System.Web.UI.WebControls.MenuItemStyleCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuItemStyleCollection"
  nameWithType: MenuItemStyleCollection
  fullName: System.Web.UI.WebControls.MenuItemStyleCollection
- uid: System.Web.UI.WebControls.Menu.LevelSelectedStyles
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelSelectedStyles"
  nameWithType: Menu.LevelSelectedStyles
  fullName: System.Web.UI.WebControls.Menu.LevelSelectedStyles
- uid: System.Web.UI.WebControls.Menu.LevelSubMenuStyles
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelSubMenuStyles"
  nameWithType: Menu.LevelSubMenuStyles
  fullName: System.Web.UI.WebControls.Menu.LevelSubMenuStyles
- uid: System.Web.UI.WebControls.SubMenuStyleCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "SubMenuStyleCollection"
  nameWithType: SubMenuStyleCollection
  fullName: System.Web.UI.WebControls.SubMenuStyleCollection
- uid: System.Web.UI.WebControls.Menu.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LoadControlState(Object)"
  nameWithType: Menu.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.Menu.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: "Object"
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Menu.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LoadViewState(Object)"
  nameWithType: Menu.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.Menu.LoadViewState(Object)
- uid: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "MaximumDynamicDisplayLevels"
  nameWithType: Menu.MaximumDynamicDisplayLevels
  fullName: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels
- uid: System.Web.UI.WebControls.Menu.MenuItemClick
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "MenuItemClick"
  nameWithType: Menu.MenuItemClick
  fullName: System.Web.UI.WebControls.Menu.MenuItemClick
- uid: System.Web.UI.WebControls.MenuEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuEventHandler"
  nameWithType: MenuEventHandler
  fullName: System.Web.UI.WebControls.MenuEventHandler
- uid: System.Web.UI.WebControls.Menu.MenuItemClickCommandName
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "MenuItemClickCommandName"
  nameWithType: Menu.MenuItemClickCommandName
  fullName: System.Web.UI.WebControls.Menu.MenuItemClickCommandName
- uid: System.Web.UI.WebControls.Menu.MenuItemDataBound
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "MenuItemDataBound"
  nameWithType: Menu.MenuItemDataBound
  fullName: System.Web.UI.WebControls.Menu.MenuItemDataBound
- uid: System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnBubbleEvent(Object,EventArgs)"
  nameWithType: Menu.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: "EventArgs"
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnDataBinding(EventArgs)"
  nameWithType: Menu.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnDataBinding(EventArgs)
- uid: System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnInit(EventArgs)"
  nameWithType: Menu.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnMenuItemClick(MenuEventArgs)"
  nameWithType: Menu.OnMenuItemClick(MenuEventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnMenuItemClick(MenuEventArgs)
- uid: System.Web.UI.WebControls.MenuEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuEventArgs"
  nameWithType: MenuEventArgs
  fullName: System.Web.UI.WebControls.MenuEventArgs
- uid: System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnMenuItemDataBound(MenuEventArgs)"
  nameWithType: Menu.OnMenuItemDataBound(MenuEventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnMenuItemDataBound(MenuEventArgs)
- uid: System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnPreRender(EventArgs)"
  nameWithType: Menu.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Menu.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Menu.Orientation
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Orientation"
  nameWithType: Menu.Orientation
  fullName: System.Web.UI.WebControls.Menu.Orientation
- uid: System.Web.UI.WebControls.Orientation
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "Orientation"
  nameWithType: Orientation
  fullName: System.Web.UI.WebControls.Orientation
- uid: System.Web.UI.WebControls.Menu.PathSeparator
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "PathSeparator"
  nameWithType: Menu.PathSeparator
  fullName: System.Web.UI.WebControls.Menu.PathSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: "Char"
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.WebControls.Menu.PerformDataBinding
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "PerformDataBinding()"
  nameWithType: Menu.PerformDataBinding()
  fullName: System.Web.UI.WebControls.Menu.PerformDataBinding()
- uid: System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RaisePostBackEvent(String)"
  nameWithType: Menu.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Menu.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Render(HtmlTextWriter)"
  nameWithType: Menu.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.Render(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderBeginTag(HtmlTextWriter)"
  nameWithType: Menu.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderContents(HtmlTextWriter)"
  nameWithType: Menu.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderEndTag(HtmlTextWriter)"
  nameWithType: Menu.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Menu.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Menu.RenderingMode
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderingMode"
  nameWithType: Menu.RenderingMode
  fullName: System.Web.UI.WebControls.Menu.RenderingMode
- uid: System.Web.UI.WebControls.MenuRenderingMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "MenuRenderingMode"
  nameWithType: MenuRenderingMode
  fullName: System.Web.UI.WebControls.MenuRenderingMode
- uid: System.Web.UI.WebControls.Menu.SaveControlState
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SaveControlState()"
  nameWithType: Menu.SaveControlState()
  fullName: System.Web.UI.WebControls.Menu.SaveControlState()
- uid: System.Web.UI.WebControls.Menu.SaveViewState
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SaveViewState()"
  nameWithType: Menu.SaveViewState()
  fullName: System.Web.UI.WebControls.Menu.SaveViewState()
- uid: System.Web.UI.WebControls.Menu.ScrollDownImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollDownImageUrl"
  nameWithType: Menu.ScrollDownImageUrl
  fullName: System.Web.UI.WebControls.Menu.ScrollDownImageUrl
- uid: System.Web.UI.WebControls.Menu.ScrollDownText
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollDownText"
  nameWithType: Menu.ScrollDownText
  fullName: System.Web.UI.WebControls.Menu.ScrollDownText
- uid: System.Web.UI.WebControls.Menu.ScrollUpImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollUpImageUrl"
  nameWithType: Menu.ScrollUpImageUrl
  fullName: System.Web.UI.WebControls.Menu.ScrollUpImageUrl
- uid: System.Web.UI.WebControls.Menu.ScrollUpText
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollUpText"
  nameWithType: Menu.ScrollUpText
  fullName: System.Web.UI.WebControls.Menu.ScrollUpText
- uid: System.Web.UI.WebControls.Menu.SelectedItem
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SelectedItem"
  nameWithType: Menu.SelectedItem
  fullName: System.Web.UI.WebControls.Menu.SelectedItem
- uid: System.Web.UI.WebControls.Menu.SelectedValue
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SelectedValue"
  nameWithType: Menu.SelectedValue
  fullName: System.Web.UI.WebControls.Menu.SelectedValue
- uid: System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetDesignModeState(IDictionary)"
  nameWithType: Menu.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.WebControls.Menu.SetDesignModeState(IDictionary)
- uid: System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataBound(MenuItem,Boolean)"
  nameWithType: Menu.SetItemDataBound(MenuItem,Boolean)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataBound(MenuItem,Boolean)
- uid: System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataItem(MenuItem,Object)"
  nameWithType: Menu.SetItemDataItem(MenuItem,Object)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataItem(MenuItem,Object)
- uid: System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataPath(MenuItem,String)"
  nameWithType: Menu.SetItemDataPath(MenuItem,String)
  fullName: System.Web.UI.WebControls.Menu.SetItemDataPath(MenuItem,String)
- uid: System.Web.UI.WebControls.Menu.SkipLinkText
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SkipLinkText"
  nameWithType: Menu.SkipLinkText
  fullName: System.Web.UI.WebControls.Menu.SkipLinkText
- uid: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticBottomSeparatorImageUrl"
  nameWithType: Menu.StaticBottomSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.StaticDisplayLevels
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticDisplayLevels"
  nameWithType: Menu.StaticDisplayLevels
  fullName: System.Web.UI.WebControls.Menu.StaticDisplayLevels
- uid: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticEnableDefaultPopOutImage"
  nameWithType: Menu.StaticEnableDefaultPopOutImage
  fullName: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage
- uid: System.Web.UI.WebControls.Menu.StaticHoverStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticHoverStyle"
  nameWithType: Menu.StaticHoverStyle
  fullName: System.Web.UI.WebControls.Menu.StaticHoverStyle
- uid: System.Web.UI.WebControls.Menu.StaticItemFormatString
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticItemFormatString"
  nameWithType: Menu.StaticItemFormatString
  fullName: System.Web.UI.WebControls.Menu.StaticItemFormatString
- uid: System.Web.UI.WebControls.Menu.StaticItemTemplate
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticItemTemplate"
  nameWithType: Menu.StaticItemTemplate
  fullName: System.Web.UI.WebControls.Menu.StaticItemTemplate
- uid: System.Web.UI.WebControls.Menu.StaticMenuItemStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticMenuItemStyle"
  nameWithType: Menu.StaticMenuItemStyle
  fullName: System.Web.UI.WebControls.Menu.StaticMenuItemStyle
- uid: System.Web.UI.WebControls.Menu.StaticMenuStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticMenuStyle"
  nameWithType: Menu.StaticMenuStyle
  fullName: System.Web.UI.WebControls.Menu.StaticMenuStyle
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticPopOutImageTextFormatString"
  nameWithType: Menu.StaticPopOutImageTextFormatString
  fullName: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticPopOutImageUrl"
  nameWithType: Menu.StaticPopOutImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl
- uid: System.Web.UI.WebControls.Menu.StaticSelectedStyle
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticSelectedStyle"
  nameWithType: Menu.StaticSelectedStyle
  fullName: System.Web.UI.WebControls.Menu.StaticSelectedStyle
- uid: System.Web.UI.WebControls.Menu.StaticSubMenuIndent
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticSubMenuIndent"
  nameWithType: Menu.StaticSubMenuIndent
  fullName: System.Web.UI.WebControls.Menu.StaticSubMenuIndent
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: "Unit"
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticTopSeparatorImageUrl"
  nameWithType: Menu.StaticTopSeparatorImageUrl
  fullName: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)"
  nameWithType: Menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Menu.TagKey
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "TagKey"
  nameWithType: Menu.TagKey
  fullName: System.Web.UI.WebControls.Menu.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: "HtmlTextWriterTag"
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.Menu.Target
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Target"
  nameWithType: Menu.Target
  fullName: System.Web.UI.WebControls.Menu.Target
- uid: System.Web.UI.WebControls.Menu.TrackViewState
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "TrackViewState()"
  nameWithType: Menu.TrackViewState()
  fullName: System.Web.UI.WebControls.Menu.TrackViewState()
- uid: System.Web.UI.WebControls.Menu.#ctor*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Menu"
  nameWithType: Menu.Menu
- uid: System.Web.UI.WebControls.Menu.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "AddAttributesToRender"
  nameWithType: Menu.AddAttributesToRender
- uid: System.Web.UI.WebControls.Menu.Controls*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Controls"
  nameWithType: Menu.Controls
- uid: System.Web.UI.WebControls.Menu.CreateChildControls*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "CreateChildControls"
  nameWithType: Menu.CreateChildControls
- uid: System.Web.UI.WebControls.Menu.DataBind*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DataBind"
  nameWithType: Menu.DataBind
- uid: System.Web.UI.WebControls.Menu.DataBindings*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DataBindings"
  nameWithType: Menu.DataBindings
- uid: System.Web.UI.WebControls.Menu.DisappearAfter*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DisappearAfter"
  nameWithType: Menu.DisappearAfter
- uid: System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicBottomSeparatorImageUrl"
  nameWithType: Menu.DynamicBottomSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicEnableDefaultPopOutImage"
  nameWithType: Menu.DynamicEnableDefaultPopOutImage
- uid: System.Web.UI.WebControls.Menu.DynamicHorizontalOffset*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicHorizontalOffset"
  nameWithType: Menu.DynamicHorizontalOffset
- uid: System.Web.UI.WebControls.Menu.DynamicHoverStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicHoverStyle"
  nameWithType: Menu.DynamicHoverStyle
- uid: System.Web.UI.WebControls.Menu.DynamicItemFormatString*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicItemFormatString"
  nameWithType: Menu.DynamicItemFormatString
- uid: System.Web.UI.WebControls.Menu.DynamicItemTemplate*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicItemTemplate"
  nameWithType: Menu.DynamicItemTemplate
- uid: System.Web.UI.WebControls.Menu.DynamicMenuItemStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicMenuItemStyle"
  nameWithType: Menu.DynamicMenuItemStyle
- uid: System.Web.UI.WebControls.Menu.DynamicMenuStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicMenuStyle"
  nameWithType: Menu.DynamicMenuStyle
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicPopOutImageTextFormatString"
  nameWithType: Menu.DynamicPopOutImageTextFormatString
- uid: System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicPopOutImageUrl"
  nameWithType: Menu.DynamicPopOutImageUrl
- uid: System.Web.UI.WebControls.Menu.DynamicSelectedStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicSelectedStyle"
  nameWithType: Menu.DynamicSelectedStyle
- uid: System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicTopSeparatorImageUrl"
  nameWithType: Menu.DynamicTopSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.DynamicVerticalOffset*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "DynamicVerticalOffset"
  nameWithType: Menu.DynamicVerticalOffset
- uid: System.Web.UI.WebControls.Menu.EnsureDataBound*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "EnsureDataBound"
  nameWithType: Menu.EnsureDataBound
- uid: System.Web.UI.WebControls.Menu.FindItem*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "FindItem"
  nameWithType: Menu.FindItem
- uid: System.Web.UI.WebControls.Menu.GetDesignModeState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "GetDesignModeState"
  nameWithType: Menu.GetDesignModeState
- uid: System.Web.UI.WebControls.Menu.IncludeStyleBlock*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "IncludeStyleBlock"
  nameWithType: Menu.IncludeStyleBlock
- uid: System.Web.UI.WebControls.Menu.Items*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Items"
  nameWithType: Menu.Items
- uid: System.Web.UI.WebControls.Menu.ItemWrap*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ItemWrap"
  nameWithType: Menu.ItemWrap
- uid: System.Web.UI.WebControls.Menu.LevelMenuItemStyles*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelMenuItemStyles"
  nameWithType: Menu.LevelMenuItemStyles
- uid: System.Web.UI.WebControls.Menu.LevelSelectedStyles*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelSelectedStyles"
  nameWithType: Menu.LevelSelectedStyles
- uid: System.Web.UI.WebControls.Menu.LevelSubMenuStyles*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LevelSubMenuStyles"
  nameWithType: Menu.LevelSubMenuStyles
- uid: System.Web.UI.WebControls.Menu.LoadControlState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LoadControlState"
  nameWithType: Menu.LoadControlState
- uid: System.Web.UI.WebControls.Menu.LoadViewState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "LoadViewState"
  nameWithType: Menu.LoadViewState
- uid: System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "MaximumDynamicDisplayLevels"
  nameWithType: Menu.MaximumDynamicDisplayLevels
- uid: System.Web.UI.WebControls.Menu.OnBubbleEvent*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnBubbleEvent"
  nameWithType: Menu.OnBubbleEvent
- uid: System.Web.UI.WebControls.Menu.OnDataBinding*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnDataBinding"
  nameWithType: Menu.OnDataBinding
- uid: System.Web.UI.WebControls.Menu.OnInit*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnInit"
  nameWithType: Menu.OnInit
- uid: System.Web.UI.WebControls.Menu.OnMenuItemClick*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnMenuItemClick"
  nameWithType: Menu.OnMenuItemClick
- uid: System.Web.UI.WebControls.Menu.OnMenuItemDataBound*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnMenuItemDataBound"
  nameWithType: Menu.OnMenuItemDataBound
- uid: System.Web.UI.WebControls.Menu.OnPreRender*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "OnPreRender"
  nameWithType: Menu.OnPreRender
- uid: System.Web.UI.WebControls.Menu.Orientation*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Orientation"
  nameWithType: Menu.Orientation
- uid: System.Web.UI.WebControls.Menu.PathSeparator*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "PathSeparator"
  nameWithType: Menu.PathSeparator
- uid: System.Web.UI.WebControls.Menu.PerformDataBinding*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "PerformDataBinding"
  nameWithType: Menu.PerformDataBinding
- uid: System.Web.UI.WebControls.Menu.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RaisePostBackEvent"
  nameWithType: Menu.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Menu.Render*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Render"
  nameWithType: Menu.Render
- uid: System.Web.UI.WebControls.Menu.RenderBeginTag*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderBeginTag"
  nameWithType: Menu.RenderBeginTag
- uid: System.Web.UI.WebControls.Menu.RenderContents*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderContents"
  nameWithType: Menu.RenderContents
- uid: System.Web.UI.WebControls.Menu.RenderEndTag*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderEndTag"
  nameWithType: Menu.RenderEndTag
- uid: System.Web.UI.WebControls.Menu.RenderingMode*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "RenderingMode"
  nameWithType: Menu.RenderingMode
- uid: System.Web.UI.WebControls.Menu.SaveControlState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SaveControlState"
  nameWithType: Menu.SaveControlState
- uid: System.Web.UI.WebControls.Menu.SaveViewState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SaveViewState"
  nameWithType: Menu.SaveViewState
- uid: System.Web.UI.WebControls.Menu.ScrollDownImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollDownImageUrl"
  nameWithType: Menu.ScrollDownImageUrl
- uid: System.Web.UI.WebControls.Menu.ScrollDownText*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollDownText"
  nameWithType: Menu.ScrollDownText
- uid: System.Web.UI.WebControls.Menu.ScrollUpImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollUpImageUrl"
  nameWithType: Menu.ScrollUpImageUrl
- uid: System.Web.UI.WebControls.Menu.ScrollUpText*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "ScrollUpText"
  nameWithType: Menu.ScrollUpText
- uid: System.Web.UI.WebControls.Menu.SelectedItem*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SelectedItem"
  nameWithType: Menu.SelectedItem
- uid: System.Web.UI.WebControls.Menu.SelectedValue*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SelectedValue"
  nameWithType: Menu.SelectedValue
- uid: System.Web.UI.WebControls.Menu.SetDesignModeState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetDesignModeState"
  nameWithType: Menu.SetDesignModeState
- uid: System.Web.UI.WebControls.Menu.SetItemDataBound*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataBound"
  nameWithType: Menu.SetItemDataBound
- uid: System.Web.UI.WebControls.Menu.SetItemDataItem*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataItem"
  nameWithType: Menu.SetItemDataItem
- uid: System.Web.UI.WebControls.Menu.SetItemDataPath*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SetItemDataPath"
  nameWithType: Menu.SetItemDataPath
- uid: System.Web.UI.WebControls.Menu.SkipLinkText*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "SkipLinkText"
  nameWithType: Menu.SkipLinkText
- uid: System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticBottomSeparatorImageUrl"
  nameWithType: Menu.StaticBottomSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.StaticDisplayLevels*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticDisplayLevels"
  nameWithType: Menu.StaticDisplayLevels
- uid: System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticEnableDefaultPopOutImage"
  nameWithType: Menu.StaticEnableDefaultPopOutImage
- uid: System.Web.UI.WebControls.Menu.StaticHoverStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticHoverStyle"
  nameWithType: Menu.StaticHoverStyle
- uid: System.Web.UI.WebControls.Menu.StaticItemFormatString*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticItemFormatString"
  nameWithType: Menu.StaticItemFormatString
- uid: System.Web.UI.WebControls.Menu.StaticItemTemplate*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticItemTemplate"
  nameWithType: Menu.StaticItemTemplate
- uid: System.Web.UI.WebControls.Menu.StaticMenuItemStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticMenuItemStyle"
  nameWithType: Menu.StaticMenuItemStyle
- uid: System.Web.UI.WebControls.Menu.StaticMenuStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticMenuStyle"
  nameWithType: Menu.StaticMenuStyle
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticPopOutImageTextFormatString"
  nameWithType: Menu.StaticPopOutImageTextFormatString
- uid: System.Web.UI.WebControls.Menu.StaticPopOutImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticPopOutImageUrl"
  nameWithType: Menu.StaticPopOutImageUrl
- uid: System.Web.UI.WebControls.Menu.StaticSelectedStyle*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticSelectedStyle"
  nameWithType: Menu.StaticSelectedStyle
- uid: System.Web.UI.WebControls.Menu.StaticSubMenuIndent*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticSubMenuIndent"
  nameWithType: Menu.StaticSubMenuIndent
- uid: System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "StaticTopSeparatorImageUrl"
  nameWithType: Menu.StaticTopSeparatorImageUrl
- uid: System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "System.Web.UI.IPostBackEventHandler.RaisePostBackEvent"
  nameWithType: Menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Menu.TagKey*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "TagKey"
  nameWithType: Menu.TagKey
- uid: System.Web.UI.WebControls.Menu.Target*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "Target"
  nameWithType: Menu.Target
- uid: System.Web.UI.WebControls.Menu.TrackViewState*
  parent: System.Web.UI.WebControls.Menu
  isExternal: false
  name: "TrackViewState"
  nameWithType: Menu.TrackViewState
