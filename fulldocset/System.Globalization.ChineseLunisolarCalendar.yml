### YamlMime:ManagedReference
items:
- uid: System.Globalization.ChineseLunisolarCalendar
  id: ChineseLunisolarCalendar
  children:
  - System.Globalization.ChineseLunisolarCalendar.#ctor
  - System.Globalization.ChineseLunisolarCalendar.ChineseEra
  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.ChineseLunisolarCalendar.Eras
  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar
  fullName: System.Globalization.ChineseLunisolarCalendar
  type: Class
  summary: "Rappresenta il tempo in suddivisioni, come mesi, giorni e anni. Gli anni vengono calcolati utilizzando il calendario cinese, mentre i giorni e i mesi vengono calcolati utilizzando il calendario lunisolare."
  remarks: "La classe ChineseLunisolarCalendar è derivata dal <xref:System.Globalization.EastAsianLunisolarCalendar>(classe), che rappresenta il calendario lunisolare.</xref:System.Globalization.EastAsianLunisolarCalendar> La <xref:System.Globalization.EastAsianLunisolarCalendar>classe supporta il ciclo sessagenario (che si ripete ogni 60 anni) oltre agli anni solari e lunari mesi.</xref:System.Globalization.EastAsianLunisolarCalendar> Ogni anno solare il calendario è associata a un anno sessagenario un tronco celeste e un ramo terrestre e i calendari possono avere qualsiasi mese dell&quot;anno bisestile mesi. La classe ChineseLunisolarCalendar calcola gli anni in base a calcoli solari e mesi e giorni in base a calcoli lunari.      > [!NOTE] > Per informazioni sull&quot;utilizzo della classe ChineseLunisolarCalendar e le altre classi di calendario in .NET Framework, vedere [utilizzo di calendari](~/add/includes/ajax-current-ext-md.md).       Un mese intercalare può verificarsi dopo un mese di un anno. Ad esempio, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metodo restituisce un numero compreso tra 1 e 13 che indica il mese associato a una data specificata.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se non c&quot;è un mese intercalare tra l&quot;ottavo e nono mesi dell&quot;anno, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>restituisce 8 per il mese ottavo, 9 per l&quot;ottavo mese intercalare e 10 per il mese nono.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Attualmente, il ChineseLunisolarCalendar non è utilizzata da qualsiasi lingua supportata dalla <xref:System.Globalization.CultureInfo>classe.</xref:System.Globalization.CultureInfo> Pertanto, questa classe può essere utilizzata solo per calcolare le date in base al calendario lunisolare cinese.       Ogni <xref:System.Globalization.CultureInfo>oggetto supporta un set di calendari.</xref:System.Globalization.CultureInfo> Il <xref:System.Globalization.CultureInfo.Calendar%2A>proprietà restituisce il calendario predefinito per le impostazioni cultura e <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>proprietà restituisce una matrice contenente tutti i calendari supportati dalle impostazioni cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Per modificare il calendario utilizzato da un oggetto <xref:System.Globalization.CultureInfo>l&quot;applicazione deve impostare la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>proprietà <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>di un nuovo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public ChineseLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.ChineseLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  id: ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Specifica l&quot;era che corrisponde all&quot;oggetto corrente <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> oggetto."
  remarks: "Il valore di questo campo è 1.       La <xref:System.Globalization.ChineseLunisolarCalendar>classe riconosce solo l&quot;era corrente.</xref:System.Globalization.ChineseLunisolarCalendar>"
  syntax:
    content: public const int ChineseEra = 1;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene il numero di giorni nell&quot;anno che precede l&quot;anno specificati tramite il <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>proprietà.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "Questa proprietà restituisce un valore costante di 384."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "Il numero di giorni nell&quot;anno che precede l&quot;anno specificato dal <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>"
  overload: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene le ere che corrispondono all&quot;intervallo di date e ore supportato dall&quot;oggetto corrente <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> oggetto."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Matrice di interi con segno a 32 bit che specificano le ere pertinente. Il valore restituito per un <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> oggetto è sempre una matrice che contiene un elemento uguale al <xref href=&quot;System.Globalization.ChineseLunisolarCalendar.ChineseEra&quot;> </xref> valore."
  overload: System.Globalization.ChineseLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Recupera l&quot;era che corrisponde all&quot;oggetto specificato <xref:System.DateTime>tipo.</xref:System.DateTime>"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>tipo da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era di <code> time </code> parametro."
  overload: System.Globalization.ChineseLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>è minore di <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> o maggiore di <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la data massima supportata dal <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Oggetto &lt;xref:System.DateTime?displayProperty=fullName&gt; tipo che rappresenta l&quot;ultimo istante del 28 gennaio 2101 del calendario gregoriano, che corrisponde approssimativamente al costruttore `DateTime(2101, 1, 28, 23, 59, 59, 999)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la data minima e l&quot;ora supportati i <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Oggetto &lt;xref:System.DateTime?displayProperty=fullName&gt; tipo che rappresenta il 19 febbraio 1901 del calendario gregoriano, che equivale al costruttore, `DateTime(1901, 2, 19)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: ChineseLunisolarCalendar.GetEra
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
