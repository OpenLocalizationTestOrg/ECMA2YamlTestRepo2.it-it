### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Specifica se una classe di servizio supporta la modalità a thread singolo o multithread dell&quot;operazione."
  remarks: "ConcurrencyMode è utilizzato in combinazione con la <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>proprietà per specificare se una classe di servizio supporta la modalità a thread singolo o multithread dell&quot;operazione.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> Un&quot;operazione a thread singolo può essere rientrante o non rientrante.       Nella tabella seguente viene illustrato quando [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] consente a un&quot;operazione da richiamare mentre un altro è in corso, a seconda di ConcurrencyMode.      | Valore di ConcurrencyMode | Può essere richiamata una nuova operazione? |   |---------------------------|-------------------------------------|   | Singolo | Mai. |   | Rientranti | Solo durante la chiamata a un altro servizio o un callback. |   | Più | Sempre. |"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "L&quot;istanza del servizio è a thread multipli. Viene resa alcuna garanzia di sincronizzazione. Poiché altri thread può modificare l&quot;oggetto servizio in qualsiasi momento, è necessario gestire la sincronizzazione e la coerenza dello stato in qualsiasi momento."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "L&quot;istanza del servizio è a thread singolo e accetta chiamate rientranti. Il servizio rientrante accetta chiamate quando si chiama un altro servizio. è pertanto responsabilità dello stato dell&quot;oggetto coerente prima di callout ed è necessario verificare che i dati locali dell&quot;operazione siano validi dopo i callout. Si noti che l&quot;istanza del servizio viene sbloccata solo chiamando un altro servizio su un [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] canale. In questo caso, il servizio chiamato può rientrare nel primo servizio tramite un callback. Se il primo servizio non è rientrante, la sequenza di chiamate determina un deadlock. Per informazioni dettagliate, vedere <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>"
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "L&quot;istanza del servizio è a thread singolo e non accetta chiamate rientranti. Se il <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>proprietà <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>e giungono altri messaggi mentre l&quot;istanza di una chiamata di servizi, questi messaggi è necessario attendere fino a quando il servizio è disponibile o fino a quando il valore di timeout di messaggi.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>"
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
