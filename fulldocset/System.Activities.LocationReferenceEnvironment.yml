### YamlMime:ManagedReference
items:
- uid: System.Activities.LocationReferenceEnvironment
  id: LocationReferenceEnvironment
  children:
  - System.Activities.LocationReferenceEnvironment.#ctor
  - System.Activities.LocationReferenceEnvironment.GetLocationReferences
  - System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)
  - System.Activities.LocationReferenceEnvironment.Parent
  - System.Activities.LocationReferenceEnvironment.Root
  - System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)
  langs:
  - csharp
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
  type: Class
  summary: "Fornisce una rappresentazione dell&quot;ambiente di variabili e argomenti che è disponibile per un&quot;attività in fase di esecuzione."
  syntax:
    content: public abstract class LocationReferenceEnvironment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.#ctor
  id: '#ctor'
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: LocationReferenceEnvironment()
  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()
  fullName: System.Activities.LocationReferenceEnvironment.LocationReferenceEnvironment()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Chiamato da costruttori di classi derivate per inizializzare l&quot;oggetto."
  syntax:
    content: protected LocationReferenceEnvironment ();
    parameters: []
  overload: System.Activities.LocationReferenceEnvironment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences
  id: GetLocationReferences
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: GetLocationReferences()
  nameWithType: LocationReferenceEnvironment.GetLocationReferences()
  fullName: System.Activities.LocationReferenceEnvironment.GetLocationReferences()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Quando sottoposto a override in una classe derivata, restituisce una raccolta di <xref href=&quot;System.Activities.LocationReference&quot;> </xref> oggetti nell&quot;ambito corrente."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.LocationReference> GetLocationReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}
      description: "Una raccolta di oggetti di riferimento di percorso nell&quot;ambito corrente."
  overload: System.Activities.LocationReferenceEnvironment.GetLocationReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)
  id: IsVisible(System.Activities.LocationReference)
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: IsVisible(LocationReference)
  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)
  fullName: System.Activities.LocationReferenceEnvironment.IsVisible(LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Quando sottoposto a override in una classe derivata, determina se l&quot;oggetto specificato <xref href=&quot;System.Activities.LocationReference&quot;> </xref> è visibile nell&quot;ambito corrente."
  syntax:
    content: public abstract bool IsVisible (System.Activities.LocationReference locationReference);
    parameters:
    - id: locationReference
      type: System.Activities.LocationReference
      description: "Percorso da valutare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Activities.LocationReference&quot;> </xref> è visibile nell&quot;ambito corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.LocationReferenceEnvironment.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.Parent
  id: Parent
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: Parent
  nameWithType: LocationReferenceEnvironment.Parent
  fullName: System.Activities.LocationReferenceEnvironment.Parent
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta l&quot;oggetto contenente <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref>."
  syntax:
    content: public System.Activities.LocationReferenceEnvironment Parent { get; protected set; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "Contenitore <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref>."
  overload: System.Activities.LocationReferenceEnvironment.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.Root
  id: Root
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: Root
  nameWithType: LocationReferenceEnvironment.Root
  fullName: System.Activities.LocationReferenceEnvironment.Root
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene l&quot;attività che determina le regole di ambito per questo ambiente."
  syntax:
    content: public abstract System.Activities.Activity Root { get; }
    return:
      type: System.Activities.Activity
      description: "L&quot;attività che determina le regole di ambito per questo ambiente."
  overload: System.Activities.LocationReferenceEnvironment.Root*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)
  id: TryGetLocationReference(System.String,System.Activities.LocationReference@)
  parent: System.Activities.LocationReferenceEnvironment
  langs:
  - csharp
  name: TryGetLocationReference(String,LocationReference)
  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)
  fullName: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Quando sottoposto a override in una classe derivata, tenta di ottenere l&quot;oggetto specificato <xref href=&quot;System.Activities.LocationReference&quot;> </xref>."
  syntax:
    content: public abstract bool TryGetLocationReference (string name, out System.Activities.LocationReference result);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Activities.LocationReference&quot;> </xref> da recuperare."
    - id: result
      type: System.Activities.LocationReference
      description: "Quando questo metodo restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, `result` contiene il <xref href=&quot;System.Activities.LocationReference&quot;> </xref> con l&quot;oggetto specificato in caso contrario, nome <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.Activities.LocationReference&quot;> </xref> con il nome specificato è presente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.LocationReferenceEnvironment.#ctor
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: LocationReferenceEnvironment()
  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()
  fullName: System.Activities.LocationReferenceEnvironment.LocationReferenceEnvironment()
- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: GetLocationReferences()
  nameWithType: LocationReferenceEnvironment.GetLocationReferences()
  fullName: System.Activities.LocationReferenceEnvironment.GetLocationReferences()
- uid: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<LocationReference>
  nameWithType: IEnumerable<LocationReference>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.LocationReference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.LocationReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.LocationReference
    name: LocationReference
    nameWithType: LocationReference
    fullName: LocationReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: IsVisible(LocationReference)
  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)
  fullName: System.Activities.LocationReferenceEnvironment.IsVisible(LocationReference)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.LocationReference
  parent: System.Activities
  isExternal: false
  name: LocationReference
  nameWithType: LocationReference
  fullName: System.Activities.LocationReference
- uid: System.Activities.LocationReferenceEnvironment.Parent
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: Parent
  nameWithType: LocationReferenceEnvironment.Parent
  fullName: System.Activities.LocationReferenceEnvironment.Parent
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.LocationReferenceEnvironment.Root
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: Root
  nameWithType: LocationReferenceEnvironment.Root
  fullName: System.Activities.LocationReferenceEnvironment.Root
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: TryGetLocationReference(String,LocationReference)
  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)
  fullName: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.LocationReferenceEnvironment.#ctor*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment
- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: GetLocationReferences
  nameWithType: LocationReferenceEnvironment.GetLocationReferences
- uid: System.Activities.LocationReferenceEnvironment.IsVisible*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: IsVisible
  nameWithType: LocationReferenceEnvironment.IsVisible
- uid: System.Activities.LocationReferenceEnvironment.Parent*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: Parent
  nameWithType: LocationReferenceEnvironment.Parent
- uid: System.Activities.LocationReferenceEnvironment.Root*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: Root
  nameWithType: LocationReferenceEnvironment.Root
- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*
  parent: System.Activities.LocationReferenceEnvironment
  isExternal: false
  name: TryGetLocationReference
  nameWithType: LocationReferenceEnvironment.TryGetLocationReference
