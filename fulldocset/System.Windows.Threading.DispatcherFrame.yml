### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherFrame
  id: DispatcherFrame
  children:
  - System.Windows.Threading.DispatcherFrame.#ctor
  - System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  - System.Windows.Threading.DispatcherFrame.Continue
  langs:
  - csharp
  name: DispatcherFrame
  nameWithType: DispatcherFrame
  fullName: System.Windows.Threading.DispatcherFrame
  type: Class
  summary: "Rappresenta un ciclo di esecuzione nel <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>."
  remarks: "Oggetti DispatcherFrame rientrano in genere in due categorie:-esecuzione prolungata, generale lo scopo frame che terminano solo quando richiesto.  Questi frame devono terminare quando richiesto.      -Breve esecuzione molto specifica che terminano con frame quando viene soddisfatto un criterio importante.  Questi frame è possono considerare la chiusura quando vengono richiesti a favore di attendere che vengano soddisfatti i criteri di uscita.  Questi frame deve essere associato un periodo di timeout.      <a name=&quot;xamlTextUsage_DispatcherFrame&quot;></a># # XAML testo utilizzo non è possibile utilizzare questa classe gestita in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example shows how to use a DispatcherFrame to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: 'public class DispatcherFrame : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> classe."
  syntax:
    content: public DispatcherFrame ();
    parameters: []
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> classe, utilizzando l&quot;oggetto specificato, uscire dal flag di richiesta."
  remarks: "<xref:System.Windows.Threading.DispatcherFrame>in genere rientrano in due categorie: - lunga in esecuzione, generale allo scopo di frame, uscire solo quando richiesto.</xref:System.Windows.Threading.DispatcherFrame>  Questi frame devono terminare quando richiesto.      -Breve esecuzione molto specifica che terminano con frame quando viene soddisfatto un criterio importante.  Questi frame è consigliabile non terminare quando richiesto e invece di attendere che vengano soddisfatti i criteri di uscita.  Questi frame deve essere associato un periodo di timeout.      -Alla chiusura dell&quot;applicazione, tutti i frame sono richieste per uscire dall&quot;installazione."
  syntax:
    content: public DispatcherFrame (bool exitWhenRequested);
    parameters:
    - id: exitWhenRequested
      type: System.Boolean
      description: "Indica se questo frame terminerà quando tutti i fotogrammi vengono richiesti per uscire dall&quot;installazione."
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.Continue
  id: Continue
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Ottiene o imposta un valore che indica se questo <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> deve continuare."
  remarks: "Continuazione viene eseguita una query nella parte superiore di ogni ciclo del dispatcher.       All&quot;arresto dell&quot;applicazione, tutti i frame sono richieste per uscire dall&quot;installazione.      <a name=&quot;xamlTextUsage_Continue&quot;></a># # XAML testo utilizzo membri di questa classe vengono in genere non viene utilizzati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], o non può essere usato in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: public bool Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il frame deve continuare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherFrame.Continue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherFrame.Continue
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
- uid: System.Windows.Threading.DispatcherFrame.#ctor*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame
  nameWithType: DispatcherFrame.DispatcherFrame
- uid: System.Windows.Threading.DispatcherFrame.Continue*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
