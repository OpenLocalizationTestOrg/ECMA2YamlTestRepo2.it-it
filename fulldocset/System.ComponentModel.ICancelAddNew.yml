### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ICancelAddNew
  id: ICancelAddNew
  children:
  - System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  - System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  langs:
  - csharp
  name: ICancelAddNew
  nameWithType: ICancelAddNew
  fullName: System.ComponentModel.ICancelAddNew
  type: Interface
  summary: "Aggiunge la funzionalità di transazione quando si aggiunge un nuovo elemento a una raccolta."
  remarks: "L&quot;interfaccia ICancelAddNew consente una raccolta per aggiungere un nuovo elemento in modo estensibile. Il nuovo elemento può successivamente essere eseguito il commit o rollback. Il <xref:System.ComponentModel.IBindingList.AddNew%2A>della raccolta consente di aggiungere temporaneamente l&quot;elemento, che viene poi sottoposto a transazione tramite le operazioni seguenti: - il <xref:System.ComponentModel.ICancelAddNew.EndNew%2A>metodo eseguirà il commit in modo esplicito l&quot;aggiunta in sospeso.</xref:System.ComponentModel.ICancelAddNew.EndNew%2A> </xref:System.ComponentModel.IBindingList.AddNew%2A>      -Esecuzione di un&quot;altra operazione di raccolta, ad esempio un inserimento, rimozione o spostamento eseguirà il commit in modo implicito l&quot;aggiunta in sospeso.      -La <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>metodo eseguirà il rollback dell&quot;aggiunta in sospeso se non è già stato eseguito il commit.</xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>      > [!NOTE] > In alcuni scenari, ad esempio associazione dati complessa di Windows Form, è possibile che venga visualizzato insieme <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>o <xref:System.ComponentModel.ICancelAddNew.EndNew%2A>chiama per elementi diversi dall&quot;elemento appena aggiunto.</xref:System.ComponentModel.ICancelAddNew.EndNew%2A> </xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> (Ogni elemento è in genere è una riga in una visualizzazione di dati). Ignorare queste chiamate; annullare o eseguire il commit del nuovo elemento solo quando viene specificato l&quot;indice dell&quot;elemento.       Sono disponibili due modelli che consentono l&quot;aggiunta transazionale di un elemento a una raccolta di associazione a dati:-il modello precedente si basa direttamente su una raccolta che implementa <xref:System.ComponentModel.IBindingList>l&quot;interfaccia e viene associato ai dati direttamente tramite la <xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName>classe.</xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName> </xref:System.ComponentModel.IBindingList> Il <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, e <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>metodi la <xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName>classe sono responsabili per il supporto transazionale per l&quot;aggiunta di nuovi elementi.</xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName> </xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> </xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> </xref:System.Windows.Forms.CurrencyManager.AddNew%2A> Tuttavia, questa funzionalità dipende dagli elementi di supportare il comportamento transazionale tramite il <xref:System.ComponentModel.IEditableObject>interfaccia.</xref:System.ComponentModel.IEditableObject> Se gli elementi non supportano questa interfaccia, sempre l&quot;elemento verrà aggiunto all&quot;elenco, indipendentemente dalle chiamate successive a <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>      -Il modello più recente supporta uno scenario di associazione di dati più affidabile tramite il modello generico <xref:System.ComponentModel.BindingList%601>classe che implementa il <xref:System.ComponentModel.IBindingList>e le interfacce ICancelAddNew.</xref:System.ComponentModel.IBindingList> </xref:System.ComponentModel.BindingList%601> In questo caso, il supporto transazionale è gestito dal <xref:System.ComponentModel.BindingList%601>raccolta direttamente.</xref:System.ComponentModel.BindingList%601>"
  syntax:
    content: public interface ICancelAddNew
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  id: CancelNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  langs:
  - csharp
  name: CancelNew(Int32)
  nameWithType: ICancelAddNew.CancelNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove dalla raccolta un nuovo elemento in sospeso."
  remarks: "Il metodo CancelNew rollback dell&quot;aggiunta in sospeso (<xref:System.ComponentModel.IBindingList.AddNew%2A>) di un elemento aggiunto in precedenza alla raccolta nella posizione `itemIndex`.</xref:System.ComponentModel.IBindingList.AddNew%2A> Il parametro di indice è necessario perché diversi nuovi elementi possono essere contemporaneamente in sospeso."
  syntax:
    content: public void CancelNew (int itemIndex);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "Indice dell&quot;elemento che è stato aggiunto in precedenza alla raccolta."
  overload: System.ComponentModel.ICancelAddNew.CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  id: EndNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  langs:
  - csharp
  name: EndNew(Int32)
  nameWithType: ICancelAddNew.EndNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.EndNew(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Esegue il commit di un nuovo elemento in sospeso alla raccolta."
  remarks: "Il EndNew viene eseguito il commit aggiunta in sospeso (<xref:System.ComponentModel.IBindingList.AddNew%2A>) di un elemento aggiunto in precedenza alla raccolta nella posizione `itemIndex`.</xref:System.ComponentModel.IBindingList.AddNew%2A> Il parametro di indice è necessario perché diversi nuovi elementi possono essere contemporaneamente in sospeso."
  syntax:
    content: public void EndNew (int itemIndex);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "Indice dell&quot;elemento che è stato aggiunto in precedenza alla raccolta."
  overload: System.ComponentModel.ICancelAddNew.EndNew*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: CancelNew(Int32)
  nameWithType: ICancelAddNew.CancelNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: EndNew(Int32)
  nameWithType: ICancelAddNew.EndNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.EndNew(Int32)
- uid: System.ComponentModel.ICancelAddNew.CancelNew*
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: CancelNew
  nameWithType: ICancelAddNew.CancelNew
- uid: System.ComponentModel.ICancelAddNew.EndNew*
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: EndNew
  nameWithType: ICancelAddNew.EndNew
