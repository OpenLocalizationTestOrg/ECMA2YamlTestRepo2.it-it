### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "Controlla le directory e percorsi di file e notifica alla cache delle modifiche apportate agli elementi monitorati. Questa classe non può essere ereditata."
  remarks: "La classe HostFileChangeMonitor è un&quot;implementazione concreta del <xref:System.Runtime.Caching.FileChangeMonitor>tipo.</xref:System.Runtime.Caching.FileChangeMonitor> Questa classe è sealed, pertanto non può essere estesa. Questa classe è utile se si desidera utilizzare un&quot;implementazione della cache esistente e per monitorare i file e directory per le modifiche.       Per ogni file specificato o un percorso di directory, la classe HostFileChangeMonitor attiva una notifica di modifica se si verifica una delle modifiche seguenti:-il nome del file monitorati o modifiche alla directory.      -Il file specificato o la directory non esisteva al momento il monitoraggio è stato creato, ma è stato creato in un secondo momento. In altre parole, un file o directory è stato creato nell&quot;ambito di elementi monitorati.      -La dimensione di un file monitorato modificato.      -Il contenuto di un file monitorato modificato o modificato il contenuto di una directory monitorata.      -L&quot;elenco di controllo di accesso (ACL) del file o della directory è stato modificato.      -Il file monitorato o la directory è stato eliminato.       Se si verificano troppe modifiche per una directory o il file monitorato allo stesso tempo, l&quot;istanza HostFileChangeMonitor può perdere traccia delle modifiche specifiche. In questo scenario, la classe HostFileChangeMonitor attiva una notifica di modifica. Questo scenario è più probabile che si verifica quando l&quot;istanza HostFileChangeMonitor consente di monitorare una directory e si verificano numerose modifiche nell&quot;ambito della struttura di directory in un breve periodo di tempo.       Poiché lo scopo della classe HostFileChangeMonitor è solo per segnalare che un elemento è stato modificato tra il set di file monitorati e directory, non viene considerato importante che non vengono acquisiti i dettagli su una modifica specifica. Lo scopo della classe HostFileChangeMonitor è fornire la notifica che è stato modificato in modo che sia possono eliminare una voce della cache (o le voci). Poiché la classe HostFileChangeMonitor non indica esattamente ciò che è stato modificato, il rilevamento delle modifiche interne overflow è irrilevante.       Quando si forniscono i percorsi a un&quot;istanza di HostFileChangeMonitor, i percorsi di file e directory devono essere percorsi completi per la directory o file. I percorsi relativi e caratteri jolly nei percorsi non sono consentiti.       Quando la classe HostFileChangeMonitor viene utilizzata in un&quot;applicazione ASP.NET, l&quot;identità di Windows utilizzato per l&quot;accesso a elementi monitorati è l&quot;identità di applicazione per l&quot;applicazione ASP.NET. In altre parole, l&quot;identità dell&quot;applicazione sarà uno dei seguenti:-l&quot;identità del processo.      -L&quot;identità dell&quot;applicazione configurata.      -Le credenziali UNC se l&quot;applicazione viene eseguita da una condivisione UNC.       Quando la classe HostFileChangeMonitor viene utilizzata in un&quot;applicazione non ASP.NET, il <xref:System.IO.FileSystemWatcher>classe viene utilizzata internamente per monitorare i file.</xref:System.IO.FileSystemWatcher> Di conseguenza, qualsiasi elenco di controllo di accesso (ACL) si applica a una directory o un file monitorato viene applicata per l&quot;identità Windows del thread corrente.      > [!NOTE] > I chiamanti devono disporre del livello adeguato di autorizzazioni di sicurezza dall&quot;accesso di codice e deve disporre delle autorizzazioni NTFS per tutte le directory e monitorati i percorsi."
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> classe."
  remarks: "Chiama il costruttore HostFileChangeMonitor deve fornire un valore non null per il `filePaths` parametro. Come minimo, il costruttore convalida la raccolta di percorsi che viene passata al suo interno e quindi inizializza il monitoraggio per tali percorsi.      > [!NOTE] > Il costruttore esegue solo la convalida delle stringhe del nome del percorso. Non rende canonici i percorsi o verificare che i percorsi esistano."
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "Un elenco che contiene uno o più percorsi di directory o i percorsi di file per il monitoraggio."
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>contiene zero elementi.       - oppure - un percorso nel <code>filePaths</code> elenco <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene la raccolta di directory e percorsi di file che è stato passato il &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt; costruttore."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Raccolta di percorsi di file e directory."
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene un valore di sola lettura che indica l&quot;ora dell&quot;ultima scrittura di un file o percorso monitorato."
  remarks: "Se un monitoraggio delle modifiche ai file sta monitorando più file o percorsi, questa proprietà restituisce l&quot;ora di scrittura più recente nel set di tutti i file e percorsi."
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "L&quot;ora dell&quot;ultima scrittura un file o percorso monitorato."
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene un identificatore per il <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> istanza in cui è in base al set di directory e monitorati i percorsi di file."
  remarks: "La stringa che costituisce il valore della proprietà UniqueId viene costruita dalle parti seguenti:-un percorso del file o directory.      -Il maggior tempo di scrittura recenti nell&quot;ora UTC, misurato come segni di graduazione ma rappresentato come stringa esadecimale.      -Le dimensioni del file, rappresentata come stringa esadecimale.       Se una modifica del file monitoraggio esegue il monitoraggio di più percorsi, le informazioni restituite da questa proprietà sono concatenate in un&quot;unica stringa per tutte le directory monitorate e i percorsi dei file."
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "Un identificatore per il monitoraggio delle modifiche."
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
