### YamlMime:ManagedReference
items:
- uid: System.Transactions.Transaction
  id: Transaction
  children:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  langs:
  - csharp
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
  type: Class
  summary: "Rappresenta una transazione."
  remarks: "Il <xref:System.Transactions>spazio dei nomi fornisce un modello di programmazione esplicito basato sulla classe delle transazioni, nonché un modello di programmazione implicito mediante la <xref:System.Transactions.TransactionScope>(classe), in cui le transazioni vengono gestite automaticamente dall&quot;infrastruttura.</xref:System.Transactions.TransactionScope> </xref:System.Transactions> È consigliabile utilizzare il modello implicito più semplice per lo sviluppo. Per iniziare, vedere il [implementazione un implicita delle transazioni con ambito di transazione](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) argomento. Per ulteriori informazioni sulla scrittura di un&quot;applicazione transazionale, vedere [la scrittura di applicazioni transazionali A](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       La classe di transazione contiene i metodi utilizzati dagli sviluppatori di implementare i gestori di risorse per l&quot;integrazione. Fornisce inoltre funzionalità per la clonazione di una transazione e controllare il contesto della transazione corrente. È possibile ottenere la transazione corrente, se uno è impostato, utilizzando il metodo statico <xref:System.Transactions.Transaction.Current%2A>proprietà.</xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: 'public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Clone
  id: Clone
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Crea un clone della transazione."
  remarks: "Per passare le transazioni vengono creati cloni.  Ad esempio, potrebbe non si desidera passare un <xref:System.Transactions.CommittableTransaction>ad altre applicazioni, perché non si desidera ad altri utenti di eseguire il commit della transazione.</xref:System.Transactions.CommittableTransaction>  Se si tenta di effettuare il marshalling o la serializzazione di una transazione, un clone viene creato automaticamente."
  syntax:
    content: public System.Transactions.Transaction Clone ();
    parameters: []
    return:
      type: System.Transactions.Transaction
      description: "Oggetto <xref href=&quot;System.Transactions.Transaction&quot;> </xref> che rappresenta una copia dell&quot;oggetto di transazione corrente."
  overload: System.Transactions.Transaction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Current
  id: Current
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ottiene o imposta la transazione di ambiente."
  remarks: "Per ulteriori informazioni sulle transazioni di ambiente, vedere la sezione &quot;Gestione del flusso delle transazioni mediante TransactionScopeOption&quot; del [implementazione di una transazione implicita con ambito di transazione](~/add/includes/ajax-current-ext-md.md) argomento.       Sebbene sia possibile impostare la transazione di ambiente utilizzando questa proprietà, è consigliabile utilizzare il <xref:System.Transactions.TransactionScope>oggetto per modificare la transazione di ambiente quando possibile.</xref:System.Transactions.TransactionScope>       Questa proprietà è di thread statici. Se si modifica la transazione di ambiente utilizzando questa proprietà all&quot;interno di un <xref:System.Transactions.TransactionScope>un <xref:System.InvalidOperationException>viene generata quando <xref:System.Transactions.TransactionScope.Dispose%2A>viene chiamato e viene ripristinato il valore precedente della transazione di ambiente.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope>"
  syntax:
    content: public static System.Transactions.Transaction Current { get; set; }
    return:
      type: System.Transactions.Transaction
      description: "Oggetto <xref href=&quot;System.Transactions.Transaction&quot;> </xref> che descrive la transazione corrente."
  overload: System.Transactions.Transaction.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  id: DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Crea un clone dipendente della transazione."
  remarks: "Una transazione dipendente è una transazione il cui risultato dipende dal risultato della transazione da cui è stato clonato.       Il `cloneoption` parametro controlla il tipo di transazione dipendente da creare. Se viene creata una transazione dipendente con <xref:System.Transactions.DependentCloneOption>, si blocca il processo di commit della transazione fino a quando la transazione scade, o <xref:System.Transactions.DependentTransaction.Complete%2A>viene chiamato su <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.DependentCloneOption> Se viene creata con <xref:System.Transactions.DependentCloneOption>, la transazione viene interrotta automaticamente se <xref:System.Transactions.CommittableTransaction.Commit%2A>viene chiamato prima che <xref:System.Transactions.DependentTransaction.Complete%2A>viene chiamato su <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.CommittableTransaction.Commit%2A> </xref:System.Transactions.DependentCloneOption>"
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/a081f0f4-5473-43fc-b7fe-_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/a081f0f4-5473-43fc-b7fe-_1.cs)]"
  syntax:
    content: public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);
    parameters:
    - id: cloneOption
      type: System.Transactions.DependentCloneOption
      description: "Oggetto <xref href=&quot;System.Transactions.DependentCloneOption&quot;> </xref> che controlla il tipo di transazione dipendente da creare."
    return:
      type: System.Transactions.DependentTransaction
      description: "Oggetto <xref href=&quot;System.Transactions.DependentTransaction&quot;> </xref> che rappresenta il duplicato dipendente."
  overload: System.Transactions.Transaction.DependentClone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Dispose
  id: Dispose
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Rilascia le risorse utilizzate dall&quot;oggetto."
  remarks: "Se si modifica la transazione di ambiente impostando <xref:System.Transactions.Transaction.Current%2A>all&quot;interno di un <xref:System.Transactions.TransactionScope>un <xref:System.InvalidOperationException>viene generata quando <xref:System.Transactions.TransactionScope.Dispose%2A>viene chiamato e viene ripristinato il valore precedente della transazione di ambiente.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope> </xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.Transaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse durevole che supporta il commit a due fasi per partecipare in una transazione."
  remarks: "Gestori di risorse con un elenco durevole devono essere in grado di eseguire il ripristino in caso di un errore. Per ulteriori informazioni sul recupero, vedere [esecuzione ripristino](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Per ulteriori informazioni su risorse volatili e durevoli, nonché come integrare una risorsa, vedere [Implementing a Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  Per ulteriori informazioni sulla modalità di risposta a una notifica di commit e prepara il commit in un commit di un gestore di risorse, vedere [commit di una transazione In Phase e multifase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Gestori delle risorse integrati per la partecipazione in una transazione tramite questo metodo ricevono le notifiche di commit a due fasi che corrispondono ai metodi definiti nel <xref:System.Transactions.IEnlistmentNotification>interfaccia.</xref:System.Transactions.IEnlistmentNotification>"
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Un identificatore univoco per un gestore delle risorse, che deve persistere attraverso un errore del gestore di risorse o riavviare il computer."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Oggetto che implementa il <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interfaccia per ricevere le notifiche di commit a due fasi."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se il gestore delle risorse desidera eseguire altre operazioni durante la fase di preparazione."
    return:
      type: System.Transactions.Enlistment
      description: "Un <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> oggetto che descrive l&quot;elenco."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse durevole che supporta l&quot;ottimizzazione di commit di una fase per la partecipazione in una transazione."
  remarks: "Gestori di risorse con un elenco durevole devono essere in grado di eseguire il ripristino in caso di un errore. Per ulteriori informazioni sul recupero, vedere [esecuzione ripristino](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Per ulteriori informazioni su risorse volatili e durevoli, nonché come integrare una risorsa, vedere [Implementing a Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).       Si noti che anche quando l&quot;implementazione del gestore di risorse viene integrato con questo metodo, non è garantito che riceva un commit monofase. Il gestore delle transazioni può comunque inviare invece le notifiche di commit a due fasi. Per ulteriori informazioni sull&quot;ottimizzazione del commit di una fase, vedere [ottimizzazione utilizzando Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Un identificatore univoco per un gestore delle risorse, che deve persistere attraverso un errore del gestore di risorse o riavviare il computer."
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Oggetto che implementa il <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interfaccia che deve essere in grado di ricevere le notifiche di commit a due fasi e di commit monofase."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se il gestore delle risorse desidera eseguire altre operazioni durante la fase di preparazione."
    return:
      type: System.Transactions.Enlistment
      description: "Un <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> oggetto che descrive l&quot;elenco."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse che dispone di una transazione interna che usa un&quot;integrazione monofase PSPE (Promotable)."
  remarks: "Se sono volatili; elenchi in una transazione vale a dire non sopravvivono dell&quot;errore del partecipante. Inoltre, questo metodo suggerisce solo il gestore delle transazioni per eseguire l&quot;escalation di controllo, ma non è garantito l&quot;escalation a se stesso. Se l&quot;escalation non riesce, l&quot;utente non riceve una notifica e viene eseguito il rollback della transazione.       Il parametro `promotableSinglePhaseNotification` viene utilizzato per comunicare al gestore delle transazioni, il risultato del tentativo di eseguire il commit delle transazioni interna di gestione risorse.  Se viene segnalati dati incoerenti, il gestore delle transazioni genera un&quot;eccezione. Se un <xref:System.Transactions.TransactionStatus>risultato viene restituito, il gestore delle transazioni Cerca notifica del risultato nel proprio elenco interno e la risposta segnalata viene ignorata.</xref:System.Transactions.TransactionStatus>       Per ulteriori informazioni sulle integrazioni ed escalation di una transazione, vedere [escalation della gestione transazioni](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Per ulteriori informazioni su PSPE, vedere [ottimizzazione utilizzando Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).       **Nota** questo metodo utilizza <xref:System.Security.Permissions.SecurityAction>per evitare che venga chiamato da codice non attendibile; tuttavia, solo il chiamante immediato è necessario disporre di `FullTrust` set di autorizzazioni.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Oggetto <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interfaccia implementata dal partecipante."
    return:
      type: System.Boolean
      description: "Oggetto <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> implementazione che descrive l&quot;integrazione dell&quot;interfaccia."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse che dispone di una transazione interna che usa un&quot;integrazione monofase PSPE (Promotable)."
  remarks: "Se il valore specificato per il `promoterType` parametro è `TransactionInterop.PromoterTypeDtc`, la transazione **deve** da innalzare di livello da MSDTC e `byte[]` restituito dal `IPromotableSinglePhaseNotification.Promote` metodo **deve** da un token di propagazione delle transazioni MSDTC.       Se il valore specificato per il `promoterType` parametro **non**`TransactionInterop.PromoterTypeDTC`, la transazione non sarà promossa da MSDTC, ma piuttosto dall&quot;implementazione del chiamante di `IPromotableSinglePhaseNotification`. Se la chiamata ha esito positivo, è presente un set di operazioni successive sulla transazione che verrà restituito un `TransactionPromotionException`. Queste operazioni sono:- `Transaction.EnlistDurable`       -    `TransactionInterop.GetDtcTransaction`       -    `TransactionInterop.GetExportCookie`       -    `TransctionInterop.GetTransmitterPropagationToken` -serializzazione di un oggetto di transazione"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Oggetto <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interfaccia implementata dal partecipante."
    - id: promoterType
      type: System.Guid
      description: "Tipo di elaborazione delle transazioni distribuite."
    return:
      type: System.Boolean
      description: "Oggetto <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> implementazione che descrive l&quot;integrazione dell&quot;interfaccia."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse volatili che supporta il commit a due fasi per partecipare in una transazione."
  remarks: "Gestori di risorse volatili non è possibile eseguire il recupero per completare una transazione in cui hanno preso parte. Per ottenere un elenco durevole in una transazione, usare il <xref:System.Transactions.Transaction.EnlistDurable%2A>metodo.</xref:System.Transactions.Transaction.EnlistDurable%2A>       Gestori delle risorse integrati per la partecipazione in una transazione tramite questo metodo ricevono le notifiche di commit a due fasi che corrispondono ai metodi definiti nel <xref:System.Transactions.IEnlistmentNotification>interfaccia.</xref:System.Transactions.IEnlistmentNotification>"
  example:
  - "The following example shows an implementation of <xref:System.Transactions.IEnlistmentNotification> interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/1d69bab4-4268-46d9-8f3f-_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/1d69bab4-4268-46d9-8f3f-_1.vb)]"
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Oggetto che implementa il <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interfaccia per ricevere notifiche di commit in due fasi."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se il gestore delle risorse desidera eseguire altre operazioni durante la fase di preparazione."
    return:
      type: System.Transactions.Enlistment
      description: "Un <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> oggetto che descrive l&quot;elenco."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inserisce un gestore di risorse volatili che supporta l&quot;ottimizzazione di commit di una fase per la partecipazione in una transazione."
  remarks: "Gestori di risorse volatili non è possibile eseguire il recupero per completare una transazione in cui hanno preso parte. Per ottenere un elenco durevole in una transazione, usare il <xref:System.Transactions.Transaction.EnlistDurable%2A>metodo.</xref:System.Transactions.Transaction.EnlistDurable%2A> Per ulteriori informazioni su risorse volatili e durevoli, nonché come integrare una risorsa, vedere [Implementing a Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e). Per ulteriori informazioni sulla modalità di risposta a una notifica di commit e prepara il commit di un gestore di risorse, vedere [commit di una transazione In Phase e multifase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Si noti che anche quando l&quot;implementazione del gestore di risorse viene integrato con questo metodo, non è garantito che riceva un commit monofase. Il gestore delle transazioni può comunque inviare invece le notifiche di commit a due fasi. Per ulteriori informazioni sull&quot;ottimizzazione del commit di una fase, vedere [ottimizzazione utilizzando Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Oggetto che implementa il <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interfaccia che deve essere in grado di ricevere le notifiche di commit a due fasi e di commit monofase."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se il gestore delle risorse desidera eseguire altre operazioni durante la fase di preparazione."
    return:
      type: System.Transactions.Enlistment
      description: "Un <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> oggetto che descrive l&quot;elenco."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Determina se la transazione e l&quot;oggetto specificato sono uguali."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con questa istanza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> e questa transazione sono identici; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.Transaction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetHashCode
  id: GetHashCode
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di un intero con segno a 32 bit."
  overload: System.Transactions.Transaction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetPromotedToken
  id: GetPromotedToken
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ottiene il `byte[]` restituito dal `Promote` metodo quando la transazione viene promossa."
  remarks: "Questo metodo ha l&quot;effetto collaterale di causa la promozione della transazione se non è già stato promosso.       Il formato dell&quot;oggetto restituito `byte[]` è definito dal valore della `Transation.PromoterType` proprietà. Se il valore di `Transaction.PromoterType` proprietà è `TransactionInterop.PromoterTypeDtc` o `Guid.Empty`, il `byte[]` restituito da questo metodo è un token di propagazione del trasmettitore MSDTC. Qualsiasi altro valore per il `Transaction.PromoterType` proprietà specifica un formato definito dal chiamante di `Transaction.EnlistPromotableSinglePhase` che specifica il valore di tipo di proprietà. Per interpretare l&quot;innalzate di livello il token in questo secondo caso, sarà necessario consultare la documentazione per il codice che ha effettuato la `EnlistPromotableSinglePhase` chiamare."
  syntax:
    content: public byte[] GetPromotedToken ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Il `byte[]` restituito dal `Promote` metodo quando la transazione viene promossa."
  overload: System.Transactions.Transaction.GetPromotedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.IsolationLevel
  id: IsolationLevel
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ottiene il livello di isolamento della transazione."
  remarks: "Il livello di isolamento di una transazione determina il livello di altre transazioni di accesso ai dati volatili prima di una transazione viene completata. Per ulteriori informazioni sui livelli di isolamento, vedere la documentazione per il <xref:System.Transactions.IsolationLevel>enumerazione.</xref:System.Transactions.IsolationLevel>"
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Uno del <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valori che indica il livello di isolamento della transazione."
  overload: System.Transactions.Transaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Verifica se due specificate <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanze sono equivalenti."
  syntax:
    content: public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Il <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanza a sinistra dell&quot;operatore di uguaglianza."
    - id: y
      type: System.Transactions.Transaction
      description: "Il <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanza a destra dell&quot;operatore di uguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Restituisce un valore che indica se due <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanze non sono uguali."
  syntax:
    content: public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Il <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanza a sinistra dell&quot;operatore di disuguaglianza."
    - id: y
      type: System.Transactions.Transaction
      description: "Il <xref href=&quot;System.Transactions.Transaction&quot;> </xref> istanza a destra dell&quot;operatore di disuguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Supportato in .NET Framework 4.5.2 e versioni successive]       Alza di livello e inserisce un gestore di risorse durevole che supporta il commit a due fasi per partecipare in una transazione."
  syntax:
    content: public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Un identificatore univoco per un gestore delle risorse, che deve persistere attraverso un errore del gestore di risorse o riavviare il computer."
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Oggetto che funge da un delegato di commit per una transazione non distribuita interna a un gestore di risorse."
    - id: enlistmentNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Oggetto che implementa il <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interfaccia per ricevere le notifiche di commit a due fasi."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Se il gestore delle risorse desidera eseguire altre operazioni durante la fase di preparazione."
    return:
      type: System.Transactions.Enlistment
      description: "[Supportato in .NET Framework 4.5.2 e versioni successive]       Alza di livello e inserisce un gestore di risorse durevole che supporta il commit a due fasi per partecipare in una transazione."
  overload: System.Transactions.Transaction.PromoteAndEnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoterType
  id: PromoterType
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Identifica il formato del `byte[]` restituito dal metodo Promote quando la transazione viene promossa."
  remarks: "Se la transazione non è ancora stato promosso e non dispone ancora di un&quot;integrazione promuovibile monofase, il valore di questa proprietà sarà `Guid.Empty`. Se la transazione è stata o verrà alzata di livello a MSDTC, quindi il valore di questa proprietà sarà `TransactionInterop.PromoterTypeDtc`. Se la transazione è stata o verrà alzata di livello da un promotore non MSDTC, il valore di questa proprietà sarà il valore specificato da una precedente chiamata a `Transaction.EnlistPromotableSinglePhase`."
  syntax:
    content: public Guid PromoterType { get; }
    return:
      type: System.Guid
      description: "Un guid che identifica in modo univoco il formato del `byte[]` restituito dal metodo Promote quando la transazione viene promossa."
  overload: System.Transactions.Transaction.PromoterType*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback
  id: Rollback
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Rollback (interruzione) della transazione."
  remarks: "Qualsiasi copia di un oggetto di transazione è possibile avviare il rollback della transazione chiamando questo metodo. Solo l&quot;oggetto transazione originale, ovvero un <xref:System.Transactions.CommittableTransaction>di oggetto, può essere utilizzato per avviare un tentativo di eseguire il commit della transazione.</xref:System.Transactions.CommittableTransaction> Quando questo metodo viene chiamato dopo che il risultato della transazione è già stato determinato, viene generata un&quot;eccezione."
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  id: Rollback(System.Exception)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Rollback (interruzione) della transazione."
  syntax:
    content: public void Rollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Spiegazione del motivo per cui si è verificato durante un&quot;operazione di rollback."
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Imposta l&quot;identificatore di transazione distribuita generato dal promotore non MSDTC."
  remarks: "Questo metodo può essere chiamato correttamente durante la `IPromotableSinglePhaseNotification.Promote` l&quot;elaborazione di metodo. Se questo metodo viene chiamato in qualsiasi momento, un `TransactionException` viene generata un&quot;eccezione.       Il valore specificato per il `promotableNotification` parametro deve essere lo stesso oggetto è stato specificato in origine per il `Transaction.EnlistPromotableSinglePhase` chiamata. Se non è il caso, un oggetto `InvalidOperationException` viene generata un&quot;eccezione."
  syntax:
    content: public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);
    parameters:
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Oggetto <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interfaccia implementata dal partecipante."
    - id: distributedTransactionIdentifier
      type: System.Guid
      description: "Identificatore della transazione usato per la gestione transazioni distribuite."
  overload: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ottiene un <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> con i dati necessari per serializzare la transazione."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> da popolare con i dati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "La destinazione (vedere <xref:System.Runtime.Serialization.StreamingContext>) per questa serializzazione.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionCompleted
  id: TransactionCompleted
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Indica che la transazione viene completata."
  remarks: "È possibile registrare questo evento anziché un elenco volatile per ottenere informazioni sul risultato per le transazioni. Il parametro passato per il <xref:System.Transactions.TransactionCompletedEventHandler>delegato è un <xref:System.Transactions.Transaction>istanza.</xref:System.Transactions.Transaction> </xref:System.Transactions.TransactionCompletedEventHandler> È quindi possibile eseguire una query di <xref:System.Transactions.Transaction.TransactionInformation%2A>proprietà dell&quot;istanza specifica per ottenere un&quot;istanza di <xref:System.Transactions.TransactionInformation>, il cui <xref:System.Transactions.TransactionInformation.Status%2A>proprietà contiene lo stato di una transazione con il <xref:System.Transactions.TransactionStatus>o <xref:System.Transactions.TransactionStatus>valore.</xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionInformation.Status%2A> </xref:System.Transactions.TransactionInformation> </xref:System.Transactions.Transaction.TransactionInformation%2A>       **Attenzione** iscriversi a questo evento negativamente influisce sulle prestazioni della transazione è associato."
  example:
  - "The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  \n  \n [!code-cs[Tx_Outcome#1](~/add/codesnippet/csharp/e-system.transactions.tr_1.cs)]\n [!code-vb[Tx_Outcome#1](~/add/codesnippet/visualbasic/e-system.transactions.tr_1.vb)]"
  syntax:
    content: public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;
    return:
      type: System.Transactions.TransactionCompletedEventHandler
      description: "Da aggiungere."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Tentativo di sottoscrivere questo evento in una transazione che è stato eliminato."
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionInformation
  id: TransactionInformation
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Recupera informazioni aggiuntive su una transazione."
  syntax:
    content: public System.Transactions.TransactionInformation TransactionInformation { get; }
    return:
      type: System.Transactions.TransactionInformation
      description: "Oggetto <xref href=&quot;System.Transactions.TransactionInformation&quot;> </xref> che contiene informazioni aggiuntive sulla transazione."
  overload: System.Transactions.Transaction.TransactionInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Transactions.Transaction.Clone
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.Transaction.Current
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.Transaction.Dispose
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.Equals(System.Object)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
- uid: System.Transactions.Transaction.GetHashCode
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.Transaction.GetPromotedToken
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.Transaction.IsolationLevel
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.PromoterType
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Transactions.Transaction.TransactionCompleted
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.Transaction.TransactionInformation
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.Transaction.Clone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone
  nameWithType: Transaction.Clone
- uid: System.Transactions.Transaction.Current*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
- uid: System.Transactions.Transaction.DependentClone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone
  nameWithType: Transaction.DependentClone
- uid: System.Transactions.Transaction.Dispose*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose
  nameWithType: Transaction.Dispose
- uid: System.Transactions.Transaction.EnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable
  nameWithType: Transaction.EnlistDurable
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase
  nameWithType: Transaction.EnlistPromotableSinglePhase
- uid: System.Transactions.Transaction.EnlistVolatile*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile
  nameWithType: Transaction.EnlistVolatile
- uid: System.Transactions.Transaction.Equals*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
- uid: System.Transactions.Transaction.GetHashCode*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: System.Transactions.Transaction.GetPromotedToken*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken
  nameWithType: Transaction.GetPromotedToken
- uid: System.Transactions.Transaction.IsolationLevel*
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality
  nameWithType: Transaction.op_Equality
- uid: System.Transactions.Transaction.op_Inequality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality
  nameWithType: Transaction.op_Inequality
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable
  nameWithType: Transaction.PromoteAndEnlistDurable
- uid: System.Transactions.Transaction.PromoterType*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback
  nameWithType: Transaction.Rollback
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier
  nameWithType: Transaction.SetDistributedTransactionIdentifier
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Transactions.Transaction.TransactionInformation*
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
