### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionService
  id: DesignerActionService
  children:
  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Clear
  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  - System.ComponentModel.Design.DesignerActionService.Dispose
  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  langs:
  - csharp
  name: DesignerActionService
  nameWithType: DesignerActionService
  fullName: System.ComponentModel.Design.DesignerActionService
  type: Class
  summary: "Crea un servizio in fase di progettazione che gestisce la raccolta di <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> oggetti per i componenti."
  remarks: "La classe DesignerActionService è responsabile per la gestione della raccolta di <xref:System.ComponentModel.Design.DesignerActionItem>oggetti per ogni istanza di un componente esistente in un form in fase di progettazione.</xref:System.ComponentModel.Design.DesignerActionItem> Questa classe consente a un modello push diretto creazione dell&quot;elemento e viene usata principalmente per l&quot;utilizzo dagli sviluppatori di strumenti di progettazione, anche se può essere utilizzato anche dal componente e sviluppatori di controlli personalizzati.       Gli sviluppatori di strumenti in fase di progettazione saranno necessario determinare l&quot;elenco di elementi da visualizzare per un componente e determinare se questo elenco viene modificato. Possono inoltre creare componenti aggiuntivi che operano in combinazione con oggetti del pannello smart tag.       Advanced componente sviluppatori potrebbe essere necessario controllare in modo dinamico gli elementi associati a un componente, sostituendo o che completano il modello pull standard. Comandi del pannello, ad esempio, possono essere modificati a seconda del contesto dello stato in fase di progettazione del componente e il loro utilizzo.      > [!NOTE] > Il DesignerActionService è effettivamente il servizio di controllo di modelli push e pull; tuttavia, nel secondo caso funziona in modo implicito.       DesignerActionService fornisce una semplice interfaccia per l&quot;accesso e la modifica degli elementi per ciascun componente, inclusi i metodi e gli eventi seguenti: - il <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>metodo determina se il DesignerActionService gestisce un particolare componente.</xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>      -La <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>metodo supporta l&quot;enumerazione degli elenchi di elementi.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      -La <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>metodo consente di aggiungere un <xref:System.ComponentModel.Design.DesignerActionList>o <xref:System.ComponentModel.Design.DesignerActionListCollection>al set di elementi esistenti per un&quot;istanza del componente.</xref:System.ComponentModel.Design.DesignerActionListCollection> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Al contrario, il <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>metodo rimuove uno o tutti gli elenchi di elementi associati a un componente.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>          > [!NOTE] > Il <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>metodo rappresenta il modello push diretto di associare gli elementi del pannello con un componente.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Al contrario, il modello pull si basa sull&quot;override di <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>proprietà della classe della finestra di progettazione per il componente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> L&quot;ambiente di progettazione è responsabile dell&quot;aggiunta di questi elementi nel DesignerActionService corrente quando viene creato un componente nell&quot;area di progettazione.          > [!IMPORTANT] > Il <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, e <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A>metodi considerano o influiscono sugli elementi del modello push solo.</xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> </xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> </xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A>      -La <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento indica quando la raccolta di elementi di modifica per un componente.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>       Poiché spesso è preferibile utilizzare alcuni degli stessi elementi di pannello nel menu di scelta rapida di progettazione del componente sia nel relativo pannello, non esiste un livello elevato di interoperabilità tra <xref:System.ComponentModel.Design.DesignerActionItem>oggetti e i verbi di progettazione.</xref:System.ComponentModel.Design.DesignerActionItem>       Se una finestra di progettazione del componente non è specificato in modo esplicito un <xref:System.ComponentModel.Design.DesignerActionList>(ovvero, non contiene un override <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>proprietà), verrà creato un elenco di verbi di progettazione esistenti.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionList> Tali verbi sono specificati per il <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>proprietà.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> In questo caso, una classe di elenco di verbi interna viene utilizzata per contenere la raccolta di voci di pannello elemento verbo.       Se si desidera un <xref:System.ComponentModel.Design.DesignerActionMethodItem>per essere utilizzato sia come voce del pannello e una voce di menu di scelta rapida in fase di progettazione, è possibile impostare il `includeAsDesignerVerb` parametro nel costruttore dell&quot;elemento.</xref:System.ComponentModel.Design.DesignerActionMethodItem>       Utilizzare <xref:System.ComponentModel.Design.DesignerActionUIService>per controllare la visualizzazione del finestra di progettazione <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionUIService>"
  syntax:
    content: 'public class DesignerActionService : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> classe."
  remarks: "Un provider di servizi è necessario per il monitoraggio delle modifiche ai componenti e selezione. È previsto il supporto di <xref:System.ComponentModel.Design.IDesignerHost>e <xref:System.ComponentModel.Design.IComponentChangeService>tipi.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IDesignerHost> La <xref:System.ComponentModel.Design.DesignerActionService>classe utilizza una tabella interna per gestire i componenti e i relativi <xref:System.ComponentModel.Design.DesignerActionList>smart tag.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService>       In genere, gli sviluppatori di componenti non saranno necessario creare un&quot;istanza di questa classe. In alternativa, acquisiscono un&quot;istanza esistente mediante una chiamata al <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>metodo.</xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>"
  syntax:
    content: public DesignerActionService (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Il provider di servizi per l&quot;ambiente in fase di progettazione corrente."
  overload: System.ComponentModel.Design.DesignerActionService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Aggiunge un <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> alla raccolta corrente di smart tag gestiti."
  remarks: "Il metodo Add rappresenta il modello push di aggiunta di elementi smart tag. Il modello pull alternativo si basa sull&quot;override di <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>proprietà nella finestra di progettazione per il componente corrispondente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       Quando viene chiamato questo metodo, gli elenchi da aggiungere vengono analizzati per qualsiasi <xref:System.ComponentModel.Design.DesignerActionMethodItem>con il <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>proprietà impostata su `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Questi elementi vengono aggiunti all&quot;elenco di verbi di progettazione per questo componente, tramite una chiamata al <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>metodo.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Gli smart tag sono gestiti in una singola istanza di componente. La raccolta gestita può contenere voci duplicate.       Questo metodo genera il <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Il <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> per associare gli smart tag."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "Il <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> che contiene i nuovi elementi smart tag da aggiungere."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i parametri sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Aggiunge un <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> alla raccolta corrente di smart tag gestiti."
  remarks: "Il metodo Add rappresenta il modello push di aggiunta di elementi smart tag. Il modello pull alternativo si basa sull&quot;override di <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>proprietà nella finestra di progettazione per il componente corrispondente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       Quando viene chiamato questo metodo, gli elenchi da aggiungere vengono analizzati per qualsiasi <xref:System.ComponentModel.Design.DesignerActionMethodItem>con il <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>proprietà impostata su `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Questi elementi vengono aggiunti all&quot;elenco di verbi di progettazione per questo componente, tramite una chiamata al <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>metodo.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Gli smart tag sono gestiti in una singola istanza di componente. La raccolta gestita può contenere voci duplicate.       Questo metodo genera il <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Il <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> per associare gli smart tag."
    - id: designerActionListCollection
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Il <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> che contiene i nuovi elementi smart tag da aggiungere."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i parametri sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  id: Clear
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rilascia tutti i componenti dalla gestione e Cancella tutti gli elenchi di smart tag modello push."
  remarks: "Il metodo Clear Svuota la tabella interna utilizzata per archiviare le informazioni sui componenti e i relativi elenchi di smart tag modello push.      > [!CAUTION] > Perché questo metodo influisce su tutti i componenti gestiti dal servizio corrente e non solo il componente corrente, questo metodo deve essere utilizzato con attenzione in. In genere, lo sviluppatore di strumento in fase di progettazione viene utilizzato quando la reimpostazione di un&quot;area di progettazione. Gli sviluppatori di componenti devono utilizzare uno del <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>elementi metodi invece rimuovere singolo smart tag o elenchi.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       Oggetto <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento viene generato per ogni componente precedentemente gestito dal servizio corrente.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  id: Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Determina se il servizio smart tag corrente gestisce l&quot;elenco delle azioni per il componente specificato."
  remarks: "Il metodo Contains riconosce solo modello push smart tag, che sono associati a un componente con il <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>metodo.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A>       Anche se non esiste alcun limite al numero di simultanee strutturale <xref:System.ComponentModel.Design.DesignerActionService>le istanze create da uno strumento di progettazione, in genere una sola istanza del servizio viene creata per ogni area di progettazione.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public bool Contains (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Il <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il componente è gestito dal servizio corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionService.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  id: DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Si verifica quando un <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> è rimossi o aggiunti per qualsiasi componente."
  remarks: "Nella tabella seguente mostra il set di classi specializzate associato all&quot;evento DesignerActionListsChanged.      | Tipo specializzato | Descrizione |   |----------------------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>| Aggiunge informazioni specifiche per la gestione dell&quot;elenco smart tag.</xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> Questa classe è specializzata da <xref:System.EventArgs>. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>| Si connette il <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>con il relativo gestore. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedType>| Indica se un elenco è stato aggiunto o rimosso. |       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</xref:System.ComponentModel.Design.DesignerActionListsChangedType> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler> </xref:System.EventArgs>"
  syntax:
    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;
    return:
      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> classe."
  remarks: "Il metodo Dispose è l&quot;implementazione del metodo solo richieste dal <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Chiamare questo metodo dopo aver terminato di utilizzare <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Esegue due operazioni principali:-rimuove il servizio corrente dall&quot;elenco dei servizi disponibili nell&quot;ambiente di progettazione tramite una chiamata al <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>metodo.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Annulla la sottoscrizione agli eventi di modifica componente dal associato <xref:System.ComponentModel.Design.IComponentChangeService>interfaccia.</xref:System.ComponentModel.Design.IComponentChangeService>       Chiamare Dispose dopo aver terminato di utilizzare <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Il metodo Dispose lascia il <xref:System.ComponentModel.Design.DesignerActionService>in uno stato inutilizzabile.</xref:System.ComponentModel.Design.DesignerActionService> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Design.DesignerActionService>in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Design.DesignerActionService>occupata.</xref:System.ComponentModel.Design.DesignerActionService> </xref:System.ComponentModel.Design.DesignerActionService> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ComponentModel.Design.DesignerActionService>dell&quot;oggetto `Finalize` metodo.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rilascia le risorse non gestite usate da di <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Il <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>metodo è l&quot;implementazione del metodo solo richieste dal <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Chiamare questo metodo dopo aver terminato di utilizzare <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Esegue due operazioni principali:-rimuove il servizio corrente dall&quot;elenco dei servizi disponibili nell&quot;ambiente di progettazione tramite una chiamata al <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>metodo.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Annulla la sottoscrizione agli eventi di modifica componente dal associato <xref:System.ComponentModel.Design.IComponentChangeService>interfaccia.</xref:System.ComponentModel.Design.IComponentChangeService>       Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Design.DesignerActionService>riferimenti.</xref:System.ComponentModel.Design.DesignerActionService> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  id: GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Restituisce la raccolta di elenchi di elementi smart tag associati a un componente."
  remarks: "È equivalente a una chiamata al metodo GetComponentActions il <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29>metodo usando un `type` parametro <xref:System.ComponentModel.Design.ComponentActionsType>.</xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> Pertanto, la raccolta restituita conterrà entrambi gli elenchi di push e pull degli smart tag.       L&quot;oggetto restituito <xref:System.ComponentModel.Design.DesignerActionListCollection>è l&quot;unione di elenchi di elementi aggiunti tramite il <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>metodi e degli elenchi ottenuto dal <xref:System.ComponentModel.Design.DesignerCommandSet>istanza ottenuta dal sito del componente.</xref:System.ComponentModel.Design.DesignerCommandSet> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> </xref:System.ComponentModel.Design.DesignerActionListCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Il componente di cui sono associate agli smart tag."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Raccolta di smart tag per il componente specificato."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Restituisce la raccolta di smart tag elenchi di elementi del tipo specificato associato a un componente."
  remarks: "Questa versione di overload <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>metodo filtra sul `type` parametro, che può avere uno dei valori seguenti.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      | Valore | Descrizione |   |-----------|-----------------|   | <xref:System.ComponentModel.Design.ComponentActionsType>| Tutti gli smart tag associati. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Modello pull smart tag solo. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Modello push smart tag solo. |       Se la finestra di progettazione associata per un componente non fornisce un elenco di smart tag modello pull, il metodo GetComponentActions utilizzerà voci di menu di scelta rapida in fase di progettazione della finestra di progettazione dal <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>proprietà.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Il componente di cui sono associate agli smart tag."
    - id: type
      type: System.ComponentModel.Design.ComponentActionsType
      description: "Il <xref href=&quot;System.ComponentModel.Design.ComponentActionsType&quot;> </xref> per filtrare gli smart tag associati."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Raccolta di smart tag del tipo specificato per il componente specificato."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Recupera gli smart tag modello pull associato a un componente."
  remarks: "Il metodo GetComponentDesignerActions è un metodo helper per il <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>metodi.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> GetComponentDesignerActions Cerca modello pull smart tag di tipo <xref:System.ComponentModel.Design.ComponentActionsType>e li aggiunge al fornito `actionLists` insieme.</xref:System.ComponentModel.Design.ComponentActionsType>       Se lo sviluppatore del componente non fornisce in modo esplicito un insieme di smart tag tramite il <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>proprietà della relativa finestra di progettazione, questo metodo riutilizza le voci del menu di scelta rapida in fase di progettazione, vengono ottenute tramite il <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>proprietà della finestra di progettazione.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>"
  syntax:
    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Il componente di cui sono associate agli smart tag."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "La raccolta per aggiungere gli smart tag associati."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i parametri sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Recupera il modello push smart tag associati a un componente."
  remarks: "Il metodo GetComponentServiceActions è un metodo helper per il <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>metodi.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Cerca modello push smart tag di tipo <xref:System.ComponentModel.Design.ComponentActionsType>e li aggiunge al fornito `actionLists` insieme.</xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Il componente di cui sono associate agli smart tag."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "La raccolta per aggiungere gli smart tag associati."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i parametri sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rimuove l&quot;elenco di smart tag specificato da tutti i componenti gestiti dal servizio corrente."
  remarks: "Questa versione di <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>metodo in genere viene utilizzato dagli sviluppatori di strumenti di progettazione, poiché gli sviluppatori di componenti in genere non conoscono gli altri componenti presenti nell&quot;area di progettazione corrente.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       Se ha esito positivo, questo metodo genera il <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "Elenco di smart tag da rimuovere."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>actionList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rimuove tutti gli elenchi di smart tag associati al componente specificato."
  remarks: "Se ha esito positivo, il metodo Remove genera il <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Il componente per separare gli smart tag."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rimuove l&quot;elenco di smart tag specificato dal componente specificato."
  remarks: "Se ha esito positivo, il metodo Remove genera il <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Il componente per separare gli smart tag."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "L&quot;elenco di smart tag da rimuovere."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i parametri sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionListCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListCollection
  nameWithType: DesignerActionListCollection
  fullName: System.ComponentModel.Design.DesignerActionListCollection
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListsChangedEventHandler
  nameWithType: DesignerActionListsChangedEventHandler
  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
- uid: System.ComponentModel.Design.ComponentActionsType
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentActionsType
  nameWithType: ComponentActionsType
  fullName: System.ComponentModel.Design.ComponentActionsType
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.#ctor*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService
  nameWithType: DesignerActionService.DesignerActionService
- uid: System.ComponentModel.Design.DesignerActionService.Add*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add
  nameWithType: DesignerActionService.Add
- uid: System.ComponentModel.Design.DesignerActionService.Clear*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear
  nameWithType: DesignerActionService.Clear
- uid: System.ComponentModel.Design.DesignerActionService.Contains*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains
  nameWithType: DesignerActionService.Contains
- uid: System.ComponentModel.Design.DesignerActionService.Dispose*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose
  nameWithType: DesignerActionService.Dispose
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions
  nameWithType: DesignerActionService.GetComponentActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions
  nameWithType: DesignerActionService.GetComponentDesignerActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions
  nameWithType: DesignerActionService.GetComponentServiceActions
- uid: System.ComponentModel.Design.DesignerActionService.Remove*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove
  nameWithType: DesignerActionService.Remove
