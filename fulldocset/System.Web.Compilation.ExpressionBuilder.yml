### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Compilation.ExpressionBuilder.#ctor
  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Compilation.ExpressionBuilder
  type: Class
  summary: "Valuta le espressioni durante l&quot;analisi della pagina."
  remarks: "La classe ExpressionBuilder è la classe base per generatori di espressioni, ad esempio il <xref:System.Web.Compilation.AppSettingsExpressionBuilder>(classe), che creano le espressioni di codice durante l&quot;analisi della pagina.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Generatori di espressioni analizzano le espressioni dichiarative e creare codice per recuperare i valori associati a una proprietà del controllo. In scenari non richiedono la compilazione, un generatore di espressioni che supporta una funzionalità non compilazione valuta l&quot;espressione in fase di esecuzione.       Quando il parser della pagina rileva un&quot;espressione delimitata con la stringa `<%$ %>`, crea un generatore di espressioni per l&quot;espressione in base al prefisso nella stringa. Il prefisso è la parte della stringa a sinistra dei due punti (:). Ad esempio, quando il parser rileva la stringa `<%$ ConnectionStrings:MessageDB %>`, viene creato un <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>oggetto.</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> I prefissi sono associati a generatori di espressioni nel file Web. config di <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>sezione.</xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>       Il lato destro dell&quot;espressione dichiarativa viene passato al generatore di espressioni per la valutazione. Eseguire l&quot;override di <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>metodo per generare il codice compilato con la pagina.</xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>       Se si desidera il generatore di espressioni personalizzato di essere attivi in pagine non vengono compilate, è inoltre necessario sostituire il <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>per restituire un oggetto che rappresenta i risultati dell&quot;espressione.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> È inoltre necessario eseguire l&quot;override di <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>proprietà per indicare che il generatore di espressioni personalizzato supporta le pagine di compilazione no.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>       È possibile definire un set di proprietà e metodi per la selezione e la valutazione di un&quot;espressione che è associata a una proprietà del controllo in fase di progettazione mediante l&quot;implementazione di un editor di espressioni. L&quot;editor è contrassegnato nel generatore di espressioni tramite i metadati a livello di classe. Per ulteriori informazioni, vedere <xref:System.Web.UI.Design.ExpressionEditor>.</xref:System.Web.UI.Design.ExpressionEditor>"
  example:
  - "The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract class ExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> classe."
  remarks: "Poiché la <xref:System.Web.Compilation.ExpressionBuilder>classe è astratta, non è possibile creare un&quot;istanza di <xref:System.Web.Compilation.ExpressionBuilder>direttamente mediante il costruttore ExpressionBuilder.</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: protected ExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando sottoposto a override in una classe derivata, restituisce un oggetto che rappresenta un&quot;espressione valutata."
  remarks: "Se si desidera che il <xref:System.Web.Compilation.ExpressionBuilder>oggetto attivo su una pagina che supporta la funzionalità non richiedono la compilazione, è possibile eseguire l&quot;override del metodo EvaluateExpression e <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>proprietà.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> </xref:System.Web.Compilation.ExpressionBuilder> Il metodo EvaluateExpression deve restituire la valutazione dell&quot;espressione corrente."
  example:
  - "The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Oggetto contenente l&quot;espressione."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "L&quot;oggetto che rappresenta le informazioni sulla proprietà associato a dall&quot;espressione."
    - id: parsedData
      type: System.Object
      description: "Oggetto contenente i dati analizzati restituiti dal <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informazioni contestuali per la valutazione dell&quot;espressione."
    return:
      type: System.Object
      description: "Oggetto che rappresenta l&quot;espressione valutata; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;erede non implementa EvaluateExpression."
  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando sottoposto a override in una classe derivata, restituisce il codice che viene utilizzato durante l&quot;esecuzione della pagina per ottenere l&quot;espressione valutata."
  remarks: "Le classi che ereditano dalla <xref:System.Web.Compilation.ExpressionBuilder>classe deve implementare il metodo astratto GetCodeExpression.</xref:System.Web.Compilation.ExpressionBuilder>"
  example:
  - "The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "L&quot;oggetto che rappresenta le informazioni sulla proprietà associato a dall&quot;espressione."
    - id: parsedData
      type: System.Object
      description: "Oggetto contenente i dati analizzati restituiti dal <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informazioni contestuali per la valutazione dell&quot;espressione."
    return:
      type: System.CodeDom.CodeExpression
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> utilizzato per l&quot;assegnazione di proprietà."
  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando sottoposto a override in una classe derivata, restituisce un oggetto che rappresenta l&quot;espressione analizzata."
  remarks: "Quando sottoposto a override in una classe derivata, questo metodo analizza l&quot;espressione e restituisce un oggetto che può essere utilizzato come il `parsedData` parametro in un <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>o <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metodo.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> </xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>"
  syntax:
    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "Il valore dell&quot;espressione dichiarativa."
    - id: propertyType
      type: System.Type
      description: "Il tipo della proprietà associato a dall&quot;espressione."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informazioni contestuali per la valutazione dell&quot;espressione."
    return:
      type: System.Object
      description: "Un <xref:System.Object>contenente la rappresentazione analizzata dell&quot;espressione; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non viene implementata ParseExpression.</xref:System.Object>"
  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando sottoposto a override in una classe derivata, restituisce un valore che indica se l&quot;oggetto corrente <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> le pagine di compilazione non supporta l&quot;oggetto."
  remarks: "Il valore predefinito per la proprietà SupportsEvaluate è `false`. Per supportare le pagine non richiedono la compilazione, è necessario eseguire l&quot;override di <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metodo e la proprietà SupportsEvaluate.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>"
  example:
  - "The following code example demonstrates how to use the SupportsEvaluate property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> supporta la valutazione dell&quot;espressione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
