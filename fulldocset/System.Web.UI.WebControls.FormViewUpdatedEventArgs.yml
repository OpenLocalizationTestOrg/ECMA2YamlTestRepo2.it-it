### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  id: FormViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;> </xref> evento."
  remarks: "Il <xref:System.Web.UI.WebControls.FormView>controllo genera il <xref:System.Web.UI.WebControls.FormView.ItemUpdated>evento quando un pulsante Aggiorna (un pulsante con il relativo `CommandName` proprietà è impostata su &quot;Update&quot;) all&quot;interno del controllo viene selezionato, ma dopo che il <xref:System.Web.UI.WebControls.FormView>ha aggiornato il record.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> In questo modo è possibile fornire un metodo di gestione degli eventi che esegue una routine personalizzata, ad esempio controllare i risultati di un&quot;operazione di aggiornamento, ogni volta che si verifica questo evento.       Un oggetto FormViewUpdatedEventArgs viene passato per il metodo di gestione degli eventi, che consente di determinare il numero di record interessati e le eccezioni che potrebbero essersi verificati. Per determinare il numero di record interessati dall&quot;operazione di aggiornamento, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>proprietà per determinare se è stata generata un&quot;eccezione.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> È anche possibile indicare se l&quot;eccezione è stata gestita nel metodo di gestione degli eventi impostando il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Se è necessario accedere ai valori di campo chiave originale per il record aggiornato, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> I valori originali di campi non chiave, è possibile accedere tramite il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> I valori aggiornati (che includono valori di campo chiave aggiornato, se si consente all&quot;utente di modificare i campi chiave) sono accessibili tramite il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>       Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView>controllo torna alla modalità specificata dal <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>proprietà dopo un&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Quando si gestisce un&quot;eccezione che si è verificato durante l&quot;operazione di aggiornamento, è possibile mantenere il <xref:System.Web.UI.WebControls.FormView>controllo in modalità di modifica impostando il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>proprietà `true`.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Per un elenco di valori di proprietà iniziali per un&quot;istanza della classe FormViewUpdatedEventArgs, vedere il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>costruttore.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewUpdatedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemUpdated> event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_148_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: 'public class FormViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref> classe."
  remarks: "Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>       La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>| Il valore di `affectedRows` parametro. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>| L&quot;oggetto <xref:System.Exception?displayProperty=fullName>contenuto nel `e` parametro. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>| Inizializzata con un valore `false`. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>| Inizializzata con un valore `false`. |      > [!NOTE] > Questo costruttore viene utilizzato principalmente dagli sviluppatori di controlli per la generazione di eventi.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewUpdatedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "Il numero di righe interessate dall&quot;operazione di aggiornamento."
    - id: e
      type: System.Exception
      description: "Un <xref:System.Exception>che rappresenta l&quot;eccezione generata quando è stata eseguita l&quot;operazione di aggiornamento.</xref:System.Exception> Se non viene generata alcuna eccezione, utilizzare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per questo parametro."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero di righe interessate dall&quot;operazione di aggiornamento."
  remarks: "Utilizzare la proprietà AffectedRows per determinare il numero di record interessati dall&quot;operazione di aggiornamento. Questa proprietà viene comunemente utilizzata per verificare che il numero corretto di record è stato aggiornato nelle situazioni seguenti:-verificare che solo un singolo record è stato aggiornato. A volte un&quot;istruzione update sviluppato in modo errato può aggiornare più record.      -Verificare che un record è stato aggiornato quando si verifica un errore durante l&quot;operazione di aggiornamento che non genera un&quot;eccezione.      -Verificare che un record è stato aggiornato quando un controllo origine dati che supporta il rilevamento dei conflitti (controllo della concorrenza ottimistica), ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.ObjectDataSource>controlli, è relativo <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>impostata il `ConflictOptions.CompareAllValues` valore di enumerazione.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> In questa impostazione, un record che è stato modificato da un altro utente simultanea potrebbe non essere aggiornato."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was updated.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1281_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1281_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "Il numero di righe interessate dall&quot;operazione di aggiornamento."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;eccezione (se presente) che è stata generata durante l&quot;operazione di aggiornamento."
  remarks: "Utilizzare la proprietà di eccezione per determinare l&quot;eccezione (se presente) che è stata generata durante l&quot;operazione di aggiornamento. Se viene generata alcuna eccezione, questa proprietà restituisce `null`.      > [!NOTE] > Se è stata generata un&quot;eccezione e si decide di gestire l&quot;eccezione nel gestore eventi, assicurarsi di impostare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>proprietà `true`; in caso contrario, l&quot;eccezione viene generata nuovamente dal <xref:System.Web.UI.WebControls.FormView>controllo.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_564_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_564_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Un <xref:System.Exception>oggetto che rappresenta l&quot;eccezione generata durante l&quot;operazione di aggiornamento.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se un&quot;eccezione generata durante l&quot;operazione di aggiornamento è stata gestita nel gestore eventi."
  remarks: "Quando viene generata un&quot;eccezione durante l&quot;operazione di aggiornamento, utilizzare la proprietà ExceptionHandled per indicare se l&quot;eccezione è stata gestita nel gestore eventi. Quando questa proprietà è impostata su `true`, l&quot;eccezione viene considerata gestita e non viene generata nuovamente dal <xref:System.Web.UI.WebControls.FormView>controllo.</xref:System.Web.UI.WebControls.FormView> Se questa proprietà è impostata su `false`, l&quot;eccezione viene generata nuovamente. Per determinare l&quot;eccezione generata, utilizzare il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_345_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_345_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;eccezione è stata gestita nel gestore. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controllo deve rimanere in modalità di modifica dopo un&quot;operazione di aggiornamento."
  remarks: "Per impostazione predefinita, il <xref:System.Web.UI.WebControls.FormView>controllo torna alla modalità specificata dal <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>proprietà dopo un&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Utilizzare la proprietà KeepInEditMode per specificare se il <xref:System.Web.UI.WebControls.FormView>controllo deve rimanere in modalità di modifica.</xref:System.Web.UI.WebControls.FormView> Per mantenere il <xref:System.Web.UI.WebControls.FormView>controllare in modalità di modifica, impostare questa proprietà su `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Questa proprietà deve essere utilizzata solo quando si verifica una situazione (ad esempio, viene generata un&quot;eccezione) che richiede un comportamento diverso rispetto a quanto avviene in genere che il controllo. Se il <xref:System.Web.UI.WebControls.FormView>controllo deve rimanere in modalità di modifica per impostazione predefinita, impostare il <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>proprietà invece.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode when an exception occurs.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1052_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1052_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere la modalità di modifica dopo un&quot;operazione di aggiornamento. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un dizionario che contiene le coppie nome/valore di campo chiave originale per il record aggiornato."
  remarks: "La proprietà chiavi contiene i valori originali dei campi elencati nella chiave di <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>proprietà di un <xref:System.Web.UI.WebControls.FormView>controllo.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Utilizzare la proprietà di chiavi per accedere ai valori del campo chiave di un record aggiornato. Ad esempio, è possibile utilizzare questi valori per mantenere un registro dei record aggiornati.      > [!NOTE] > Se si consente all&quot;utente di aggiornare i valori dei campi chiave, il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>proprietà contiene i valori dei campi chiave originale.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> I valori aggiornati sono archiviati nel <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       La proprietà restituisce chiavi un <xref:System.Collections.Specialized.OrderedDictionary>oggetto che implementa il <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfaccia.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Il <xref:System.Collections.Specialized.OrderedDictionary>oggetto contiene <xref:System.Collections.DictionaryEntry?displayProperty=fullName>gli oggetti che rappresentano i campi del record aggiornato.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Per accedere ai nomi dei campi, utilizzare il <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>proprietà del <xref:System.Collections.Specialized.OrderedDictionary>oggetto.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Analogamente, è possibile accedere ai valori dei campi utilizzando la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>proprietà.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > In alternativa, è inoltre possibile utilizzare l&quot;indicizzatore del <xref:System.Collections.Specialized.OrderedDictionary>direttamente i valori di oggetto per accedere al campo.</xref:System.Collections.Specialized.OrderedDictionary> I controlli che si basano sull&quot;ordine dei campi dell&quot;origine dati (ad esempio <xref:System.Web.UI.WebControls.AccessDataSource>) può accedere ai valori dei campi solo in base all&quot;indice.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the Keys property to access the values of the key field for an updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_531_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_531_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Un <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> che contiene un dizionario delle coppie nome/valore campo chiave originale per il record aggiornato."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un dizionario che contiene le nuove coppie nome/valore per il record aggiornato."
  remarks: "Utilizzare la proprietà di nuovi valori per accedere ai nuovi valori di campo per il record aggiornato. Ad esempio, è possibile utilizzare questi valori per mantenere un registro dei record aggiornati.      > [!NOTE] > Se si consente all&quot;utente di aggiornare i valori dei campi chiave, il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>proprietà contiene i valori dei campi chiave originale.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> I valori aggiornati sono archiviati nel <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       La proprietà di nuovi valori restituisce un <xref:System.Collections.Specialized.OrderedDictionary>oggetto che implementa il <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfaccia.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Il <xref:System.Collections.Specialized.OrderedDictionary>oggetto contiene <xref:System.Collections.DictionaryEntry?displayProperty=fullName>gli oggetti che rappresentano i campi del record aggiornato.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Per accedere ai nomi dei campi, utilizzare il <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>proprietà del <xref:System.Collections.Specialized.OrderedDictionary>oggetto.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Analogamente, è possibile accedere ai valori dei campi utilizzando la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>proprietà.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > In alternativa, è inoltre possibile utilizzare l&quot;indicizzatore del <xref:System.Collections.Specialized.OrderedDictionary>direttamente i valori di oggetto per accedere al campo.</xref:System.Collections.Specialized.OrderedDictionary> I controlli che si basano sull&quot;ordine dei campi dell&quot;origine dati (ad esempio <xref:System.Web.UI.WebControls.AccessDataSource>) può accedere ai valori dei campi solo in base all&quot;indice.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_253_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_253_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Un <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> che contiene un dizionario delle nuove coppie nome/valore di campo per il record aggiornato."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un dizionario che contiene le coppie nome/valore di campi non chiave originale per il record aggiornato."
  remarks: "Utilizzare la proprietà OldValues per accedere ai valori di campi non chiave originale per il record aggiornato. Ad esempio, è possibile utilizzare questi valori per mantenere un registro dei record aggiornati. Un controllo origine dati che supporta il rilevamento dei conflitti (controllo della concorrenza ottimistica), ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.ObjectDataSource>controlli, con relativi <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>impostata il `ConflictOptions.CompareAllValues` Confronta anche questi valori originali con i record nel database prima di eseguita un&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Se un record è stato modificato da un altro utente contemporaneamente, il record non viene aggiornato.      > [!NOTE] > Il <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>proprietà non contiene campi chiave.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> Se si consente all&quot;utente di aggiornare i valori dei campi chiave, i valori dei campi chiave originale vengono archiviati nel <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> I valori aggiornati sono archiviati nel <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>proprietà.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       Il <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>proprietà restituisce un <xref:System.Collections.Specialized.OrderedDictionary>oggetto che implementa il <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfaccia.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Il <xref:System.Collections.Specialized.OrderedDictionary>oggetto contiene <xref:System.Collections.DictionaryEntry?displayProperty=fullName>gli oggetti che rappresentano i campi del record aggiornato.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Per accedere ai nomi dei campi, utilizzare il <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>proprietà del <xref:System.Collections.Specialized.OrderedDictionary>oggetto.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Analogamente, è possibile accedere ai valori dei campi utilizzando la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>proprietà.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > In alternativa, è inoltre possibile utilizzare l&quot;indicizzatore del <xref:System.Collections.Specialized.OrderedDictionary>direttamente i valori di oggetto per accedere al campo.</xref:System.Collections.Specialized.OrderedDictionary> I controlli che si basano sull&quot;ordine dei campi dell&quot;origine dati (ad esempio <xref:System.Web.UI.WebControls.AccessDataSource>) può accedere ai valori dei campi solo in base all&quot;indice.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the OldValues property to access the original values of the non-key fields for the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_164_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_164_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Un <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> che contiene un dizionario delle coppie nome/valore campo originale per il record aggiornato."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
