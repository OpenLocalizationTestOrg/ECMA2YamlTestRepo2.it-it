### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.WorkflowInstance
  id: WorkflowInstance
  children:
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Id
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  - System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Activities.Hosting.WorkflowInstance
  type: Class
  summary: "WorkflowInstance è un runtime per istanza leggero per l&quot;esecuzione di un programma di flusso di lavoro. Può essere costruito per creare una nuova istanza del flusso di lavoro o di stato dell&quot;istanza esistente. Le API che <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>espone costituiscono il set minimo di controlli di runtime da cui operazioni di livello superiore possono essere implementate.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> Questo set di API rappresenta l&quot;intera gamma di funzionalità del runtime. WorkflowInstance è una classe astratta e si basa sull&quot;implementazione di un host dei metodi astratti per fornire funzionalità host, quali sincronizzazione, persistenza, rilevamento e le estensioni."
  remarks: "WorkflowInstance è singolo thread singolo e presuppone che l&quot;host sincronizzi tutti gli accessi a esso. Tentativo di chiamare più API contemporaneamente comporterà un <xref:System.InvalidOperationException>generata.</xref:System.InvalidOperationException>       Internamente, un&quot;istanza WorkflowInstance dispone di due stati: in esecuzione e sospeso. L&quot;unico modo per fare in modo il runtime per eseguire la transizione da messo in pausa all&quot;esecuzione consiste nel chiamare <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> Tutte le azioni (tranne la sospensione) possono essere eseguite solo durante il runtime è sospeso. Il runtime verrà automaticamente sospeso nelle situazioni seguenti:-si è verificato un errore irreversibile di runtime. L&quot;host verrà segnalato tramite <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>(che non segnala una transizione alla sospensione), quindi notificato tramite <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> </xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>      -Un&quot;eccezione nel flusso di lavoro è stata intercettata e caratteri di escape radice. L&quot;host riceverà una notifica tramite il <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>metodo.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>      -L&quot;utilità di pianificazione ha esaurito gli elementi di lavoro viene ora <xref:System.Activities.Hosting.WorkflowInstanceState>.</xref:System.Activities.Hosting.WorkflowInstanceState> L&quot;host riceverà una notifica tramite il <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>metodo.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> Si noti che l&quot;utilità di pianificazione potrebbe avere esaurito gli elementi di lavoro perché l&quot;istanza è inattiva o perché l&quot;istanza è stata completata. Il <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>valore il <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>proprietà può essere usata per distinguere tra i due.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       L&quot;host può richiedere una modifica dall&quot;esecuzione alla sospensione chiamando i <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>o <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A>metodi del <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>istanza restituita dal <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>proprietà.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Questa richiesta non deve essere considerata una risposta specifica pertanto l&quot;host non deve tentare di correlare un metodo OnNotify* o <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>con una chiamata specifica alla sospensione.</xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> In risposta a una richiesta di sospensione, il runtime potrebbe eseguire la transizione alla sospensione e chiamare <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>mentre l&quot;utilità di pianificazione sono ancora presenti elementi di lavoro in sospeso.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> Il <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>valore il <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>proprietà può essere utilizzata per determinare se l&quot;utilità di pianificazione ha non altre operazioni o è stata interrotta da una richiesta di sospensione.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       Il <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>metodo il <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>istanza restituita dal <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>proprietà è l&quot;unico metodo che può essere chiamato mentre WorkflowInstance è in stato di esecuzione.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Tutti gli altri metodi genererà un <xref:System.InvalidOperationException>se chiamato. Stabilite le regole per la modalità di WorkflowInstance transizione da uno stato a un altro, la nozione pubblica di esecuzione e di sospensione può essere definita come segue: - esecuzione: lo stato tra una chiamata a <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>e il successivo WorkflowInstance.OnNotify*.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> </xref:System.InvalidOperationException>      -In pausa – lo stato tra l&quot;ultimo OnNotify * e la successiva chiamata a <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>"
  syntax:
    content: public abstract class WorkflowInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> classe con la definizione di flusso di lavoro specificata."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "Attività che definisce il flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> classe con la definizione di flusso di lavoro specificata e l&quot;identità della definizione."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "Attività che definisce il flusso di lavoro."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità di definizione."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per iniziare l&quot;invio in sospeso ai partecipanti di rilevamento in modo asincrono i record di rilevamento."
  syntax:
    content: protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il periodo di tempo dopo il quale interrompere il tentativo."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare al termine dell&quot;operazione di rilevamento."
    - id: state
      type: System.Object
      description: "Le informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Lo stato dell&quot;operazione di rilevamento corrente."
  overload: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  id: Controller
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene il <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>istanza per questo <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>"
  syntax:
    content: protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "L&quot;istanza del controller per l&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  id: DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene o imposta l&quot;identità di definizione del <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  syntax:
    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }
    return:
      type: System.Activities.WorkflowIdentity
      description: "L&quot;identità della definizione di <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  id: DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Viene chiamato <xref:System.Disposable.Dispose*>su tutte le estensioni che implementano <xref:System.IDisposable>.</xref:System.IDisposable> </xref:System.Disposable.Dispose*>"
  syntax:
    content: protected void DisposeExtensions ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  id: EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per terminare l&quot;operazione di traccia."
  syntax:
    content: protected void EndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Lo stato dell&quot;operazione di rilevamento asincrona."
  overload: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  id: FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per inviare i record di rilevamento ai partecipanti di rilevamento in sospeso."
  syntax:
    content: protected void FlushTrackingRecords (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il periodo di tempo dopo il quale interrompere il tentativo."
  overload: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Recupera l&quot;elenco di attività che blocca l&quot;aggiornamento del flusso di lavoro."
  syntax:
    content: protected static System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Lo stato di runtime deserializzato."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
    return:
      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
      description: "Elenco di attività che blocca l&quot;aggiornamento."
  overload: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  id: GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected T GetExtension<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  id: GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected System.Collections.Generic.IEnumerable<T> GetExtensions<T> () where T : class;'
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "Da aggiungere."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  id: HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene o imposta l&quot;ambiente radice per gli argomenti e variabili dell&quot;istanza del flusso di lavoro."
  remarks: "Se questa proprietà è impostata dopo l&quot;istanza del flusso di lavoro è inizializzata e <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>restituisce `true`, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "Ambiente radice per gli argomenti e variabili dell&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Id
  id: Id
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene l&quot;identificatore univoco per l&quot;istanza del flusso di lavoro."
  syntax:
    content: public abstract Guid Id { get; }
    return:
      type: System.Guid
      description: "Identificatore univoco per l&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dall&quot;host per inizializzare l&quot;istanza del flusso di lavoro con lo stato di runtime del flusso di lavoro."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Lo stato di runtime utilizzato per eseguire il flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dall&quot;host per inizializzare l&quot;istanza del flusso di lavoro con i valori degli argomenti e le proprietà di esecuzione."
  syntax:
    content: protected void Initialize (System.Collections.Generic.IDictionary<string,object> workflowArgumentValues, System.Collections.Generic.IList<System.Activities.Handle> workflowExecutionProperties);
    parameters:
    - id: workflowArgumentValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "I parametri di input per il flusso di lavoro codificati dal nome dell&quot;argomento."
    - id: workflowExecutionProperties
      type: System.Collections.Generic.IList{System.Activities.Handle}
      description: "L&quot;elenco di proprietà di esecuzione del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dall&quot;host per inizializzare l&quot;istanza del flusso di lavoro con lo stato di runtime del flusso di lavoro e aggiornare la mappa."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Lo stato di runtime utilizzato per eseguire il flusso di lavoro."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "La mappa di aggiornamento."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene un valore che indica se l&quot;istanza del flusso di lavoro è stata inizializzata."
  syntax:
    content: protected bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza del flusso di lavoro è stata inizializzata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che le nuove chiavi di istanza devono essere associate a questa istanza."
  syntax:
    content: protected abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "Le chiavi di istanza da associare a questa istanza del flusso di lavoro."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Operazione di chiavi di associazione di un riferimento a asincrona."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  id: OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamata asincrona per chiedere all&quot;host di scaricare i record di rilevamento ai partecipanti di rilevamento in sospeso."
  syntax:
    content: protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare al termine dell&quot;operazione di rilevamento."
    - id: state
      type: System.Object
      description: "Le informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Lo stato dell&quot;operazione di rilevamento corrente."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamata asincrona per chiedere all&quot;host di rendere persistente il flusso di lavoro."
  syntax:
    content: protected abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di persistenza è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Operazione della persistenza un riferimento all&quot;oggetto corrente."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che sta iniziando un&quot;operazione di ripresa di segnalibro."
  syntax:
    content: protected abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Il segnalibro da riprendere."
    - id: value
      type: System.Object
      description: "I dati da passare all&quot;attività che ha creato il <xref href=&quot;System.Activities.Bookmark&quot;> </xref>."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallo in cui l&quot;operazione di ripresa deve essere completata prima che l&quot;operazione sia annullata e un <xref:System.TimeoutException>viene generata un&quot;eccezione.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di ripresa è stata completata."
    - id: state
      type: System.Object
      description: "Oggetto facoltativo specifico dell&quot;applicazione che contiene informazioni sull&quot;operazione asincrona."
    return:
      type: System.IAsyncResult
      description: "Un riferimento all&quot;operazione di ripresa asincrona."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che un determinato set di chiavi di istanza non deve essere associato a questa istanza."
  syntax:
    content: protected abstract void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "L&quot;elenco di chiavi da disassociare."
  overload: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che un&quot;operazione di associazione delle chiavi è stata completata."
  syntax:
    content: protected abstract void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il riferimento a asincrona operazione di associazione chiavi."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  id: OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host quando l&quot;operazione di scaricamento rilevamento record è stata completata."
  syntax:
    content: protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Lo stato dello scaricamento asincrono operazione record di rilevamento."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che un&quot;operazione di persistenza è stata completata."
  syntax:
    content: protected abstract void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Operazione della persistenza asincrona il riferimento."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che un&quot;operazione di ripresa di segnalibro è stata completata."
  syntax:
    content: protected abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il riferimento all&quot;operazione di segnalibro di ripresa asincrona."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Uno dei valori di enumerazione che indica il risultato di un <xref href=&quot;System.Activities.Bookmark&quot;> </xref> operazione di ripresa."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che l&quot;istanza del flusso di lavoro ha eseguito la transizione dallo stato di esecuzione per lo stato sospeso."
  syntax:
    content: protected abstract void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host di che un&quot;eccezione non gestita nell&quot;istanza del flusso di lavoro."
  syntax:
    content: protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "Eccezione non gestita."
    - id: source
      type: System.Activities.Activity
      description: "L&quot;attività che ha generato l&quot;eccezione."
    - id: sourceInstanceId
      type: System.String
      description: "Identificatore univoco del <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> che rappresenta l&quot;attività che ha generato l&quot;eccezione."
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dal runtime del flusso di lavoro per notificare all&quot;host che un&quot;operazione di interruzione è stata richiesta per l&quot;istanza del flusso di lavoro."
  remarks: "Una volta OnRequestAbort viene chiamato, la maggior parte delle <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>API, ad eccezione di <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>genererà un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> È previsto che dopo la chiamata a OnRequestAbort tendenza di un host verso uno stato in cui sia possibile soddisfare l&quot;interruzione."
  syntax:
    content: protected abstract void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "Motivo dell&quot;interruzione l&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  id: RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chiamato dall&quot;host per registrare il gestore estensioni specificato, confermare che tutte le estensioni obbligatorie siano presente e inizializzare la raccolta di estensioni da utilizzare."
  remarks: "Le estensioni vengono codificate in base al tipo e un host fornito estensione verrà sempre utilizzata se specificato. Le estensioni aggiunte tramite <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>utilizzano il tipo di runtime dell&quot;oggetto come chiave del tipo.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Provider di estensioni aggiunti tramite <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>utilizzano il tipo dichiarato T di Func\\<T > come chiave del tipo.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> I provider di estensioni forniti dalle attività tramite svariati metodi * activitymetadata. adddefaultextensionprovider vengono eliminati se esiste un&quot;estensione host per il tipo dichiarato o se è presente un tipo più ampio fornito tramite AddDefaultExtensionProvider (ad esempio. Se Func\\<StreamWriter > viene fornito e Func\\<TextWriter > viene fornito solo Func\\<StreamWriter > verranno mantenuti). Se un&quot;estensione non esiste nella raccolta che è richiesta da un&quot;attività (espressa chiamando \\*activitymetadata. Requireextension) un <xref:System.Activities.ValidationException>viene generata un&quot;eccezione.</xref:System.Activities.ValidationException>"
  syntax:
    content: protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);
    parameters:
    - id: extensionManager
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "Il gestore estensioni da registrare."
  overload: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene un valore che indica se l&quot;host supporta l&quot;associazione di <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>con un&quot;istanza di runtime.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  syntax:
    content: protected abstract bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;host supporta l&quot;associazione di <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>con un&quot;istanza del flusso di lavoro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  overload: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  id: SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene o imposta il <xref:System.Threading.SynchronizationContext>utilizzato per la pianificazione dell&quot;istanza del flusso di lavoro.</xref:System.Threading.SynchronizationContext>"
  remarks: "Se questa proprietà è impostata dopo l&quot;istanza del flusso di lavoro è inizializzata e <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>restituisce `true`, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }
    return:
      type: System.Threading.SynchronizationContext
      description: "Il contesto di sincronizzazione utilizzato per la pianificazione dell&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  id: ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Genera un&quot;eccezione <xref:System.InvalidOperationException>Se l&quot;istanza del flusso di lavoro è stata inizializzata, come determinato da <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*>.</xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*> </xref:System.InvalidOperationException> un"
  remarks: "Se <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>restituisce `true`, quindi un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: protected void ThrowIfReadOnly ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  id: WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene la definizione del flusso di lavoro dell&quot;istanza del flusso di lavoro."
  syntax:
    content: public System.Activities.Activity WorkflowDefinition { get; }
    return:
      type: System.Activities.Activity
      description: "La definizione del flusso di lavoro dell&quot;istanza del flusso di lavoro."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ActivityBlockingUpdate>
  nameWithType: IList<ActivityBlockingUpdate>
  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate
    name: ActivityBlockingUpdate
    nameWithType: ActivityBlockingUpdate
    fullName: ActivityBlockingUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IList{System.Activities.Handle}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Handle>
  nameWithType: IList<Handle>
  fullName: System.Collections.Generic.IList<System.Activities.Handle>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.Handle>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Handle
    name: Handle
    nameWithType: Handle
    fullName: Handle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
- uid: System.Activities.Hosting.WorkflowInstance.#ctor*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance.WorkflowInstance
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.Controller*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions
  nameWithType: WorkflowInstance.DisposeExtensions
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords
  nameWithType: WorkflowInstance.EndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords
  nameWithType: WorkflowInstance.FlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension<T>
  nameWithType: WorkflowInstance.GetExtension<T>
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions<T>
  nameWithType: WorkflowInstance.GetExtensions<T>
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
- uid: System.Activities.Hosting.WorkflowInstance.Initialize*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize
  nameWithType: WorkflowInstance.Initialize
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowInstance.OnBeginAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowInstance.OnBeginPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowInstance.OnBeginResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowInstance.OnDisassociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowInstance.OnEndAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowInstance.OnEndPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowInstance.OnEndResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowInstance.OnNotifyPaused
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowInstance.OnNotifyUnhandledException
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowInstance.OnRequestAbort
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager
  nameWithType: WorkflowInstance.RegisterExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly
  nameWithType: WorkflowInstance.ThrowIfReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
