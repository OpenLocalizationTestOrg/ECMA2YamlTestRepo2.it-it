### YamlMime:ManagedReference
items:
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  id: MetadataWorkspace
  children:
  - System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  - System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  - System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  - System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  - System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  - System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  - System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
  type: Class
  summary: "Rappresenta il [!INCLUDE[vstecado](~/add/includes/vstecado-md.md)] metadati runtime componente del servizio che fornisce supporto per il recupero dei metadati da diverse origini."
  remarks: "La <xref:System.Data.Metadata.Edm.MetadataWorkSpace>classe fornisce un componente del servizio di runtime centrale che Ã¨ possibile utilizzare per interagire con i metadati del modello concettuale nel contesto di una determinata applicazione.</xref:System.Data.Metadata.Edm.MetadataWorkSpace> Per ulteriori informazioni, vedere [area di lavoro metadati](http://msdn.microsoft.com/en-us/601aee56-3eda-4caa-9082-a01df76c5e84)."
  syntax:
    content: public sealed class MetadataWorkspace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  id: '#ctor'
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MetadataWorkspace()
  nameWithType: MetadataWorkspace.MetadataWorkspace()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> classe."
  syntax:
    content: public MetadataWorkspace ();
    parameters: []
  overload: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  nameWithType: MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> classe utilizzando i percorsi specificati e gli assembly."
  syntax:
    content: public MetadataWorkspace (System.Collections.Generic.IEnumerable<string> paths, System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assembliesToConsider);
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Percorsi dei metadati dell&quot;area di lavoro."
    - id: assembliesToConsider
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "I nomi di assembly utilizzato per costruire l&quot;area di lavoro."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  id: ClearCache
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: ClearCache()
  nameWithType: MetadataWorkspace.ClearCache()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Cancella tutte le voci della cache dei metadati."
  syntax:
    content: public static void ClearCache ();
    parameters: []
  overload: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  id: CreateEntitySqlParser
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: CreateEntitySqlParser()
  nameWithType: MetadataWorkspace.CreateEntitySqlParser()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Crea un <xref href=&quot;System.Data.Common.EntitySql.EntitySqlParser&quot;> </xref> configurato per l&quot;utilizzo di <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> spazio dati."
  syntax:
    content: public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();
    parameters: []
    return:
      type: System.Data.Common.EntitySql.EntitySqlParser
      description: "L&quot;oggetto parser creato."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  id: CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: CreateQueryCommandTree(DbExpression)
  nameWithType: MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Crea un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQueryCommandTree&quot;> </xref> associato a questa area di lavoro metadati in base all&quot;espressione di query specificata."
  syntax:
    content: public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);
    parameters:
    - id: query
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Oggetto <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> che definisce la query."
    return:
      type: System.Data.Common.CommandTrees.DbQueryCommandTree
      description: "Un nuovo <xref href=&quot;System.Data.Common.CommandTrees.DbQueryCommandTree&quot;> </xref> con l&quot;espressione specificata perchÃ© Ã¨ <xref:System.Data.Common.CommandTrees.DbQueryCommandTree.Query*>proprietÃ .</xref:System.Data.Common.CommandTrees.DbQueryCommandTree.Query*>"
  overload: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>query</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>query</code>
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  id: GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEdmSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> che corrisponde al tipo fornito dal parametro <code> objectSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref:System.Data.Metadata.Edm.EnumlType>che fornisce il tipo nello spazio dell&quot;oggetto.</xref:System.Data.Metadata.Edm.EnumlType>"
    return:
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Se non Ã¨ un tipo corrispondente, questo metodo restituisce null."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  id: GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEdmSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> che corrisponde al tipo fornito dal parametro <code> objectSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> che fornisce il tipo nello spazio dell&quot;oggetto."
    return:
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Se non Ã¨ un tipo corrispondente, questo metodo restituisce null."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEntityContainer(String,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto utilizzando il nome del contenitore di entitÃ  specificata e il modello di dati."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del contenitore di entitÃ ."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui viene cercato il contenitore di entitÃ ."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se non vi Ã¨ alcun contenitore di entitÃ , questo metodo restituisce null. in caso contrario, restituisce il primo contenitore di entitÃ ."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEntityContainer(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto utilizzando il nome del contenitore di entitÃ  specificata e il modello di dati."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del contenitore di entitÃ ."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca tra maiuscole e minuscole. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui viene cercato il contenitore di entitÃ ."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se non vi Ã¨ alcun contenitore di entitÃ , questo metodo restituisce null. in caso contrario, restituisce il primo contenitore di entitÃ ."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetFunctions(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce tutti gli overload delle funzioni utilizzando il nome specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della funzione."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi della funzione."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui vengono eseguita la ricerca di funzioni."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Una raccolta di tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; che contiene tutte le funzioni che corrispondono al nome specificato in un determinato spazio dei nomi e un modello di dati."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  id: GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetFunctions(String,String,DataSpace,Boolean)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce tutti gli overload delle funzioni utilizzando il nome specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della funzione."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi della funzione."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui vengono eseguita la ricerca di funzioni."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca tra maiuscole e minuscole. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Una raccolta di tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; che contiene tutte le funzioni che corrispondono al nome specificato in un determinato spazio dei nomi e un modello di dati."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItem(String,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "Da aggiungere."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItem(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "Da aggiungere."
    - id: ignoreCase
      type: System.Boolean
      description: "Da aggiungere."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  id: GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItemCollection(DataSpace)
  nameWithType: MetadataWorkspace.GetItemCollection(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Ottiene <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> elementi."
  syntax:
    content: public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> da cui recuperare gli elementi."
    return:
      type: System.Data.Metadata.Edm.ItemCollection
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> elementi."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  id: GetItems(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Ottiene tutti gli elementi nel modello di dati specificato."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem> GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale per cui Ã¨ necessaria l&quot;elenco di elementi."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem}
      description: "Una raccolta di tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; che contiene tutti gli elementi del modello di dati specificato."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItems*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  id: GetItems``1(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public System.Collections.ObjectModel.ReadOnlyCollection<T> GetItems<T> (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Da aggiungere."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "Da aggiungere."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItems<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  id: GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetObjectSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo dello spazio di oggetto che corrisponde al tipo fornito dal parametro <code> edmSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio. Se non Ã¨ un tipo corrispondente, questo metodo restituisce null."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  id: GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetObjectSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo dello spazio di oggetto che corrisponde al tipo fornito dal parametro <code> edmSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio. Se non Ã¨ un tipo corrispondente, questo metodo restituisce null."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  id: GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetPrimitiveTypes(DataSpace)
  nameWithType: MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce l&quot;elenco di tipi primitivi nel modello di dati specificato."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello di dati per cui Ã¨ necessario l&quot;elenco di tipi primitivi."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "Una raccolta di tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; che contiene tutti i tipi primitivi nel modello di dati specificato."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  id: GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce i membri di un determinato <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> / <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref> per i valori originali necessari quando si modifica un&quot;entitÃ ."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember> GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Un <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> appartenente allo spazio di C."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityTypeBase
      description: "Un <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref> che fa parte il determinato <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref>."
    - id: partialUpdateSupported
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;entitÃ  possono essere aggiornate parzialmente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmMember}
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.EdmMember&quot;> </xref>s per cui Ã¨ richiesto il valore originale."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  id: GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Ottiene i membri dei valori originali da un set di entitÃ  e tipo di entitÃ ."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Metadata.Edm.EdmMember> GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Set di entitÃ  da cui recuperare i valori originali."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityTypeBase
      description: "Il tipo di entitÃ  da cui recuperare i valori originali."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember}
      description: "I membri di valore originale di un tipo di entitÃ  e di set di entitÃ ."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetType(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto utilizzando il nome del tipo specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del tipo."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi del tipo."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui il tipo viene eseguita la ricerca."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto che rappresenta il tipo che corrisponde al nome del tipo e il nome dello spazio dei nomi nel modello di dati specificato. Se non Ã¨ un tipo corrispondente, questo metodo restituisce null."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetType(String,String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto utilizzando il nome del tipo specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del tipo."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi del tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca tra maiuscole e minuscole. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui il tipo viene eseguita la ricerca."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  id: LoadFromAssembly(System.Reflection.Assembly)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: LoadFromAssembly(Assembly)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Carica i metadati dall&quot;assembly specificato."
  syntax:
    content: public void LoadFromAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "L&quot;assembly da cui verranno caricati i metadati."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  id: LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: LoadFromAssembly(Assembly,Action<String>)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Carica i metadati dall&quot;assembly specificato."
  syntax:
    content: public void LoadFromAssembly (System.Reflection.Assembly assembly, Action<string> logLoadMessage);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "L&quot;assembly da cui verranno caricati i metadati."
    - id: logLoadMessage
      type: System.Action{System.String}
      description: "Il delegato per la registrazione dei messaggi di caricamento."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  id: MaximumEdmVersionSupported
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MaximumEdmVersionSupported
  nameWithType: MetadataWorkspace.MaximumEdmVersionSupported
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Rappresenta la versione massima di Entity Data Model (EDM) supportata dal runtime di Entity Framework."
  syntax:
    content: public static readonly double MaximumEdmVersionSupported;
    return:
      type: System.Double
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  id: RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: RegisterItemCollection(ItemCollection)
  nameWithType: MetadataWorkspace.RegisterItemCollection(ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(ItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Registra la raccolta di elementi con ogni modello di dati associato."
  syntax:
    content: public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);
    parameters:
    - id: collection
      type: System.Data.Metadata.Edm.ItemCollection
      description: "Raccolta di parametri di output che deve essere riempito."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  id: TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEdmSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto attraverso il parametro out <code> edmSpaceType </code> che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> che corrisponde al tipo fornito dal parametro <code> objectSpaceType </code>."
  syntax:
    content: public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio."
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione riesce, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> in caso di errore."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  id: TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEdmSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto attraverso il parametro out <code> edmSpaceType </code> che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> che corrisponde al tipo fornito dal parametro <code> objectSpaceType </code>."
  syntax:
    content: public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio."
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ã¨ presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEntityContainer(String,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto utilizzando il nome del contenitore di entitÃ  specificata e il modello di dati."
  syntax:
    content: public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del contenitore di entitÃ ."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui viene cercato il contenitore di entitÃ ."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto. Se non vi Ã¨ alcun contenitore di entitÃ , questo parametro di output contiene null; in caso contrario, restituisce il primo contenitore di entitÃ . Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se non vi Ã¨ un contenitore di entitÃ  che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto utilizzando il nome del contenitore di entitÃ  specificata e il modello di dati."
  syntax:
    content: public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del contenitore di entitÃ ."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca tra maiuscole e minuscole. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui viene cercato il contenitore di entitÃ ."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> oggetto. Se non vi Ã¨ alcun contenitore di entitÃ , questo parametro di output contiene null; in caso contrario, restituisce il primo contenitore di entitÃ . Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se non vi Ã¨ un contenitore di entitÃ  che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  id: TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItem(String,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,DataSpace,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "Da aggiungere."
    - id: space
      type: System.Data.Metadata.Edm.DataSpace
      description: "Da aggiungere."
    - id: item
      type: T
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  id: TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItem(String,Boolean,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "Da aggiungere."
    - id: ignoreCase
      type: System.Boolean
      description: "Da aggiungere."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Da aggiungere."
    - id: item
      type: T
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  id: TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItemCollection(DataSpace,ItemCollection)
  nameWithType: MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Testa il recupero di <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>."
  syntax:
    content: public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> da cui tentare il recupero di <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>."
    - id: collection
      type: System.Data.Metadata.Edm.ItemCollection
      description: "Quando questo metodo viene restituito, contiene la raccolta di elementi. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il recupero ha esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  id: TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetObjectSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto attraverso il parametro out <code> objectSpaceType </code> che rappresenta il tipo corrispondente di <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> fornito dal parametro <code> edmSpaceType </code>."
  syntax:
    content: public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ã¨ presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  id: TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetObjectSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto attraverso il parametro out <code> objectSpaceType </code> che rappresenta il tipo corrispondente di <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> fornito dal parametro <code> edmSpaceType </code>."
  syntax:
    content: public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Oggetto <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> oggetto che rappresenta il tipo di oggetto dello spazio. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ã¨ presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetType(String,String,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto utilizzando il nome del tipo specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del tipo."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi del tipo."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui il tipo viene eseguita la ricerca."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ã¨ presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetType(String,String,Boolean,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Restituisce un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto utilizzando il nome del tipo specificato, il nome dello spazio dei nomi e modello di dati."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del tipo."
    - id: namespaceName
      type: System.String
      description: "Lo spazio dei nomi del tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca tra maiuscole e minuscole. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "Il modello concettuale in cui il tipo viene eseguita la ricerca."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> oggetto. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ã¨ presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace()
  nameWithType: MetadataWorkspace.MetadataWorkspace()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace()
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  nameWithType: MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: ClearCache()
  nameWithType: MetadataWorkspace.ClearCache()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache()
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateEntitySqlParser()
  nameWithType: MetadataWorkspace.CreateEntitySqlParser()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser()
- uid: System.Data.Common.EntitySql.EntitySqlParser
  parent: System.Data.Common.EntitySql
  isExternal: false
  name: EntitySqlParser
  nameWithType: EntitySqlParser
  fullName: System.Data.Common.EntitySql.EntitySqlParser
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateQueryCommandTree(DbExpression)
  nameWithType: MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(DbExpression)
- uid: System.Data.Common.CommandTrees.DbQueryCommandTree
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQueryCommandTree
  nameWithType: DbQueryCommandTree
  fullName: System.Data.Common.CommandTrees.DbQueryCommandTree
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(EnumType)
- uid: System.Data.Metadata.Edm.EnumType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EnumType
  nameWithType: EnumType
  fullName: System.Data.Metadata.Edm.EnumType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(StructuralType)
- uid: System.Data.Metadata.Edm.StructuralType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: StructuralType
  nameWithType: StructuralType
  fullName: System.Data.Metadata.Edm.StructuralType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer(String,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,DataSpace)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.DataSpace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: DataSpace
  nameWithType: DataSpace
  fullName: System.Data.Metadata.Edm.DataSpace
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions(String,String,DataSpace,Boolean)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem(String,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,DataSpace)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,Boolean,DataSpace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItemCollection(DataSpace)
  nameWithType: MetadataWorkspace.GetItemCollection(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(DataSpace)
- uid: System.Data.Metadata.Edm.ItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: ItemCollection
  nameWithType: ItemCollection
  fullName: System.Data.Metadata.Edm.ItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<GlobalItem>
  nameWithType: ReadOnlyCollection<GlobalItem>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.GlobalItem
    name: GlobalItem
    nameWithType: GlobalItem
    fullName: GlobalItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetPrimitiveTypes(DataSpace)
  nameWithType: MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmMember}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmMember>
  nameWithType: ReadOnlyCollection<EdmMember>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmMember
    name: EdmMember
    nameWithType: EdmMember
    fullName: EdmMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Metadata.Edm.EntityTypeBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityTypeBase
  nameWithType: EntityTypeBase
  fullName: System.Data.Metadata.Edm.EntityTypeBase
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
- uid: System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<EdmMember>
  nameWithType: IEnumerable<EdmMember>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Metadata.Edm.EdmMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Metadata.Edm.EdmMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmMember
    name: EdmMember
    nameWithType: EdmMember
    fullName: EdmMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,DataSpace)
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType(String,String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly(Assembly)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly(Assembly,Action<String>)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
- uid: System.Action{System.String}
  parent: System
  isExternal: true
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MaximumEdmVersionSupported
  nameWithType: MetadataWorkspace.MaximumEdmVersionSupported
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: RegisterItemCollection(ItemCollection)
  nameWithType: MetadataWorkspace.RegisterItemCollection(ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(ItemCollection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer(String,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem(String,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,DataSpace,T)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem(String,Boolean,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItemCollection(DataSpace,ItemCollection)
  nameWithType: MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType(String,String,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType(String,String,Boolean,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace.MetadataWorkspace
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: ClearCache
  nameWithType: MetadataWorkspace.ClearCache
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateEntitySqlParser
  nameWithType: MetadataWorkspace.CreateEntitySqlParser
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateQueryCommandTree
  nameWithType: MetadataWorkspace.CreateQueryCommandTree
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType
  nameWithType: MetadataWorkspace.GetEdmSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer
  nameWithType: MetadataWorkspace.GetEntityContainer
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions
  nameWithType: MetadataWorkspace.GetFunctions
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem<T>
  nameWithType: MetadataWorkspace.GetItem<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItemCollection
  nameWithType: MetadataWorkspace.GetItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems
  nameWithType: MetadataWorkspace.GetItems
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems<T>
  nameWithType: MetadataWorkspace.GetItems<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType
  nameWithType: MetadataWorkspace.GetObjectSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetPrimitiveTypes
  nameWithType: MetadataWorkspace.GetPrimitiveTypes
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRelevantMembersForUpdate
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRequiredOriginalValueMembers
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType
  nameWithType: MetadataWorkspace.GetType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly
  nameWithType: MetadataWorkspace.LoadFromAssembly
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: RegisterItemCollection
  nameWithType: MetadataWorkspace.RegisterItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer
  nameWithType: MetadataWorkspace.TryGetEntityContainer
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem<T>
  nameWithType: MetadataWorkspace.TryGetItem<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItemCollection
  nameWithType: MetadataWorkspace.TryGetItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType
  nameWithType: MetadataWorkspace.TryGetType
