### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Fornisce un listener semplice che indirizza l&quot;output di registrazione al file."
  remarks: "La classe FileLogTraceListener fornisce funzioni di manutenzione automatica per archiviare i file di log in base alle esigenze, su base giornaliera o per ogni applicazione. Questa funzione di archiviazione automatica consente di ridurre le responsabilità di manutenzione di sviluppatori e amministratori.       È possibile aggiungere un&quot;istanza di FileLogTraceListener per il <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>o <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>raccolte per reindirizzare l&quot;output della registrazione a un file di testo.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> È inoltre possibile aggiungere istanze di questa classe per `My.Application.Log` o `My.Log` (per le applicazioni Web) in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] applicazioni. Per ulteriori informazioni, vedere [procedura dettagliata: modifica di destinazione di scrittura delle informazioni con My](~/add/includes/ajax-current-ext-md.md) `.` le principali funzionalità di questa classe sono: 1.  *Funzionalità di archiviazione*. I file di log generati da questa classe sono denominati in base al nome di base e la data, insieme a un numero per distinguere il file di log rispetto alle versioni successive del log. Nuovi file di log vengono creati in base alle esigenze.           Il formato esplicito del nome file è `baseName`[-`dateStamp`] [-`version`]. log, dove: - il `baseName` parte è il nome di log fondamentale, specificato da di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          -La `dateStamp` parte ha il formato &quot;Aaaa-MM-GG&quot; e viene mostrata se <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>è <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>o <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          -Se è necessario più di un file di log con lo stesso `baseName` e `dateStamp`, `version` parte positivo `Integer`, viene aggiunto al nome del file.      2.  *Più istanze di classe*. Se un&quot;istanza della classe FileLogTraceListener scrive in un file che è in uso:-la classe condivide il file è utilizzato da un&quot;altra istanza della classe FileLogTraceListener nello stesso processo.          -La classe crea un nuovo file di log utilizzando il nome successivo disponibile se il file è utilizzato da un altro processo.      3.  *Sicurezza dei thread*. La classe FileLogTraceListener è thread-safe. Ciò consente di scrivere in modo sicuro i messaggi del log da più thread senza l&quot;utilizzo dei blocchi.       **Percorso del File di log** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>proprietà richiede un <xref:Microsoft.VisualBasic.Logging.LogFileLocation>enumerazione per specificare una delle directory comuni in cui scrivere il file di log.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Per scrivere il log in un&quot;altra posizione, impostare il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>proprietà in tale posizione.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **Nome del File di log** -il nome di base per il file di log specificato da di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -Il nome di file di log corrente può essere lette dal <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Deriva da diverse altre proprietà e lo stato corrente dei log nel file system.       **Log manutenzione** -la frequenza minima per la creazione di nuovi file di log è determinata dal <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Quando il valore è <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>o <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, viene creato un nuovo file di log almeno una volta al giorno o settimana e viene inserito un indicatore di data nel <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -La dimensione massima (in byte) del file di log è il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Se le dimensioni del file di log superano questa dimensione, ulteriori messaggi scritti nel log vengono scartati e, a seconda di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>proprietà, viene generata un&quot;eccezione.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>proprietà determina la quantità di spazio libero (in byte) deve essere disponibile.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Ciò garantisce che la classe FileLogTraceListener non utilizzi tutto lo spazio disponibile su disco. Utilizzare il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>proprietà per specificare il comportamento del log viene registrata quando sono presenti meno di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>byte liberi.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Le impostazioni di Output del File di log** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>proprietà specifica se il flusso sottostante deve essere scaricato automaticamente dopo ogni operazione di scrittura nel file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>proprietà specifica se accodare i messaggi al file di log corrente, se consentito, o scriverli in un nuovo file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>proprietà specifica la stringa da usare per delimitare i campi all&quot;interno di un messaggio di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>proprietà specifica la codifica da utilizzare quando si crea un nuovo file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Output del File di log** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metodi scrivono messaggi nel file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Questi metodi controllano la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>proprietà, insieme a eventuali log esistenti con lo stesso nome di base per determinare se è necessario creare un nuovo log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>metodo scarica eventuali messaggi attualmente nel buffer di output nel file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      -La <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>metodo chiude il file di log in modo che può essere utilizzato da altri processi.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Abilitazione di Output** è necessario abilitare la traccia o di debug per l&quot;utilizzo di un listener di traccia. La sintassi seguente è specifica del compilatore. Se si utilizza un compilatore diverso da c# o [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], consultare la documentazione del compilatore.      -Per abilitare il debug in c#, aggiungere il `/d:DEBUG` flag alla riga di comando del compilatore quando si compila il codice, oppure è possibile aggiungere `#define DEBUG` all&quot;inizio del file. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], aggiungere il `/d:DEBUG=True` flag alla riga di comando del compilatore.      -Per abilitare la traccia in c#, aggiungere il `/d:TRACE` flag alla riga di comando del compilatore quando si compila il codice o aggiungere `#define TRACE` all&quot;inizio del file. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], aggiungere il `/d:TRACE=True` flag alla riga di comando del compilatore.       Per impostare il livello del listener, modificare il file di configurazione dell&quot;applicazione. All&quot;interno di questo file, è possibile aggiungere un listener, impostarne il tipo di impostare i parametri, rimuovere un listener o cancellare tutti i listener precedentemente impostati dall&quot;applicazione. Il file di configurazione deve essere formattato come nell&quot;esempio seguente.       Per eseguire questo esempio, è necessario fornire il nome completo dell&quot;assembly. Per informazioni su come ottenere il nome completo dell&quot;assembly, vedere [i nomi degli Assembly](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> classe con il nome predefinito."
  remarks: "Questo metodo imposta il nome dell&quot;istanza di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe a FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       È possibile accedere tramite il nome dell&quot;istanza di <xref:System.Diagnostics.TraceListener.Name%2A>proprietà.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> classe con il nome fornito."
  remarks: "Questo metodo imposta il nome dell&quot;istanza di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       È possibile accedere al nome dell&quot;istanza mediante il <xref:System.Diagnostics.TraceListener.Name%2A>proprietà.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Il nome dell&quot;oggetto istanza."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina se accodare l&quot;output al file corrente o scriverlo in un nuovo file."
  remarks: "Quando la proprietà di accodamento è `False`, l&quot;output viene scritto in un nuovo file. Quando la proprietà è `True`, l&quot;output viene aggiunto al file corrente, a meno che:-il file di output è bloccato da un altro processo. In questo caso, viene creato un nuovo file di log con un numero di versione che viene incorporato nel <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -Le dimensioni del file corrente sono maggiore di quella di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>consente di proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> In questo caso, i messaggi aggiuntivi vengono scartati e, a seconda di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>proprietà, viene generata un&quot;eccezione.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -Il nome del file esistente viene aggiornato in base alla pianificazione per la creazione di log specificata da di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> In questo caso, viene creato un nuovo file di log e della data e ora viene incorporata nel <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, con <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> che indica che l&quot;output viene aggiunto al file corrente, e <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> che indica che l&quot;output viene scritto in un nuovo file. L&quot;impostazione predefinita per questa proprietà è <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Indica se la scrittura nel flusso di file di log Scarica il buffer."
  remarks: "Il `False` impostazione per la proprietà AutoFlush fornisce prestazioni ottimali per la maggior parte delle applicazioni, poiché è più efficiente per scrivere contemporaneamente più messaggi nel file di log. È possibile utilizzare il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>buffer di output del metodo per scaricare i messaggi attualmente nel file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> È inoltre possibile utilizzare il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>metodo, che scarica in modo implicito il flusso prima di chiudere il file di log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, con <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> che indica che il flusso è stato scaricato dopo ogni scrittura; in caso contrario le voci di log vengono memorizzati nel buffer e scritte in modo più efficiente. L&quot;impostazione predefinita per questa proprietà è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta il nome di base per i file di log, che viene utilizzato per creare il nome completo del file di log."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Il nome di base per i file di log. Il valore predefinito è il nome dell&quot;applicazione del prodotto."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Chiude il flusso sottostante per il file di log corrente e rilascia le risorse associate nel flusso corrente."
  remarks: "È necessario chiamare il metodo Close in modo esplicito, non perché la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe gestisce il flusso sottostante.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta la directory di file di log quando il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>è impostata su <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "Quando è impostata la proprietà CustomLocation, imposta inoltre la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>proprietà <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       La proprietà CustomLocation genererà un&quot;eccezione se la directory non può essere risolto."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, ovvero il nome della directory del file di log. L&quot;impostazione predefinita per questa proprietà è la directory dell&quot;utente per i dati dell&quot;applicazione."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta il delimitatore usato per delimitare i campi all&quot;interno di un messaggio di log."
  remarks: "La proprietà delimitatore consente di modificare il delimitatore predefinito."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, che rappresenta il delimitatore utilizzato per i campi all&quot;interno di un messaggio di log. L&quot;impostazione predefinita per questa proprietà è il carattere di tabulazione."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina quali azioni eseguire durante la scrittura nel file di log ed è meno spazio su disco rispetto a quanto specificato da di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "Quando è impostata la proprietà DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, i messaggi di log vengono eliminati automaticamente se non è sufficiente spazio su disco riservato.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Si tratta del comportamento predefinito e impedisce alle applicazioni semplici non riesca se il disco sia pieno.       Le applicazioni più affidabili può essere impostata la proprietà DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>e aggiungere `Try...Catch` blocchi tutto il codice che scrive nel Registro di</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Determina quali azioni eseguire durante il tentativo di scrivere nel Registro di file e vi è meno spazio su disco rispetto a quanto specificato dal <> </> *>, proprietà o se le dimensioni del file di log sono maggiore di quella di <> </> *> proprietà consente di. Il valore predefinito è <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Chiude il flusso sottostante e facoltativamente rilascia le risorse gestite."
  remarks: "Quando il `disposing` parametro `True`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>riferimenti.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Questo metodo richiama il `Dispose` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Rilascia le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> versioni solo le risorse non gestite."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta la codifica da utilizzare quando si crea un nuovo file di log."
  remarks: "Se si aggiunge testo a un file di log esistente, viene utilizzata la codifica per tale file anziché la codifica specificata dalla proprietà Encoding."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, che è la codifica da utilizzare durante la creazione di un nuovo file di log.</xref:System.Text.Encoding> Il valore predefinito di questa proprietà è <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scarica il flusso sottostante che scrive il file di log corrente."
  remarks: "Utilizzare il metodo Flush per scrivere tutti i buffer di dati al file di log corrente."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene il nome completo del file di log corrente."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, ovvero il nome completo del file di log corrente."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene gli attributi di configurazione XML personalizzati supportati dal listener di traccia."
  remarks: "Gli attributi personalizzati per <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>può essere usato nel file di configurazione XML per controllare il comportamento di un&quot;istanza di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Utilizzo di qualsiasi altro attributo causa un&quot;eccezione di configurazione."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>Matrice contenente gli attributi di configurazione XML riconosciuti da questo listener."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Indica se il nome host della macchina di registrazione deve essere incluso nell&quot;output."
  remarks: "Utilizzare la proprietà per configurare il comportamento del <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metodi.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Utilizzare <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se l&quot;identificatore dell&quot;host deve essere inclusa; in caso contrario utilizzare <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta percorso per i file di log."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, che rappresenta la posizione del file di log. Il valore predefinito è <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina la data da includere nei nomi dei file di log."
  remarks: "Assegnare uno del <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>valori di enumerazione per la proprietà LogFileCreationSchedule per specificare la data da includere nei nomi dei file di log.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       Il formato della data è aaaa-MM-GG. Per ulteriori informazioni sul formato del nome del file di log, vedere <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **Valore LogFileCreationSchedule**|**data nel nome del file di log**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Includere la data corrente nel nome del file di log. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Non includere la data nel nome del file di log. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Includere il primo giorno della settimana corrente nel nome del file di log.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> La settimana inizia domenica. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Questo indica la data da includere nei nomi di file di log. Il valore predefinito è <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta la dimensione massima consentita del file di log, in byte."
  remarks: "Utilizzare questa proprietà per assicurarsi che i file di log non raggiungano dimensioni eccessive.       Se il file di log dimensioni (in byte) è maggiore del valore di questa proprietà, quindi quando il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe tenta di scrivere un messaggio nel log, il messaggio viene ignorato e l&quot;errore è invisibile all&quot;utente o un&quot;eccezione viene generata in base al valore di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> In caso contrario, il messaggio viene scritto nel log, se la quantità di spazio libero su disco (in byte) è inferiore a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Questa è la dimensione massima consentita del file di log, in byte. Il valore predefinito è 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Quando questa proprietà è impostata su un valore minore di 1000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Ottiene o imposta la quantità di spazio libero su disco, in byte, necessaria prima che i messaggi possono essere scritti nel file di log."
  remarks: "Utilizzare questa proprietà per assicurarsi che i file di log non riempiano completamente il disco.       Se la quantità di disco spazio (in byte) è minore del valore di questa proprietà, quindi quando il <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe tenta di scrivere un messaggio nel log, il messaggio viene ignorato e l&quot;errore è invisibile all&quot;utente o un&quot;eccezione viene generata in base al valore di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>proprietà.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> In caso contrario, il messaggio viene scritto nel log, se le dimensioni del file di log (in byte) sono maggiore di <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Si tratta della quantità di spazio libero su disco necessario. Il valore predefinito è 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Quando questa proprietà è impostata su un valore minore di 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive le informazioni di traccia, un oggetto dati e informazioni sull&quot;evento nel file di output o di un flusso."
  remarks: "Questo metodo: 1.  Formatta le informazioni di dati e il contesto per l&quot;output.      2.  Crea un nuovo file di log, se necessario.      3.  Scrive le informazioni nel file di log.       Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Nella tabella seguente elenca i campi di output nell&quot;ordine in cui appaiono. I campi sono delimitati dalla stringa che la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>proprietà specifica e sono seguiti da un terminatore di riga.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**Output condizione**|**descrizione**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | Il valore di `name`. |   | `severity`| Sempre | Il nome del valore di enumerazione `eventType`. |   | `id`| Sempre | Rappresentazione di stringa di `id`. |   | `message`| Sempre | Rappresentazione di stringa di `data`. |   | `callStack`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.Callstack%2A>di `eventCache`. |   | `CorrelationID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `DateTime`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.DateTime%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ProcessID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ThreadID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `Timestamp`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `HostName`| Quando la proprietà <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>è `True`. | Il nome del computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome dell&quot;origine di traccia che ha richiamato questo metodo."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori di enumerazione."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: data
      type: System.Object
      description: "I dati di traccia da creare."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive informazioni di traccia, una matrice di oggetti dati e informazioni sull&quot;evento nel file di output o nel flusso."
  remarks: "Questo metodo: 1.  Formatta le informazioni di dati e il contesto per l&quot;output, 2.  Crea un nuovo registro, file, se necessario, 3.  Scrive le informazioni nel file di log.       Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Questa tabella elenca i campi di output nell&quot;ordine in cui appaiono. I campi sono delimitati dalla stringa che la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>proprietà specifica e sono seguiti da un terminatore di riga.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**Output condizione**|**descrizione**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | Il valore di `name`. |   | `severity`| Sempre | Il nome del valore di enumerazione `eventType`. |   | `id`| Sempre | Rappresentazione di stringa di `id`. |   | `message`| Sempre | La stringa composta da della rappresentazione di stringa di ogni elemento `data`, ciascuno separato da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.Callstack%2A>di `eventCache`. |   | `CorrelationID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `DateTime`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.DateTime%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ProcessID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ThreadID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `Timestamp`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `HostName`| Quando la proprietà <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>è `True`. | Il nome del computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Il nome dell&quot;origine di traccia che ha richiamato questo metodo."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori di enumerazione."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: data
      type: System.Object[]
      description: "Una matrice di oggetti da creare come dati."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive informazioni di traccia, una messaggio e le informazioni evento nel file di output o di un flusso."
  remarks: "Questo metodo: 1.  Formatta le informazioni di dati e il contesto per l&quot;output.      2.  Crea un nuovo file di log, se necessario.      3.  Scrive le informazioni nel file di log.       Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Questa tabella elenca i campi di output nell&quot;ordine in cui appaiono. I campi sono delimitati dalla stringa che la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>proprietà specifica e sono seguiti da un terminatore di riga.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**Output condizione**|**descrizione**|   |---------------|--------------------------|---------------------|   | `source`| Sempre. | Il valore di `name`. |   | `severity`| Sempre. | Il nome del valore di enumerazione `eventType`. |   | `id`| Sempre. | Rappresentazione di stringa di `id`. |   | `message`| Sempre. | Il valore di `message`. |   | `callStack`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.Callstack%2A>di `eventCache`. |   | `CorrelationID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `DateTime`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.DateTime%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ProcessID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ThreadID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `Timestamp`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `HostName`| Quando la proprietà <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>è `True`. | Il nome del computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome dell&quot;origine di traccia che ha richiamato questo metodo."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori di enumerazione."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: message
      type: System.String
      description: "Messaggio da scrivere."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive informazioni di traccia, una matrice formattata di oggetti e informazioni sull&quot;evento nel file di output o di un flusso."
  remarks: "Questo metodo: 1.  Formatta le informazioni di dati e il contesto per l&quot;output.      2.  Crea un nuovo un nuovo file di log, se necessario.      3.  Scrive le informazioni nel file di log.       Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Questa tabella elenca i campi di output nell&quot;ordine in cui appaiono. I campi sono delimitati dalla stringa che la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>proprietà specifica, seguita da un terminatore di riga.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**Output condizione**|**descrizione**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | Il valore di `name`. |   | `severity`| Sempre | Il nome del valore di enumerazione `eventType`. |   | `id`| Sempre | Rappresentazione di stringa di `id`. |   | `message`| Sempre | I dati in `args` formattato con il `format` stringa e utilizza le impostazioni cultura invarianti per le conversioni di stringa. |   | `callStack`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.Callstack%2A>di `eventCache`. |   | `CorrelationID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `DateTime`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.DateTime%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ProcessID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `ThreadID`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | La proprietà <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>di `eventCache`. |   | `Timestamp`| Quando il flag <xref:System.Diagnostics.TraceOptions>è impostato nella proprietà <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Rappresentazione di stringa della <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>proprietà `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Per la conversione di stringa viene utilizzata la lingua inglese. |   | `HostName`| Quando la proprietà <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>è `True`. | Il nome del computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome dell&quot;origine di traccia che ha richiamato questo metodo."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori di enumerazione."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: format
      type: System.String
      description: "Stringa di formato che contiene zero o più elementi di formato, corrispondano a oggetti nella `args` matrice."
    - id: args
      type: System.Object[]
      description: "Un <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> matrice che contiene zero o più oggetti da formattare."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive un messaggio testuale sul disco, senza informazioni di contesto aggiuntive."
  remarks: "Il metodo Write scrive un messaggio specifico nel file di log, senza informazioni di contesto aggiuntive.       Utilizzare uno del <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metodi per includere le informazioni di contesto nell&quot;output del log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Il messaggio personalizzato da scrivere."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Scrive un messaggio testuale sul disco, seguito dal terminatore di riga corrente, senza informazioni di contesto aggiuntive."
  remarks: "Il metodo WriteLine scrive un messaggio specifico nel file di log, senza informazioni di contesto aggiuntive.       Utilizzare uno del <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metodi per includere le informazioni di contesto nell&quot;output del log.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Il messaggio personalizzato da scrivere."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
