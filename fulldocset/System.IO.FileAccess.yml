### YamlMime:ManagedReference
items:
- uid: System.IO.FileAccess
  id: FileAccess
  children:
  - System.IO.FileAccess.Read
  - System.IO.FileAccess.ReadWrite
  - System.IO.FileAccess.Write
  langs:
  - csharp
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
  type: Enum
  summary: "Definisce le costanti per la lettura, scrittura o accesso in lettura/scrittura in un file."
  remarks: "Per un esempio di creazione di un file e la scrittura di testo in un file, vedere [procedura: scrivere testo in un File](~/add/includes/ajax-current-ext-md.md). Per un esempio di lettura di testo da un file, vedere [procedura: lettura di testo da un File](~/add/includes/ajax-current-ext-md.md). Per un esempio di lettura e scrittura in un file binario, vedere [procedura: leggere e scrivere un appena creati File di dati](~/add/includes/ajax-current-ext-md.md).       Oggetto `FileAccess` viene specificato in molti dei costruttori <xref:System.IO.File>, <xref:System.IO.FileInfo>, <xref:System.IO.FileStream>, e gli altri costruttori in cui Ã¨ importante controllare il tipo di accesso gli utenti rispetto a un file.</xref:System.IO.FileStream> </xref:System.IO.FileInfo> </xref:System.IO.File>"
  example:
  - "The following `FileStream` constructor grants read-only access to an existing file (`FileAccess.Read`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.fileaccess_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.fileaccess_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.fileaccess_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileAccess.Read
  id: Read
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Accesso in lettura al file. Dati possono essere letti dal file. Combinare con <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref> per l&quot;accesso in lettura/scrittura."
  syntax:
    content: Read
    return:
      type: System.IO.FileAccess
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.ReadWrite
  id: ReadWrite
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lettura e accesso in scrittura al file. Possono scritti e leggere dal file di dati."
  syntax:
    content: ReadWrite
    return:
      type: System.IO.FileAccess
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.Write
  id: Write
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Accesso in scrittura al file. Dati possono essere scritti nel file. Combinare con <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref> per l&quot;accesso in lettura/scrittura."
  syntax:
    content: Write
    return:
      type: System.IO.FileAccess
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileAccess.Read
  parent: System.IO.FileAccess
  isExternal: false
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileAccess.ReadWrite
  parent: System.IO.FileAccess
  isExternal: false
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
- uid: System.IO.FileAccess.Write
  parent: System.IO.FileAccess
  isExternal: false
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
