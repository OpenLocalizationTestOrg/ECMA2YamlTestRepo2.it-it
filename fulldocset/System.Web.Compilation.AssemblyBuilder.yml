### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.AssemblyBuilder
  id: AssemblyBuilder
  children:
  - System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  - System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  - System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  - System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  - System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  - System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  - System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  langs:
  - csharp
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
  type: Class
  summary: "Fornisce un contenitore per la creazione di un assembly da uno o più percorsi virtuali all&quot;interno di un progetto ASP.NET."
  remarks: "Le istanze della classe AssemblyBuilder vengono utilizzate con <xref:System.Web.Compilation.BuildProvider>classe metodi per creare uno o più file in un assembly compilato.</xref:System.Web.Compilation.BuildProvider>       La <xref:System.Web.Compilation.BuildProvider>classe definisce la funzionalità di compilazione per i singoli file e la classe AssemblyBuilder combina il codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider>istanza in un unico assembly.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider> ASP.NET compila viene passato un oggetto AssemblyBuilder il <xref:System.Web.Compilation.BuildProvider>metodi quando si compila un assembly da uno o più file, in modo che ogni <xref:System.Web.Compilation.BuildProvider>istanza possa fornire il codice sorgente per il rispettivo file di assembly globale.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       L&quot;ambiente di compilazione ASP.NET determina la lingua e il compilatore richiesti dai file all&quot;interno del progetto, in base il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>proprietà.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> I file di gruppi dell&quot;ambiente di compilazione in base alle relative impostazioni del compilatore e compila un assembly da file che richiedono lo stesso compilatore.       Il <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>proprietà indica il <xref:System.CodeDom.Compiler.CodeDomProvider>implementazione nell&quot;ambiente di compilazione ASP.NET viene utilizzato per compilare un assembly dal codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider>implementazione.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>       Oggetto <xref:System.Web.Compilation.BuildProvider>oggetto fornisce codice sorgente sotto forma di grafico CodeDOM mediante il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>metodo.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> </xref:System.Web.Compilation.BuildProvider> Oggetto <xref:System.Web.Compilation.BuildProvider>oggetto fornisce codice sorgente archiviato in un file fisico mediante la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>metodo.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.Web.Compilation.BuildProvider>       Dopo ogni <xref:System.Web.Compilation.BuildProvider>oggetto fornisce codice sorgente utilizzando i metodi AssemblyBuilder appropriati, l&quot;ambiente di compilazione ASP.NET utilizza la classe AssemblyBuilder per compilare il codice sorgente raccolti in un assembly.</xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/t-system.web.compilation_10_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/t-system.web.compilation_10_1.vb)]"
  syntax:
    content: public class AssemblyBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  id: AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Aggiunge un assembly a cui fa riferimento il codice sorgente generato per un file."
  remarks: "Oggetto <xref:System.Web.Compilation.BuildProvider>implementazione utilizza il metodo AddAssemblyReference durante la generazione di codice sorgente che fa riferimento a tipi nell&quot;assembly di input.</xref:System.Web.Compilation.BuildProvider>       ASP.NET ambiente di compilazione Inizializza l&quot;insieme predefinito di assembly disponibili per riferimento nel provider di compilazione di <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName>proprietà.</xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> Se il provider di compilazione genera codice sorgente che fa riferimento ad assembly aggiuntivi, il provider di compilazione consente di aggiungere ulteriori assembly usando il metodo AddAssemblyReference. L&quot;ambiente di compilazione ASP.NET risolve i tipi esterni durante la compilazione di assembly utilizzando entrambi gli assembly di riferimento aggiunti da compilare i provider e l&quot;insieme predefinito di assembly disponibili per riferimento.       In genere, un <xref:System.Web.Compilation.BuildProvider>oggetto aggiunge il codice sorgente per il <xref:System.Web.Compilation.AssemblyBuilder>oggetto la <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>metodo.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> </xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider> Se un provider di compilazione genera codice sorgente che utilizza un tipo esterno, il provider di compilazione aggiunge l&quot;assembly del tipo utilizzando il metodo AddAssemblyReference.       Utilizzare il metodo AddAssemblyReference per aggiungere un assembly di riferimento obbligatorio nel codice sorgente generato da un <xref:System.Web.Compilation.BuildProvider>istanza per un tipo di file specifico.</xref:System.Web.Compilation.BuildProvider> Utilizzare il [elemento assemblies per compilation (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) elemento di configurazione per configurare un assembly di riferimento in più tipi di file in un progetto."
  syntax:
    content: public void AddAssemblyReference (System.Reflection.Assembly a);
    parameters:
    - id: a
      type: System.Reflection.Assembly
      description: "Un assembly a cui fa riferimento una compilazione origine o unità file di codice incluso nella compilazione dell&quot;assembly."
  overload: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Aggiunge il codice sorgente per l&quot;assembly sotto forma di un grafo CodeDOM."
  remarks: "Un&quot; <xref:System.Web.Compilation.BuildProvider>implementazione chiama il metodo AddCodeCompileUnit durante la generazione di un grafo CodeDOM per un percorso virtuale.</xref:System.Web.Compilation.BuildProvider> Il codice sorgente aggiunto con AddCodeCompileUnit è incluso nella compilazione dell&quot;assembly.       In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>letture di implementazione di metodo di <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>Analizza il contenuto, proprietà e quindi aggiunge il codice sorgente generato all&quot;oggetto specificato <xref:System.Web.Compilation.AssemblyBuilder>oggetto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Il provider di compilazione Usa il metodo AddCodeCompileUnit per aggiungere codice sorgente come un grafo CodeDOM all&quot;assembly. In alternativa, è possibile utilizzare il provider di compilazione di <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>per aggiungere codice sorgente come un file fisico per l&quot;assembly.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>"
  syntax:
    content: public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "Il provider di generazione `compileUnit`."
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "Unità di compilazione di codice da includere nella compilazione dell&quot;assembly."
  overload: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  id: CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene il compilatore usato per compilare il codice sorgente in un assembly."
  remarks: "La proprietà CodeDomProvider indica il <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>implementazione nell&quot;ambiente di compilazione ASP.NET viene utilizzato per compilare un assembly dal codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider>implementazione.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>       L&quot;ambiente di compilazione ASP.NET determina la lingua e il compilatore richiesti dai file all&quot;interno del progetto, in base il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>proprietà.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> I file di gruppi dell&quot;ambiente di compilazione in base alle relative impostazioni del compilatore e compila un assembly da file che richiedono lo stesso compilatore."
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Sola lettura <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> implementazione utilizzato per la compilazione di codice sorgente fornito da ogni provider di compilazione in un assembly."
  overload: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  id: CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Consente a un provider di compilazione creare un file di origine temporanea e includere il file di origine nella compilazione dell&quot;assembly."
  remarks: "Un&quot; <xref:System.Web.Compilation.BuildProvider>implementazione chiama il metodo CreateCodeFile durante la generazione di un file di origine per un percorso virtuale.</xref:System.Web.Compilation.BuildProvider> Il codice sorgente aggiunto con CreateCodeFile è incluso nella compilazione dell&quot;assembly.       In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>letture di implementazione di metodo di <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>Analizza il contenuto, proprietà e quindi aggiunge il codice sorgente generato all&quot;oggetto specificato <xref:System.Web.Compilation.AssemblyBuilder>oggetto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Il provider di compilazione Usa il metodo CreateCodeFile per aggiungere codice sorgente come un file fisico all&quot;assembly. In alternativa, è possibile utilizzare il provider di compilazione di <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>per aggiungere codice sorgente come un grafo CodeDOM per l&quot;assembly.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Dopo aver chiamato CreateCodeFile, il provider di compilazione scrive l&quot;origine contenuto del file tramite l&quot;oggetto restituito <xref:System.IO.TextWriter>oggetto.</xref:System.IO.TextWriter> Dopo aver scritto il file di origine, il <xref:System.Web.Compilation.BuildProvider>deve utilizzare l&quot;oggetto di <xref:System.IO.TextWriter.Close%2A>metodo per chiudere la <xref:System.IO.TextWriter>dell&quot;oggetto e liberare le risorse di sistema associate.</xref:System.IO.TextWriter> </xref:System.IO.TextWriter.Close%2A> </xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/3ed51741-a65c-4f55-993c-_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/3ed51741-a65c-4f55-993c-_1.vb)]"
  syntax:
    content: public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "Generazione del file di origine del codice del provider di compilazione."
    return:
      type: System.IO.TextWriter
      description: "Open <xref:System.IO.TextWriter>che può essere utilizzato per scrivere codice sorgente in un file temporaneo.</xref:System.IO.TextWriter>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  id: CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Consente a un provider di compilazione creare un file di risorse da includere nella compilazione dell&quot;assembly."
  remarks: "Dopo aver chiamato il metodo CreateEmbeddedResource, un <xref:System.Web.Compilation.BuildProvider>oggetto scrive la risorsa di contenuto del file tramite l&quot;oggetto restituito <xref:System.IO.Stream>oggetto.</xref:System.IO.Stream> </xref:System.Web.Compilation.BuildProvider> Ad esempio, il provider di compilazione può scrivere le risorse utilizzate da un <xref:System.Resources.ResourceWriter>oggetto.</xref:System.Resources.ResourceWriter> Dopo aver scritto il file di risorse, è necessario utilizzare il provider di compilazione di <xref:System.IO.Stream.Close%2A>metodo per chiudere la <xref:System.IO.Stream>dell&quot;oggetto e liberare le risorse di sistema associate.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "Il provider di generazione della risorsa."
    - id: name
      type: System.String
      description: "Il nome del file di risorse da creare."
    return:
      type: System.IO.Stream
      description: "Open <xref:System.IO.Stream>che può essere utilizzato per scrivere le risorse, che sono inclusi nella compilazione dell&quot;assembly.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>non è un nome file valido."
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  id: GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inserisce un modello di factory oggetti rapida per un tipo nell&quot;assembly compilato."
  remarks: "Oggetto <xref:System.Web.Compilation.BuildProvider>implementazione chiama il metodo GenerateTypeFactory per ottimizzare le prestazioni relative alle creazioni di istanze del tipo frequenti.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public void GenerateTypeFactory (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo da generare."
  overload: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  id: GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Genera un percorso file temporaneo."
  remarks: "Oggetto <xref:System.Web.Compilation.BuildProvider>implementazione chiama il metodo GetTempFilePhysicalPath per ottenere un percorso file temporaneo che viene eliminato automaticamente dopo la compilazione dell&quot;assembly.</xref:System.Web.Compilation.BuildProvider>       Il metodo GetTempFilePhysicalPath genera un percorso file temporaneo univoco, ma non crea il file."
  syntax:
    content: public string GetTempFilePhysicalPath (string extension);
    parameters:
    - id: extension
      type: System.String
      description: "Estensione di file da utilizzare per il file temporaneo."
    return:
      type: System.String
      description: "Un percorso in un file temporaneo, con l&quot;estensione di file specificato."
  overload: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
- uid: System.Web.Compilation.BuildProvider
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference
  nameWithType: AssemblyBuilder.AddAssemblyReference
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: AssemblyBuilder.AddCodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile
  nameWithType: AssemblyBuilder.CreateCodeFile
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource
  nameWithType: AssemblyBuilder.CreateEmbeddedResource
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory
  nameWithType: AssemblyBuilder.GenerateTypeFactory
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath
