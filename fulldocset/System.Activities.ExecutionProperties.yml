### YamlMime:ManagedReference
items:
- uid: System.Activities.ExecutionProperties
  id: ExecutionProperties
  children:
  - System.Activities.ExecutionProperties.Add(System.String,System.Object)
  - System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  - System.Activities.ExecutionProperties.Find(System.String)
  - System.Activities.ExecutionProperties.GetEnumerator
  - System.Activities.ExecutionProperties.IsEmpty
  - System.Activities.ExecutionProperties.Remove(System.String)
  - System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ExecutionProperties
  nameWithType: ExecutionProperties
  fullName: System.Activities.ExecutionProperties
  type: Class
  summary: "Rappresenta la raccolta di proprietà a un particolare ambito."
  remarks: "Tramite l&quot;archiviazione thread-local (TLS), CLR gestisce un contesto di esecuzione per ogni thread. In questo contesto di esecuzione determina le proprietà note dei thread quali l&quot;identità del thread, la transazione di ambiente e l&quot;autorizzazione corrente impostato nonché le proprietà del thread definite dall&quot;utente come gli slot denominati.       A differenza dei programmi destinati direttamente a CLR, i programmi del flusso di lavoro sono alberi con ambiti gerarchici che vengono eseguite in un ambiente indipendente dal thread. Ciò implica che i meccanismi TLS standard non possono essere usati direttamente per determinare il contesto incluso nell&quot;ambito per un elemento di lavoro specificato. Ad esempio, due rami paralleli di esecuzione potrebbero utilizzare identità diverse oppure l&quot;utilità di pianificazione potrebbe eseguire l&quot;interfoliazione dell&quot;esecuzione sullo stesso thread CLR.       Le proprietà di esecuzione permettono un&quot;attività può dichiarare quali proprietà sono nell&quot;ambito per i relativi sottoalberi, nonché forniscono hook per impostare e chiudere TLS al fine di interoperare correttamente con gli oggetti CLR."
  syntax:
    content: 'public sealed class ExecutionProperties : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Registra una nuova proprietà utilizzando il nome specificato."
  syntax:
    content: public void Add (string name, object property);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà."
    - id: property
      type: System.Object
      description: "Oggetto che rappresenta la proprietà."
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  id: Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Registra una proprietà utilizzando la visibilità di nome e il figlio specificata."
  syntax:
    content: public void Add (string name, object property, bool onlyVisibleToPublicChildren);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà."
    - id: property
      type: System.Object
      description: "Oggetto che rappresenta la proprietà."
    - id: onlyVisibleToPublicChildren
      type: System.Boolean
      description: "Un valore che determina se questa proprietà è visibile agli elementi figlio dell&quot;attività proprietaria."
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Find(System.String)
  id: Find(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce la proprietà più vicina del nome specificato."
  remarks: "La funzione Trova individua proprietà visibile più vicino con ambito gerarchico. Se due proprietà hanno lo stesso nome, viene restituita la proprietà più vicina all&quot;ambito padre."
  syntax:
    content: public object Find (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Object
      description: "Proprietà più vicina del nome specificato."
  overload: System.Activities.ExecutionProperties.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce un enumeratore che scorre la raccolta di proprietà."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Un enumeratore che scorre la raccolta di proprietà."
  overload: System.Activities.ExecutionProperties.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.IsEmpty
  id: IsEmpty
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene un valore che indica se ci sono proprietà registrate all&quot;ambito corrente."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti proprietà registrata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ExecutionProperties.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  id: Remove(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Annulla la registrazione della proprietà con il nome specificato."
  remarks: "Proprietà vengono automaticamente annullate quando l&quot;attività viene completata. Questo metodo può essere utilizzato per annullare la registrazione di una proprietà prima che venga completata l&quot;attività."
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della proprietà per annullare la registrazione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà è stata annullata la registrazione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ExecutionProperties.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce un enumeratore che scorre la raccolta di proprietà."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un enumeratore che scorre la raccolta di proprietà."
  overload: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ExecutionProperties.Find(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
- uid: System.Activities.ExecutionProperties.GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ExecutionProperties.IsEmpty
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.ExecutionProperties.Add*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add
  nameWithType: ExecutionProperties.Add
- uid: System.Activities.ExecutionProperties.Find*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find
  nameWithType: ExecutionProperties.Find
- uid: System.Activities.ExecutionProperties.GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator
  nameWithType: ExecutionProperties.GetEnumerator
- uid: System.Activities.ExecutionProperties.IsEmpty*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove
  nameWithType: ExecutionProperties.Remove
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator
