### YamlMime:ManagedReference
items:
- uid: System.Xml.IStreamProvider
  id: IStreamProvider
  children:
  - System.Xml.IStreamProvider.GetStream
  - System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  langs:
  - csharp
  name: IStreamProvider
  nameWithType: IStreamProvider
  fullName: System.Xml.IStreamProvider
  type: Interface
  summary: "Rappresenta un&quot;interfaccia che può essere implementata da classi che fornisce flussi."
  remarks: "Quando si scrive un messaggio in uscita che contiene un corpo inviato nel flusso in un writer XML, il <xref:System.ServiceModel.Channels.Message>utilizzerà una sequenza di chiamate simili alle seguenti nel relativo <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>implementazione:-scrivere tutte le informazioni necessarie che precedono il flusso (ad esempio, il tag di apertura XML).</xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> </xref:System.ServiceModel.Channels.Message>      -Scrivere il flusso.      -Scrivere tutte le informazioni dopo il flusso (ad esempio, il tag di chiusura XML).       Questo procedimento funziona bene con codifiche simili alla codifica XML testuale. Tuttavia, esistono alcune codifiche che non inseriscono informazioni infoset XML (ad esempio, i tag di inizio e fine di elementi XML) insieme ai dati contenuti all&quot;interno di elementi. Nella codifica MTOM, ad esempio, il messaggio è suddiviso in più parti. Una parte contiene l&quot;infoset XML, che può contenere riferimenti ad altre parti per il contenuto effettivo degli elementi. Poiché l&quot;infoset XML normalmente saranno ridotte rispetto al contenuto inviato nel flusso, è opportuno l&quot;infoset del buffer, scriverlo e quindi scrivere il contenuto in un flusso. Ciò significa che l&quot;ora di chiusura viene scritto il tag di elemento, dovrebbe essere non hanno scritto nel flusso ancora.       A tale scopo, viene utilizzata l&quot;interfaccia IStreamProvider. L&quot;interfaccia dispone di un <xref:System.Xml.IStreamProvider.GetStream>metodo che restituisce il flusso da scrivere.</xref:System.Xml.IStreamProvider.GetStream> Il modo corretto per scrivere il corpo di un messaggio trasmesso in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>è il seguente: - scrivere tutte le informazioni necessarie che precedono il flusso (ad esempio, il tag di apertura XML) - chiamare il `WriteValue` eseguire l&quot;overload di <xref:System.Xml.XmlDictionaryWriter>che accetta un IStreamProvider, con un `IStreamProvider` implementazione che restituisce il flusso da scrivere.</xref:System.Xml.XmlDictionaryWriter> </xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>      -Scrivere tutte le informazioni dopo il flusso (ad esempio, il tag di chiusura XML) con questo approccio, il writer XML può scegliere quando chiamare <xref:System.Xml.IStreamProvider.GetStream>e scrivere i dati inviati nel flusso.</xref:System.Xml.IStreamProvider.GetStream> Il writer XML binari e testuali, ad esempio, verrà chiameranno immediatamente e scriveranno il contenuto nel flusso tra il tag di inizio e di fine. Il writer MTOM può decidere di chiamare <xref:System.Xml.IStreamProvider.GetStream>successivamente, quando è pronto per scrivere la parte appropriata del messaggio.</xref:System.Xml.IStreamProvider.GetStream>"
  syntax:
    content: public interface IStreamProvider
  implements: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.GetStream
  id: GetStream
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Ottiene un flusso."
  remarks: "Questo metodo può essere utilizzato per restituire il flusso da scrivere."
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto.</xref:System.IO.Stream>"
  overload: System.Xml.IStreamProvider.GetStream*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  id: ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Rilascia un flusso di output."
  syntax:
    content: public void ReleaseStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Flusso rilasciato."
  overload: System.Xml.IStreamProvider.ReleaseStream*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IStreamProvider.GetStream
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
- uid: System.Xml.IStreamProvider.GetStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream
  nameWithType: IStreamProvider.GetStream
- uid: System.Xml.IStreamProvider.ReleaseStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream
  nameWithType: IStreamProvider.ReleaseStream
