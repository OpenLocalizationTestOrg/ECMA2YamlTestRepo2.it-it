### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IRangeValueProvider
  id: IRangeValueProvider
  children:
  - System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  - System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  - System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  - System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  - System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  - System.Windows.Automation.Provider.IRangeValueProvider.Value
  langs:
  - csharp
  name: IRangeValueProvider
  nameWithType: IRangeValueProvider
  fullName: System.Windows.Automation.Provider.IRangeValueProvider
  type: Interface
  summary: "Espone metodi e proprietà per supportare l&quot;accesso client di automazione interfaccia utente ai controlli che è possibile impostare un valore all&quot;interno di un intervallo."
  remarks: "Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.RangeValuePattern>pattern di controllo.</xref:System.Windows.Automation.RangeValuePattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IRangeValueProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IRangeValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene un valore che specifica se il valore di un controllo è di sola lettura."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that is not read-only.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#isreadonly)]\n [!code-cs[UIAIRangeValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#isreadonly)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore è di sola lettura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se può essere modificato."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  id: LargeChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore che viene aggiunto o sottratto il <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*>proprietà quando viene apportata una modifica di grandi dimensioni, ad esempio con il tasto PGGIÙ tasto.</xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*>"
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that has a large change value of 5.0.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#largechange)]\n [!code-cs[UIAIRangeValueProvider_snip#LargeChange](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#largechange)]"
  syntax:
    content: public double LargeChange { get; }
    return:
      type: System.Double
      description: "Il valore della modifica estesa supportato dal controllo o null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) se il controllo non supporta LargeChange."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  id: Maximum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore di intervallo massimo supportato dal controllo."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that has a maximum value of 255.0.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#maximum)]\n [!code-cs[UIAIRangeValueProvider_snip#Maximum](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#maximum)]"
  syntax:
    content: public double Maximum { get; }
    return:
      type: System.Double
      description: "Il valore massimo supportato dal controllo o null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) se il controllo non supporta massimo."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  id: Minimum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore di intervallo minimo supportato dal controllo."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that has a minimum value of 0.0.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#minimum)]\n [!code-cs[UIAIRangeValueProvider_snip#Minimum](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#minimum)]"
  syntax:
    content: public double Minimum { get; }
    return:
      type: System.Double
      description: "Il valore minimo supportato dal controllo o null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) se il controllo non supporta minimo."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  id: SetValue(System.Double)
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: SetValue(Double)
  nameWithType: IRangeValueProvider.SetValue(Double)
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(Double)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Imposta il valore del controllo."
  remarks: "Il valore effettivo impostato dipende dall&quot;implementazione del controllo. Il controllo può arrotondare richiesto `value` verso l&quot;alto o verso il basso."
  example:
  - "The following example shows one possible implementation of this method for a custom control. The custom control displays its range value through the alpha value of its base color.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#setvalue)]\n [!code-cs[UIAIRangeValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#setvalue)]"
  syntax:
    content: public void SetValue (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Il valore da impostare."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Quando <code> value </code> è inferiore al valore minimo o maggiore del valore massimo del controllo."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  id: SmallChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore che viene aggiunto o sottratto il <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*>proprietà quando viene apportata una piccola modifica, ad esempio con un tasto di direzione.</xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*>"
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that has a small change value of 1.0.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#smallchange)]\n [!code-cs[UIAIRangeValueProvider_snip#SmallChange](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#smallchange)]"
  syntax:
    content: public double SmallChange { get; }
    return:
      type: System.Double
      description: "Il valore di modifica di piccole dimensioni o null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) se il controllo non supporta SmallChange."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  name: Value
  nameWithType: IRangeValueProvider.Value
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ottiene il valore del controllo."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a custom control. For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.  \n  \n [!code-vb[UIAIRangeValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#value)]\n [!code-cs[UIAIRangeValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#value)]"
  syntax:
    content: public double Value { get; }
    return:
      type: System.Double
      description: "Il valore del controllo o null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) se il controllo non supporta valore."
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IRangeValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: SetValue(Double)
  nameWithType: IRangeValueProvider.SetValue(Double)
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(Double)
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Value
  nameWithType: IRangeValueProvider.Value
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value
- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IRangeValueProvider.IsReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: SetValue
  nameWithType: IRangeValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value*
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  isExternal: false
  name: Value
  nameWithType: IRangeValueProvider.Value
