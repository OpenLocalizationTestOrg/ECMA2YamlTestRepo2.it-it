### YamlMime:ManagedReference
items:
- uid: System.Windows.ValueSource
  id: ValueSource
  children:
  - System.Windows.ValueSource.BaseValueSource
  - System.Windows.ValueSource.Equals(System.Object)
  - System.Windows.ValueSource.GetHashCode
  - System.Windows.ValueSource.IsAnimated
  - System.Windows.ValueSource.IsCoerced
  - System.Windows.ValueSource.IsCurrent
  - System.Windows.ValueSource.IsExpression
  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  langs:
  - csharp
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
  type: Struct
  summary: "Segnala le informazioni restituite da &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;."
  remarks: "La maggior parte delle informazioni che trasmette ValueSource è contenuto nel <xref:System.Windows.ValueSource.BaseValueSource%2A>proprietà.</xref:System.Windows.ValueSource.BaseValueSource%2A> Questa proprietà contiene un valore di enumerazione che consente di specificare esattamente un aspetto dell&quot;intero [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] sistema di proprietà che è responsabile per il valore effettivo della proprietà di dipendenza.       Oltre il valore di base, le informazioni potrebbero essere interessanti sul valore di una proprietà di dipendenza sono se il valore è animato e se comporta un&quot;espressione (ad esempio, un&quot;associazione o un riferimento alla risorsa dinamica). Questa informazione viene segnalata da <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsExpression%2A>rispettivamente.</xref:System.Windows.ValueSource.IsExpression%2A> </xref:System.Windows.ValueSource.IsAnimated%2A> Inoltre, se la coercizione opera su un valore della proprietà, la proprietà mantiene il valore desiderato e il valore della proprietà tenterà di raggiungere il valore desiderato se i vincoli di coercizione specifica vengono modificati o rimossi. Una proprietà di coercizione che non è il valore desiderato segnalerà che <xref:System.Windows.ValueSource.IsCoerced%2A>è `true`.</xref:System.Windows.ValueSource.IsCoerced%2A>"
  syntax:
    content: public struct ValueSource
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.ValueSource.BaseValueSource
  id: BaseValueSource
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un valore di <xref href=&quot;System.Windows.BaseValueSource&quot;> </xref> enumerazione, che restituisce l&quot;origine che ha fornito un valore di sistema di proprietà di dipendenza."
  remarks: "Il valore di base non è il valore effettivo se coercizione o animazione viene utilizzata nella proprietà. Controllare <xref:System.Windows.ValueSource.IsAnimated%2A>e <xref:System.Windows.ValueSource.IsCoerced%2A>Se si desidera determinare se il valore di base è il valore effettivo.</xref:System.Windows.ValueSource.IsCoerced%2A> </xref:System.Windows.ValueSource.IsAnimated%2A>       È inoltre possibile controllare <xref:System.Windows.ValueSource.IsExpression%2A>per determinare se il valore di base è stato restituito da un&quot;espressione.</xref:System.Windows.ValueSource.IsExpression%2A>"
  syntax:
    content: public System.Windows.BaseValueSource BaseValueSource { get; }
    return:
      type: System.Windows.BaseValueSource
      description: "Valore dell&quot;enumerazione."
  overload: System.Windows.ValueSource.BaseValueSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> è uguale a un oggetto specificato."
  remarks: "Questa implementazione supporta l&quot;uguaglianza di valori, in base a ciascuno dei valori di proprietà di ogni <xref:System.Windows.ValueSource>struttura.</xref:System.Windows.ValueSource>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da confrontare con questa <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato è equivalente all&quot;oggetto corrente <xref href=&quot;System.Windows.ValueSource&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.GetHashCode
  id: GetHashCode
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce il codice hash per questo <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
  remarks: "Questo codice hash è basato sul <xref:System.Windows.ValueSource.BaseValueSource%2A>valore.</xref:System.Windows.ValueSource.BaseValueSource%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di un intero senza segno a 32 bit."
  overload: System.Windows.ValueSource.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsAnimated
  id: IsAnimated
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un valore che dichiara se la proprietà è animata."
  remarks: "Per qualsiasi proprietà che è attualmente animate, l&quot;origine segnalati da <xref:System.Windows.ValueSource.BaseValueSource%2A>non è immediatamente pertinente, perché l&quot;animazione opera precedenza proprietà di dipendenza superiore rispetto al valore di base.</xref:System.Windows.ValueSource.BaseValueSource%2A> Per ulteriori informazioni sulla precedenza e le animazioni, vedere [precedenza dei valori di proprietà di dipendenza](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAnimated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà viene animata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsAnimated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCoerced
  id: IsCoerced
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un valore che dichiara se questo valore di risultato di un <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementazione applicata a una proprietà di dipendenza."
  remarks: "Se la coercizione opera su un valore della proprietà, la proprietà mantiene il valore desiderato e il valore della proprietà tenterà di raggiungere il valore desiderato se i vincoli di coercizione specifica vengono modificati o rimossi. Una proprietà di coercizione che non è il valore desiderato segnalerà che IsCoerced `true`.       Coercizione opera alla precedenza più alta rispetto al valore di base e non è un partecipante nella configurazione il valore di base in senso stretto. Di conseguenza lo stato di assegnazione forzata viene segnalato da questa proprietà, anziché da un valore di <xref:System.Windows.BaseValueSource>enumerazione.</xref:System.Windows.BaseValueSource> Per ulteriori informazioni sulla coercizione, valori di base e la precedenza, vedere [precedenza dei valori di proprietà di dipendenza](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCoerced { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore di risultato di un <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementazione applicato a una proprietà di dipendenza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsCoerced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCurrent
  id: IsCurrent
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Indica se il valore è stato impostato tramite il <xref:System.Windows.DependencyObject.SetCurrentValue*>metodo.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  syntax:
    content: public bool IsCurrent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore è stato impostato tramite il <xref:System.Windows.DependencyObject.SetCurrentValue*>metodo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  overload: System.Windows.ValueSource.IsCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsExpression
  id: IsExpression
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un valore che dichiara se questo valore è il risultato di un&quot;espressione valutata. Potrebbe trattarsi di un <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> che supporta un&quot;associazione o un&quot;espressione interna, ad esempio quelli che supportano il [estensione di Markup DynamicResource](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Un&quot;espressione valutata indicherà inoltre il valore di base specifico impostazione condizione in cui è stata applicata l&quot;espressione, come un valore in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> Il <xref:System.Windows.ValueSource.BaseValueSource%2A>è ancora molto rilevanti per qualsiasi proprietà in cui IsExpression `true`.</xref:System.Windows.ValueSource.BaseValueSource%2A> Sapere se è stato ricevuto un valore tramite un&quot;espressione può essere particolarmente utile se il valore è stato impostato indirettamente, ad esempio tramite un modello o un valore della proprietà ereditate.       Se non viene valutata un&quot;espressione (l&quot;associazione non è riuscita; è stata trovata alcuna risorsa del nome), quindi il valore verrà derivare da un altro partecipante nel sistema di proprietà, probabilmente il valore predefinito. L&quot;origine viene quindi restituita in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> Espressione non riuscito restituiranno `false` per IsExpression."
  syntax:
    content: public bool IsExpression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore proviene da un&quot;espressione valutata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se due <xref href=&quot;System.Windows.ValueSource&quot;> </xref> istanze hanno lo stesso valore."
  remarks: "Questa implementazione chiama <xref:System.Windows.ValueSource.Equals%2A>, e il valore di supporta l&quot;uguaglianza in base a tutte le proprietà di <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "Il primo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> da confrontare."
    - id: vs2
      type: System.Windows.ValueSource
      description: "Il secondo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due <xref href=&quot;System.Windows.ValueSource&quot;> </xref> istanze sono equivalenti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se due <xref href=&quot;System.Windows.ValueSource&quot;> </xref> istanze non hanno lo stesso valore."
  remarks: "Questa implementazione chiama <xref:System.Windows.ValueSource.Equals%2A>, restituendo la negazione e supporta l&quot;uguaglianza di valori in base a tutte le proprietà di <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "Il primo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> da confrontare."
    - id: vs2
      type: System.Windows.ValueSource
      description: "Il secondo <xref href=&quot;System.Windows.ValueSource&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due <xref href=&quot;System.Windows.ValueSource&quot;> </xref> istanze non sono equivalenti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.ValueSource.BaseValueSource
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
- uid: System.Windows.BaseValueSource
  parent: System.Windows
  isExternal: false
  name: BaseValueSource
  nameWithType: BaseValueSource
  fullName: System.Windows.BaseValueSource
- uid: System.Windows.ValueSource.Equals(System.Object)
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ValueSource.GetHashCode
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ValueSource.IsAnimated
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource.BaseValueSource*
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
- uid: System.Windows.ValueSource.Equals*
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals
  nameWithType: ValueSource.Equals
- uid: System.Windows.ValueSource.GetHashCode*
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode
  nameWithType: ValueSource.GetHashCode
- uid: System.Windows.ValueSource.IsAnimated*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality
  nameWithType: ValueSource.op_Equality
- uid: System.Windows.ValueSource.op_Inequality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality
  nameWithType: ValueSource.op_Inequality
