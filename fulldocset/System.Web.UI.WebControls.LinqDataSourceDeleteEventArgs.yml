### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  id: LinqDataSourceDeleteEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleting&quot;> </xref> evento."
  remarks: "L&quot;oggetto LinqDataSourceDeleteEventArgs viene passato a un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>evento.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>proprietà contiene i dati che verranno eliminati.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>       Se l&quot;oggetto che rappresenta l&quot;origine dati genera un&quot;eccezione di convalida prima di eliminare i dati, la <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>proprietà contiene un&quot;istanza della <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>classe.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> È possibile recuperare tutte le eccezioni di convalida tramite il <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>proprietà.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Se non viene generata alcuna eccezione di convalida, il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>contiene proprietà `null`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> Se si gestiscono le eccezioni di convalida e non si desidera che l&quot;eccezione venga generata nuovamente, impostare il <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>proprietà `true`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>       Creare un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>evento per convalidare i dati, esaminare gli errori di convalida della classe di dati o annullare l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Per annullare l&quot;operazione di eliminazione, impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per impostazione predefinita, il <xref:System.Web.UI.WebControls.LinqDataSource>controllo Archivia i valori originali dell&quot;origine dati nella visualizzazione stato della pagina Web, ad eccezione di quelli il cui <xref:System.Data.Linq.Mapping.ColumnAttribute>attributo è contrassegnato come `UpdateCheck.Never`.</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> LINQ to SQL controlla automaticamente l&quot;integrità dei dati prima di eliminare i dati. Questa operazione, confrontando i valori correnti dell&quot;origine dati con i valori originali che vengono archiviati nello stato di visualizzazione. È possibile eseguire la convalida dei dati aggiuntivi tramite la creazione di un gestore per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>evento.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_255_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_255_1.cs)]"
  syntax:
    content: 'public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> classe."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (object originalObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "Un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>proprietà che contiene i dati da eliminare.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> classe con l&quot;eccezione specificata."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "Eccezione che si è verificato durante la convalida dei dati da eliminare."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;eccezione generata durante convalida i dati prima dell&quot;operazione di eliminazione."
  remarks: "Se prima di eseguita l&quot;operazione di eliminazione, viene generata un&quot;eccezione di convalida, l&quot;eccezione viene archiviata nella proprietà dell&quot;eccezione. In un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>evento, è possibile recuperare l&quot;eccezione tramite la proprietà Exception.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "L&quot;eccezione, se si è verificato un errore; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se è stata gestita l&quot;eccezione e che non deve essere generata nuovamente."
  remarks: "È possibile creare un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>evento per esaminare le eccezioni di convalida che sono state generate prima l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Se si gestisce l&quot;eccezione e non si desidera che venga generata nuovamente, impostare la proprietà ExceptionHandled `true`. Se non si imposta la proprietà ExceptionHandled `true`, l&quot;eccezione verrà propagata al gestore dell&quot;evento successivo nello stack di chiamate."
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;eccezione è stata gestita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;oggetto che rappresenta i dati da eliminare."
  remarks: "È possibile utilizzare la proprietà OriginalObject per interagire con i dati prima che venga eliminato. È possibile convalidare i dati oppure è possibile annullare l&quot;evento impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> È possibile modificare il record eliminare modificando i valori dell&quot;oggetto nella proprietà OriginalObject."
  example:
  - "The following example shows how to cancel the delete operation based on a property in the OriginalObject property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_196_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_196_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "Un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>proprietà che contiene i dati da eliminare.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
