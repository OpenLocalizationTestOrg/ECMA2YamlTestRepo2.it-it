### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IExtenderControl
  id: IExtenderControl
  children:
  - System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)
  - System.Web.UI.IExtenderControl.GetScriptReferences
  langs:
  - csharp
  name: "IExtenderControl"
  nameWithType: IExtenderControl
  fullName: System.Web.UI.IExtenderControl
  type: Interface
  summary: Defines the behavior for an extender control.
  remarks: "Extender controls that derive from the <xref:System.Web.UI.ExtenderControl> class require a <xref:System.Web.UI.ScriptManager> control to be on the page. The <xref:System.Web.UI.ExtenderControl> base class performs an explicit test to make sure that a <xref:System.Web.UI.ScriptManager> control exists on the page.  \n  \n However, if you want to create extender controls and the page does not contain an <xref:System.Web.UI.ScriptManager> control, you can create a class that implements the IExtenderControl interface directly. Additionally, if you are creating a class that derives from <xref:System.Web.UI.Control> or you are extending an existing control that derives from <xref:System.Web.UI.Control>, you can implement the IExtenderControl interface to support client functionality.  \n  \n The IExtenderControl interface registers the script libraries for a control by calling the <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A> method, and it registers <xref:System.Web.UI.ScriptDescriptor> objects by calling the <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> method. The <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> method returns an <xref:System.Collections.IEnumerable> list of <xref:System.Web.UI.ScriptDescriptor> objects.  \n  \n> [!NOTE]\n>  If you extend an existing control type that is derived from the <xref:System.Web.UI.WebControls.WebControl> class, implement the <xref:System.Web.UI.IScriptControl> interface.  \n  \n To create an extender control by implementing IExtenderControl, you do the following:  \n  \n-   Write code for the control's `OnInit` event to detect and use the <xref:System.Web.UI.ScriptManager> control if it is available on the page.  \n  \n-   If the <xref:System.Web.UI.ScriptManager> is not available on the page, provide alternative means to register required scripts by calling static methods of the <xref:System.Web.UI.ScriptManager> class.  \n  \n-   Provide protected virtual members for IExtenderControl members.  \n  \n-   Provide instance script as a script block that you register with the <xref:System.Web.UI.ScriptManager> control. You must do this during the control's `PreRender`, `PreRenderComplete`, or `Render` events.  \n  \n-   Register the script descriptors during the control's `Render` event.  \n  \n> [!NOTE]\n>  If the page contains an <xref:System.Web.UI.UpdatePanel> control, the page must contain a <xref:System.Web.UI.ScriptManager> control. You must implement the IExtenderControl interface only when the page does not contain a <xref:System.Web.UI.ScriptManager> control."
  syntax:
    content: public interface IExtenderControl
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)
  id: GetScriptDescriptors(System.Web.UI.Control)
  parent: System.Web.UI.IExtenderControl
  langs:
  - csharp
  name: "GetScriptDescriptors(Control)"
  nameWithType: IExtenderControl.GetScriptDescriptors(Control)
  fullName: System.Web.UI.IExtenderControl.GetScriptDescriptors(Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Registers the <see cref="T:System.Web.UI.ScriptDescriptor"></see> objects for the control and returns an object that contains the <see cref="T:System.Web.UI.ScriptDescriptor"></see> objects for the control.
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor> GetScriptDescriptors (System.Web.UI.Control targetControl);
    parameters:
    - id: targetControl
      type: System.Web.UI.Control
      description: "The server control that the extender is associated with."
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
      description: "To be added."
  overload: System.Web.UI.IExtenderControl.GetScriptDescriptors*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.IExtenderControl.GetScriptReferences
  id: GetScriptReferences
  parent: System.Web.UI.IExtenderControl
  langs:
  - csharp
  name: "GetScriptReferences()"
  nameWithType: IExtenderControl.GetScriptReferences()
  fullName: System.Web.UI.IExtenderControl.GetScriptReferences()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Registers the script libraries for the control and returns an enumeration of ECMAScript (JavaScript) files that have been registered as embedded resources.
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference> GetScriptReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
      description: "To be added."
  overload: System.Web.UI.IExtenderControl.GetScriptReferences*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)
  parent: System.Web.UI.IExtenderControl
  isExternal: false
  name: "GetScriptDescriptors(Control)"
  nameWithType: IExtenderControl.GetScriptDescriptors(Control)
  fullName: System.Web.UI.IExtenderControl.GetScriptDescriptors(Control)
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
  parent: System.Collections.Generic
  isExternal: true
  name: "IEnumerable<ScriptDescriptor>"
  nameWithType: IEnumerable<ScriptDescriptor>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "IEnumerable"
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptDescriptor>
  - name: "<"
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptDescriptor
    name: "ScriptDescriptor"
    nameWithType: ScriptDescriptor
    fullName: ScriptDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: "Control"
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.IExtenderControl.GetScriptReferences
  parent: System.Web.UI.IExtenderControl
  isExternal: false
  name: "GetScriptReferences()"
  nameWithType: IExtenderControl.GetScriptReferences()
  fullName: System.Web.UI.IExtenderControl.GetScriptReferences()
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
  parent: System.Collections.Generic
  isExternal: true
  name: "IEnumerable<ScriptReference>"
  nameWithType: IEnumerable<ScriptReference>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "IEnumerable"
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptReference>
  - name: "<"
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptReference
    name: "ScriptReference"
    nameWithType: ScriptReference
    fullName: ScriptReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.IExtenderControl.GetScriptDescriptors*
  parent: System.Web.UI.IExtenderControl
  isExternal: false
  name: "GetScriptDescriptors"
  nameWithType: IExtenderControl.GetScriptDescriptors
- uid: System.Web.UI.IExtenderControl.GetScriptReferences*
  parent: System.Web.UI.IExtenderControl
  isExternal: false
  name: "GetScriptReferences"
  nameWithType: IExtenderControl.GetScriptReferences
