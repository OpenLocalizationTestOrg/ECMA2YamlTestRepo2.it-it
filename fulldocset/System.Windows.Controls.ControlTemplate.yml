### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ControlTemplate
  id: ControlTemplate
  children:
  - System.Windows.Controls.ControlTemplate.#ctor
  - System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  - System.Windows.Controls.ControlTemplate.TargetType
  - System.Windows.Controls.ControlTemplate.Triggers
  - System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: ControlTemplate
  nameWithType: ControlTemplate
  fullName: System.Windows.Controls.ControlTemplate
  type: Class
  summary: "Specifica la struttura e gli aspetti di comportamento di un <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> che possono essere condivise tra più istanze del controllo."
  remarks: "Il ControlTemplate consente di specificare la struttura visiva di un controllo. L&quot;autore del controllo è possibile definire il valore predefinito di ControlTemplate e l&quot;autore dell&quot;applicazione può eseguire l&quot;override di ControlTemplate per ricostruire la struttura visiva del controllo.       Modello di controllo è una delle numerose funzionalità offerte dal [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modello di stili e modelli. Il modello di stili e modelli offre una grande flessibilità che in molti casi non occorre scrivere controlli personalizzati. Se si è autori di un&quot;applicazione che si desidera modificare la visualizzazione del controllo o per sostituire il ControlTemplate di un controllo esistente, vedere il [stili e modelli](~/add/includes/ajax-current-ext-md.md) argomento per informazioni più dettagliate ed esempi.       Se si sta scrivendo un controllo personalizzato, vedere &quot;Creazione di un controllo personalizzato&quot; nel [Cenni preliminari sul controllo creazione](~/add/includes/ajax-current-ext-md.md).       ControlTemplate deve essere un&quot;unità indipendente di dettaglio di implementazione che non è visibile all&quot;esterno di utenti e oggetti, inclusi gli stili. L&quot;unico modo per modificare il contenuto del modello di controllo è all&quot;interno del modello di controllo stesso.      <a name=&quot;xamlObjectElementUsage_VisualTree&quot;></a># # Utilizzo degli elementi XAML ```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ``` <a name=&quot;xamlValues_VisualTree&quot;> </a> # # valori XAML *ControlTemplate* elemento oggetto per ControlTemplate o una classe derivata.             *VisualTreeRootNode* un singolo [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] elemento come elemento figlio immediato di ControlTemplate (o una classe derivata). I modelli devono avere un unico nodo radice. Per generare un modello utile, l&quot;elemento scelto come *VisualTreeRootNode* è previsto il supporto di un modello di contenuto di un proprio, spesso un modello che supporta più elementi figlio.       *VisualTreeNodeContents* uno o più elementi che completano il modello desiderato. Se l&quot;elemento scelto come *VisualTreeRootNode* supporta solo un singolo elemento figlio, quindi si può solo essere un elemento dichiarato come *VisualTreeNodeContents*. È inoltre possibile (ma non comune) per fornire contenuto di testo se scelto *VisualTreeRootNode* supporta una proprietà di contenuto di testo."
  example:
  - "The following shows a <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> that sets the ControlTemplate of a <xref:System.Windows.Controls.Button>:  \n  \n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/t-system.windows.control_3_1.xaml)]  \n  \n When this gets applied, the <xref:System.Windows.Controls.Button> appears as an <xref:System.Windows.Shapes.Ellipse>:  \n  \n ![Button ControlTemplate sample](~/add/media/stylingintro-buttoncontroltemplate.png \"Button ControlTemplate sample\")  \n  \n When you set the <xref:System.Windows.Controls.Control.Template%2A> property of a <xref:System.Windows.Controls.Control> to a new ControlTemplate as in the above example, you are replacing the entire template. What the <xref:System.Windows.Controls.Button> looks like when it is in focus or pressed is all part of the default appearance of the button that you are replacing. Therefore, depending on your needs, you may want to put in your definition what your button should look like when it is pressed, and so on, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#1](~/add/codesnippet/xaml/controltemplateexamples/resources/button.xaml#1)]  \n  \n Note that this example references resources that are not shown here. For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041). That sample provides examples of control templates for many controls and is the best way for you to get started with creating control templates."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.DictionaryKeyProperty("TargetType")]

      public class ControlTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> classe."
  syntax:
    content: public ControlTemplate ();
    parameters: []
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> classe con il tipo di destinazione specificato."
  syntax:
    content: public ControlTemplate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Il tipo a cui è destinato questo modello."
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.TargetType
  id: TargetType
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene o imposta il tipo per cui questo <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> è destinato."
  remarks: "Se si dispone di un computer autonomo <xref:System.Windows.Controls.ControlTemplate>nella sezione delle risorse con la proprietà TargetType impostata su un tipo, il <xref:System.Windows.Controls.ControlTemplate>non viene applicato automaticamente a tale tipo.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> In alternativa, è necessario specificare un `x:Key` e applicare il modello in modo esplicito.       Si noti inoltre che la proprietà TargetType è richiesta su un <xref:System.Windows.Controls.ControlTemplate>Se la definizione del modello contiene un <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.Controls.ControlTemplate>      <a name=&quot;xamlAttributeUsage_TargetType&quot;></a># # Utilizzo dell&quot;attributo XAML ```   <object  TargetType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_TargetType&quot;> </a> # # valori XAML *typeName* il nome del tipo della classe.       Per fare riferimento al <xref:System.Type>nome della classe, utilizzare il [le estensioni di Markup e XAML WPF](~/add/includes/ajax-current-ext-md.md).</xref:System.Type>"
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#Label](~/add/codesnippet/xaml/controltemplateexamples/resources/label.xaml#label)]  \n  \n The above example uses the following resource:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.TargetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La proprietà TargetType non deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la definizione del modello ha un <xref href=&quot;System.Windows.Controls.ContentPresenter&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "I tipi specificati non sono validi. Il TargetType di un <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> deve essere o ereditare da un <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>, <xref href=&quot;System.Windows.Controls.Page&quot;> </xref>, o un <xref href=&quot;System.Windows.Navigation.PageFunctionBase&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.Triggers
  id: Triggers
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene una raccolta di <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> gli oggetti che si applicano le modifiche alle proprietà o eseguono azioni in base alle condizioni specificano."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a># # Utilizzo degli elementi XAML ```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> # # valori XAML *oneOrMoreTriggers* uno o più <xref:System.Windows.TriggerBase>oggetti (in genere si tratta di un <xref:System.Windows.Trigger>).</xref:System.Windows.Trigger> </xref:System.Windows.TriggerBase>      "
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#ToolTip](~/add/codesnippet/xaml/controltemplateexamples/resources/tooltip.xaml#tooltip)]  \n  \n The above example uses the following resources:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Una raccolta di <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> oggetti. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Controlla il padre basato su modelli rispetto a un set di regole."
  remarks: "Il metodo utilizza le regole seguenti: 1. Il `templatedParent` non può essere di tipo <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement>       2. Il `templatedParent` non può essere di tipo, <xref:System.Windows.FrameworkElement>ovvero non un <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.FrameworkElement>       3. Il `templatedParent` non può essere un <xref:System.Windows.Controls.Control>non associato a <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "L&quot;elemento a cui è applicato il modello."
  overload: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>templatedParent</code> must not be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "È necessario associare il <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> con un <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> impostando il &lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt; proprietà prima di utilizzare il <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> sul <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.ControlTemplate.#ctor
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Controls.ControlTemplate.TargetType
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.ControlTemplate.#ctor*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate
  nameWithType: ControlTemplate.ControlTemplate
- uid: System.Windows.Controls.ControlTemplate.TargetType*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: ControlTemplate.ValidateTemplatedParent
