### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ProcessModelSection
  id: ProcessModelSection
  children:
  - System.Web.Configuration.ProcessModelSection.#ctor
  - System.Web.Configuration.ProcessModelSection.AutoConfig
  - System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  - System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  - System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  - System.Web.Configuration.ProcessModelSection.CpuMask
  - System.Web.Configuration.ProcessModelSection.ElementProperty
  - System.Web.Configuration.ProcessModelSection.Enable
  - System.Web.Configuration.ProcessModelSection.IdleTimeout
  - System.Web.Configuration.ProcessModelSection.LogLevel
  - System.Web.Configuration.ProcessModelSection.MaxAppDomains
  - System.Web.Configuration.ProcessModelSection.MaxIOThreads
  - System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  - System.Web.Configuration.ProcessModelSection.MemoryLimit
  - System.Web.Configuration.ProcessModelSection.MinIOThreads
  - System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  - System.Web.Configuration.ProcessModelSection.Password
  - System.Web.Configuration.ProcessModelSection.PingFrequency
  - System.Web.Configuration.ProcessModelSection.PingTimeout
  - System.Web.Configuration.ProcessModelSection.Properties
  - System.Web.Configuration.ProcessModelSection.RequestLimit
  - System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  - System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  - System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  - System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  - System.Web.Configuration.ProcessModelSection.Timeout
  - System.Web.Configuration.ProcessModelSection.UserName
  - System.Web.Configuration.ProcessModelSection.WebGarden
  langs:
  - csharp
  name: ProcessModelSection
  nameWithType: ProcessModelSection
  fullName: System.Web.Configuration.ProcessModelSection
  type: Class
  summary: "Configura le impostazioni del modello di processo ASP.NET in un server Web Internet Information Services (IIS). Questa classe non può essere ereditata."
  remarks: "La classe ProcessModelSection fornisce un modo per accedere a livello di codice e di modificare il `processModel` sezione di un file di configurazione.       La classe ProcessModelSection controlla vari aspetti del processo di lavoro ASP.NET, inclusa la relativa durata, il numero di istanze create per volta, le identità di sicurezza con cui viene eseguito e le dimensioni di CLR thread del pool per rispondere alle richieste.       Quando si esegue ASP.NET con IIS 6 in modalità nativa, ASP.NET utilizza il modello di processo IIS 6 e ignora la maggior parte delle impostazioni in questa sezione. Utilizzare l&quot;interfaccia utente di amministrazione IIS (UI) per configurare tali proprietà. ASP.NET utilizza ancora le proprietà seguenti, che possono essere configurate tramite il file di configurazione: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>, <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>e <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>.</xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> </xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>       Il `processModel` sezione non può essere crittografata con la funzionalità di configurazione protetta o gli strumenti, perché viene utilizzata per l&quot;estensione ISAPI ASP.NET."
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the ProcessModelSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the `processModel` section.  \n  \n```  \n<processModel   \n  enable=\"True\" timeout=\"Infinite\"   \n  idleTimeout=\"Infinite\"   \n  shutdownTimeout=\"00:00:05\" requestLimit=\"Infinite\"  \n  requestQueueLimit=\"5000\" restartQueueLimit=\"10\"   \n  memoryLimit=\"60\" webGarden=\"False\" cpuMask=\"0xffffffff\"   \n  userName=\"machine\" password=\"AutoGenerate\" logLevel=\"Errors\"  \n  clientConnectedCheck=\"00:00:05\"   \n  comAuthenticationLevel=\"Connect\" comImpersonationLevel=\"Impersonate\"  \n  responseDeadlockInterval=\"00:03:00\"   \n  responseRestartDeadlockInterval=\"00:03:00\" autoConfig=\"True\"  \n  maxWorkerThreads=\"20\" maxIoThreads=\"20\" minWorkerThreads=\"1\"  \n  minIoThreads=\"1\" serverErrorMessageFile=\"\" pingFrequency=\"Infinite\"  \n  pingTimeout=\"Infinite\" asyncOption=\"20\" maxAppDomains=\"2000\"   \n/>  \n```  \n  \n The following code example demonstrates how to use the ProcessModelSection class.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/csharp/t-system.web.configurati_87_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_87_1.vb)]"
  syntax:
    content: 'public sealed class ProcessModelSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Configuration.ProcessModelSection&quot;> </xref> classe utilizzando le impostazioni predefinite."
  remarks: "Il costruttore ProcessModelSection non deve essere utilizzato direttamente dal codice. Viene chiamato dal sistema di configurazione ASP.NET. Per ottenere un&quot;istanza di <xref:System.Web.Configuration.ProcessModelSection>classe utilizzando il <xref:System.Configuration.Configuration.GetSection%2A>(metodo).</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.ProcessModelSection>"
  syntax:
    content: public ProcessModelSection ();
    parameters: []
  overload: System.Web.Configuration.ProcessModelSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  id: AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se le impostazioni delle prestazioni di ASP.NET vengono automaticamente configurate per le applicazioni ASP.NET."
  remarks: "Se il valore di configurazione automatica WLAN è impostato su `false`, i valori di Web. config espliciti vengono utilizzati per determinare la configurazione delle prestazioni per l&quot;applicazione ASP.NET. Se il valore di configurazione automatica WLAN è impostato su `true`, le prestazioni vengono automaticamente configurate per l&quot;applicazione ASP.NET.       Il valore di configurazione automatica WLAN è impostato esplicitamente su `true` nel file Machine. config. Il valore di codice predefinito viene impostato su `false`.  Se il valore di configurazione automatica WLAN viene rimosso da Machine. config, vengono utilizzate le impostazioni esplicite anziché le impostazioni configurate automaticamente."
  syntax:
    content: public bool AutoConfig { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le impostazioni delle prestazioni vengono automaticamente configurate per applicazioni ASP.NET. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.AutoConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  id: ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica quanto tempo una richiesta viene lasciato nella coda."
  remarks: "Questa proprietà specifica quanto tempo una richiesta in coda prima che ASP.NET esegua una verifica di client connessi.      > [!NOTE] > Se l&quot;intervallo scade durante la richiesta è ancora in coda, un client connesso controllare viene eseguita prima di passare la richiesta al processo di lavoro ASP.NET per la gestione."
  example:
  - "The following code example shows how to access and modify the ClientConnectedCheck property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/csharp/p-system.web.configurati_355_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_355_1.vb)]"
  syntax:
    content: public TimeSpan ClientConnectedCheck { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>valore che indica la durata di Accodamento.</xref:System.TimeSpan> Il valore predefinito è 5 secondi."
  overload: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  id: ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il livello di autenticazione per la sicurezza DCOM."
  remarks: "Quando il valore della proprietà è impostato <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>, DCOM determina il livello di autenticazione utilizzando l&quot;algoritmo di negoziazione di sicurezza normale.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> Il valore predefinito assegnato a questa proprietà, come specificato nel file Machine config è <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> In questo caso, DCOM autentica le credenziali del client solo quando il client stabilisce una relazione con il server."
  example:
  - "The following code example shows how to access the ComAuthenticationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/csharp/p-system.web.configurati_143_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/visualbasic/p-system.web.configurati_143_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComAuthenticationLevel
      description: "Uno del <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  id: ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il livello di autenticazione per la sicurezza COM."
  remarks: "Quando il valore della proprietà è impostato <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>, DCOM determina il livello di rappresentazione utilizzando l&quot;algoritmo di negoziazione di sicurezza normale.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> Il valore predefinito assegnato a questa proprietà, come specificato nel file Machine config è <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> In questo caso, il processo server può rappresentare il contesto di sicurezza del client quando agisce per conto del client."
  example:
  - "The following code example shows how to access the ComImpersonationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/csharp/p-system.web.configurati_249_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/visualbasic/p-system.web.configurati_249_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComImpersonationLevel
      description: "Uno del <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  id: CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica i processori in un server multiprocessore sono idonei per eseguire processi ASP.NET."
  remarks: "Il valore CpuMask specifica uno schema di bit che indica la CPU idonea a eseguire i thread ASP.NET. Se il <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>è impostata su `true`, CpuMask limita i processi di lavoro per il numero di CPU.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> Il numero massimo consentito di processi di lavoro è uguale al numero di CPU. Per impostazione predefinita, tutte le CPU sono abilitate e ASP.NET avvia un processo per ogni CPU. Se il <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>è impostata su `false`, l&quot;attributo CpuMask viene ignorato e verrà eseguito solo un processo di lavoro.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>"
  example:
  - "The following code example shows how to access the CpuMask property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/csharp/p-system.web.configurati_174_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/visualbasic/p-system.web.configurati_174_1.vb)]"
  syntax:
    content: public int CpuMask { get; set; }
    return:
      type: System.Int32
      description: "Il numero che rappresenta lo schema di bit da applicare. Il valore predefinito è 0xFFFFFFFF."
  overload: System.Web.Configuration.ProcessModelSection.CpuMask*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "Da aggiungere."
  overload: System.Web.Configuration.ProcessModelSection.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Enable
  id: Enable
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se il modello di processo è abilitato."
  remarks: "La proprietà Enable specifica se ASP.NET è ospitato in un processo di lavoro esterno. Se è attiva `true`, ASP.NET è ospitato in un processo di lavoro esterno; in caso contrario, viene eseguito direttamente in Inetinfo.exe.      > [!NOTE] > ASP.NET in esecuzione in Inetinfo.exe non è consigliabile, perché ciò comporta l&quot;esecuzione dell&quot;applicazione nel contesto di sicurezza del sistema locale. Quando ASP.NET viene eseguito in modalità nativa di Internet Information Services (IIS) 6, questa impostazione viene ignorata, pertanto non esiste alcun motivo per impostare l&quot;opzione `false`."
  example:
  - "The following code example shows how to access the Enable property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/csharp/p-system.web.configurati_95_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_95_1.vb)]"
  syntax:
    content: public bool Enable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il modello di processo è abilitato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.Enable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  id: IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il periodo di inattività dopo il quale il processo di lavoro viene interrotto automaticamente."
  remarks: 'Il processo di lavoro viene riavviato (animato) quando viene raggiunto il valore della proprietà IdleTimeout. Per impostazione predefinita, solo due condizioni rallentare il processo di rimbalzo: il processo supera il limite consentito di memoria o il processo supera il numero consentito di richieste che possono essere inseriti nella coda. È possibile aggiungere altre condizioni a quelle predefinite. Ad esempio, è possibile utilizzare la proprietà di IdleTimeout per limitare la durata che del processo di lavoro è inattivo.'
  example:
  - "The following code example shows how to access the IdleTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/csharp/p-system.web.configurati_88_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_88_1.vb)]"
  syntax:
    content: public TimeSpan IdleTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>valore che indica il tempo di inattività.</xref:System.TimeSpan> Il valore predefinito è infinito, che corrisponde a <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  id: LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica i tipi di evento che viene registrato nel registro eventi."
  remarks: "Tramite questa proprietà in modo corretto, è possibile filtrare gli errori che possa del Registro di sistema. Dopo avere un&quot;idea del malfunzionamento dell&quot;applicazione o i colli di bottiglia, si desidera mettere a punto una strategia che riduca il numero di errori che si è interessati."
  example:
  - "The following code example shows how to access the LogLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/csharp/p-system.web.configurati_246_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/visualbasic/p-system.web.configurati_246_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelLogLevel
      description: "Uno del <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref> valori. Il valore predefinito è <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.LogLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  id: MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il numero massimo consentito di domini applicazione in un processo."
  remarks: "Se viene superata la soglia di MaxAppDomains, il dominio applicazione utilizzato viene arrestato se è necessario avviare un nuovo dominio applicazione."
  example:
  - "The following code example shows how to access the MaxAppDomains property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/csharp/p-system.web.configurati_284_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/visualbasic/p-system.web.configurati_284_1.vb)]"
  syntax:
    content: public int MaxAppDomains { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo consentito di domini di applicazione in un unico processo."
  overload: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  id: MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il numero massimo di thread dei / o per ogni CPU nel pool di thread CLR."
  remarks: "Il valore di MaxIOThreads deve essere maggiore o uguale al <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>impostazione di `httpRuntime` sezione di configurazione.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       È necessario un controllo tramite l&quot;utilizzo della CPU impostando il numero di thread di lavoro e il thread dei / o, usando il <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>MaxIOThreads proprietà e rispettivamente.</xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>       La differenza tra i due tipi di thread è che quest&quot;ultimo siano associato agli oggetti dei / o, ad esempio un flusso o una pipe, e il primo thread tradizionali senza restrizioni. Per Internet Information Services (IIS) versione 6.0 e versioni successive, ASP.NET elabora le richieste nei thread di lavoro. Questo avviene perché ASP.NET è integrato in IIS.       Questi thread vengono ottenuti dal pool di thread CLR a livello di processo appartenenti a un&quot;applicazione.      > [!NOTE] > In genere i valori predefiniti per i thread consentiti sono sufficienti per mantenere l&quot;utilizzo elevato della CPU. Se per qualche motivo che l&quot;applicazione è lenta, ad esempio in attesa di risorse esterne, è possibile provare a aumentare il numero di thread a un valore inferiore a 100."
  example:
  - "The following code example shows how to access the MaxIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/csharp/p-system.web.configurati_295_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_295_1.vb)]"
  syntax:
    content: public int MaxIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di thread. Il valore predefinito è 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  id: MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica la quantità massima di thread di lavoro per ogni CPU nel pool di thread CLR."
  remarks: "Il valore di MaxWorkerThreads deve essere maggiore o uguale al <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>impostazione di `httpRuntime` sezione di configurazione.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       È possibile che alcuni controllo tramite l&quot;utilizzo della CPU impostando il numero di thread di lavoro e il thread dei / o, tramite la proprietà MaxWorkerThreads la <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>proprietà, rispettivamente.</xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>       La differenza tra i due tipi di thread è che quest&quot;ultimo siano associato agli oggetti dei / o, ad esempio un flusso o una pipe, e il primo thread tradizionali senza restrizioni. Per Internet Information Services (IIS) versione 6.0 e versioni successive, ASP.NET elabora le richieste nei thread di lavoro. Questo avviene perché ASP.NET è integrato in IIS.       Questi thread vengono ottenuti dal pool di thread CLR a livello di processo appartenenti a un&quot;applicazione.      > [!NOTE] > In genere i valori predefiniti per i thread consentiti sono sufficienti per mantenere l&quot;utilizzo elevato della CPU. Se per qualche motivo che l&quot;applicazione è lenta, ad esempio in attesa di risorse esterne, è possibile provare a aumentare il numero di thread a un valore inferiore a 100."
  example:
  - "The following code example shows how to access the MaxWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/csharp/p-system.web.configurati_48_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_48_1.vb)]"
  syntax:
    content: public int MaxWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di thread. Il valore predefinito è 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  id: MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica la dimensione massima consentita."
  remarks: "Le dimensioni della memoria sono espresso come percentuale della memoria di sistema totale. Si tratta della quantità di memoria utilizzata da un processo di lavoro prima del riavvio di ASP.NET (animato) è."
  example:
  - "The following code example shows how to access the MemoryLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/csharp/p-system.web.configurati_265_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_265_1.vb)]"
  syntax:
    content: public int MemoryLimit { get; set; }
    return:
      type: System.Int32
      description: "La percentuale di memoria di sistema totale. Il valore predefinito è 60%."
  overload: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  id: MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il numero minimo di thread dei / o per ogni CPU nel pool di thread CLR."
  remarks: ''
  example:
  - "The following code example shows how to access the MinIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/csharp/p-system.web.configurati_296_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_296_1.vb)]"
  syntax:
    content: public int MinIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Il numero minimo di thread dei / o per ogni CPU nel pool di thread CLR."
  overload: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  id: MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il numero minimo di thread di lavoro per ogni CPU nel pool di thread CLR."
  remarks: ''
  example:
  - "The following code example shows how to access the MinWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/csharp/p-system.web.configurati_183_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_183_1.vb)]"
  syntax:
    content: public int MinWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Il numero minimo di thread di lavoro per ogni CPU nel pool di thread CLR"
  overload: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Password
  id: Password
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica la password da utilizzare per l&quot;identità di Windows."
  remarks: "La proprietà della Password deve essere utilizzata con il <xref:System.Web.Configuration.ProcessModelSection.UserName%2A>proprietà.</xref:System.Web.Configuration.ProcessModelSection.UserName%2A>       Quando è presente, questi valori di proprietà causano il processo di lavoro per l&quot;esecuzione con l&quot;identità Windows configurata."
  example:
  - "The following code example shows how to access the Password property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/csharp/p-system.web.configurati_258_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/visualbasic/p-system.web.configurati_258_1.vb)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "La password da utilizzare. Il valore predefinito è AutoGenerate."
  overload: System.Web.Configuration.ProcessModelSection.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  id: PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica l&quot;intervallo di tempo in cui l&quot;estensione ISAPI esegue il ping per determinare se è in esecuzione il processo di lavoro."
  remarks: "Il processo di lavoro viene riavviato (animato) se non è in esecuzione dopo l&quot;intervallo PingFrequency è scaduto."
  example:
  - "The following code example shows how to access the PingFrequency property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/csharp/p-system.web.configurati_14_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_14_1.vb)]"
  syntax:
    content: public TimeSpan PingFrequency { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che definisce l&quot;intervallo di tempo.</xref:System.TimeSpan> Il valore predefinito è 30 secondi."
  overload: System.Web.Configuration.ProcessModelSection.PingFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  id: PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica l&quot;intervallo di tempo dopo il quale viene riavviato un processo di lavoro non risponde."
  remarks: "Le estensioni ISAPI di eseguire il ping del processo di lavoro di <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>intervallo.</xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> Se il processo di lavoro non risponde entro l&quot;intervallo PingTimeout, il processo viene riavviato."
  example:
  - "The following code example shows how to access the PingTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/csharp/p-system.web.configurati_399_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_399_1.vb)]"
  syntax:
    content: public TimeSpan PingTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che definisce l&quot;intervallo di tempo.</xref:System.TimeSpan> Il valore predefinito è 5 secondi."
  overload: System.Web.Configuration.ProcessModelSection.PingTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Properties
  id: Properties
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Da aggiungere."
  overload: System.Web.Configuration.ProcessModelSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  id: RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il numero di richieste consentite prima che un processo di lavoro viene riciclato."
  remarks: "Se viene superato il numero di richieste, ASP.NET avvia automaticamente un nuovo processo di lavoro per rendere il posto di quello corrente."
  example:
  - "The following code example shows how to use the RequestLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/csharp/p-system.web.configurati_185_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_185_1.vb)]"
  syntax:
    content: public int RequestLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero di richieste consentite. Il valore predefinito è Infinite."
  overload: System.Web.Configuration.ProcessModelSection.RequestLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  id: RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il numero di richieste consentite nella coda."
  remarks: "Se viene superato il numero di richieste consentite nella coda, ASP.NET inizia restituendo &quot;503 – Server troppo occupato&quot; errori alle nuove richieste. Quando viene raggiunto questo limite, il sistema funziona in condizioni anomale. Questa operazione potrebbe essere un sintomo di un malfunzionamento o, forse, solo un carico elevato. Il riavvio (saranno rimbalzati) il processo di lavoro potrebbe diventare l&quot;unico modo per evitare ulteriori problemi."
  example:
  - "The following code example shows how to use the RequestQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_126_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_126_1.vb)]"
  syntax:
    content: public int RequestQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero di richieste consentite da mettere in coda. Il valore predefinito è 5000."
  overload: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  id: ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica l&quot;intervallo di tempo per il processo di lavoro rispondere."
  remarks: "Il processo viene riavviato, se sono presenti richieste in coda e se non è presente una risposta durante l&quot;intervallo di tempo definito da ResponseDeadlockInterval."
  example:
  - "The following code example shows how to use the ResponseDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/csharp/p-system.web.configurati_402_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_402_1.vb)]"
  syntax:
    content: public TimeSpan ResponseDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che definisce l&quot;intervallo.</xref:System.TimeSpan> Il valore predefinito è 3 minuti."
  overload: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  id: ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Non è più utilizzato."
  remarks: "Questa proprietà non viene più utilizzata da ASP.NET e viene fornita solo per la compatibilità. Non causerà un errore di configurazione se è già presente in un file di configurazione. Tutti i ricicli in caso di una condizione di deadlock vengono controllati dal <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>proprietà.</xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>"
  example:
  - "The following code example shows how to access the ResponseRestartDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/csharp/p-system.web.configurati_58_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_58_1.vb)]"
  syntax:
    content: public TimeSpan ResponseRestartDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Non applicabile."
  overload: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  id: RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica che il numero massimo di richieste in coda dell&quot;ISAPI durante l&quot;attesa di un nuovo processo di lavoro avviare la gestione delle richieste."
  remarks: "Quando questo limite viene superato, una richiesta client riceverà un errore HTTP 503 fino a quando il processo di lavoro è pronto."
  example:
  - "The following code example shows how to access the RestartQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/csharp/p-system.web.configurati_255_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_255_1.vb)]"
  syntax:
    content: public int RestartQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero di richieste in coda. Il valore predefinito è 10."
  overload: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  id: ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il file il cui contenuto deve essere utilizzato quando si verifica un errore irreversibile."
  remarks: "Il file il cui contenuto viene utilizzato invece il messaggio di Server non disponibile predefinito.       Il percorso del file può essere un percorso relativo o assoluto."
  example:
  - "The following code example shows how to use the ServerErrorMessageFile property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/csharp/p-system.web.configurati_154_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/visualbasic/p-system.web.configurati_154_1.vb)]"
  syntax:
    content: public string ServerErrorMessageFile { get; set; }
    return:
      type: System.String
      description: "Il percorso del file utilizzato quando si verifica un errore irreversibile."
  overload: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  id: ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il tempo consentito per arrestare il processo di lavoro."
  remarks: "Questa proprietà specifica il numero di minuti consentiti per il processo di lavoro chiuso correttamente. Quando il timeout scade, viene interrotto il processo di lavoro forzatamente."
  example:
  - "The following code example shows how to use the ShutdownTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/csharp/p-system.web.configurati_202_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_202_1.vb)]"
  syntax:
    content: public TimeSpan ShutdownTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che definisce l&quot;intervallo.</xref:System.TimeSpan> Il valore predefinito è 5 secondi."
  overload: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  id: Timeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il numero di minuti fino a quando non ASP.NET avvia un nuovo processo di lavoro."
  remarks: "ASP.NET avvia un nuovo processo di lavoro per rendere il posto di quello corrente."
  example:
  - "The following code example shows how to use the Timeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_144_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_144_1.vb)]"
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che definisce l&quot;intervallo.</xref:System.TimeSpan> Il valore predefinito è Infinite."
  overload: System.Web.Configuration.ProcessModelSection.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.UserName
  id: UserName
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica il nome utente per un&quot;identità Windows."
  remarks: "Se presente, il nome utente definisce un&quot;identità di Windows diversa da quello del processo predefinito. Questa identità viene utilizzata per eseguire il processo di lavoro ASP.NET.       Per impostazione predefinita, il nome utente è impostato sul valore speciale macchina e il processo viene eseguito con un account utente denominato ASPNET che viene creato automaticamente quando ASP.NET è installato.       Il <xref:System.Web.Configuration.ProcessModelSection.Password%2A>proprietà deve essere utilizzata con la proprietà UserName.</xref:System.Web.Configuration.ProcessModelSection.Password%2A>       Quando è presente, questi valori di proprietà causano il processo di lavoro per l&quot;esecuzione con l&quot;identità Windows configurata.      > [!NOTE] > Se la proprietà nome utente è impostata su sistema, con la password AutoGenerate, definisce un&quot;entità che esegue il processo come un account amministrativo e consente tutto il codice utente ASP.NET in esecuzione nel processo di privilegi amministrativi. In tal caso, prestare attenzione in questo caso, per le autorizzazioni consentite."
  example:
  - "The following code example shows how to access the UserName property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/csharp/p-system.web.configurati_166_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_166_1.vb)]"
  syntax:
    content: public string UserName { get; set; }
    return:
      type: System.String
      description: "Il nome utente. Il valore predefinito è computer."
  overload: System.Web.Configuration.ProcessModelSection.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  id: WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che abilita le CPU disponibili eseguire i processi di lavoro."
  remarks: "La proprietà WebGarden deve essere utilizzata con la <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>proprietà.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>       Se la proprietà WebGarden è impostata su `false`, <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>attributo viene ignorato e viene eseguito solo un processo di lavoro.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>      > [!NOTE] > Un server Web multiprocessore viene chiamato un Web garden."
  example:
  - "The following code example shows how to access the WebGarden property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/csharp/p-system.web.configurati_94_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/visualbasic/p-system.web.configurati_94_1.vb)]"
  syntax:
    content: public bool WebGarden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se <> </> *> utilizzate per mappare i processi di lavoro per il numero di CPU; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <>*> is ignored."
  overload: System.Web.Configuration.ProcessModelSection.WebGarden*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelComAuthenticationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComAuthenticationLevel
  nameWithType: ProcessModelComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelComImpersonationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComImpersonationLevel
  nameWithType: ProcessModelComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelLogLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelLogLevel
  nameWithType: ProcessModelLogLevel
  fullName: System.Web.Configuration.ProcessModelLogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
- uid: System.Web.Configuration.ProcessModelSection.#ctor*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection
  nameWithType: ProcessModelSection.ProcessModelSection
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
