### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Deduce uno schema (XSD (XML Schema Definition Language) da un documento XML. La classe XmlSchemaInference non può essere ereditata."
  remarks: "> [!IMPORTANT]>-Non utilizzano gli schemi da origini sconosciute o non attendibili o posizioni. In questo modo può pregiudicare la sicurezza del codice.   >-XML Schema (inclusi gli schemi inline) sono intrinsecamente vulnerabili ad attacchi denial of service; non le accetti in scenari non attendibili.   >-Messaggi di errore di convalida dello schema e le eccezioni possono esporre informazioni riservate riguardanti il modello di contenuto o i percorsi URI per il file di schema. Prestare attenzione a non esporre queste informazioni per i chiamanti non attendibili.       La classe XmlSchemaInference il <xref:System.Xml.Schema?displayProperty=fullName>dello spazio dei nomi consente di inferire uno schema (XSD (XML Schema Definition Language) dalla struttura di un documento XML.</xref:System.Xml.Schema?displayProperty=fullName> La classe XmlSchemaInference genera uno schema XML che è possibile convalidare il documento XML.       La classe XmlSchemaInference supporta gli standard W3C XML e XML Schema. E può essere utilizzato per derivare un nuovo schema o per ridefinire uno schema esistente."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> classe."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Deduce uno schema (XSD (XML Schema Definition Language) dal documento XML contenuto nel <xref:System.Xml.XmlReader>l&quot;oggetto specificato.</xref:System.Xml.XmlReader>"
  remarks: "Il metodo InferSchema deduce uno o più schemi W3C XML Schema Definition Language (XSD) dai dati XML contenuto nel documento dell&quot;istanza di <xref:System.Xml.XmlReader>l&quot;oggetto specificato.</xref:System.Xml.XmlReader> Se il documento XML contiene elementi e attributi provenienti da più spazi dei nomi, quindi vengono generati più schemi: uno per ogni spazio dei nomi utilizzato nel documento. Lo schema principale è in grado di convalidare l&quot;intero documento XML schema e lo spazio dei nomi di destinazione è lo stesso spazio dei nomi dell&quot;elemento del documento del documento XML.       Di seguito sono riportate note importanti relative all&quot;utilizzo del metodo InferSchema.      -Il metodo InferSchema ignora qualsiasi `xsi:type`, `xsi:schemaLocation`, o `xsi:noNamespaceSchemaLocation` attributi nel documento XML.      -Se il <xref:System.Xml.XmlReader>oggetto è tipizzato, le informazioni sul tipo contenute viene ignorate.</xref:System.Xml.XmlReader>      -Se il <xref:System.Xml.XmlReader>oggetto viene posizionato su un elemento che non è l&quot;elemento radice del documento XML, è derivato da uno schema solo per tale elemento.</xref:System.Xml.XmlReader> Se il <xref:System.Xml.XmlReader>oggetto non è posizionato su un elemento, il <xref:System.Xml.XmlReader.Read%2A>metodo viene chiamato sul <xref:System.Xml.XmlReader>parametro fino a quando non viene rilevato un elemento (ad esempio, quando <xref:System.Xml.XmlReader.NodeType%2A>è <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> A questo punto, il processo di inferenza inizia da tale elemento. Se non viene rilevato alcun elemento fino alla fine del documento, un <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>oggetto contenente il codice XML del documento per inferire uno schema dalla.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Un <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> oggetto contenente gli schemi derivati."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Il documento XML non è corretto."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "Il <xref:System.Xml.XmlReader>oggetto non è posizionato sul nodo radice o di un elemento.</xref:System.Xml.XmlReader> Si verifica un errore durante il processo di inferenza dello schema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Deduce uno schema (XSD (XML Schema Definition Language) dal documento XML contenuto nel <xref:System.Xml.XmlReader>oggetto specificato e ottimizza lo schema inferito utilizzando uno schema esistente nel <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> l&quot;oggetto specificato con lo stesso spazio dei nomi di destinazione.</xref:System.Xml.XmlReader>"
  remarks: "Il metodo InferSchema deduce uno o più schemi W3C XML Schema Definition Language (XSD) dai dati XML contenuto nel documento dell&quot;istanza di <xref:System.Xml.XmlReader>l&quot;oggetto specificato.</xref:System.Xml.XmlReader> Se il documento XML contiene elementi e attributi provenienti da più spazi dei nomi, vengono generati più schemi: uno per ogni spazio dei nomi utilizzato nel documento. Lo schema principale è in grado di convalidare l&quot;intero documento XML schema e lo spazio dei nomi di destinazione è lo stesso spazio dei nomi dell&quot;elemento del documento del documento XML.       Di seguito sono riportate note importanti relative all&quot;utilizzo del metodo InferSchema.      -Il metodo InferSchema ignora qualsiasi `xsi:type`, `xsi:schemaLocation`, o `xsi:noNamespaceSchemaLocation` attributi nel documento XML.      -Se il <xref:System.Xml.XmlReader>oggetto è tipizzato, le informazioni sul tipo contenute viene ignorate.</xref:System.Xml.XmlReader>      -Se il <xref:System.Xml.XmlReader>oggetto viene posizionato su un elemento che non è l&quot;elemento radice del documento XML, è derivato da uno schema solo per tale elemento.</xref:System.Xml.XmlReader> Se il <xref:System.Xml.XmlReader>oggetto non è posizionato su un elemento, il <xref:System.Xml.XmlReader.Read%2A>metodo viene chiamato sul <xref:System.Xml.XmlReader>parametro fino a quando non viene rilevato un elemento (ad esempio, quando <xref:System.Xml.XmlReader.NodeType%2A>è <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> A questo punto, il processo di inferenza inizia da tale elemento. Se non viene rilevato alcun elemento fino alla fine del documento, un <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException>      -Se un <xref:System.Xml.Schema.XmlSchemaSet>oggetto viene passato come parametro e l&quot;elemento su cui il <xref:System.Xml.XmlReader>è posizionato l&quot;oggetto è definito in uno degli schemi di <xref:System.Xml.Schema.XmlSchemaSet>, viene utilizzato lo schema inferito per ridefinire uno schema esistente nel <xref:System.Xml.Schema.XmlSchemaSet>parametro con lo stesso spazio dei nomi di destinazione; in caso contrario, un nuovo schema viene dedotto per lo spazio dei nomi.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>oggetto contenente il codice XML del documento per inferire uno schema dalla.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Un <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> contenente uno schema esistente utilizzato per definire lo schema inferito in oggetto."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Un <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> oggetto contenente gli schemi derivati."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Il documento XML non è corretto."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "Il <xref:System.Xml.XmlReader>oggetto non è posizionato sul nodo radice o di un elemento.</xref:System.Xml.XmlReader> Si verifica un errore durante il processo di inferenza dello schema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene o imposta il <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>che influisce sulle dichiarazioni di occorrenza schema inferite dal documento XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Se la proprietà di occorrenza è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, i primi elementi di tempo vengono rilevati nel documento XML, la dichiarazione dello schema viene inferita come `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Quando vengono rilevati attributi, la dichiarazione dello schema viene inferita come `use=&quot;required&quot;`.       Se la proprietà di occorrenza è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, le dichiarazioni di elemento dello schema vengono inferite come `minOccurs=&quot;0&quot;`, e le dichiarazioni di attributo dello schema vengono inferite come `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Il valore predefinito della proprietà di occorrenza è <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Un <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>oggetto.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ottiene o imposta il <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>che influisce sui tipi derivati dal documento XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Se la proprietà TypeInference è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, il tipo derivato di elementi e attributi nel documento XML con contenuto semplice è sempre `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Se la proprietà TypeInference è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, vengono dedotti tipi più specifici, ad esempio `xs:date`, `xs:decimal`, `xs:unsignedByte`e così via.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Il valore predefinito della proprietà TypeInference è <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Un <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>oggetto.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
