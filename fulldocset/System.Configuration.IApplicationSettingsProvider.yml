### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Definisce le funzionalità estese per i provider di impostazioni dell&quot;applicazione client."
  remarks: "L&quot;architettura Impostazioni applicazione consente di fornire un meccanismo di archiviazione personalizzati per le impostazioni dell&quot;applicazione mediante la creazione di un provider di impostazioni personalizzate, ovvero una classe derivata da <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> Questa classe contiene le funzionalità di base per l&quot;archiviazione e recupero delle proprietà. Tuttavia, è possibile aggiungere ulteriori funzionalità standardizzate implementando l&quot;interfaccia IApplicationSettingsProvider nel provider di impostazioni personalizzato. Questa interfaccia contiene tre metodi che consentono principalmente i provider di impostazioni per più intelligente handle versione modifiche all&quot;applicazione. In genere, il provider di impostazioni archivierà le impostazioni dell&quot;applicazione per versioni diverse di un&quot;applicazione separatamente per evitare le situazioni seguenti:-esecuzione Side-by-side di versioni diverse di un&quot;applicazione.      -Verranno mantenute le impostazioni dell&quot;applicazione durante l&quot;aggiornamento di un&quot;applicazione.      -I valori predefiniti per la versione attualmente in uso, reimpostare le impostazioni dell&quot;applicazione.       La <xref:System.Configuration.LocalFileSettingsProvider>classe implementa l&quot;interfaccia IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Lo stesso set di metodi contenuti in IApplicationSettingsProvider sono inoltre disponibili nel <xref:System.Configuration.ApplicationSettingsBase>(classe), consentendo di stabilire un canale di comunicazione predefinito tra un wrapper di impostazioni dell&quot;applicazione e il relativo provider di impostazioni.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Questa interfaccia è facoltativa. Se un provider non implementa questa interfaccia, l&quot;infrastruttura di impostazioni avrà esito negativo senza alcuna notifica se tenta di accedere a uno dei metodi definiti da questa interfaccia."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Restituisce il valore della proprietà impostazioni specificate per la versione precedente della stessa applicazione."
  remarks: "È possibile utilizzare il metodo GetPreviousVersion in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>metodo per eseguire la migrazione delle impostazioni dell&quot;applicazione durante o dopo l&quot;installazione di una nuova versione di un&quot;applicazione.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> che descrive l&quot;utilizzo dell&quot;applicazione corrente."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "Il <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> il cui valore è da restituire."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> contenente il valore dell&quot;impostazione della proprietà specificata come ultima è stata impostata con la versione precedente dell&quot;applicazione; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;impostazione non viene trovato."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Reimposta le impostazioni dell&quot;applicazione associate all&quot;applicazione specificata in base ai valori predefiniti."
  remarks: "Il metodo Reset reinizializza i valori archiviati del gruppo di impostazioni di applicazioni specificato. Al contrario, <xref:System.Configuration.DefaultSettingValueAttribute>fornisce un valore predefinito per una singola proprietà di impostazioni durante l&quot;inizializzazione della proprietà, se è stato archiviato alcun valore.</xref:System.Configuration.DefaultSettingValueAttribute>       Il provider di impostazioni determina le impostazioni predefinite ragionevoli per il gruppo di impostazioni dell&quot;applicazione specificato. Ad esempio, l&quot;implementazione in <xref:System.Configuration.LocalFileSettingsProvider>Reimposta le impostazioni con ambito di utente in base ai valori condiviso nel `application.exe.config` file; al contrario, lascia invariate le impostazioni di ambito di applicazione.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> che descrive l&quot;utilizzo dell&quot;applicazione corrente."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Indica al provider che l&quot;applicazione è stato aggiornato. In questo modo il provider consente di aggiornare le impostazioni archiviate come appropriato."
  remarks: ".NET Framework consente l&quot;installazione side-by-side e l&quot;esecuzione di versioni diverse della stessa applicazione. Il provider di impostazioni applicazione archivia le impostazioni dell&quot;applicazione per ogni versione di un&quot;applicazione separatamente per garantire l&quot;isolamento. Tuttavia, è consigliabile eseguire la migrazione delle impostazioni dalla versione precedente di un&quot;applicazione a quella corrente. Per fornire questa funzionalità di migrazione, utilizzare il metodo di aggiornamento, implementato in una classe derivata da <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       È possibile utilizzare il metodo di aggiornamento in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>metodo per eseguire la migrazione delle impostazioni dell&quot;applicazione durante o dopo l&quot;installazione di una nuova versione di un&quot;applicazione.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Questo metodo deve essere eliminato per ogni impostazione dell&quot;applicazione con cui <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>è applicato, o per l&quot;intera classe wrapper di impostazioni, derivata da <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> che descrive l&quot;utilizzo dell&quot;applicazione corrente."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> contenente il gruppo di impostazioni di proprietà i cui valori devono essere recuperate."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
