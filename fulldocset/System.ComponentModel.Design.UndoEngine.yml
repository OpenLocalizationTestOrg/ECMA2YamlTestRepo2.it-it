### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.UndoEngine
  id: UndoEngine
  children:
  - System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  - System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.Dispose
  - System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  - System.ComponentModel.Design.UndoEngine.Enabled
  - System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  - System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  - System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.Undoing
  - System.ComponentModel.Design.UndoEngine.UndoInProgress
  - System.ComponentModel.Design.UndoEngine.Undone
  langs:
  - csharp
  name: UndoEngine
  nameWithType: UndoEngine
  fullName: System.ComponentModel.Design.UndoEngine
  type: Class
  summary: "Specifica funzionalità generiche di annullamento/ripetizione in fase di progettazione."
  remarks: "La classe astratta UndoEngine fornisce un&quot;implementazione predefinita della funzionalità di annullamento in fase di progettazione. Un&quot;unità di annullamento rappresenta una singola unità di lavoro annullabile. Questa unità viene aggiunta a uno stack e l&quot;utente può quindi analizzare lo stack per annullare ogni azione. Unità di annullamento in genere sono progettate per attivare o disattivare, il che significa che Annulla chiamata restituisce due volte l&quot;applicazione al relativo stato iniziale.       La classe UndoEngine sfrutta le caratteristiche seguenti di oggetti in esecuzione all&quot;interno di progettazione:: tutti gli oggetti interessanti può essere reso persistente in un formato dal caricatore della finestra di progettazione.      -Tutti gli oggetti generano notifiche di modifica delle proprietà quando viene modificata una proprietà.      - <xref:System.ComponentModel.Design.IDesignerHost>fornisce il concetto di transazioni, che può essere utilizzato per creare un&quot;operazione di annullamento che si estende su più azioni minori.</xref:System.ComponentModel.Design.IDesignerHost>       Con queste funzionalità, UndoEngine può creare qualsiasi unità di annullamento che deve automaticamente.      > [!NOTE] > Non modificare direttamente i valori delle proprietà. La classe UndoEngine richiede l&quot;utilizzo appropriato di <xref:System.ComponentModel.TypeDescriptor>per modificare i valori delle proprietà.</xref:System.ComponentModel.TypeDescriptor>       Monitoraggi UndoEngine per le notifiche di modifica creare unità di annullamento e le unità stesse è costituito da stati oggetto serializzato. Nella tabella seguente vengono mostrati i servizi che devono essere disponibili quando viene creato UndoEngine.      | Servizio | Descrizione |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>| Salva i valori di proprietà e oggetti per un componente prima e dopo che viene apportata una modifica. |   | <xref:System.ComponentModel.Design.IComponentChangeService>| Notifica al motore di annullamento delle modifiche apportate ai componenti. |   | <xref:System.ComponentModel.Design.IDesignerHost>| Utilizzato per tenere traccia delle transazioni. |      > [!NOTE] > Perché la classe UndoEngine richiede <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>e <xref:System.ComponentModel.Design.IComponentChangeService>, è disponibile solo in fase di progettazione.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> </xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>       Il motore di annullamento tiene traccia delle transazioni e crea una sola unità di annullamento che include una transazione. Di conseguenza, il motore di annullamento controlla la durata di un&quot;azione. Inoltre, poiché le transazioni possono essere denominate, azioni non annullabili ereditano i relativi nomi dalla transazione corrente. Se è disponibile alcuna transazione e viene segnalata una modifica, il motore di annullamento crea un nome di annullamento in base al tipo di modifica (ad esempio, &quot;Modifica proprietà &quot;Text&quot;&quot;)."
  syntax:
    content: 'public abstract class UndoEngine : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> classe."
  remarks: "Il <xref:System.ComponentModel.Design.UndoEngine>richiede vari servizi dal `provider` parametro utile.</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected UndoEngine (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Provider di servizi padre."
  overload: System.ComponentModel.Design.UndoEngine.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile trovare un servizio obbligatorio. Vedere <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> per i servizi richiesti. Se è stato rimosso il servizio, assicurarsi di fornire una sostituzione."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "Da aggiungere."
  overload: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  id: CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Crea un nuovo <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>"
  remarks: "L&quot;implementazione predefinita del metodo CreateUndoUnit restituisce semplicemente un nuovo <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>       Per impostazione predefinita, <xref:System.ComponentModel.Design.UndoEngine>non esegue alcuna operazione con il `primary` parametro, ma alcune implementazioni di annullamento, ad esempio quelle che includono il componente COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` modello di progettazione, potrebbe essere necessario identificare la differenza tra un&quot;unità primaria e i relativi figli.</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;unità da creare."
    - id: primary
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per creare il primo di una serie di unità annidate; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per creare unità annidate successive."
    return:
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "Un nuovo <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>con un nome specificato.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>"
  overload: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "Da aggiungere."
  overload: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Abilita o disabilita il <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> è abilitato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.UndoEngine.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  id: GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ottiene il servizio richiesto."
  syntax:
    content: protected object GetRequiredService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da recuperare."
    return:
      type: System.Object
      description: "Il servizio richiesto, se trovato."
  overload: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>serviceType</code>è obbligatorio ma non è stato trovato. Se è stato rimosso il servizio, assicurarsi di fornire una sostituzione."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ottiene il servizio richiesto."
  syntax:
    content: protected object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da recuperare."
    return:
      type: System.Object
      description: "Il servizio richiesto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il servizio richiesto non viene trovato."
  overload: System.ComponentModel.Design.UndoEngine.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  id: OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Genera il <xref href=&quot;System.ComponentModel.Design.UndoEngine.Undoing&quot;> </xref> evento."
  syntax:
    content: protected virtual void OnUndoing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndoing*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  id: OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Genera il <xref href=&quot;System.ComponentModel.Design.UndoEngine.Undone&quot;> </xref> evento."
  syntax:
    content: protected virtual void OnUndone (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  id: Undoing
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Si verifica immediatamente prima di eseguita un&quot;operazione di annullamento."
  syntax:
    content: public event EventHandler Undoing;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  id: UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Indica se un&quot;operazione di annullamento è in corso."
  syntax:
    content: public bool UndoInProgress { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un&quot;operazione di annullamento è in corso. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undone
  id: Undone
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Si verifica immediatamente dopo un&quot;operazione di annullamento."
  remarks: "L&quot;evento annullata viene sempre generato, anche se viene generata un&quot;eccezione."
  syntax:
    content: public event EventHandler Undone;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.UndoUnit
  parent: System.ComponentModel.Design
  isExternal: false
  name: UndoEngine+UndoUnit
  nameWithType: UndoEngine+UndoUnit
  fullName: System.ComponentModel.Design.UndoEngine+UndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
- uid: System.ComponentModel.Design.UndoEngine.Undone
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
- uid: System.ComponentModel.Design.UndoEngine.#ctor*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine
  nameWithType: UndoEngine.UndoEngine
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit
  nameWithType: UndoEngine.AddUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit
  nameWithType: UndoEngine.CreateUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit
  nameWithType: UndoEngine.DiscardUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.Dispose*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose
  nameWithType: UndoEngine.Dispose
- uid: System.ComponentModel.Design.UndoEngine.Enabled*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService
  nameWithType: UndoEngine.GetRequiredService
- uid: System.ComponentModel.Design.UndoEngine.GetService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService
  nameWithType: UndoEngine.GetService
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing
  nameWithType: UndoEngine.OnUndoing
- uid: System.ComponentModel.Design.UndoEngine.OnUndone*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone
  nameWithType: UndoEngine.OnUndone
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
