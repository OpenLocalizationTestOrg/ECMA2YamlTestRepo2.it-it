### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.UseKey
  id: UseKey
  children:
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  - System.IdentityModel.Protocols.WSTrust.UseKey.Token
  langs:
  - csharp
  name: UseKey
  nameWithType: UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey
  type: Class
  summary: "Rappresenta il contenuto dell&quot;elemento WST: usekey."
  remarks: "Questo elemento facoltativo consente al client richiedere il provider di identità per emettere un token contenente la chiave pubblica che viene specificata sotto l&quot;elemento WST: usekey. Tuttavia, il client deve dimostrare di essere proprietario della chiave. In un messaggio SOAP basati su WS-Security, il client può aggiungere il certificato come un token di verifica dell&quot;autenticità all&quot;intestazione di sicurezza per dimostrare il possesso della chiave.       Per ulteriori informazioni sull&quot;elemento rappresentato da questa classe, vedere la versione della specifica WS-Trust applicabile allo scenario."
  syntax:
    content: public class UseKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey()
  nameWithType: UseKey.UseKey()
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> classe."
  remarks: "Il costruttore per l&quot;estensibilità."
  syntax:
    content: public UseKey ();
    parameters: []
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityKeyIdentifier)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> classe utilizzando l&quot;identificatore di chiave di sicurezza specificato."
  remarks: "Utilizzare questo costruttore se il richiedente sia in grado di convertire il token in un identificatore di chiave di sicurezza o se il token è già un identificatore di chiave di sicurezza.       Il <xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A>è impostata su `null` nel nuovo <xref:System.IdentityModel.Protocols.WSTrust.UseKey>istanza.</xref:System.IdentityModel.Protocols.WSTrust.UseKey> </xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A>"
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski);
    parameters:
    - id: ski
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta la chiave esistente da utilizzare."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityToken)
  nameWithType: UseKey.UseKey(SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> classe utilizzando il token di sicurezza specificato."
  remarks: "Il <xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A>è impostata su `null` nel nuovo <xref:System.IdentityModel.Protocols.WSTrust.UseKey>istanza.</xref:System.IdentityModel.Protocols.WSTrust.UseKey> </xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A>"
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta la chiave esistente da utilizzare."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityKeyIdentifier,SecurityToken)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> classe utilizzando l&quot;identificatore di chiave di sicurezza specificato e un token di sicurezza."
  remarks: "Utilizzare questo costruttore per passare informazioni al servizio token di sicurezza (STS) dal serializzatore."
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: ski
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta la chiave esistente da utilizzare."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta la chiave esistente da utilizzare."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Ottiene l&quot;identificatore di chiave di sicurezza"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave di sicurezza."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  id: Token
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: Token
  nameWithType: UseKey.Token
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Ottiene il token di sicurezza se il serializzatore non è possibile convertire l&quot;identificatore di chiave di sicurezza."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken Token { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta il token."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey()
  nameWithType: UseKey.UseKey()
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey()
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityKeyIdentifier)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityToken)
  nameWithType: UseKey.UseKey(SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityKeyIdentifier,SecurityToken)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: Token
  nameWithType: UseKey.Token
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.Token
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey
  nameWithType: UseKey.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: Token
  nameWithType: UseKey.Token
