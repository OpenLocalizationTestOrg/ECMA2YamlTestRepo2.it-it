### YamlMime:ManagedReference
items:
- uid: System.Web.HttpContext
  id: HttpContext
  children:
  - System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  - System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  - System.Web.HttpContext.AddError(System.Exception)
  - System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  - System.Web.HttpContext.AllErrors
  - System.Web.HttpContext.AllowAsyncDuringSyncStages
  - System.Web.HttpContext.Application
  - System.Web.HttpContext.ApplicationInstance
  - System.Web.HttpContext.AsyncPreloadMode
  - System.Web.HttpContext.Cache
  - System.Web.HttpContext.ClearError
  - System.Web.HttpContext.Current
  - System.Web.HttpContext.CurrentHandler
  - System.Web.HttpContext.CurrentNotification
  - System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  - System.Web.HttpContext.Error
  - System.Web.HttpContext.GetAppConfig(System.String)
  - System.Web.HttpContext.GetConfig(System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetSection(System.String)
  - System.Web.HttpContext.Handler
  - System.Web.HttpContext.IsCustomErrorEnabled
  - System.Web.HttpContext.IsDebuggingEnabled
  - System.Web.HttpContext.IsPostNotification
  - System.Web.HttpContext.IsWebSocketRequest
  - System.Web.HttpContext.IsWebSocketRequestUpgrading
  - System.Web.HttpContext.Items
  - System.Web.HttpContext.PageInstrumentation
  - System.Web.HttpContext.PreviousHandler
  - System.Web.HttpContext.Profile
  - System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  - System.Web.HttpContext.Request
  - System.Web.HttpContext.Response
  - System.Web.HttpContext.RewritePath(System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  - System.Web.HttpContext.Server
  - System.Web.HttpContext.Session
  - System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  - System.Web.HttpContext.SkipAuthorization
  - System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  - System.Web.HttpContext.ThreadAbortOnTimeout
  - System.Web.HttpContext.Timestamp
  - System.Web.HttpContext.Trace
  - System.Web.HttpContext.User
  - System.Web.HttpContext.WebSocketNegotiatedProtocol
  - System.Web.HttpContext.WebSocketRequestedProtocols
  langs:
  - csharp
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
  type: Class
  summary: "Incapsula tutte le informazioni specifiche di HTTP su una singola richiesta HTTP."
  remarks: "Le classi che ereditano la <xref:System.Web.IHttpModule>e <xref:System.Web.IHttpHandler>un riferimento a un oggetto HttpContext sono disponibili interfacce per la richiesta HTTP corrente.</xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> L&quot;oggetto fornisce accesso alle proprietà intrinseche <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, e <xref:System.Web.HttpContext.Server%2A>proprietà per la richiesta.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).  \n  \n The following example demonstrates how to access and display properties of the HttpContext object. The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.  \n  \n [!code-vb[System.Web.HttpContext#1](~/add/codesnippet/visualbasic/t-system.web.httpcontext_1.aspx)]\n [!code-cs[System.Web.HttpContext#1](~/add/codesnippet/csharp/t-system.web.httpcontext_1.aspx)]"
  syntax:
    content: 'public sealed class HttpContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  id: '#ctor(System.Web.HttpWorkerRequest)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe che utilizza l&quot;oggetto di richiesta di lavoro specificato."
  syntax:
    content: public HttpContext (System.Web.HttpWorkerRequest wr);
    parameters:
    - id: wr
      type: System.Web.HttpWorkerRequest
      description: "Il <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> oggetto per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  id: '#ctor(System.Web.HttpRequest,System.Web.HttpResponse)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe utilizzando gli oggetti di richiesta e risposta specificati."
  syntax:
    content: public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "Il <xref href=&quot;System.Web.HttpRequest&quot;> </xref> oggetto per la richiesta HTTP corrente."
    - id: response
      type: System.Web.HttpResponse
      description: "Il <xref href=&quot;System.Web.HttpResponse&quot;> </xref> oggetto per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Accetta un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richieste tramite la funzione utente specificata."
  remarks: "Chiamare questo metodo è equivalente alla chiamata di <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>overload del metodo e passando `null` per il `options` parametro.</xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>"
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "La funzione di utente."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La richiesta non è un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richiesta."
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Accetta un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richieste tramite l&quot;oggetto di funzione e le opzioni utente specificato."
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "La funzione di utente."
    - id: options
      type: System.Web.WebSockets.AspNetWebSocketOptions
      description: "L&quot;oggetto di opzioni."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La richiesta non è un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richiesta."
  platform:
  - net462
- uid: System.Web.HttpContext.AddError(System.Exception)
  id: AddError(System.Exception)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un&quot;eccezione alla raccolta di eccezioni per la richiesta HTTP corrente."
  syntax:
    content: public void AddError (Exception errorInfo);
    parameters:
    - id: errorInfo
      type: System.Exception
      description: "Il <xref:System.Exception>da aggiungere alla raccolta di eccezioni.</xref:System.Exception>"
  overload: System.Web.HttpContext.AddError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  id: AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Genera un evento virtuale che si verifica quando la parte HTTP della richiesta sta terminando."
  remarks: "Questo evento si verifica prima di <xref:System.Web.WebSockets.AspNetWebSocket>connessione inizia.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public System.Web.ISubscriptionToken AddOnRequestCompleted (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "L&quot;oggetto di contesto HTTP."
    return:
      type: System.Web.ISubscriptionToken
      description: "Token della sottoscrizione."
  overload: System.Web.HttpContext.AddOnRequestCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>callback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AllErrors
  id: AllErrors
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene una matrice degli errori accumulati durante l&quot;elaborazione di una richiesta HTTP."
  syntax:
    content: public Exception[] AllErrors { get; }
    return:
      type: System.Exception[]
      description: "Matrice di <xref:System.Exception>oggetti per la richiesta HTTP corrente.</xref:System.Exception>"
  overload: System.Web.HttpContext.AllErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  id: AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che indica se le operazioni asincrone sono consentite durante parti ASP.NET dell&quot;elaborazione della richiesta quando non sono previste."
  remarks: "Se questo flag non è impostato su `true`, ASP.NET genera un&quot;eccezione quando viene rilevato l&quot;applicazione impropriamente le API asincrone. Ciò può verificarsi se si tenta di chiamare un metodo asincrono durante una parte della richiesta di pipeline di elaborazione in cui le operazioni asincrone non sono previsti o se è ancora in attesa di lavoro asincrono quando un modulo asincrono o un gestore segnala il completamento. Questo comportamento è considerato come una rete di protezione consentono di sapere in anticipo se si scrive codice asincrono che non si adatta schemi previsti e può avere effetti collaterali negativi."
  syntax:
    content: public bool AllowAsyncDuringSyncStages { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se ASP.NET genera un&quot;eccezione quando l&quot;API asincrona viene usata in un momento quando non è prevista; in caso contrario, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Application
  id: Application
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> oggetto per la richiesta HTTP corrente."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "Il <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> per la richiesta HTTP corrente.       Per ottenere il <xref href=&quot;System.Web.HttpApplication&quot;> </xref> dell&quot;oggetto per la richiesta HTTP corrente, utilizzare <xref:System.Web.HttpContext.ApplicationInstance*>.</xref:System.Web.HttpContext.ApplicationInstance*> (ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> anziché <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> come nome di proprietà per fare riferimento all&quot;oggetto corrente <xref href=&quot;System.Web.HttpApplication&quot;> </xref> istanza per evitare confusione tra ASP.NET e ASP classico. In ASP classico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> fa riferimento al dizionario di stato globale dell&quot;applicazione.)"
  overload: System.Web.HttpContext.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ApplicationInstance
  id: ApplicationInstance
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il <xref href=&quot;System.Web.HttpApplication&quot;> </xref> oggetto per la richiesta HTTP corrente."
  syntax:
    content: public System.Web.HttpApplication ApplicationInstance { get; set; }
    return:
      type: System.Web.HttpApplication
      description: "Il <xref href=&quot;System.Web.HttpApplication&quot;> </xref> per la richiesta HTTP corrente.       ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> anziché <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> come nome di proprietà per fare riferimento all&quot;oggetto corrente <xref href=&quot;System.Web.HttpApplication&quot;> </xref> istanza per evitare confusione tra ASP.NET e ASP classico. In ASP classico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> fa riferimento al dizionario di stato globale dell&quot;applicazione."
  overload: System.Web.HttpContext.ApplicationInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;applicazione Web è in esecuzione in IIS 7.0 in modalità integrata, e si è verificato un tentativo di modificare il valore della proprietà da un valore non null in <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un oggetto che contiene i flag relativi alla modalità di precaricamento asincrona."
  remarks: "La prima volta che si accede a questa proprietà, da cui viene caricato l&quot;oggetto che contiene i flag per la modalità di precaricamento asincrona di <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>impostazione nel file di configurazione.</xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>       Anche se questa proprietà può essere impostata a livello di codice, la modifica del valore della proprietà ha effetto solo se la proprietà viene impostata prima di `ExecuteRequestHandler` passaggio nella pipeline delle richieste ASP.NET."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "Oggetto che contiene i flag relativi alla modalità di precaricamento asincrona."
  overload: System.Web.HttpContext.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Cache
  id: Cache
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> oggetto per il dominio applicazione corrente."
  remarks: "Un&quot;istanza di è presente la <xref:System.Web.Caching.Cache>classe per il dominio applicazione.</xref:System.Web.Caching.Cache> Di conseguenza, il <xref:System.Web.Caching.Cache>è l&quot;oggetto restituito dalla proprietà della Cache di <xref:System.Web.Caching.Cache>oggetto per tutte le richieste nel dominio dell&quot;applicazione.</xref:System.Web.Caching.Cache> </xref:System.Web.Caching.Cache>"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "Il <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> per il dominio applicazione corrente."
  overload: System.Web.HttpContext.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ClearError
  id: ClearError
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cancella tutti gli errori per la richiesta HTTP corrente."
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpContext.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Current
  id: Current
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto per la richiesta HTTP corrente."
  remarks: "Questa proprietà è una proprietà statica della <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext> Gli archivi delle proprietà di <xref:System.Web.HttpContext>istanza che si applica alla richiesta corrente.</xref:System.Web.HttpContext> Le proprietà di questa istanza sono le proprietà statiche della <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext>       È inoltre possibile utilizzare il <xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>proprietà a cui accedere il <xref:System.Web.HttpContext>oggetto per la richiesta HTTP corrente.</xref:System.Web.HttpContext> </xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the Current property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.  \n  \n```c#  \nprotected void Page_Load(object sender, EventArgs e)  \n{  \n    HttpContext context = HttpContext.Current;  \n    Response.Write(\"<p>HttpContext.Current Example:</p>\");  \n  \n    // Add three custom exceptions.  \n    context.AddError(new Exception(\"New Exception #1\"));  \n    context.AddError(new Exception(\"New Exception #2\"));  \n    context.AddError(new Exception(\"New Exception #3\"));  \n  \n    // Capture all the new Exceptions in an array.  \n    Exception[] errs = context.AllErrors;  \n  \n    foreach (Exception ex in errs)  \n    {  \n        Response.Write(\"<p>\" + Server.HtmlEncode(ex.ToString()) + \"</p>\");  \n    }  \n  \n    // Clear the exceptions so ASP.NET won't handle them.  \n    context.ClearError();  \n}  \n```  \n  \n```vb  \nProtected Sub Page_Load(sender As Object, e As EventArgs)  \nDim context As HttpContext = HttpContext.Current  \nResponse.Write(\"<p>HttpContext.Current Example:</p>\")  \n  \n' Add three custom exceptions.  \ncontext.AddError(New Exception(\"New Exception #1\"))  \ncontext.AddError(New Exception(\"New Exception #2\"))  \ncontext.AddError(New Exception(\"New Exception #3\"))  \n  \n' Capture all the new Exceptions in an array.  \nDim errs As Exception() = context.AllErrors  \n  \nFor Each ex As Exception In errs  \nResponse.Write(\"<p>\" & Server.HtmlEncode(ex.ToString()) & \"</p>\")  \nNext  \n  \n' Clear the exceptions so ASP.NET won't handle them.  \ncontext.ClearError()  \nEnd Sub  \n  \n```"
  syntax:
    content: public static System.Web.HttpContext Current { get; set; }
    return:
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> istanza per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentHandler
  id: CurrentHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> oggetto che rappresenta il gestore attualmente in esecuzione."
  remarks: "Il gestore attualmente in esecuzione a cui fa riferimento la proprietà CurrentHandler potrebbe essere diverso dal gestore a cui fa riferimento il <xref:System.Web.HttpContext.Handler%2A>proprietà.</xref:System.Web.HttpContext.Handler%2A> Ciò può verificarsi quando un altro gestore è stato richiesto tramite il <xref:System.Web.HttpServerUtility.Execute%2A>metodo o <xref:System.Web.HttpServerUtility.Transfer%2A>metodo.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Al termine dell&quot;elaborazione il gestore attualmente in esecuzione, viene ripristinato il gestore determinato in precedenza."
  syntax:
    content: public System.Web.IHttpHandler CurrentHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Un <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> che rappresenta il gestore attualmente in esecuzione."
  overload: System.Web.HttpContext.CurrentHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentNotification
  id: CurrentNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valore che indica l&quot;attuale <xref href=&quot;System.Web.HttpApplication&quot;> </xref> evento che sta elaborando."
  remarks: "La proprietà CurrentNotification richiede la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework versione 3.0. Quando è disponibile, la proprietà restituisce un <xref:System.Web.RequestNotification>valore.</xref:System.Web.RequestNotification> Il valore della proprietà CurrentNotification indica quale evento nel <xref:System.Web.HttpApplication>istanza sta elaborando la richiesta.</xref:System.Web.HttpApplication>       La proprietà CurrentNotification non deve essere impostata. Al contrario, l&quot;impostazione è [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] durante l&quot;elaborazione della richiesta nella pipeline ASP.NET. L&quot;impostazione della proprietà CurrentNotification comporterà un errore di compilazione.       CurrentNotification è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CurrentNotification property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed. In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the CurrentNotification property determines what code is invoked for each event being handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_0_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_0_1.vb)]"
  syntax:
    content: public System.Web.RequestNotification CurrentNotification { get; }
    return:
      type: System.Web.RequestNotification
      description: "Uno del <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valori."
  overload: System.Web.HttpContext.CurrentNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "L&quot;operazione richiede la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework versione 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  id: DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Consente a un oggetto <xref:System.IDisposable.Dispose*>metodo da chiamare quando il <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> parte della richiesta di connessione è stata completata.</xref:System.IDisposable.Dispose*>"
  remarks: "Il <xref:System.IDisposable.Dispose%2A>dell&quot;oggetto di destinazione viene chiamato dopo entrambi la parte HTTP della richiesta e <xref:System.Web.WebSockets.AspNetWebSocket>connessione è stata interrotta.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.IDisposable.Dispose%2A> Il <xref:System.Web.HttpContext>oggetto non è disponibile per l&quot;ispezione.</xref:System.Web.HttpContext>"
  syntax:
    content: public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);
    parameters:
    - id: target
      type: System.IDisposable
      description: "L&quot;oggetto il cui <xref:System.IDisposable.Dispose*>metodo deve essere chiamato quando il <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> parte della richiesta di connessione è stata completata.</xref:System.IDisposable.Dispose*>"
    return:
      type: System.Web.ISubscriptionToken
      description: "Token della sottoscrizione."
  overload: System.Web.HttpContext.DisposeOnPipelineCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Error
  id: Error
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il primo errore (se presente) accumulato HTTP durante l&quot;elaborazione della richiesta."
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: "Il primo <xref:System.Exception>per corrente HTTP richiesta/risposta elaborazione; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non sono stati accumulati errori durante l&quot;elaborazione della richiesta HTTP.</xref:System.Exception> Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  id: GetAppConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce le informazioni di configurazione per l&quot;applicazione corrente."
  remarks: "Il metodo GetAppConfig è stato deprecato. Utilizzare il <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>metodo la <xref:System.Web.Configuration.WebConfigurationManager>classe per ottenere informazioni di configurazione per l&quot;applicazione corrente.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>"
  syntax:
    content: public static object GetAppConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il tag di configurazione dell&quot;applicazione per cui vengono richieste informazioni."
    return:
      type: System.Object
      description: "Oggetto che contiene le informazioni di configurazione. (Cast la sezione di configurazione restituita al tipo di configurazione appropriato prima dell&quot;uso)."
  overload: System.Web.HttpContext.GetAppConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetConfig(System.String)
  id: GetConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce le informazioni di configurazione per la richiesta HTTP corrente."
  remarks: "Il metodo GetConfig è stato deprecato. Utilizzare il <xref:System.Web.HttpContext.GetSection%2A>metodo per ottenere informazioni di configurazione per la richiesta HTTP corrente.</xref:System.Web.HttpContext.GetSection%2A>"
  syntax:
    content: public object GetConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il tag di configurazione per il quale vengono richieste informazioni."
    return:
      type: System.Object
      description: "Specificato <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la sezione non esiste, o un oggetto interno se la sezione non è accessibile in fase di esecuzione. (Esegue il cast dell&quot;oggetto restituito al tipo di configurazione appropriato prima dell&quot;uso)."
  overload: System.Web.HttpContext.GetConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  id: GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un oggetto risorsa a livello di applicazione basato sulle <> </> *> e <> </> *> proprietà."
  remarks: "Il metodo GetGlobalResourceObject restituisce una risorsa globale utilizzando le impostazioni cultura specificati nel <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>proprietà.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>      > [!NOTE] > La modifica in alcuni ambienti, ad esempio [!INCLUDE[vwprvw](~/add/includes/vwprvw-md.md)], l&quot;editor potrebbe generare in fase di progettazione <xref:System.Resources.MissingManifestResourceException>eccezione se si utilizza un punto (.) nel nome della chiave di risorsa globale.</xref:System.Resources.MissingManifestResourceException> Tuttavia, questa operazione non influenza la possibilità di modificare o salvare il file, ed è possibile ignorare l&quot;errore."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey);
    parameters:
    - id: classKey
      type: System.String
      description: "Stringa che rappresenta il <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>proprietà dell&quot;oggetto risorsa richiesto.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Stringa che rappresenta il <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>proprietà dell&quot;oggetto risorsa richiesto.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta l&quot;oggetto risorsa a livello di applicazione richiesto; in caso contrario, null se non viene trovato un oggetto risorsa o se viene trovato un oggetto risorsa ma non presenta la proprietà richiesta.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object with the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un oggetto risorsa a livello di applicazione basato sulle <> </> *> e <> </> *>, proprietà e scegliere il <xref:System.Globalization.CultureInfo>oggetto.</xref:System.Globalization.CultureInfo>"
  remarks: "Il <xref:System.Globalization.CultureInfo>oggetto rappresenta le impostazioni cultura per cui è stata localizzata la risorsa.</xref:System.Globalization.CultureInfo> Se la risorsa non viene localizzata con queste impostazioni cultura, la ricerca verrà completato un processo di fallback per individuare una risorsa appropriata. Per ulteriori informazioni, vedere [package e distribuzione delle risorse](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > In alcuni ambienti di modifica, ad esempio Visual Web Developer, l&quot;editor potrebbe generare in fase di progettazione <xref:System.Resources.MissingManifestResourceException>eccezione se si utilizza un punto (.) nel nome della chiave di risorsa globale.</xref:System.Resources.MissingManifestResourceException> Tuttavia, questa operazione non influenza la possibilità di modificare o salvare il file, ed è possibile ignorare l&quot;errore."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: classKey
      type: System.String
      description: "Stringa che rappresenta il <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>proprietà dell&quot;oggetto risorsa richiesto.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Stringa che rappresenta un <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>proprietà dell&quot;oggetto risorsa richiesto.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Stringa che rappresenta il <xref:System.Globalization.CultureInfo>oggetto della risorsa richiesta.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta l&quot;oggetto risorsa a livello di applicazione richiesta, che è localizzato in base alle impostazioni cultura specificate; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non viene trovato un oggetto risorsa o se viene individuato alcun oggetto risorsa ma non dispone della proprietà richiesta.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object for which the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  id: GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un oggetto risorsa a livello di pagina basato sulle <> </> *> e <> </> *> proprietà."
  remarks: "Il metodo GetLocalResourceObject restituisce una risorsa locale utilizzando le impostazioni cultura specificati nel <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>proprietà.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>"
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>proprietà per l&quot;oggetto risorsa locale.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Stringa che rappresenta una <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>proprietà dell&quot;oggetto risorsa richiesto</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta l&quot;oggetto risorsa a livello di pagina richiesta; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se un oggetto risorsa corrispondente non viene trovato ma non un <code> resourceKey </code> parametro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Non è stato trovato un oggetto risorsa per l&quot;oggetto specificato <code> virtualPath </code> parametro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Specificato <code> virtualPath </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La classe di risorse per la pagina non trovata."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un oggetto risorsa a livello di pagina basato sulle <> </> *> e <> </> *>, proprietà e scegliere il <xref:System.Globalization.CultureInfo>oggetto.</xref:System.Globalization.CultureInfo>"
  remarks: "Se la risorsa non viene localizzata con queste impostazioni cultura, la ricerca verrà completato un processo di fallback per individuare una risorsa appropriata. Per ulteriori informazioni, vedere [package e distribuzione delle risorse](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>proprietà per l&quot;oggetto risorsa locale.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Stringa che rappresenta un <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>proprietà dell&quot;oggetto risorsa richiesto.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Stringa che rappresenta il <xref:System.Globalization.CultureInfo>oggetto dell&quot;oggetto risorsa richiesto.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Un <xref:System.Object>che rappresenta l&quot;oggetto risorsa locale richiesto, localizzato per le impostazioni cultura specificate; in caso contrario <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se un oggetto risorsa corrispondente non viene trovato ma non un <code> resourceKey </code> parametro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Non è stato trovato un oggetto risorsa per l&quot;oggetto specificato <code> virtualPath </code> parametro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Specificato <code> virtualPath </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La classe di risorse per la pagina non trovata."
  platform:
  - net462
- uid: System.Web.HttpContext.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene una sezione di configurazione specificato per la configurazione predefinita dell&quot;applicazione corrente."
  syntax:
    content: public object GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "Il percorso della sezione di configurazione (in formato XPath) e il nome di elemento di configurazione."
    return:
      type: System.Object
      description: "Specificato <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la sezione non esiste, o un oggetto interno se la sezione non è accessibile in fase di esecuzione."
  overload: System.Web.HttpContext.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Handler
  id: Handler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> oggetto responsabile dell&quot;elaborazione della richiesta HTTP."
  remarks: "Proprietà del gestore contiene un riferimento al gestore che elabora la richiesta HTTP. Il gestore può essere specificato tramite l&quot;elemento oppure utilizzando un gestore personalizzato definito nel codice utente. Per ulteriori informazioni sui gestori eventi, vedere [gestori HTTP e moduli HTTP Overview](~/add/includes/ajax-current-ext-md.md).       Il riferimento alla proprietà del gestore rimarranno invariati anche dopo la pagina corrente è stata modificata da un metodo sul lato server, ad esempio il <xref:System.Web.HttpServerUtility.Execute%2A>metodo o <xref:System.Web.HttpServerUtility.Transfer%2A>metodo.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A>"
  syntax:
    content: public System.Web.IHttpHandler Handler { get; set; }
    return:
      type: System.Web.IHttpHandler
      description: "Un <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> responsabile per l&quot;elaborazione della richiesta HTTP."
  overload: System.Web.HttpContext.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  id: IsCustomErrorEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se gli errori personalizzati sono abilitati per la richiesta HTTP corrente."
  syntax:
    content: public bool IsCustomErrorEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli errori personalizzati sono attivati. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsCustomErrorEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la richiesta HTTP corrente è in modalità di debug."
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la richiesta è in modalità di debug; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsPostNotification
  id: IsPostNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore corrente dell&quot;elaborazione punto ASP.NET pipeline subito dopo un <xref href=&quot;System.Web.HttpApplication&quot;> </xref> evento ha terminato l&quot;elaborazione."
  remarks: "La proprietà IsPostNotification è supportata solo con la modalità integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework 3.0. Quando è disponibile, la proprietà restituisce un valore booleano che indica se un evento di <xref:System.Web.HttpApplication>oggetto ha terminato l&quot;elaborazione.</xref:System.Web.HttpApplication>       La proprietà IsPostNotification non deve essere impostata. Al contrario, viene fornito da [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] al runtime di ASP.NET per ogni notifica. L&quot;impostazione della proprietà IsPostNotification comporterà un errore di compilazione.       Negli scenari in cui più eventi dell&quot; <xref:System.Web.HttpApplication>oggetto vengono gestiti da un gestore eventi, è possibile utilizzare la proprietà IsPostNotification in combinazione con l&quot; <xref:System.Web.RequestNotification>enumerazione per determinare con precisione in cui il ciclo di vita dell&quot;applicazione corrente richiesta valido.</xref:System.Web.RequestNotification> </xref:System.Web.HttpApplication>       IsPostNotification è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the IsPostNotification property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers. The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the IsPostNotification property is used to determine what code is invoked after a specific event is handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_2_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_2_1.vb)]"
  syntax:
    content: public bool IsPostNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli errori personalizzati sono attivati. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsPostNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "L&quot;operazione richiede la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la richiesta è un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richiesta."
  remarks: "Questo metodo restituisce `true` se la richiesta contiene iniziale <xref:System.Web.WebSockets.AspNetWebSocket>handshake e `WebSocket` dei moduli di IIS è attivo.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la richiesta è un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richiesta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  id: IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la connessione è l&quot;aggiornamento da una connessione HTTP a un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> connessione."
  syntax:
    content: public bool IsWebSocketRequestUpgrading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione è l&quot;aggiornamento. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Items
  id: Items
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene una raccolta chiave/valore che può essere utilizzata per organizzare e condividere dati tra un <xref href=&quot;System.Web.IHttpModule&quot;> </xref> interfaccia e un <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfaccia durante una richiesta HTTP."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>chiave/valore insieme che fornisce l&quot;accesso a un singolo valore nella raccolta da una chiave specificata.</xref:System.Collections.IDictionary>"
  overload: System.Web.HttpContext.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PageInstrumentation
  id: PageInstrumentation
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un riferimento all&quot;istanza del servizio di strumentazione pagina per questa richiesta."
  syntax:
    content: public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }
    return:
      type: System.Web.Instrumentation.PageInstrumentationService
      description: "L&quot;istanza del servizio di strumentazione pagina per questa richiesta."
  overload: System.Web.HttpContext.PageInstrumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PreviousHandler
  id: PreviousHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> oggetto relativo al gestore padre."
  remarks: "La proprietà PreviousHandler corrisponde all&quot;ultimo gestore precedente è stata eseguita la richiesta corrente."
  syntax:
    content: public System.Web.IHttpHandler PreviousHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Un <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> istanza, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è stato trovato alcun gestore precedente."
  overload: System.Web.HttpContext.PreviousHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Profile
  id: Profile
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> oggetto per il profilo utente corrente."
  remarks: "Una proprietà del profilo viene utilizzata per l&quot;archiviazione permanente dei dati strutturati tramite un&quot;API indipendente dai tipi. Quando si accede a una proprietà del profilo, ma è presente alcun valore, viene restituita un&quot;istanza vuota; `null` non viene restituito."
  syntax:
    content: public System.Web.Profile.ProfileBase Profile { get; }
    return:
      type: System.Web.Profile.ProfileBase
      description: "Oggetto <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> se il file di configurazione dell&quot;applicazione contiene una definizione per le proprietà del profilo; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Profile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  id: RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Consente di specificare un gestore per la richiesta."
  remarks: "Se si imposta `handler` a `null`, il gestore predefinito viene utilizzato per elaborare la richiesta. È possibile impostare `handler` su un gestore asincrono o a un gestore sincrono. Il gestore deve implementare il <xref:System.Web.IHttpHandler>interfaccia.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public void RemapHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Oggetto che deve elaborare la richiesta."
  overload: System.Web.HttpContext.RemapHandler*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato chiamato il metodo RemapHandler dopo il <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> evento si è verificato."
  platform:
  - net462
- uid: System.Web.HttpContext.Request
  id: Request
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.HttpRequest&quot;> </xref> oggetto per la richiesta HTTP corrente."
  remarks: "La proprietà richiesta fornisce l&quot;accesso programmatico alle proprietà e metodi della <xref:System.Web.HttpRequest>classe.</xref:System.Web.HttpRequest> Poiché le pagine ASP.NET contengono un riferimento predefinito per il <xref:System.Web>dello spazio dei nomi (che contiene la <xref:System.Web.HttpContext>classe), è possibile fare riferimento ai membri di <xref:System.Web.HttpRequest>in una pagina aspx senza utilizzare il riferimento completo della classe <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpRequest> </xref:System.Web.HttpContext> </xref:System.Web> Ad esempio, è possibile utilizzare `Request.Browser` per ottenere le funzionalità del browser del client. Tuttavia, se si desidera utilizzare i membri di <xref:System.Web.HttpRequest>da un modulo di code-behind ASP.NET, è necessario includere un riferimento al <xref:System.Web>spazio dei nomi in cui il modulo e un riferimento completo sia il contesto di richiesta/risposta attualmente attivo e la classe in <xref:System.Web>che si desidera utilizzare.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpRequest> In una pagina code-behind, ad esempio, è necessario specificare il nome completo `HttpContext.Current.Request.Browser`.      > [!NOTE] > ASP.NET genera un&quot;eccezione se si tenta di utilizzare questa proprietà quando il <xref:System.Web.HttpRequest>oggetto non è disponibile.</xref:System.Web.HttpRequest> Ad esempio, questo sarà true nel metodo Application_Start del file Global. asax, o in un metodo che viene chiamato dal metodo Application_Start. In quel momento alcuna richiesta HTTP non è stato ancora creato."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "Il <xref href=&quot;System.Web.HttpRequest&quot;> </xref> per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;applicazione Web è in esecuzione in IIS 7 in modalità integrata."
  platform:
  - net462
- uid: System.Web.HttpContext.Response
  id: Response
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.HttpResponse&quot;> </xref> oggetto per la risposta HTTP corrente."
  remarks: "La proprietà Response fornisce l&quot;accesso programmatico alle proprietà e metodi della <xref:System.Web.HttpResponse>classe.</xref:System.Web.HttpResponse> Poiché le pagine ASP.NET contengono un riferimento predefinito per il <xref:System.Web>dello spazio dei nomi (che contiene la <xref:System.Web.HttpContext>classe), è possibile fare riferimento ai membri di <xref:System.Web.HttpContext>in una pagina aspx senza utilizzare il riferimento completo della classe <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Ad esempio, è possibile utilizzare `Response.Write(&quot;some output&quot;)` per scrivere l&quot;output in un flusso di output HTTP. Tuttavia, se si desidera utilizzare i membri di <xref:System.Web.HttpResponse>da un modulo di code-behind ASP.NET, è necessario includere un riferimento al <xref:System.Web>spazio dei nomi in cui il modulo e un riferimento completo per il contesto di richiesta/risposta attualmente attivo e la classe in <xref:System.Web>che si desidera utilizzare.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpResponse> In una pagina code-behind, ad esempio, è necessario specificare il nome completo `HttpContext.Current.Response.Write(&quot;some output&quot;)`."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "Il <xref href=&quot;System.Web.HttpResponse&quot;> </xref> per la risposta HTTP corrente."
  overload: System.Web.HttpContext.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;applicazione Web è in esecuzione in IIS 7 in modalità integrata."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String)
  id: RewritePath(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Riscrive l&quot;URL con il percorso specificato."
  remarks: "Il metodo RewritePath reindirizza una richiesta per una risorsa a un percorso diverso da quello indicato dall&quot;URL richiesto. Se è necessario reimpostare il percorso virtuale in modo che le richieste dal client per le risorse del server vengano risolte correttamente, utilizzare l&quot;overload del metodo che accetta il `rebaseClientPath` parametro e il parametro impostato su `false`.       La riscrittura URL è utile quando si desidera ristrutturare le pagine dell&quot;applicazione Web e si desidera assicurarsi che gli utenti che hanno salvato gli URL precedenti comunque possono usarle dopo avere spostato le pagine. La riscrittura URL consente di inoltrare in modo trasparente le richieste per la nuova posizione della pagina.       Se si desidera consentire a un sito utilizzare gli URL che sono più descrittivi e ottimizzati per i motori di ricerca, un&quot;alternativa più affidabile consiste nell&quot;utilizzare il routing di ASP.NET. Per ulteriori informazioni, vedere [Routing ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the RewritePath method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site. The first block of code is an ASP.NET Web page that is named RewritePath.aspx. It requires a query string. If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays \"Page 1\" in the browser. The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file. This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed. Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays \"Page 1\" in the browser. If a URL such as `http://localhost/WebSite1/page1` is received, an overload of RewritePath is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.  \n  \n [!code-cs[HttpContext_RewritePath#2](~/add/codesnippet/csharp/m-system.web.httpcontext_1.aspx)]\n [!code-vb[HttpContext_RewritePath#2](~/add/codesnippet/visualbasic/m-system.web.httpcontext_1.aspx)]  \n  \n [!code-vb[HttpContext_RewritePath#1](~/add/codesnippet/visualbasic/m-system.web.httpcontext_2.asax)]\n [!code-cs[HttpContext_RewritePath#1](~/add/codesnippet/csharp/m-system.web.httpcontext_2.asax)]"
  syntax:
    content: public void RewritePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso di riscrittura interno."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <code> path </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  id: RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Riscrive l&quot;URL con il percorso specificato e un valore booleano che specifica se il percorso virtuale per le risorse del server è stato modificato."
  remarks: "Viene chiamato il metodo RewritePath dal <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName>metodo con il `rebaseClientPath` parametro impostato su `true`.</xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName> Per assicurarsi che il percorso virtuale utilizzato per costruire i percorsi per le risorse non viene modificato, impostare il `rebaseClientPath` parametro `false`. Uno scenario comune in cui si potrebbe voler impostare `rebaseClientPath` a `false` è quando è necessario riscrivere l&quot;URL e si utilizzano i temi e l&quot;URL di reindirizzamento a una risorsa a cui si trova in una cartella diversa da quella della risorsa richiesta.       La riscrittura URL è utile quando si desidera ristrutturare le pagine dell&quot;applicazione Web e si desidera assicurarsi che gli utenti che hanno salvato gli URL precedenti comunque possono usarle dopo avere spostato le pagine. La riscrittura URL consente di inoltrare in modo trasparente le richieste per la nuova posizione della pagina.       Se si desidera consentire a un sito utilizzare gli URL che sono più descrittivi e ottimizzati per i motori di ricerca, un&quot;alternativa più affidabile consiste nell&quot;utilizzare il routing di ASP.NET. Per ulteriori informazioni, vedere [Routing ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string path, bool rebaseClientPath);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso di riscrittura interno."
    - id: rebaseClientPath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per reimpostare il percorso virtuale. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per mantenere tale percorso invariato."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <code> path </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  id: RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Riscrive l&quot;URL usando il percorso specificato, informazioni sul percorso e informazioni sulla stringa di query."
  remarks: "Il metodo RewritePath reindirizza una richiesta per una risorsa a un&quot;altra risorsa senza modificare l&quot;URL.       Il `filePath` parametro non include il `pathInfo` contenuto del parametro. Per l&quot;URL http://www.microsoft.com/virdir/page.html/tail, il `filePath` parametro è http://www.microsoft.com/virdir/page.html e `pathInfo` parametro è tail.       La riscrittura URL è utile quando si desidera ristrutturare le pagine dell&quot;applicazione Web e si desidera assicurarsi che gli utenti che hanno salvato gli URL precedenti comunque possono usarle dopo avere spostato le pagine. La riscrittura URL consente di inoltrare in modo trasparente le richieste per la nuova posizione della pagina.       Se si desidera consentire a un sito utilizzare gli URL che sono più descrittivi e ottimizzati per i motori di ricerca, un&quot;alternativa più affidabile consiste nell&quot;utilizzare il routing di ASP.NET. Per ulteriori informazioni, vedere [Routing ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString);
    parameters:
    - id: filePath
      type: System.String
      description: "Il percorso di riscrittura interno."
    - id: pathInfo
      type: System.String
      description: "Informazioni aggiuntive sul percorso per una risorsa. Per ulteriori informazioni, vedere <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "La stringa di query richiesta."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> path </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <code> filePath </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  id: RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Riscrive l&quot;URL con il percorso virtuale specificato, informazioni sul percorso, informazioni sulla stringa di query e un valore booleano che specifica se il percorso del file del client è impostato sul percorso di riscrittura."
  remarks: "Il `filePath` non include il contenuto del parametro di `pathInfo` parametro. Per l&quot;URL http://www.microsoft.com/virdir/page.html/tail, il `filePath` parametro è http://www.microsoft.com/virdir/page.html e `pathInfo` parametro è tail.       Per assicurarsi che il percorso virtuale utilizzato per costruire i percorsi per le risorse non viene modificato, impostare il `setClientFilePath` parametro `false`. Uno scenario comune in cui si potrebbe voler impostare `setClientFilePath` a `false` è quando è necessario riscrivere l&quot;URL e si utilizzano i temi e l&quot;URL di reindirizzamento a una risorsa a cui si trova in una cartella diversa da quella della risorsa richiesta.       La riscrittura URL è utile quando si desidera ristrutturare le pagine dell&quot;applicazione Web e si desidera assicurarsi che gli utenti che hanno salvato gli URL precedenti comunque possono usarle dopo avere spostato le pagine. La riscrittura URL consente di inoltrare in modo trasparente le richieste per la nuova posizione della pagina.       Se si desidera consentire a un sito utilizzare gli URL che sono più descrittivi e ottimizzati per i motori di ricerca, un&quot;alternativa più affidabile consiste nell&quot;utilizzare il routing di ASP.NET. Per ulteriori informazioni, vedere [Routing ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);
    parameters:
    - id: filePath
      type: System.String
      description: "Il percorso virtuale della risorsa che gestisce la richiesta."
    - id: pathInfo
      type: System.String
      description: "Informazioni aggiuntive sul percorso da utilizzare per il reindirizzamento dell&quot;URL. Per ulteriori informazioni, vedere <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "La stringa di query della richiesta da utilizzare per il reindirizzamento dell&quot;URL."
    - id: setClientFilePath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per impostare il percorso file usato per le risorse del client il valore di `filePath` parametro; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> path </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <code> filePath </code> parametro non è presente nella directory radice dell&quot;applicazione corrente."
  platform:
  - net462
- uid: System.Web.HttpContext.Server
  id: Server
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> oggetto che fornisce i metodi usati nell&quot;elaborazione delle richieste Web."
  remarks: "La proprietà Server fornisce l&quot;accesso programmatico alle proprietà e metodi della <xref:System.Web.HttpServerUtility>classe.</xref:System.Web.HttpServerUtility> Poiché le pagine ASP.NET contengono un riferimento predefinito per il <xref:System.Web>dello spazio dei nomi (che contiene la <xref:System.Web.HttpContext>classe), è possibile fare riferimento ai membri di <xref:System.Web.HttpContext>in una pagina aspx senza utilizzare il riferimento completo della classe <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Ad esempio, è possibile utilizzare `Server.CreateObject(&quot;MyCOMComponent&quot;)` per creare un&quot;istanza di un oggetto COM nel server. Tuttavia, se si desidera utilizzare i membri di <xref:System.Web.HttpServerUtility>da un modulo di code-behind ASP.NET, è necessario includere un riferimento al <xref:System.Web>spazio dei nomi in cui il modulo e un riferimento completo sia il contesto di richiesta/risposta attualmente attivo e la classe in <xref:System.Web>che si desidera utilizzare.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpServerUtility> In una pagina code-behind, ad esempio, è necessario specificare il nome completo `HttpContext.Current.Server.CreateObject(&quot;MyCOMComponent&quot;)`."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "Il <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Session
  id: Session
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> oggetto per la richiesta HTTP corrente."
  remarks: "La proprietà di sessione fornisce l&quot;accesso programmatico alle proprietà e metodi della <xref:System.Web.SessionState.HttpSessionState>classe.</xref:System.Web.SessionState.HttpSessionState>       Per utilizzare lo stato della sessione è necessario abilitarlo. Per informazioni su come abilitare lo stato della sessione, vedere **lo stato della sessione di configurazione** in [panoramica dello stato della sessione di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Per informazioni su come salvare i valori nello stato sessione, vedere [procedura: salvare i valori nello stato sessione](~/add/includes/ajax-current-ext-md.md). Per informazioni su come leggere i valori dello stato della sessione, vedere [procedura: lettura di valori dallo stato sessione](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to save values in session state and how to read values from session state.  \n  \n These examples require:  \n  \n-   An ASP.NET application that has session state enabled.  \n  \n-   A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=fullName> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> property.  \n  \n```c#  \nstring firstName = \"Jeff\";  \nstring lastName = \"Smith\";  \nstring city = \"Seattle\";  \n  \n// Save to session state in a Web Forms page class.  \nSession[\"FirstName\"] = firstName;  \nSession[\"LastName\"] = lastName;  \nSession[\"City\"] = city;  \n  \n// Read from session state in a Web Forms page class.  \nfirstName = (string)(Session[\"FirstName\"]);  \nlastName = (string)(Session[\"LastName\"]);  \ncity = (string)(Session[\"City\"]);  \n  \n// Outside of Web Forms page class, use HttpContext.Current.  \nHttpContext context = HttpContext.Current;  \ncontext.Session[\"FirstName\"] = firstName;  \nfirstName = (string)(context.Session[\"FirstName\"]);  \n  \n```  \n  \n```vb#  \nDim firstName As String = \"Jeff\"  \nDim lastName As String = \"Smith\"  \nDim city As String = \"Seattle\"  \n  \n' Save to session state in a Web Forms page class.  \nSession(\"FirstName\") = firstName  \nSession(\"LastName\") = lastName  \nSession(\"City\") = city  \n  \n' Read from session state in a Web Forms page class.  \nfirstName = DirectCast(Session(\"FirstName\"), String)  \nlastName = DirectCast(Session(\"LastName\"), String)  \ncity = DirectCast(Session(\"City\"), String)  \n  \n' Outside of Web Forms page class, use HttpContext.Current.  \nDim context As HttpContext = HttpContext.Current  \ncontext.Session(\"FirstName\") = firstName  \nfirstName = DirectCast(context.Session(\"FirstName\"), String)  \n  \n```"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Il <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> oggetto per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  id: SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Imposta il tipo di comportamento dello stato di sessione che è necessaria per supportare una richiesta HTTP."
  remarks: "Nell&quot;implementazione predefinita ASP.NET, un gestore di richieste HTTP indica se è richiesto lo stato della sessione mediante l&quot;implementazione di <xref:System.Web.SessionState.IRequiresSessionState>interfaccia o <xref:System.Web.SessionState.IReadOnlySessionState>interfaccia.</xref:System.Web.SessionState.IReadOnlySessionState> </xref:System.Web.SessionState.IRequiresSessionState> Il metodo SetSessionStateBehavior e <xref:System.Web.SessionState.SessionStateBehavior>enumerazione consentono di fornire ulteriori informazioni su quale tipo di supporto dello stato sessione è necessario per gestire una richiesta.</xref:System.Web.SessionState.SessionStateBehavior> Per ulteriori informazioni, vedere il <xref:System.Web.SessionState.SessionStateBehavior>enumerazione.</xref:System.Web.SessionState.SessionStateBehavior>       Il metodo SetSessionStateBehavior deve essere chiamato prima di <xref:System.Web.HttpApplication.AcquireRequestState>eventi pipeline.</xref:System.Web.HttpApplication.AcquireRequestState> Le chiamate che si verificano durante o dopo questo evento causerà un <xref:System.InvalidOperationException>eccezione.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);
    parameters:
    - id: sessionStateBehavior
      type: System.Web.SessionState.SessionStateBehavior
      description: "Uno dei valori di enumerazione che specifica il tipo di comportamento dello stato sessione è obbligatorio."
  overload: System.Web.HttpContext.SetSessionStateBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il metodo è stato chiamato dopo il <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> è stato generato l&quot;evento."
  platform:
  - net462
- uid: System.Web.HttpContext.SkipAuthorization
  id: SkipAuthorization
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che specifica se il <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> oggetto deve ignorare il controllo delle autorizzazioni per la richiesta corrente."
  remarks: "La proprietà SkipAuthorization è destinata ad utenti esperti dai moduli di autenticazione che devono eseguire il reindirizzamento a una pagina che consente le connessioni anonime. I moduli di autenticazione e il modulo di autenticazione Passport SkipAuthorization entrambi impostati durante il reindirizzamento a una pagina di accesso configurata. L&quot;impostazione SkipAuthorization richiede il `ControlPrincipal` flag da impostare. Per informazioni di `ControlPrincipal` flag, vedere <xref:System.Security.Permissions.SecurityPermissionFlag>.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool SkipAuthorization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> deve ignorare il controllo delle autorizzazioni; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.SkipAuthorization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce un oggetto per il tipo di servizio corrente."
  remarks: "Questo metodo è utile per ottenere l&quot;accesso al sottostante <xref:System.Web.HttpWorkerRequest>oggetto.</xref:System.Web.HttpWorkerRequest>"
  syntax:
    content: object IServiceProvider.GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Un tipo di <xref href=&quot;System.Web.HttpContext&quot;> </xref> servizio su cui impostare il provider del servizio."
    return:
      type: System.Object
      description: "Oggetto <xref href=&quot;System.Web.HttpContext&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene trovato alcun servizio."
  overload: System.Web.HttpContext.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  id: ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che specifica se il runtime ASP.NET deve chiamare &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; sul thread che sta rispondendo a questa richiesta quando la richiesta scade."
  remarks: "In gestori e i moduli che utilizzano il <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName>proprietà per implementare l&quot;annullamento cooperativo, potrebbe essere necessario disabilitare il <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>comportamento che ASP.NET esegue per impostazione predefinita, quando scade una richiesta.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName> Impostando questa proprietà su `false` consentono di assicurarsi che la routine di pulizia e di annullamento verranno eseguito senza alcuna interruzione da ASP.NET.       Se si imposta questa proprietà su `false`, ASP.NET non visualizzerà automaticamente una pagina di errore &quot;Timeout della richiesta&quot; quando si verifica un timeout. L&quot;applicazione è responsabile dell&quot;impostazione in modo appropriato il contenuto della risposta."
  syntax:
    content: public bool ThreadAbortOnTimeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; verrà chiamato quando scade il thread; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.ThreadAbortOnTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Timestamp
  id: Timestamp
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il timestamp iniziale della richiesta HTTP corrente."
  remarks: "Il timestamp restituito dalla proprietà Timestamp è l&quot;ora locale del server e viene impostato durante la creazione dell&quot;istanza di <xref:System.Web.HttpContext>oggetto.</xref:System.Web.HttpContext> L&quot;ora locale è uguale all&quot;ora UTC più l&quot;offset UTC."
  syntax:
    content: public DateTime Timestamp { get; }
    return:
      type: System.DateTime
      description: "Il timestamp della richiesta HTTP corrente."
  overload: System.Web.HttpContext.Timestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Trace
  id: Trace
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il <xref href=&quot;System.Web.TraceContext&quot;> </xref> oggetto per la risposta HTTP corrente."
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "Il <xref href=&quot;System.Web.TraceContext&quot;> </xref> per la risposta HTTP corrente."
  overload: System.Web.HttpContext.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.User
  id: User
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta le informazioni di sicurezza per la richiesta HTTP corrente."
  remarks: "La proprietà utente fornisce l&quot;accesso programmatico alle proprietà e metodi di <xref:System.Security.Principal.IPrincipal>interfaccia.</xref:System.Security.Principal.IPrincipal>       Poiché le pagine ASP.NET contengono un riferimento predefinito per il <xref:System.Web>dello spazio dei nomi (che contiene la <xref:System.Web.HttpContext>classe), è possibile fare riferimento ai membri di <xref:System.Web.HttpContext>in una pagina aspx senza utilizzare il riferimento completo della classe <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Ad esempio, è possibile utilizzare `User.Identity.Name` per ottenere il nome dell&quot;utente per conto del quale il processo corrente è in esecuzione. Tuttavia, se si desidera utilizzare i membri di <xref:System.Security.Principal.IPrincipal>da un modulo di code-behind ASP.NET, è necessario includere un riferimento al <xref:System.Web>spazio dei nomi in cui il modulo e un riferimento completo sia il contesto di richiesta/risposta attualmente attivo e la classe in <xref:System.Web>che si desidera utilizzare.</xref:System.Web> </xref:System.Web> </xref:System.Security.Principal.IPrincipal> In una pagina code-behind, ad esempio, è necessario specificare il nome completo `HttpContext.Current.User.Identity.Name`."
  example:
  - "The following example shows how to access properties of the current user through the User property. Those properties are used to set the title of the Web page.  \n  \n If the application uses Windows authentication, the user name includes the domain. For example, the page title would be “Home page for DOMAIN\\username”.  \n  \n [!code-cs[System.Web.HttpContext.User#1](~/add/codesnippet/csharp/p-system.web.httpcontext_1_1.cs)]\n [!code-vb[System.Web.HttpContext.User#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_1_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Informazioni sulla sicurezza per la richiesta HTTP corrente."
  overload: System.Web.HttpContext.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  id: WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il protocollo negoziato inviato dal server al client per un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> connessione."
  syntax:
    content: public string WebSocketNegotiatedProtocol { get; }
    return:
      type: System.String
      description: "Il protocollo negoziato."
  overload: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  id: WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;elenco ordinato dei protocolli richiesti dal client."
  syntax:
    content: public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Protocolli richiesti o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è un <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> richiesta o se è presente alcun elenco."
  overload: System.Web.HttpContext.WebSocketRequestedProtocols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Resources.MissingManifestResourceException
  isExternal: true
  name: System.Resources.MissingManifestResourceException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
- uid: System.Web.HttpWorkerRequest
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
- uid: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<AspNetWebSocketContext,Task>
  nameWithType: Func<AspNetWebSocketContext,Task>
  fullName: System.Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.WebSockets.AspNetWebSocketContext
    name: AspNetWebSocketContext
    nameWithType: AspNetWebSocketContext
    fullName: AspNetWebSocketContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
- uid: System.Web.WebSockets.AspNetWebSocketOptions
  parent: System.Web.WebSockets
  isExternal: false
  name: AspNetWebSocketOptions
  nameWithType: AspNetWebSocketOptions
  fullName: System.Web.WebSockets.AspNetWebSocketOptions
- uid: System.Web.HttpContext.AddError(System.Exception)
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AllErrors
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
- uid: System.Exception[]
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext.Application
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpContext.ApplicationInstance
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.HttpContext.AsyncPreloadMode
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.HttpContext.Cache
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.HttpContext.ClearError
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
- uid: System.Web.HttpContext.Current
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContext.CurrentHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext.CurrentNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
- uid: System.Web.RequestNotification
  parent: System.Web
  isExternal: false
  name: RequestNotification
  nameWithType: RequestNotification
  fullName: System.Web.RequestNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.HttpContext.Error
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext.GetConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
- uid: System.Web.HttpContext.GetSection(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
- uid: System.Web.HttpContext.Handler
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.HttpContext.PageInstrumentation
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
- uid: System.Web.Instrumentation.PageInstrumentationService
  parent: System.Web.Instrumentation
  isExternal: false
  name: PageInstrumentationService
  nameWithType: PageInstrumentationService
  fullName: System.Web.Instrumentation.PageInstrumentationService
- uid: System.Web.HttpContext.PreviousHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
- uid: System.Web.HttpContext.Request
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
- uid: System.Web.HttpContext.Response
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
- uid: System.Web.HttpContext.RewritePath(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
- uid: System.Web.HttpContext.Server
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpContext.Session
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
- uid: System.Web.SessionState.SessionStateBehavior
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateBehavior
  nameWithType: SessionStateBehavior
  fullName: System.Web.SessionState.SessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpContext.Trace
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.HttpContext.User
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.#ctor*
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext.HttpContext
- uid: System.Web.HttpContext.AcceptWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest
  nameWithType: HttpContext.AcceptWebSocketRequest
- uid: System.Web.HttpContext.AddError*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError
  nameWithType: HttpContext.AddError
- uid: System.Web.HttpContext.AddOnRequestCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted
  nameWithType: HttpContext.AddOnRequestCompleted
- uid: System.Web.HttpContext.AllErrors*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
- uid: System.Web.HttpContext.Application*
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
- uid: System.Web.HttpContext.ApplicationInstance*
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
- uid: System.Web.HttpContext.AsyncPreloadMode*
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
- uid: System.Web.HttpContext.Cache*
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
- uid: System.Web.HttpContext.ClearError*
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError
  nameWithType: HttpContext.ClearError
- uid: System.Web.HttpContext.Current*
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
- uid: System.Web.HttpContext.CurrentHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
- uid: System.Web.HttpContext.CurrentNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted
  nameWithType: HttpContext.DisposeOnPipelineCompleted
- uid: System.Web.HttpContext.Error*
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig
  nameWithType: HttpContext.GetAppConfig
- uid: System.Web.HttpContext.GetConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig
  nameWithType: HttpContext.GetConfig
- uid: System.Web.HttpContext.GetGlobalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject
  nameWithType: HttpContext.GetGlobalResourceObject
- uid: System.Web.HttpContext.GetLocalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject
  nameWithType: HttpContext.GetLocalResourceObject
- uid: System.Web.HttpContext.GetSection*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection
  nameWithType: HttpContext.GetSection
- uid: System.Web.HttpContext.Handler*
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items*
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
- uid: System.Web.HttpContext.PageInstrumentation*
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
- uid: System.Web.HttpContext.PreviousHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile*
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
- uid: System.Web.HttpContext.RemapHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler
  nameWithType: HttpContext.RemapHandler
- uid: System.Web.HttpContext.Request*
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
- uid: System.Web.HttpContext.Response*
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
- uid: System.Web.HttpContext.RewritePath*
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath
  nameWithType: HttpContext.RewritePath
- uid: System.Web.HttpContext.Server*
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
- uid: System.Web.HttpContext.Session*
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
- uid: System.Web.HttpContext.SetSessionStateBehavior*
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior
  nameWithType: HttpContext.SetSessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization*
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService*
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: HttpContext.System.IServiceProvider.GetService
- uid: System.Web.HttpContext.ThreadAbortOnTimeout*
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp*
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
- uid: System.Web.HttpContext.Trace*
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
- uid: System.Web.HttpContext.User*
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
