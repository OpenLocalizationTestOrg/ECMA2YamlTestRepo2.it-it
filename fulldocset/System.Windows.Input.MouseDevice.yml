### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseDevice
  id: MouseDevice
  children:
  - System.Windows.Input.MouseDevice.ActiveSource
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  - System.Windows.Input.MouseDevice.Captured
  - System.Windows.Input.MouseDevice.DirectlyOver
  - System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  - System.Windows.Input.MouseDevice.GetClientPosition
  - System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  - System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.GetScreenPosition
  - System.Windows.Input.MouseDevice.LeftButton
  - System.Windows.Input.MouseDevice.MiddleButton
  - System.Windows.Input.MouseDevice.OverrideCursor
  - System.Windows.Input.MouseDevice.RightButton
  - System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  - System.Windows.Input.MouseDevice.Synchronize
  - System.Windows.Input.MouseDevice.Target
  - System.Windows.Input.MouseDevice.UpdateCursor
  - System.Windows.Input.MouseDevice.XButton1
  - System.Windows.Input.MouseDevice.XButton2
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
  type: Class
  summary: "Rappresenta un dispositivo mouse."
  remarks: "Supporta il MouseDevice il [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] dell&quot;infrastruttura e non deve essere utilizzato direttamente dal codice.       Per correlati al mouse input, utilizzare la <xref:System.Windows.Input.Mouse>classe.</xref:System.Windows.Input.Mouse>  La <xref:System.Windows.Input.Mouse>classe rappresenta il puntatore del mouse in un&quot;applicazione e fornisce i metodi, proprietà ed eventi che riflettono lo stato del mouse.</xref:System.Windows.Input.Mouse>"
  syntax:
    content: 'public abstract class MouseDevice : System.Windows.Input.InputDevice'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.Input.InputDevice
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.ActiveSource
  id: ActiveSource
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: System.Windows.Input.MouseDevice.ActiveSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene il <xref href=&quot;System.Windows.PresentationSource&quot;> </xref> che segnala l&quot;input per questo dispositivo."
  syntax:
    content: public override System.Windows.PresentationSource ActiveSource { get; }
    return:
      type: System.Windows.PresentationSource
      description: "L&quot;origine di input per questo dispositivo."
  overload: System.Windows.Input.MouseDevice.ActiveSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  id: Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Acquisisce gli eventi del mouse sull&quot;elemento specificato."
  remarks: "Quando un elemento acquisisce il mouse, riceve l&quot;input del mouse se il cursore si trova all&quot;interno dei bordi se un <xref:System.Windows.Input.CaptureMode>non viene specificato, il valore predefinito <xref:System.Windows.Input.CaptureMode>è <xref:System.Windows.Input.CaptureMode>.</xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode>       Per rilasciare il mouse capture, chiamare il passaggio di acquisizione `null` come elemento da acquisire.       Se il mouse viene rilevato quando un <xref:System.Windows.Input.Mouse.MouseDown>o <xref:System.Windows.Input.Mouse.MouseUp>evento viene generato e l&quot;input dell&quot;elemento sotto il mouse, non sarà <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>e <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>vengono generati prima.</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> </xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>  In questo modo all&quot;elemento acquisito la possibilità di rilasciare l&quot;acquisizione prima il <xref:System.Windows.Input.Mouse.MouseDown>e <xref:System.Windows.Input.Mouse.MouseUp>gli eventi vengono indirizzati.</xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>"
  syntax:
    content: public bool Capture (System.Windows.IInputElement element);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "Elemento da acquisire il mouse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elemento è stato in grado di acquisire il mouse; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>element</code>is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement,CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement,CaptureMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Acquisisce gli input del mouse sull&quot;elemento specificato utilizzando l&quot;oggetto specificato <xref href=&quot;System.Windows.Input.CaptureMode&quot;> </xref>."
  remarks: "Quando un elemento acquisisce il mouse, riceve l&quot;input del mouse o meno il cursore si trova all&quot;interno dei bordi.       Per rilasciare il mouse capture, chiamare <xref:System.Windows.Input.MouseDevice.Capture%2A>passando `null` come elemento da acquisire.</xref:System.Windows.Input.MouseDevice.Capture%2A>       Se il mouse viene rilevato quando un <xref:System.Windows.Input.Mouse.MouseDown>o <xref:System.Windows.Input.Mouse.MouseUp>evento viene generato e l&quot;input dell&quot;elemento sotto il mouse, non sarà <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>e <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>vengono generati prima.</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> </xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> </xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>  In questo modo all&quot;elemento acquisito la possibilità di rilasciare l&quot;acquisizione prima il <xref:System.Windows.Input.Mouse.MouseDown>e <xref:System.Windows.Input.Mouse.MouseUp>gli eventi vengono indirizzati.</xref:System.Windows.Input.Mouse.MouseUp> </xref:System.Windows.Input.Mouse.MouseDown>"
  syntax:
    content: public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "Elemento che deve acquisire il mouse..."
    - id: captureMode
      type: System.Windows.Input.CaptureMode
      description: "I criteri di acquisizione da utilizzare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elemento è stato in grado di acquisire il mouse; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>element</code>is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>captureMode</code>non è un valido <xref href=&quot;System.Windows.Input.CaptureMode&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Captured
  id: Captured
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: System.Windows.Input.MouseDevice.Captured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene il <xref href=&quot;System.Windows.IInputElement&quot;> </xref> che viene acquisito dal mouse."
  remarks: "Quando un elemento acquisisce il mouse, riceve l&quot;input del mouse o meno il cursore si trova all&quot;interno dei bordi."
  syntax:
    content: public System.Windows.IInputElement Captured { get; }
    return:
      type: System.Windows.IInputElement
      description: "L&quot;elemento che viene acquisito dal mouse."
  overload: System.Windows.Input.MouseDevice.Captured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  id: DirectlyOver
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: System.Windows.Input.MouseDevice.DirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene l&quot;elemento che il puntatore del mouse è posizionato."
  remarks: "Il puntatore del mouse viene considerato direttamente su un elemento, se il mouse è stato acquisito in quell&quot;elemento.       I controlli possono essere composti da più elementi. DirectlyOver indica l&quot;elemento specifico nel controllo composito che il puntatore del mouse è posizionato e non il controllo stesso.  Ad esempio, a seconda di quale parte di un <xref:System.Windows.Controls.Button>puntatore è posizionato, la proprietà DirectlyOver potrebbe indicare <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.ContentControl.Content%2A>proprietà o <xref:Microsoft.Windows.Themes.ButtonChrome>.</xref:Microsoft.Windows.Themes.ButtonChrome> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button>       Utilizzare il <xref:System.Windows.IInputElement.IsMouseOver%2A>proprietà <xref:System.Windows.UIElement>e <xref:System.Windows.ContentElement>per determinare se il mouse è posizionato su un elemento, che include gli elementi figlio visivi o gli elementi di controllo.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> </xref:System.Windows.IInputElement.IsMouseOver%2A>"
  syntax:
    content: public System.Windows.IInputElement DirectlyOver { get; }
    return:
      type: System.Windows.IInputElement
      description: "L&quot;elemento il puntatore del mouse è posizionato."
  overload: System.Windows.Input.MouseDevice.DirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  id: GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: System.Windows.Input.MouseDevice.GetButtonState(MouseButton)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene lo stato del pulsante del mouse."
  syntax:
    content: protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);
    parameters:
    - id: mouseButton
      type: System.Windows.Input.MouseButton
      description: "Il pulsante che viene eseguita la query."
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.GetButtonState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  id: GetClientPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: System.Windows.Input.MouseDevice.GetClientPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Calcola la posizione del puntatore del mouse, nelle coordinate client."
  syntax:
    content: protected System.Windows.Point GetClientPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "La posizione del puntatore del mouse, nelle coordinate client."
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  id: GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: System.Windows.Input.MouseDevice.GetClientPosition(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Calcola la posizione del puntatore del mouse, nelle coordinate client, nell&quot;oggetto specificato <xref href=&quot;System.Windows.PresentationSource&quot;> </xref>."
  syntax:
    content: protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);
    parameters:
    - id: presentationSource
      type: System.Windows.PresentationSource
      description: "L&quot;origine in cui ottenere la posizione del mouse."
    return:
      type: System.Windows.Point
      description: "La posizione del puntatore del mouse, nelle coordinate client, nell&quot;oggetto specificato <xref href=&quot;System.Windows.PresentationSource&quot;> </xref>."
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseDevice.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene la posizione del mouse relativa a un elemento specificato."
  remarks: "La posizione del puntatore del mouse viene calcolata in base all&quot;oggetto specificato <xref:System.Windows.IInputElement>con l&quot;angolo superiore sinistro dell&quot;elemento che è il punto di origine, 0,0.</xref:System.Windows.IInputElement>"
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "La cornice di riferimento in cui si desidera calcolare la posizione del mouse."
    return:
      type: System.Windows.Point
      description: "La posizione del mouse relativa al parametro <code> relativeTo </code>."
  overload: System.Windows.Input.MouseDevice.GetPosition*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>relativeTo</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  id: GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: System.Windows.Input.MouseDevice.GetScreenPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Calcola la posizione sullo schermo del puntatore del mouse."
  syntax:
    content: protected System.Windows.Point GetScreenPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "La posizione del puntatore del mouse."
  overload: System.Windows.Input.MouseDevice.GetScreenPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: System.Windows.Input.MouseDevice.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene lo stato del pulsante sinistro del mouse del dispositivo."
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: System.Windows.Input.MouseDevice.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lo stato del pulsante centrale del mouse del dispositivo."
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  id: OverrideCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: System.Windows.Input.MouseDevice.OverrideCursor
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene o imposta il cursore per l&quot;intera applicazione."
  remarks: "Il <xref:System.Windows.Input.Cursor>che OverrideCursor è impostata su verranno applicate all&quot;intera applicazione.</xref:System.Windows.Input.Cursor>       Per cancellare la sostituzione <xref:System.Windows.Input.Cursor>, impostare OverrideCursor `null`.</xref:System.Windows.Input.Cursor>       L&quot;impostazione OverrideCursor su <xref:System.Windows.Input.Cursors.None%2A>forzerà il cursore del mouse a non essere visualizzato, ma gli eventi del mouse vengono ancora elaborati.</xref:System.Windows.Input.Cursors.None%2A>"
  syntax:
    content: public System.Windows.Input.Cursor OverrideCursor { get; set; }
    return:
      type: System.Windows.Input.Cursor
      description: "Il cursore di override o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se OverrideCursor non è impostata."
  overload: System.Windows.Input.MouseDevice.OverrideCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: System.Windows.Input.MouseDevice.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene lo stato del pulsante destro del mouse del dispositivo."
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  id: SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: System.Windows.Input.MouseDevice.SetCursor(Cursor)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Imposta il puntatore del mouse sull&quot;oggetto specificato<xref href=&quot;System.Windows.Input.Cursor&quot;></xref>"
  remarks: "Si noti che questo cursore non si applicano a qualsiasi particolare <xref:System.Windows.UIElement>, ma piuttosto si applica all&quot;intera applicazione.</xref:System.Windows.UIElement>"
  syntax:
    content: public bool SetCursor (System.Windows.Input.Cursor cursor);
    parameters:
    - id: cursor
      type: System.Windows.Input.Cursor
      description: "Il cursore su cui impostare il puntatore del mouse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il cursore del mouse è impostato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.MouseDevice.SetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Synchronize
  id: Synchronize
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: System.Windows.Input.MouseDevice.Synchronize()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forza la risincronizzazione del mouse."
  remarks: "Il <xref:System.Windows.Input.MouseDevice>layout monitoraggi viene modificato e chiama Synchronize.</xref:System.Windows.Input.MouseDevice>  Vi sono casi in cui il sistema di input del mouse sarà necessario forzare l&quot;aggiornamento rispondere alle modifiche.  Ad esempio, è necessario risincronizzare il mouse su un timer."
  syntax:
    content: public void Synchronize ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.Synchronize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Target
  id: Target
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Target
  nameWithType: MouseDevice.Target
  fullName: System.Windows.Input.MouseDevice.Target
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene il <xref href=&quot;System.Windows.IInputElement&quot;> </xref> inviati per l&quot;input da mouse del dispositivo."
  remarks: "La destinazione per un <xref:System.Windows.Input.MouseDevice>, sia l&quot;oggetto con il mouse è posizionato l&quot;oggetto con il mouse capture.</xref:System.Windows.Input.MouseDevice>"
  syntax:
    content: public override System.Windows.IInputElement Target { get; }
    return:
      type: System.Windows.IInputElement
      description: "L&quot;elemento che riceve l&quot;input."
  overload: System.Windows.Input.MouseDevice.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  id: UpdateCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: System.Windows.Input.MouseDevice.UpdateCursor()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forza il cursore del mouse per aggiornare."
  syntax:
    content: public void UpdateCursor ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.UpdateCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: System.Windows.Input.MouseDevice.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene lo stato del primo pulsante esteso su questo dispositivo mouse."
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: System.Windows.Input.MouseDevice.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ottiene lo stato del secondo pulsante esteso del dispositivo mouse."
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "Lo stato del pulsante."
  overload: System.Windows.Input.MouseDevice.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputDevice
  isExternal: false
  name: System.Windows.Input.InputDevice
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.MouseDevice.ActiveSource
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: System.Windows.Input.MouseDevice.ActiveSource
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement,CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement,CaptureMode)
- uid: System.Windows.Input.CaptureMode
  parent: System.Windows.Input
  isExternal: false
  name: CaptureMode
  nameWithType: CaptureMode
  fullName: System.Windows.Input.CaptureMode
- uid: System.Windows.Input.MouseDevice.Captured
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: System.Windows.Input.MouseDevice.Captured
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: System.Windows.Input.MouseDevice.DirectlyOver
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: System.Windows.Input.MouseDevice.GetButtonState(MouseButton)
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseButton
  parent: System.Windows.Input
  isExternal: false
  name: MouseButton
  nameWithType: MouseButton
  fullName: System.Windows.Input.MouseButton
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: System.Windows.Input.MouseDevice.GetClientPosition()
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: System.Windows.Input.MouseDevice.GetClientPosition(PresentationSource)
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseDevice.GetPosition(IInputElement)
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: System.Windows.Input.MouseDevice.GetScreenPosition()
- uid: System.Windows.Input.MouseDevice.LeftButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: System.Windows.Input.MouseDevice.LeftButton
- uid: System.Windows.Input.MouseDevice.MiddleButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: System.Windows.Input.MouseDevice.MiddleButton
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: System.Windows.Input.MouseDevice.OverrideCursor
- uid: System.Windows.Input.Cursor
  parent: System.Windows.Input
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Input.Cursor
- uid: System.Windows.Input.MouseDevice.RightButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: System.Windows.Input.MouseDevice.RightButton
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: System.Windows.Input.MouseDevice.SetCursor(Cursor)
- uid: System.Windows.Input.MouseDevice.Synchronize
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: System.Windows.Input.MouseDevice.Synchronize()
- uid: System.Windows.Input.MouseDevice.Target
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
  fullName: System.Windows.Input.MouseDevice.Target
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: System.Windows.Input.MouseDevice.UpdateCursor()
- uid: System.Windows.Input.MouseDevice.XButton1
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: System.Windows.Input.MouseDevice.XButton1
- uid: System.Windows.Input.MouseDevice.XButton2
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: System.Windows.Input.MouseDevice.XButton2
- uid: System.Windows.Input.MouseDevice.ActiveSource*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
- uid: System.Windows.Input.MouseDevice.Capture*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture
  nameWithType: MouseDevice.Capture
- uid: System.Windows.Input.MouseDevice.Captured*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
- uid: System.Windows.Input.MouseDevice.DirectlyOver*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
- uid: System.Windows.Input.MouseDevice.GetButtonState*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState
  nameWithType: MouseDevice.GetButtonState
- uid: System.Windows.Input.MouseDevice.GetClientPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition
  nameWithType: MouseDevice.GetClientPosition
- uid: System.Windows.Input.MouseDevice.GetPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition
  nameWithType: MouseDevice.GetPosition
- uid: System.Windows.Input.MouseDevice.GetScreenPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition
  nameWithType: MouseDevice.GetScreenPosition
- uid: System.Windows.Input.MouseDevice.LeftButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
- uid: System.Windows.Input.MouseDevice.MiddleButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
- uid: System.Windows.Input.MouseDevice.OverrideCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
- uid: System.Windows.Input.MouseDevice.RightButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
- uid: System.Windows.Input.MouseDevice.SetCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor
  nameWithType: MouseDevice.SetCursor
- uid: System.Windows.Input.MouseDevice.Synchronize*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize
  nameWithType: MouseDevice.Synchronize
- uid: System.Windows.Input.MouseDevice.Target*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
- uid: System.Windows.Input.MouseDevice.UpdateCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor
  nameWithType: MouseDevice.UpdateCursor
- uid: System.Windows.Input.MouseDevice.XButton1*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
- uid: System.Windows.Input.MouseDevice.XButton2*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
