### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSource
  id: XmlDataSource
  children:
  - System.Web.UI.WebControls.XmlDataSource.#ctor
  - System.Web.UI.WebControls.XmlDataSource.CacheDuration
  - System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.XmlDataSource.Data
  - System.Web.UI.WebControls.XmlDataSource.DataFile
  - System.Web.UI.WebControls.XmlDataSource.EnableCaching
  - System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  - System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  - System.Web.UI.WebControls.XmlDataSource.Save
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.WebControls.XmlDataSource.Transform
  - System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  - System.Web.UI.WebControls.XmlDataSource.TransformFile
  - System.Web.UI.WebControls.XmlDataSource.Transforming
  - System.Web.UI.WebControls.XmlDataSource.XPath
  langs:
  - csharp
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
  type: Class
  summary: "Rappresenta un&quot;origine dati XML per i controlli con associazione a dati."
  remarks: "In questo argomento:- [Introduzione](#introduction)      -   [origini di dati XML](#source_of_xml_data)      -   [aggiornamento dei dati XML](#updating_xml_data)      -   [specifica una trasformazione XSL](#specifying_an_xsl_transformation)      -   [filtro utilizzando un&quot;espressione XPath](#filtering_using_an_xpath_expression)      -   [la memorizzazione nella cache](#caching)      -   [funzionalità aggiuntive](#additional_features)      -   [oggetto visualizzazione dati](#data_view_object)      -   [sintassi dichiarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controllo XmlDataSource l&quot;introduzione è un controllo origine dati che presenta i dati XML per i controlli con associazione a dati.       Il controllo XmlDataSource può essere utilizzato dai controlli con associazione a dati per visualizzare i dati gerarchici e tabulari. Il controllo XmlDataSource viene in genere utilizzato per visualizzare i dati XML gerarchici in scenari di sola lettura. Poiché il controllo XmlDataSource estende il <xref:System.Web.UI.HierarchicalDataSourceControl>(classe), funziona con dati gerarchici.</xref:System.Web.UI.HierarchicalDataSourceControl> Il controllo XmlDataSource implementa anche il <xref:System.Web.UI.IDataSource>interfaccia e funziona con tabulare, o elenco i dati.</xref:System.Web.UI.IDataSource>      > [!NOTE] > Per motivi di sicurezza, nessuno dei XmlDataSource le proprietà del controllo vengono archiviati in stato di visualizzazione. Poiché si tratta tecnicamente possibile decodificare il contenuto dello stato di visualizzazione sul client, l&quot;archiviazione di informazioni riservate riguardanti la struttura dei dati o il relativo contenuto potrebbe esporre l&quot;utente a una minaccia di diffusione di informazioni. Si noti che se è necessario archiviare informazioni quali <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà nello stato di visualizzazione, è possibile abilitare la crittografia proteggere il contenuto impostando <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>sul `@ Page` direttiva.</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Gli sviluppatori di pagine utilizzano il controllo XmlDataSource per visualizzare i dati XML utilizzando i controlli associati a dati.      <a name=&quot;source_of_xml_data&quot;></a># # Origini di XmlDataSource di dati XML carica i dati XML da un file XML, specificata dal <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> Dati XML possono essere archiviati anche direttamente dal controllo origine dati in forma di stringa utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> Se si desidera trasformare i dati XML prima che venga visualizzato da un controllo con associazione a dati, è possibile fornire un foglio di stile del foglio di stile XSL (Extensible Language) per la trasformazione. Come con i dati XML, in genere è necessario caricare il foglio di stile da un file, indicata dal <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>proprietà, ma è anche possibile archiviarlo in forma di stringa direttamente utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>      <a name=&quot;updating_xml_data&quot;></a># # Utilizza l&quot;aggiornamento controllo XmlDataSource di dati XML in genere negli scenari di dati di sola lettura in cui un controllo con associazione a dati consente di visualizzare dati XML. Tuttavia, è possibile utilizzare anche il controllo XmlDataSource per modificare i dati XML. Per modificare i dati XML, chiamare il <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>metodo per recuperare un <xref:System.Xml.XmlDataDocument>oggetto che è una rappresentazione in memoria dei dati XML.</xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> È possibile utilizzare il modello a oggetti esposto dal <xref:System.Xml.XmlDataDocument>e <xref:System.Xml.XmlNode>oggetti contiene o utilizzare un&quot;espressione di filtro XPath per modificare i dati del documento.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlDataDocument> Dopo aver effettuato le modifiche alla rappresentazione in memoria dei dati XML, è possibile salvarlo sul disco chiamando il <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metodo.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>       Esistono alcune restrizioni per le funzionalità di modifica del controllo XmlDataSource:-i dati XML devono essere caricati da un file XML indicato dal <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>proprietà, non da XML inline specificato la <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Nessuna trasformazione XSLT può essere specificato nel <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      -La <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metodo gestisce simultanee operazioni di salvataggio da richieste diverse.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Se più di un utente sta modificando un file XML tramite l&quot;oggetto XmlDataSource, non c&quot;è garanzia che tutti gli utenti operano con gli stessi dati. È inoltre possibile per un <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>esito negativo a causa di questi stessi problemi di concorrenza dell&quot;operazione.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>      <a name=&quot;specifying_an_xsl_transformation&quot;></a># # Specifica un&quot;operazione di trasformazione XSL A comuni eseguita con i dati XML è la trasformazione, da un set di dati XML in un altro. Il controllo XmlDataSource supporta le trasformazioni XML con il <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>e <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>che specificano un foglio di stile XSL da applicare ai dati XML prima di essere passato a un controllo con associazione a dati, e <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>proprietà, che consente di specificare argomenti del foglio di stile XSLT dinamici utilizzabile da un foglio di stile XSL durante la trasformazione.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se si specifica un&quot;espressione di filtro utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà, viene applicato al termine della trasformazione.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      > [!NOTE] > XmlDataSource la classe utilizza deprecate <xref:System.Xml.Xsl.XslTransform>classe per eseguire trasformazioni XSL.</xref:System.Xml.Xsl.XslTransform> Se si desidera utilizzare le funzionalità del foglio di stile che sono stati introdotti dopo la <xref:System.Xml.Xsl.XslTransform>classe è stata deprecata, applicare le trasformazioni manualmente utilizzando la <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>      <a name=&quot;filtering_using_an_xpath_expression&quot;></a># # Filtro utilizzando un&quot;espressione XPath per impostazione predefinita, l&quot;oggetto XmlDataSource controllo carica tutti i dati XML nel file XML identificato dal <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>proprietà o trovato inline nella <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà, ma è possibile filtrare i dati utilizzando un&quot;espressione XPath.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> Il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà supporta un filtro XPath sintassi che viene applicato dopo il caricamento e trasformare dati XML.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      <a name=&quot;caching&quot;></a># # La memorizzazione nella cache per migliorare le prestazioni, la memorizzazione nella cache è abilitata per il controllo XmlDataSource per impostazione predefinita. Apertura e la lettura di un file XML nel server ogni volta che viene richiesta una pagina può ridurre le prestazioni dell&quot;applicazione. La memorizzazione nella cache consente di ridurre il carico di elaborazione sul server a scapito della memoria sul server Web. Nella maggior parte dei casi si tratta di un buon compromesso. Memorizza le XmlDataSource automaticamente i dati quando il <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>è impostata su `true`e <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>proprietà è impostata per il numero di secondi che la cache memorizza i dati prima che venga invalidata.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> È possibile utilizzare il <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>per ottimizzare ulteriormente il comportamento di memorizzazione nella cache del controllo origine dati.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a># # Funzionalità aggiuntive nella tabella seguente sono elencate le funzionalità aggiuntive supportate dal controllo XmlDataSource.      | Funzionalità | Descrizione |   |----------------|-----------------|   | Ordinamento | Non supportato dal controllo XmlDataSource. |   | Filtro | La proprietà <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>può essere utilizzata per filtrare i dati XML utilizzando un&quot;espressione XPath appropriata. |   | Paging | Non supportato dal controllo XmlDataSource. |   | Aggiornamento | Supportato modificando direttamente il <xref:System.Xml.XmlDataDocument>e quindi chiamare il metodo <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | L&quot;eliminazione | Supportato modificando direttamente il <xref:System.Xml.XmlDataDocument>e quindi chiamare il metodo <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | Inserimento di | Supportato modificando direttamente il <xref:System.Xml.XmlDataDocument>e quindi chiamare il metodo <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | La memorizzazione nella cache | Abilitato per impostazione predefinita, la proprietà <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>impostata su 0 (infinito) e la proprietà <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>impostata su <xref:System.Web.UI.DataSourceCacheExpiry>. |      <a name=&quot;data_view_object&quot;> </a> # # Dati visualizzazione oggetto perché il controllo XmlDataSource supporta i controlli associati a dati che visualizzano dati gerarchici, nonché i controlli che visualizzano dati tabulari, il controllo origine dati supporta più tipi di oggetti vista origine dati nei relativi dati XML sottostanti.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Il controllo XmlDataSource recupera un singolo denominato <xref:System.Web.UI.WebControls.XmlDataSourceView>oggetto quando viene utilizzato con un controllo con associazione a dati che visualizza dati tabulari.</xref:System.Web.UI.WebControls.XmlDataSourceView> Il <xref:System.Web.UI.IDataSource.GetViewNames%2A>metodo identifica questa unica visualizzazione denominata.</xref:System.Web.UI.IDataSource.GetViewNames%2A> Quando viene utilizzato con un controllo con associazione a dati che visualizza i dati gerarchici, il controllo XmlDataSource recupera un <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>per qualsiasi percorso gerarchico univoco passato al <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>metodo.</xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>      <a name=&quot;declarative_syntax&quot;></a># # Sintassi dichiarativa```   <asp:XmlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       DataFile=&quot;string&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTransforming=&quot;Transforming event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformArgumentList=&quot;string&quot;       TransformFile=&quot;string&quot;       Visible=&quot;True|False&quot;       XPath=&quot;string&quot;   >       <Data>string</Data>       <Transform>string</Transform>   </asp:XmlDataSource>   ```"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data from the sample XML file. The second example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.  \n  \n The following code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data. The XmlDataSource loads XML data from the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```  \n  \n The following code example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data. The <xref:System.Web.UI.WebControls.Repeater> control uses an XPath data-binding expression to bind to data items within the XML document that the XmlDataSource represents. For more information about `XPath` and `XPathSelect` data-binding syntax, see the <xref:System.Web.UI.XPathBinder> class.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_2.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>John</firstn>  \n         <lastn>Smith</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Transforming")]

      [System.ComponentModel.DefaultProperty("DataFile")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HierarchicalDataSourceControl
  implements:
  - System.ComponentModel.IListSource
  - System.Web.UI.IDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.HierarchicalDataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.HierarchicalDataSourceControl.ClientID
  - System.Web.UI.HierarchicalDataSourceControl.ClientIDMode
  - System.Web.UI.HierarchicalDataSourceControl.Controls
  - System.Web.UI.HierarchicalDataSourceControl.CreateControlCollection
  - System.Web.UI.HierarchicalDataSourceControl.EnableTheming
  - System.Web.UI.HierarchicalDataSourceControl.FindControl(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Focus
  - System.Web.UI.HierarchicalDataSourceControl.HasControls
  - System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)
  - System.Web.UI.HierarchicalDataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HierarchicalDataSourceControl.SkinID
  - System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#GetHierarchicalView(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> classe."
  syntax:
    content: public XmlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;intervallo di tempo, espresso in secondi, che il controllo origine dati memorizza nella cache di dati che ha recuperato."
  remarks: "Il <xref:System.Web.UI.WebControls.XmlDataSource>controllo memorizza automaticamente i dati quando si applicano le operazioni seguenti: - il <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>è impostata su `true`.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.XmlDataSource>      -La proprietà CacheDuration è impostata su un valore maggiore di 0, che indica il numero di secondi durante i quali la cache memorizza i dati prima che venga invalidata.       Qualsiasi modifica di <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà o il contenuto del file che contiene i dati XML provoca l&quot;invalidamento della cache.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Per impostazione predefinita, la proprietà CacheDuration è impostata su 0, che indica una cache indefinita, e l&quot;origine dati verrà memorizzati nella cache dati fino a quando non viene modificato il file XML da cui dipende.       Il comportamento della cache è determinato da una combinazione della durata e <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>impostazione.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Se <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>è impostato su <xref:System.Web.UI.DataSourceCacheExpiry>, <xref:System.Web.UI.WebControls.XmlDataSource>controllo memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per la quantità di tempo specificato da CacheDuration e invalida il tempo trascorso.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> La cache viene quindi aggiornata durante l&quot;operazione successiva. Se <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>è impostato su <xref:System.Web.UI.DataSourceCacheExpiry>, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l&quot;intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> La cache scadrà solo se non vi è alcuna attività per un periodo di tempo uguale al CacheDuration dall&quot;ultimo recupero dei dati."
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the CacheDuration is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_928_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_928_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "Il numero di secondi durante i quali il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo memorizza nella cache i risultati di un&quot;operazione di recupero di dati. Il valore predefinito è 0."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta i criteri di scadenza della cache che viene combinato con la durata della cache per descrivere il comportamento di memorizzazione della cache che utilizza il controllo origine dati."
  remarks: "Il comportamento della cache è determinato da una combinazione di <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e le impostazioni di CacheExpirationPolicy.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Se il CacheExpirationPolicy è impostata su <xref:System.Web.UI.DataSourceCacheExpiry>, <xref:System.Web.UI.WebControls.XmlDataSource>memorizza nella cache di dati nella prima operazione di recupero di dati, li mantiene in memoria per la quantità di tempo specificato da <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e invalida il tempo trascorso.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> La cache viene quindi aggiornata durante l&quot;operazione successiva. Se il CacheExpirationPolicy è impostata su <xref:System.Web.UI.DataSourceCacheExpiry>, il controllo origine dati memorizza i dati nella prima operazione di recupero di dati, ma reimposta l&quot;intervallo di tempo che vengono mantenuti nella cache per ogni operazione successiva.</xref:System.Web.UI.DataSourceCacheExpiry> Solo se è presente alcuna attività per un periodo di tempo uguale alla scadenza della cache di <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>dall&quot;ultimo recupero dei dati.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_427_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_427_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Uno del <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valori. Impostazione criteri di scadenza della cache predefinita è <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  id: CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il valore della chiave di cache per il controllo origine dati dallo stato di visualizzazione o aggiunge la chiave di cache per lo stato di visualizzazione."
  remarks: "La proprietà CacheKeyContext consente di creare manualmente una chiave di cache per il <xref:System.Web.UI.WebControls.XmlDataSource>controllo.</xref:System.Web.UI.WebControls.XmlDataSource> Ciò è necessario solo se si assegna un oggetto che contiene i dati XML o XSLT per il controllo anziché specificare un file che contiene i dati. Quando si assegnano dati al controllo, i dati non viene utilizzati per generare la chiave di cache. In alternativa, è necessario generare una chiave di cache univoco manualmente se si prevede di aggiornare l&quot;oggetto dati."
  syntax:
    content: public virtual string CacheKeyContext { get; set; }
    return:
      type: System.String
      description: "Il valore di chiave di cache, o una stringa vuota se la chiave di cache non è in stato di visualizzazione."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una dipendenza di chiave definita dall&quot;utente che è collegata a tutti gli oggetti della cache di dati creati dal controllo origine dati. Tutti gli oggetti cache scadono in modo esplicito quando scade la chiave."
  remarks: "Il <xref:System.Web.UI.WebControls.XmlDataSource>controllo supporta la memorizzazione nella cache di dati.</xref:System.Web.UI.WebControls.XmlDataSource> Mentre vengono memorizzati i dati, il <xref:System.Web.UI.WebControls.XmlDataSource>Recupera i dati dalla cache piuttosto che dal file di dati sottostante.</xref:System.Web.UI.WebControls.XmlDataSource> Alla scadenza della cache, recupera i dati dal file sottostante e nuovamente memorizza nella cache i dati.       È possibile impostare la proprietà CacheKeyDependency per creare una dipendenza tra tutte le voci di cache creati il <xref:System.Web.UI.WebControls.XmlDataSource>controllo e la chiave.</xref:System.Web.UI.WebControls.XmlDataSource> A livello di codice, si possono invalidare tutte le voci di cache in qualsiasi momento per la scadenza della chiave.       A causa di proprietà utilizzate per creare il CacheKeyDependency, è possibile che più <xref:System.Web.UI.WebControls.XmlDataSource>controlli possono utilizzare la stessa cache negli scenari in cui vengono caricati gli stessi dati allo stesso file XML e file di trasformazione e avere lo stesso <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>impostato.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Creare una chiave che identifica tutti gli oggetti della cache per il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  id: Data
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un blocco di dati XML che associa il controllo origine dati."
  remarks: "Negli scenari dichiarativi, la proprietà di dati viene specificata come una proprietà interna su più righe del <xref:System.Web.UI.WebControls.XmlDataSource>oggetto.</xref:System.Web.UI.WebControls.XmlDataSource> Una proprietà interna è compatibile con i dati XML, perché consente di formattare i dati XML in alcun modo e ignorare i problemi di spaziatura interna di caratteri, ad esempio padding di virgolette singole.       Se entrambi i <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>e vengono impostate le proprietà di dati, la <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>proprietà ha la precedenza e i dati nel file XML vengono utilizzati invece i dati XML specificati nella proprietà Data.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>       Se si modifica il valore della proprietà di dati, il <xref:System.Web.UI.IDataSource.DataSourceChanged>viene generato l&quot;evento.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se è abilitata la memorizzazione nella cache e si modifica il valore dei dati, la cache viene invalidata."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display inline XML data contained by the Data property with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_378_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_378_1.aspx)]"
  syntax:
    content: public virtual string Data { get; set; }
    return:
      type: System.String
      description: "Una stringa di dati XML inline che il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> associato al controllo. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Data*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il caricamento del documento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  id: DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Specifica il nome del file di un file XML che associa l&quot;origine dati."
  remarks: "Se entrambi i file di dati e <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>sono impostate, la proprietà DataFile ha la precedenza e i dati nel file XML vengono utilizzati invece i dati XML specificati nel <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Se si modifica il valore della proprietà del file di dati, il <xref:System.Web.UI.IDataSource.DataSourceChanged>viene generato l&quot;evento.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se è abilitata la memorizzazione nella cache e si modifica il valore di file di dati, la cache viene invalidata."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data contained in a file with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_472_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_472_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual string DataFile { get; set; }
    return:
      type: System.String
      description: "Il percorso fisico assoluto o relativo del file XML che contiene i dati che il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.DataFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il caricamento del documento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo è abilitata la memorizzazione nella cache dei dati."
  remarks: "Il <xref:System.Web.UI.WebControls.XmlDataSource>controllo memorizza automaticamente i dati quando la proprietà EnableCaching è impostata su `true`.</xref:System.Web.UI.WebControls.XmlDataSource> Per impostazione predefinita, il <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>è impostata su 0, che indica una cache indefinita, e l&quot;origine dati verrà memorizzati nella cache dati fino a quando non viene modificato il file XML da cui dipende.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Se si imposta la <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>proprietà su un valore maggiore di 0, la cache memorizza i dati per questo numero di secondi prima del recupero di un nuovo set.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>       Se la proprietà EnableCaching è impostata su `true` e <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>è impostata, le voci della cache non vengono invalidate automaticamente quando si modificano i parametri nell&quot;elenco di argomenti di trasformazioni.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> In tal caso, è necessario scrivere codice per invalidare la cache impostando la <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_365_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_365_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la memorizzazione nella cache di dati è abilitata per il controllo origine dati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;oggetto vista origine dati per il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo. Il <code> viewPath </code> parametro può essere un&quot;espressione XPath."
  remarks: "È possibile chiamare il metodo GetHierarchicalView per recuperare un <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>oggetto associato di <xref:System.Web.UI.WebControls.XmlDataSource>controllo.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> Se si specifica `viewPath` valore, il <xref:System.Web.UI.WebControls.XmlDataSource>controllo restituisce un oggetto vista origine dati che rappresenta la visualizzazione nel nodo identificato da `viewPath`, insieme a tutti i relativi nodi figlio.</xref:System.Web.UI.WebControls.XmlDataSource> Se si imposta `viewPath` a <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Web.UI.WebControls.XmlDataSource>controllare controlli il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà per determinare il nodo radice da cui compilare la vista origine dati.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.String.Empty?displayProperty=fullName> Se il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>è impostata, il <xref:System.Web.UI.WebControls.XmlDataSource>controllo viene utilizzato per restituire una vista origine dati nello stesso modo `viewPath` viene utilizzata l&quot;espressione.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Se il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>non è impostata, il <xref:System.Web.UI.WebControls.XmlDataSource>controllo restituisce una visualizzazione di tutti i nodi di dati nei dati XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>"
  syntax:
    content: protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "Un&quot;espressione XPath che identifica un nodo dal quale è compilata la vista gerarchica corrente."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "Restituisce un <xref href=&quot;System.Web.UI.WebControls.XmlHierarchicalDataSourceView&quot;> </xref> oggetto che rappresenta una singola visualizzazione dei dati a partire dal nodo di dati identificato da <code> viewPath </code>."
  overload: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  id: GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carica i dati XML in memoria, direttamente dall&quot;archivio dati sottostante o dalla cache e lo restituisce sotto forma di un <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo metodi GetXmlDocument per l&quot;accesso diretto a una rappresentazione in memoria dei dati XML sottostanti.       È possibile modificare l&quot;oggetto restituito <xref:System.Xml.XmlDataDocument>e quindi chiamare <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>per mantenere le modifiche apportate al file XML specificato per il <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> Alcuni requisiti devono essere soddisfatti prima di <xref:System.Xml.XmlDataDocument>oggetto può essere salvato.</xref:System.Xml.XmlDataDocument> Per ulteriori informazioni, vedere il <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metodo.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>"
  example:
  - "This section contains two code examples. The first example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the GetXmlDocument method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> retrieved by the GetXmlDocument method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n```"
  syntax:
    content: public System.Xml.XmlDocument GetXmlDocument ();
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: "Un <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> oggetto che rappresenta il XML specificato nella <> </> *> proprietà o del file identificato dal <> </> *> proprietà, con tutte le trasformazioni e <xref:System.Web.UI.WebControls.XmlDataSource.XPath*>query applicata.</xref:System.Web.UI.WebControls.XmlDataSource.XPath*>"
  overload: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato specificato un URL per il <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>proprietà; tuttavia, il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo non dispone delle autorizzazioni corrette per la risorsa Web.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not support caching when client impersonation is enabled."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Accesso negato al percorso specificato per il <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  id: OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource.Transforming&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo esegua una trasformazione XSLT sui dati XML."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnTransforming consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at runtime. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler, which is identified by name of the method set for the OnTransforming method.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_60_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_60_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XML transformation is performed using the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: protected virtual void OnTransforming (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  id: Save
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva i dati XML attivi in memoria da parte di <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo su disco se il <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>proprietà è impostata.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  remarks: "Mentre il <xref:System.Web.UI.WebControls.XmlDataSource>controllo viene in genere utilizzato negli scenari di associazione di dati di sola lettura, è possibile utilizzare il <xref:System.Web.UI.WebControls.XmlDataSource>per modificare i dati XML nel file di dati XML sottostante.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> In questi scenari, i dati XML vengono caricati da un file XML per il <xref:System.Web.UI.WebControls.XmlDataSource>controllo.</xref:System.Web.UI.WebControls.XmlDataSource> Modificare il <xref:System.Xml.XmlDataDocument>in memoria utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>(metodo) e quindi salvare il file di dati XML chiamando il metodo Save.</xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> </xref:System.Xml.XmlDataDocument> Questo scenario XML modificabile è possibile quando vengono soddisfatte le condizioni seguenti:-i dati XML viene caricati da un file XML indicato dal <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>non dai dati XML inline specificati nella proprietà di <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Nessuna trasformazione XSLT è incluso il <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>       Il metodo Save gestisce simultanee operazioni di salvataggio da richieste diverse. Se più di un utente sta modificando un file XML tramite il <xref:System.Web.UI.WebControls.XmlDataSource>di controllo, non c&quot;è garanzia che tutti gli utenti operano con gli stessi dati.</xref:System.Web.UI.WebControls.XmlDataSource> È inoltre possibile per un&quot;operazione di salvataggio non riuscire a causa di questi stessi problemi di concorrenza."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> object retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XML data was loaded using the <xref:System.Web.UI.WebControls.XmlDataSource.Data*> property instead of the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property.  \n  \n \\- or -  \n  \n A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not have the correct permissions for the Web resource."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Accesso negato al percorso specificato per il <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.ComponentModel.IListSource.ContainsListCollection*>.</xref:System.ComponentModel.IListSource.ContainsListCollection*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.XmlDataSource>esegue il cast dell&quot;istanza per il <xref:System.ComponentModel.IListSource>interfaccia.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la raccolta è una raccolta di <xref:System.Collections.IList>oggetti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.ComponentModel.IListSource.GetList*>.</xref:System.ComponentModel.IListSource.GetList*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.XmlDataSource>esegue il cast dell&quot;istanza per il <xref:System.ComponentModel.IListSource>interfaccia.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "Oggetto che implementa <xref:System.Collections.IList>che può essere associato a un&quot;origine dati.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  id: System#Web#UI#IDataSource#GetView(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la vista origine dati denominata associata al controllo origine dati."
  syntax:
    content: System.Web.UI.DataSourceView IDataSource.GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Il nome della visualizzazione da recuperare. Se &lt;xref:System.String?displayProperty=fullName&gt; è specificato, la visualizzazione predefinita per il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo viene recuperato."
    return:
      type: System.Web.UI.DataSourceView
      description: "Restituisce l&quot;oggetto denominato <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> oggetto associato di <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  id: System#Web#UI#IDataSource#GetViewNames
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Web.UI.IDataSource.GetViewNames*>.</xref:System.Web.UI.IDataSource.GetViewNames*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.XmlDataSource>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IDataSource>interfaccia.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.ICollection IDataSource.GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Oggetto che implementa <xref:System.Collections.ICollection>contenente i nomi che rappresenta l&quot;elenco di oggetti di visualizzazione associato il <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> oggetto.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  id: Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un blocco di dati di foglio di stile XSL (Extensible Language) che definisce una trasformazione XSLT da eseguire sui dati XML mediante il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo."
  remarks: "Negli scenari dichiarativi, la proprietà di trasformazione è specificata come una proprietà interna multilinea del <xref:System.Web.UI.WebControls.XmlDataSource>oggetto.</xref:System.Web.UI.WebControls.XmlDataSource> Una proprietà interna è compatibile con i dati del foglio di stile XSL, poiché consente di formattare il foglio di stile in alcun modo e ignorare i problemi di spaziatura interna di caratteri, ad esempio padding di virgolette singole.       Se entrambi i <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>e vengono impostate le proprietà di trasformazione, il <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>proprietà ha la precedenza e i dati di file di foglio di stile XSL (XSL) viene utilizzati anziché gli elementi del foglio di stile specificati nella proprietà Transform.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> Se un&quot;espressione XPath viene impostata utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà, questa viene applicata dopo i dati XML vengono trasformati.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Se si modifica il valore della proprietà di trasformazione, il <xref:System.Web.UI.IDataSource.DataSourceChanged>viene generato l&quot;evento.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se è abilitata la memorizzazione nella cache e si modifica il valore di trasformazione, la cache viene invalidata.      > [!NOTE] > La <xref:System.Web.UI.WebControls.XmlDataSource>classe utilizza deprecate <xref:System.Xml.Xsl.XslTransform>classe per eseguire trasformazioni XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Se si desidera utilizzare le funzionalità del foglio di stile che sono stati introdotti dopo la <xref:System.Xml.Xsl.XslTransform>classe è stata deprecata, applicare le trasformazioni manualmente utilizzando la <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display transformed XML data. The style sheet that performs the transformation is defined inline by the Transform property of the data source control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>Todd</firstn>  \n         <lastn>Rowe</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: public virtual string Transform { get; set; }
    return:
      type: System.String
      description: "Codice XSL inline che definisce una trasformazione XML da eseguire sui dati contenuti una stringa di <> </> *> o <> </> *> proprietà. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il caricamento del documento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fornisce un elenco di argomenti XSLT che vengono utilizzati con il foglio di stile definito per il <> </> *> o <> </> *> proprietà per eseguire una trasformazione sui dati XML."
  remarks: "Impostare la proprietà TransformArgumentList quando il <xref:System.Web.UI.WebControls.XmlDataSource.Transforming>evento viene generato per verificare i parametri XSLT sono disponibili nel momento in cui la trasformazione XSLT viene applicata ai dati XML.</xref:System.Web.UI.WebControls.XmlDataSource.Transforming>       Se il <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>è impostata su `true` e la proprietà TransformArgumentList è impostata, le voci della cache non vengono invalidate automaticamente quando si modificano i parametri nell&quot;elenco di argomenti di trasformazioni.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> In tal caso, è necessario scrivere codice per invalidare la cache impostando la <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_437_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_437_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "Un <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> oggetto che contiene i parametri XSLT e gli oggetti da applicare ai dati XML quando viene caricato dal <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  id: TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Specifica il nome del file di un file di foglio di stile XSL (Extensible Language) (con estensione xsl) che definisce una trasformazione XSLT da eseguire sui dati XML mediante il <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controllo."
  remarks: "Se entrambi i TransformFile e <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>sono impostate, la proprietà TransformFile ha la precedenza e i dati di file di foglio di stile XSL (XSL) viene utilizzati anziché gli elementi del foglio di stile specificati nel <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>proprietà.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se un&quot;espressione XPath viene impostata utilizzando il <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>proprietà, questa viene applicata dopo i dati XML vengono trasformati.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Se si modifica il valore di <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>proprietà, il <xref:System.Web.UI.IDataSource.DataSourceChanged>evento viene generato.</xref:System.Web.UI.IDataSource.DataSourceChanged> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se è abilitata la memorizzazione nella cache e si modifica il valore di <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, la cache viene invalidata.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      > [!NOTE] > La <xref:System.Web.UI.WebControls.XmlDataSource>classe utilizza deprecate <xref:System.Xml.Xsl.XslTransform>classe per eseguire trasformazioni XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Se si desidera utilizzare le funzionalità del foglio di stile che sono stati introdotti dopo la <xref:System.Xml.Xsl.XslTransform>classe è stata deprecata, applicare le trasformazioni manualmente utilizzando la <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control and a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data on a Web form. The transformation is performed using the style sheet indicated by the TransformFile property. You can optionally supply transformation arguments for the style sheet using an <xref:System.Xml.Xsl.XsltArgumentList>. For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_625_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_625_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XSL style sheet that performs the XML transformation has the following structure:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"price\">  \n       <xsl:value-of select=\"price\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual string TransformFile { get; set; }
    return:
      type: System.String
      description: "Il percorso fisico assoluto o relativo del file del foglio di stile XSL che definisce una trasformazione XML da eseguire sui dati contenuti nel <> </> *> o <> </> *> proprietà. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il caricamento del documento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  id: Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che il foglio di stile è definito dal <> </> *> proprietà o identificati dal <> </> *> proprietà viene applicata ai dati XML."
  remarks: "Gestire l&quot;evento di trasformazione per impostare il <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>proprietà con un <xref:System.Xml.Xsl.XsltArgumentList>dell&quot;oggetto prima di <xref:System.Web.UI.WebControls.XmlDataSource>controllo esegue una trasformazione XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Xml.Xsl.XsltArgumentList> </xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the Transforming event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_49_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_49_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public event EventHandler Transforming;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  id: XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Specifica un&quot;espressione XPath da applicare ai dati XML contenuti di <> </> *> proprietà o il file XML indicato dal <> </> *> proprietà."
  remarks: "Per ulteriori informazioni sulle espressioni di associazione di dati XPath, vedere [Binding di un controllo tabulare al controllo XmlDataSource](http://msdn.microsoft.com/en-us/d6bf202f-6454-45fd-9424-e17f6c7eafe8)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data that has been filtered using an XPath expression. In this example, XPath syntax is used to filter the XML data when the XPath property of the data source control is set, and also binds elements of the <xref:System.Web.UI.WebControls.Repeater> control template to the XML data.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_422_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_422_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```"
  syntax:
    content: public virtual string XPath { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un&quot;espressione XPath che può essere utilizzata per filtrare i dati contenuti il <> </> *> proprietà o il file XML indicato dal <> </> *> proprietà. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.XPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il caricamento del documento."
  platform:
  - net462
references:
- uid: System.Web.UI.HierarchicalDataSourceControl
  isExternal: false
  name: System.Web.UI.HierarchicalDataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource.XmlDataSource
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: XmlDataSource.GetHierarchicalView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument
  nameWithType: XmlDataSource.GetXmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming
  nameWithType: XmlDataSource.OnTransforming
- uid: System.Web.UI.WebControls.XmlDataSource.Save*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save
  nameWithType: XmlDataSource.Save
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames
- uid: System.Web.UI.WebControls.XmlDataSource.Transform*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.XPath*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
