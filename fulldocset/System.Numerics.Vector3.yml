### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector3
  id: Vector3
  children:
  - System.Numerics.Vector3.#ctor(System.Single)
  - System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  - System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  - System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.CopyTo(System.Single[])
  - System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  - System.Numerics.Vector3.Equals(System.Object)
  - System.Numerics.Vector3.GetHashCode
  - System.Numerics.Vector3.Length
  - System.Numerics.Vector3.LengthSquared
  - System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  - System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  - System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  - System.Numerics.Vector3.One
  - System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  - System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  - System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.ToString
  - System.Numerics.Vector3.ToString(System.String)
  - System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  - System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector3.UnitX
  - System.Numerics.Vector3.UnitY
  - System.Numerics.Vector3.UnitZ
  - System.Numerics.Vector3.X
  - System.Numerics.Vector3.Y
  - System.Numerics.Vector3.Z
  - System.Numerics.Vector3.Zero
  langs:
  - csharp
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
  type: Struct
  summary: "Rappresenta un vettore con tre valori a virgola mobile a precisione singola."
  remarks: "La struttura Vector3 fornisce supporto per l&quot;accelerazione hardware."
  syntax:
    content: 'public struct Vector3 : IEquatable<System.Numerics.Vector3>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector3>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: System.Numerics.Vector3.Vector3(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un nuovo <xref href=&quot;System.Numerics.Vector3&quot;> </xref> oggetto i cui tre elementi hanno lo stesso valore."
  syntax:
    content: public Vector3 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Valore da assegnare a tutti e tre gli elementi."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  id: '#ctor(System.Numerics.Vector2,System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Vector2,Single)
  nameWithType: Vector3.Vector3(Vector2,Single)
  fullName: System.Numerics.Vector3.Vector3(Vector2,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un nuovo <xref href=&quot;System.Numerics.Vector3&quot;> </xref> oggetto dall&quot;oggetto specificato <xref href=&quot;System.Numerics.Vector2&quot;> </xref> oggetto e il valore specificato."
  syntax:
    content: public Vector3 (System.Numerics.Vector2 value, float z);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vettore con due elementi."
    - id: z
      type: System.Single
      description: "Valore aggiuntivo da assegnare al <xref href=&quot;System.Numerics.Vector3.Z&quot;> </xref> campo."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Single,Single,Single)
  nameWithType: Vector3.Vector3(Single,Single,Single)
  fullName: System.Numerics.Vector3.Vector3(Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Crea un vettore i cui elementi hanno i valori specificati."
  syntax:
    content: public Vector3 (float x, float y, float z);
    parameters:
    - id: x
      type: System.Single
      description: "Il valore da assegnare al <xref href=&quot;System.Numerics.Vector3.X&quot;> </xref> campo."
    - id: y
      type: System.Single
      description: "Il valore da assegnare al <xref href=&quot;System.Numerics.Vector3.Y&quot;> </xref> campo."
    - id: z
      type: System.Single
      description: "Il valore da assegnare al <xref href=&quot;System.Numerics.Vector3.Z&quot;> </xref> campo."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  id: Abs(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: System.Numerics.Vector3.Abs(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un vettore i cui elementi sono i valori assoluti di ognuno degli elementi del vettore specificato."
  syntax:
    content: public static System.Numerics.Vector3 Abs (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore."
    return:
      type: System.Numerics.Vector3
      description: "Il valore assoluto del vettore."
  overload: System.Numerics.Vector3.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Add(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Add(Vector3,Vector3)
  nameWithType: Vector3.Add(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Add(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Somma due vettori."
  syntax:
    content: public static System.Numerics.Vector3 Add (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore da sommare."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore da sommare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore sommato."
  overload: System.Numerics.Vector3.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Clamp(Vector3,Vector3,Vector3)
  nameWithType: Vector3.Clamp(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Vector3.Clamp(Vector3,Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Limita un vettore tra un minimo e un valore massimo."
  syntax:
    content: public static System.Numerics.Vector3 Clamp (System.Numerics.Vector3 value1, System.Numerics.Vector3 min, System.Numerics.Vector3 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Vettore da limitare."
    - id: min
      type: System.Numerics.Vector3
      description: "Il valore minimo."
    - id: max
      type: System.Numerics.Vector3
      description: "Il valore massimo."
    return:
      type: System.Numerics.Vector3
      description: "Vettore limitato."
  overload: System.Numerics.Vector3.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector3.CopyTo(Single[])
  fullName: System.Numerics.Vector3.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Copia gli elementi del vettore in una matrice specificata."
  remarks: '`array` must have at least three elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "Matrice di destinazione."
  overload: System.Numerics.Vector3.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di elementi nell&quot;istanza corrente è maggiore di quello nella matrice."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>è multidimensionale."
  platform:
  - net462
- uid: System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector3.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector3.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Copia gli elementi del vettore in una matrice specificata, partendo dalla posizione dell&quot;indice specificato."
  remarks: '`array`deve avere un numero sufficiente di elementi per contenere gli elementi del vettore di tre. In altre parole, gli elementi `index`, `index` + 1, e `index` + 2 deve esistere nel `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "Matrice di destinazione."
    - id: index
      type: System.Int32
      description: "Indice in cui copiare il primo elemento del vettore."
  overload: System.Numerics.Vector3.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il numero di elementi nell&quot;istanza corrente è maggiore di quello nella matrice."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore o uguale alla lunghezza della matrice."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>è multidimensionale."
  platform:
  - net462
- uid: System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Cross(Vector3,Vector3)
  nameWithType: Vector3.Cross(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Cross(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcola il prodotto incrociato di due vettori."
  syntax:
    content: public static System.Numerics.Vector3 Cross (System.Numerics.Vector3 vector1, System.Numerics.Vector3 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: vector2
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Il prodotto incrociato."
  overload: System.Numerics.Vector3.Cross*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Distance(Vector3,Vector3)
  nameWithType: Vector3.Distance(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Distance(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcola la distanza euclidea tra due punti specificati."
  syntax:
    content: public static float Distance (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Il primo punto."
    - id: value2
      type: System.Numerics.Vector3
      description: "Secondo punto."
    return:
      type: System.Single
      description: "Distanza."
  overload: System.Numerics.Vector3.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  id: DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: DistanceSquared(Vector3,Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3,Vector3)
  fullName: System.Numerics.Vector3.DistanceSquared(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la distanza euclidea quadrata tra due punti specificati."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Il primo punto."
    - id: value2
      type: System.Numerics.Vector3
      description: "Secondo punto."
    return:
      type: System.Single
      description: "Distanza quadratica."
  overload: System.Numerics.Vector3.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Divide(Vector3,Vector3)
  nameWithType: Vector3.Divide(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Divide(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide il primo vettore per il secondo."
  syntax:
    content: public static System.Numerics.Vector3 Divide (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore risultante dalla divisione."
  overload: System.Numerics.Vector3.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  id: Divide(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Divide(Vector3,Single)
  nameWithType: Vector3.Divide(Vector3,Single)
  fullName: System.Numerics.Vector3.Divide(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide il vettore specificato per un valore scalare specificato."
  syntax:
    content: public static System.Numerics.Vector3 Divide (System.Numerics.Vector3 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vettore."
    - id: divisor
      type: System.Single
      description: "Valore scalare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore risultante dalla divisione."
  overload: System.Numerics.Vector3.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Dot(Vector3,Vector3)
  nameWithType: Vector3.Dot(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Dot(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce il prodotto scalare di due vettori."
  syntax:
    content: public static float Dot (System.Numerics.Vector3 vector1, System.Numerics.Vector3 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: vector2
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Single
      description: "Prodotto scalare."
  overload: System.Numerics.Vector3.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  id: Equals(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: System.Numerics.Vector3.Equals(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se questa istanza e un altro vettore sono uguali."
  remarks: "Due vettori sono uguali se i relativi <xref:System.Numerics.Vector3>, <xref:System.Numerics.Vector3>, e <xref:System.Numerics.Vector3>elementi sono uguali.</xref:System.Numerics.Vector3> </xref:System.Numerics.Vector3> </xref:System.Numerics.Vector3>"
  syntax:
    content: public bool Equals (System.Numerics.Vector3 other);
    parameters:
    - id: other
      type: System.Numerics.Vector3
      description: "L&quot;altro vettore."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due vettori sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Vector3.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: System.Numerics.Vector3.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se questa istanza e un oggetto specificato sono uguali."
  remarks: "L&quot;istanza corrente e `obj` sono uguali se `obj` è un <xref:System.Numerics.Vector3>oggetto e i relativi elementi corrispondenti sono uguali.</xref:System.Numerics.Vector3>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con l&quot;istanza corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza corrente e <code> obj </code> sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: System.Numerics.Vector3.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash."
  overload: System.Numerics.Vector3.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Length
  id: Length
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Length()
  nameWithType: Vector3.Length()
  fullName: System.Numerics.Vector3.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la lunghezza di questo oggetto vettore."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "Lunghezza del vettore."
  overload: System.Numerics.Vector3.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector3.LengthSquared()
  fullName: System.Numerics.Vector3.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la lunghezza del vettore al quadrato."
  remarks: "Questa operazione offre prestazioni migliori rispetto a una chiamata al <xref:System.Numerics.Vector3.Length%2A>metodo.</xref:System.Numerics.Vector3.Length%2A>"
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "Lunghezza del vettore al quadrato."
  overload: System.Numerics.Vector3.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  id: Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Lerp(Vector3,Vector3,Single)
  nameWithType: Vector3.Lerp(Vector3,Vector3,Single)
  fullName: System.Numerics.Vector3.Lerp(Vector3,Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Esegue un&quot;interpolazione lineare tra due vettori in base al peso specificato."
  syntax:
    content: public static System.Numerics.Vector3 Lerp (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: value2
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    - id: amount
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che indica il peso di `value2`."
    return:
      type: System.Numerics.Vector3
      description: "Vettore interpolato."
  overload: System.Numerics.Vector3.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Max(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Max(Vector3,Vector3)
  nameWithType: Vector3.Max(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Max(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un vettore i cui elementi sono il numero massimo di ognuna delle coppie di elementi in due vettori specificati."
  syntax:
    content: public static System.Numerics.Vector3 Max (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: value2
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore massimizzato."
  overload: System.Numerics.Vector3.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Min(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Min(Vector3,Vector3)
  nameWithType: Vector3.Min(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Min(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un vettore i cui elementi sono il valore minimo di ognuna delle coppie di elementi in due vettori specificati."
  syntax:
    content: public static System.Numerics.Vector3 Min (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: value2
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore minimizzato."
  overload: System.Numerics.Vector3.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Vector3,Vector3)
  nameWithType: Vector3.Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica due vettori."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore prodotto."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  id: Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Vector3,Single)
  nameWithType: Vector3.Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica un vettore per un valore scalare specificato."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (System.Numerics.Vector3 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vettore da moltiplicare."
    - id: right
      type: System.Single
      description: "Valore scalare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore scalato."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  id: Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Single,Vector3)
  nameWithType: Vector3.Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Single,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica un valore scalare per un vettore specificato."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (float left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Single
      description: "Valore scalato."
    - id: right
      type: System.Numerics.Vector3
      description: "Vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore scalato."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  id: Negate(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Negate(Vector3)
  nameWithType: Vector3.Negate(Vector3)
  fullName: System.Numerics.Vector3.Negate(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Nega un vettore specificato."
  syntax:
    content: public static System.Numerics.Vector3 Negate (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore da negare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore negato."
  overload: System.Numerics.Vector3.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  id: Normalize(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: System.Numerics.Vector3.Normalize(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un vettore con la stessa direzione del vettore specificato, ma con una lunghezza di uno."
  syntax:
    content: public static System.Numerics.Vector3 Normalize (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore da normalizzare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore normalizzato."
  overload: System.Numerics.Vector3.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.One
  id: One
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: One
  nameWithType: Vector3.One
  fullName: System.Numerics.Vector3.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ottiene un vettore i cui 3 elementi sono uguali a uno."
  syntax:
    content: public static System.Numerics.Vector3 One { get; }
    return:
      type: System.Numerics.Vector3
      description: "Un vettore i cui tre elementi sono uguali a uno (ovvero, restituisce il vettore `(1,1,1)`."
  overload: System.Numerics.Vector3.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Addition(Vector3,Vector3)
  nameWithType: Vector3.op_Addition(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Addition(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Somma due vettori."
  remarks: "Il metodo di aggiunta definisce l&quot;operazione di addizione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Addition (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore da sommare."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore da sommare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore sommato."
  overload: System.Numerics.Vector3.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Division(Vector3,Vector3)
  nameWithType: Vector3.op_Division(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide il primo vettore per il secondo."
  remarks: "Il metodo di divisione definisce l&quot;operazione di divisione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Division (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore risultante dalla divisione <code> left </code> da <code> right </code>."
  overload: System.Numerics.Vector3.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  id: op_Division(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Division(Vector3,Single)
  nameWithType: Vector3.op_Division(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide il vettore specificato per un valore scalare specificato."
  remarks: "Il metodo di divisione definisce l&quot;operazione di divisione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Division (System.Numerics.Vector3 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Vettore."
    - id: value2
      type: System.Single
      description: "Valore scalare."
    return:
      type: System.Numerics.Vector3
      description: "Il risultato della divisione."
  overload: System.Numerics.Vector3.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Equality(Vector3,Vector3)
  nameWithType: Vector3.op_Equality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Equality(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali."
  remarks: "Due <xref:System.Numerics.Vector3>gli oggetti sono uguale se ogni elemento in `left` è uguale all&quot;elemento corrispondente in `right`.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore da confrontare."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Inequality(Vector3,Vector3)
  nameWithType: Vector3.op_Inequality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Inequality(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un valore che indica se due vettori specificati non sono uguali."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore da confrontare."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Vector3,Vector3)
  nameWithType: Vector3.op_Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica due vettori."
  remarks: "La moltiplicazione metodo definisce l&quot;operazione di moltiplicazione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore prodotto."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  id: op_Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Vector3,Single)
  nameWithType: Vector3.op_Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica il vettore specificato per il valore scalare specificato."
  remarks: "La moltiplicazione metodo definisce l&quot;operazione di moltiplicazione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (System.Numerics.Vector3 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vettore."
    - id: right
      type: System.Single
      description: "Valore scalare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore scalato."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  id: op_Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Single,Vector3)
  nameWithType: Vector3.op_Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Single,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Moltiplica il valore scalare per il vettore specificato."
  remarks: "La moltiplicazione metodo definisce l&quot;operazione di moltiplicazione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (float left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Single
      description: "Vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Valore scalare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore scalato."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Subtraction(Vector3,Vector3)
  nameWithType: Vector3.op_Subtraction(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Subtraction(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Sottrae il secondo vettore dal primo."
  remarks: "Il metodo di sottrazione definisce l&quot;operazione di sottrazione per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Subtraction (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore risultante dalla sottrazione di <code> right </code> da <code> left </code>."
  overload: System.Numerics.Vector3.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  id: op_UnaryNegation(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_UnaryNegation(Vector3)
  nameWithType: Vector3.op_UnaryNegation(Vector3)
  fullName: System.Numerics.Vector3.op_UnaryNegation(Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Nega il vettore specificato."
  remarks: "Il metodo UnaryNegation definisce l&quot;operazione di negazione unario per <xref:System.Numerics.Vector3>oggetti.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_UnaryNegation (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore da negare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore negato."
  overload: System.Numerics.Vector3.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Reflect(Vector3,Vector3)
  nameWithType: Vector3.Reflect(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Reflect(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la reflection di un vettore da una superficie con la normale specificata."
  syntax:
    content: public static System.Numerics.Vector3 Reflect (System.Numerics.Vector3 vector, System.Numerics.Vector3 normal);
    parameters:
    - id: vector
      type: System.Numerics.Vector3
      description: "Vettore di origine."
    - id: normal
      type: System.Numerics.Vector3
      description: "Normale della superficie riflessa."
    return:
      type: System.Numerics.Vector3
      description: "Vettore riflesso."
  overload: System.Numerics.Vector3.Reflect*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  id: SquareRoot(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: SquareRoot(Vector3)
  nameWithType: Vector3.SquareRoot(Vector3)
  fullName: System.Numerics.Vector3.SquareRoot(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce un vettore i cui elementi sono la radice quadrata di ognuno degli elementi del vettore specificato."
  syntax:
    content: public static System.Numerics.Vector3 SquareRoot (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore radice quadrata."
  overload: System.Numerics.Vector3.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Subtract(Vector3,Vector3)
  nameWithType: Vector3.Subtract(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Subtract(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Sottrae il secondo vettore dal primo."
  syntax:
    content: public static System.Numerics.Vector3 Subtract (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Primo vettore."
    - id: right
      type: System.Numerics.Vector3
      description: "Secondo vettore."
    return:
      type: System.Numerics.Vector3
      description: "Vettore differenza."
  overload: System.Numerics.Vector3.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString
  id: ToString
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: System.Numerics.Vector3.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la rappresentazione di stringa dell&quot;istanza corrente usando la formattazione predefinita."
  remarks: "Questo metodo restituisce una stringa in cui ciascun elemento del vettore viene formattato usando la stringa di formato (generale) &quot;G&quot; e le convenzioni di formattazione delle impostazioni cultura del thread corrente. Il &quot;\\<&quot; e &quot;>&quot; caratteri vengono utilizzati per iniziare e terminare la stringa e le impostazioni cultura correnti <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Rappresentazione di stringa dell&quot;istanza corrente."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector3.ToString(String)
  fullName: System.Numerics.Vector3.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la rappresentazione di stringa dell&quot;istanza corrente usando la stringa di formato specificata per formattare i singoli elementi."
  remarks: "Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando `format` e le convenzioni di formattazione delle impostazioni cultura correnti. Il &quot;\\<&quot; e &quot;>&quot; caratteri vengono utilizzati per iniziare e terminare la stringa e le impostazioni cultura correnti <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "Oggetto [standard](~/add/includes/ajax-current-ext-md.md) o [stringa di formato numerico personalizzata](~/add/includes/ajax-current-ext-md.md) che definisce il formato dei singoli elementi."
    return:
      type: System.String
      description: "Rappresentazione di stringa dell&quot;istanza corrente."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector3.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector3.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restituisce la rappresentazione di stringa dell&quot;istanza corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura."
  remarks: "Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando `format` e `formatProvider`. Il &quot;\\<&quot; e &quot;>&quot; caratteri vengono utilizzati per iniziare e terminare la stringa e il provider di formato <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "Oggetto [standard](~/add/includes/ajax-current-ext-md.md) o [stringa di formato numerico personalizzata](~/add/includes/ajax-current-ext-md.md) che definisce il formato dei singoli elementi."
    - id: formatProvider
      type: System.IFormatProvider
      description: "Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura."
    return:
      type: System.String
      description: "Rappresentazione di stringa dell&quot;istanza corrente."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector3.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.Transform(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trasforma un vettore in base a una 4x4 matrice specificata."
  syntax:
    content: public static System.Numerics.Vector3 Transform (System.Numerics.Vector3 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector3
      description: "Vettore da trasformare."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Matrice di trasformazione."
    return:
      type: System.Numerics.Vector3
      description: "Vettore trasformato."
  overload: System.Numerics.Vector3.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector3.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector3.Transform(Vector3,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trasforma un vettore in base al valore di rotazione Quaternion specificato."
  syntax:
    content: public static System.Numerics.Vector3 Transform (System.Numerics.Vector3 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vettore da ruotare."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Rotazione da applicare."
    return:
      type: System.Numerics.Vector3
      description: "Vettore trasformato."
  overload: System.Numerics.Vector3.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: TransformNormal(Vector3,Matrix4x4)
  nameWithType: Vector3.TransformNormal(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.TransformNormal(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trasforma un vettore normale per la 4x4 matrice specificata."
  syntax:
    content: public static System.Numerics.Vector3 TransformNormal (System.Numerics.Vector3 normal, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: "Vettore di origine."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "La matrice."
    return:
      type: System.Numerics.Vector3
      description: "Vettore trasformato."
  overload: System.Numerics.Vector3.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitX
  id: UnitX
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: System.Numerics.Vector3.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ottiene il vettore (1,&0;,0)."
  syntax:
    content: public static System.Numerics.Vector3 UnitX { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vettore `(1,0,0)`."
  overload: System.Numerics.Vector3.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitY
  id: UnitY
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: System.Numerics.Vector3.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ottiene il vettore (0,&1;,0)."
  syntax:
    content: public static System.Numerics.Vector3 UnitY { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vettore `(0,1,0)`..."
  overload: System.Numerics.Vector3.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitZ
  id: UnitZ
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: System.Numerics.Vector3.UnitZ
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ottiene il vettore (0,&0;,1)."
  syntax:
    content: public static System.Numerics.Vector3 UnitZ { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vettore `(0,0,1)`."
  overload: System.Numerics.Vector3.UnitZ*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.X
  id: X
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: X
  nameWithType: Vector3.X
  fullName: System.Numerics.Vector3.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Componente X del vettore."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Y
  id: Y
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Y
  nameWithType: Vector3.Y
  fullName: System.Numerics.Vector3.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Componente Y del vettore."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Z
  id: Z
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Z
  nameWithType: Vector3.Z
  fullName: System.Numerics.Vector3.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Componente Z del vettore."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Zero
  id: Zero
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Zero
  nameWithType: Vector3.Zero
  fullName: System.Numerics.Vector3.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ottiene un vettore i cui 3 elementi sono uguali a zero."
  syntax:
    content: public static System.Numerics.Vector3 Zero { get; }
    return:
      type: System.Numerics.Vector3
      description: "Un vettore i cui tre elementi sono uguali a zero (ovvero, restituisce il vettore `(0,0,0)`."
  overload: System.Numerics.Vector3.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector3.#ctor(System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: System.Numerics.Vector3.Vector3(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Vector2,Single)
  nameWithType: Vector3.Vector3(Vector2,Single)
  fullName: System.Numerics.Vector3.Vector3(Vector2,Single)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Single,Single,Single)
  nameWithType: Vector3.Vector3(Single,Single,Single)
  fullName: System.Numerics.Vector3.Vector3(Single,Single,Single)
- uid: System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: System.Numerics.Vector3.Abs(Vector3)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Add(Vector3,Vector3)
  nameWithType: Vector3.Add(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Add(Vector3,Vector3)
- uid: System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Clamp(Vector3,Vector3,Vector3)
  nameWithType: Vector3.Clamp(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Vector3.Clamp(Vector3,Vector3,Vector3)
- uid: System.Numerics.Vector3.CopyTo(System.Single[])
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector3.CopyTo(Single[])
  fullName: System.Numerics.Vector3.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector3.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector3.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Cross(Vector3,Vector3)
  nameWithType: Vector3.Cross(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Cross(Vector3,Vector3)
- uid: System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Distance(Vector3,Vector3)
  nameWithType: Vector3.Distance(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Distance(Vector3,Vector3)
- uid: System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: DistanceSquared(Vector3,Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3,Vector3)
  fullName: System.Numerics.Vector3.DistanceSquared(Vector3,Vector3)
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide(Vector3,Vector3)
  nameWithType: Vector3.Divide(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Divide(Vector3,Vector3)
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide(Vector3,Single)
  nameWithType: Vector3.Divide(Vector3,Single)
  fullName: System.Numerics.Vector3.Divide(Vector3,Single)
- uid: System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Dot(Vector3,Vector3)
  nameWithType: Vector3.Dot(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Dot(Vector3,Vector3)
- uid: System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: System.Numerics.Vector3.Equals(Vector3)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector3.Equals(System.Object)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: System.Numerics.Vector3.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector3.GetHashCode
  parent: System.Numerics.Vector3
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: System.Numerics.Vector3.GetHashCode()
- uid: System.Numerics.Vector3.Length
  parent: System.Numerics.Vector3
  isExternal: false
  name: Length()
  nameWithType: Vector3.Length()
  fullName: System.Numerics.Vector3.Length()
- uid: System.Numerics.Vector3.LengthSquared
  parent: System.Numerics.Vector3
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector3.LengthSquared()
  fullName: System.Numerics.Vector3.LengthSquared()
- uid: System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Lerp(Vector3,Vector3,Single)
  nameWithType: Vector3.Lerp(Vector3,Vector3,Single)
  fullName: System.Numerics.Vector3.Lerp(Vector3,Vector3,Single)
- uid: System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Max(Vector3,Vector3)
  nameWithType: Vector3.Max(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Max(Vector3,Vector3)
- uid: System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Min(Vector3,Vector3)
  nameWithType: Vector3.Min(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Min(Vector3,Vector3)
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Vector3,Vector3)
  nameWithType: Vector3.Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Vector3)
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Vector3,Single)
  nameWithType: Vector3.Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Single)
- uid: System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Single,Vector3)
  nameWithType: Vector3.Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Single,Vector3)
- uid: System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Negate(Vector3)
  nameWithType: Vector3.Negate(Vector3)
  fullName: System.Numerics.Vector3.Negate(Vector3)
- uid: System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: System.Numerics.Vector3.Normalize(Vector3)
- uid: System.Numerics.Vector3.One
  parent: System.Numerics.Vector3
  isExternal: false
  name: One
  nameWithType: Vector3.One
  fullName: System.Numerics.Vector3.One
- uid: System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Addition(Vector3,Vector3)
  nameWithType: Vector3.op_Addition(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Addition(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division(Vector3,Vector3)
  nameWithType: Vector3.op_Division(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division(Vector3,Single)
  nameWithType: Vector3.op_Division(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Single)
- uid: System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Equality(Vector3,Vector3)
  nameWithType: Vector3.op_Equality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Equality(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Inequality(Vector3,Vector3)
  nameWithType: Vector3.op_Inequality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Inequality(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Vector3,Vector3)
  nameWithType: Vector3.op_Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Vector3,Single)
  nameWithType: Vector3.op_Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Single)
- uid: System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Single,Vector3)
  nameWithType: Vector3.op_Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Single,Vector3)
- uid: System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Subtraction(Vector3,Vector3)
  nameWithType: Vector3.op_Subtraction(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Subtraction(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_UnaryNegation(Vector3)
  nameWithType: Vector3.op_UnaryNegation(Vector3)
  fullName: System.Numerics.Vector3.op_UnaryNegation(Vector3)
- uid: System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Reflect(Vector3,Vector3)
  nameWithType: Vector3.Reflect(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Reflect(Vector3,Vector3)
- uid: System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: SquareRoot(Vector3)
  nameWithType: Vector3.SquareRoot(Vector3)
  fullName: System.Numerics.Vector3.SquareRoot(Vector3)
- uid: System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Subtract(Vector3,Vector3)
  nameWithType: Vector3.Subtract(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Subtract(Vector3,Vector3)
- uid: System.Numerics.Vector3.ToString
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: System.Numerics.Vector3.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector3.ToString(System.String)
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString(String)
  nameWithType: Vector3.ToString(String)
  fullName: System.Numerics.Vector3.ToString(String)
- uid: System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector3.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector3.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector3.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.Transform(Vector3,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector3.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector3.Transform(Vector3,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  isExternal: false
  name: TransformNormal(Vector3,Matrix4x4)
  nameWithType: Vector3.TransformNormal(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.TransformNormal(Vector3,Matrix4x4)
- uid: System.Numerics.Vector3.UnitX
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: System.Numerics.Vector3.UnitX
- uid: System.Numerics.Vector3.UnitY
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: System.Numerics.Vector3.UnitY
- uid: System.Numerics.Vector3.UnitZ
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: System.Numerics.Vector3.UnitZ
- uid: System.Numerics.Vector3.X
  parent: System.Numerics.Vector3
  isExternal: false
  name: X
  nameWithType: Vector3.X
  fullName: System.Numerics.Vector3.X
- uid: System.Numerics.Vector3.Y
  parent: System.Numerics.Vector3
  isExternal: false
  name: Y
  nameWithType: Vector3.Y
  fullName: System.Numerics.Vector3.Y
- uid: System.Numerics.Vector3.Z
  parent: System.Numerics.Vector3
  isExternal: false
  name: Z
  nameWithType: Vector3.Z
  fullName: System.Numerics.Vector3.Z
- uid: System.Numerics.Vector3.Zero
  parent: System.Numerics.Vector3
  isExternal: false
  name: Zero
  nameWithType: Vector3.Zero
  fullName: System.Numerics.Vector3.Zero
- uid: System.Numerics.Vector3.#ctor*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3
  nameWithType: Vector3.Vector3
- uid: System.Numerics.Vector3.Abs*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Abs
  nameWithType: Vector3.Abs
- uid: System.Numerics.Vector3.Add*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Add
  nameWithType: Vector3.Add
- uid: System.Numerics.Vector3.Clamp*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Clamp
  nameWithType: Vector3.Clamp
- uid: System.Numerics.Vector3.CopyTo*
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo
  nameWithType: Vector3.CopyTo
- uid: System.Numerics.Vector3.Cross*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Cross
  nameWithType: Vector3.Cross
- uid: System.Numerics.Vector3.Distance*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Distance
  nameWithType: Vector3.Distance
- uid: System.Numerics.Vector3.DistanceSquared*
  parent: System.Numerics.Vector3
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector3.DistanceSquared
- uid: System.Numerics.Vector3.Divide*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide
  nameWithType: Vector3.Divide
- uid: System.Numerics.Vector3.Dot*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Dot
  nameWithType: Vector3.Dot
- uid: System.Numerics.Vector3.Equals*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals
  nameWithType: Vector3.Equals
- uid: System.Numerics.Vector3.GetHashCode*
  parent: System.Numerics.Vector3
  isExternal: false
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
- uid: System.Numerics.Vector3.Length*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Length
  nameWithType: Vector3.Length
- uid: System.Numerics.Vector3.LengthSquared*
  parent: System.Numerics.Vector3
  isExternal: false
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
- uid: System.Numerics.Vector3.Lerp*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Lerp
  nameWithType: Vector3.Lerp
- uid: System.Numerics.Vector3.Max*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Max
  nameWithType: Vector3.Max
- uid: System.Numerics.Vector3.Min*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Min
  nameWithType: Vector3.Min
- uid: System.Numerics.Vector3.Multiply*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply
  nameWithType: Vector3.Multiply
- uid: System.Numerics.Vector3.Negate*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Negate
  nameWithType: Vector3.Negate
- uid: System.Numerics.Vector3.Normalize*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Normalize
  nameWithType: Vector3.Normalize
- uid: System.Numerics.Vector3.One*
  parent: System.Numerics.Vector3
  isExternal: false
  name: One
  nameWithType: Vector3.One
- uid: System.Numerics.Vector3.op_Addition*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Addition
  nameWithType: Vector3.op_Addition
- uid: System.Numerics.Vector3.op_Division*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division
  nameWithType: Vector3.op_Division
- uid: System.Numerics.Vector3.op_Equality*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Equality
  nameWithType: Vector3.op_Equality
- uid: System.Numerics.Vector3.op_Inequality*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Inequality
  nameWithType: Vector3.op_Inequality
- uid: System.Numerics.Vector3.op_Multiply*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply
  nameWithType: Vector3.op_Multiply
- uid: System.Numerics.Vector3.op_Subtraction*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector3.op_Subtraction
- uid: System.Numerics.Vector3.op_UnaryNegation*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector3.op_UnaryNegation
- uid: System.Numerics.Vector3.Reflect*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Reflect
  nameWithType: Vector3.Reflect
- uid: System.Numerics.Vector3.SquareRoot*
  parent: System.Numerics.Vector3
  isExternal: false
  name: SquareRoot
  nameWithType: Vector3.SquareRoot
- uid: System.Numerics.Vector3.Subtract*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Subtract
  nameWithType: Vector3.Subtract
- uid: System.Numerics.Vector3.ToString*
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString
  nameWithType: Vector3.ToString
- uid: System.Numerics.Vector3.Transform*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform
  nameWithType: Vector3.Transform
- uid: System.Numerics.Vector3.TransformNormal*
  parent: System.Numerics.Vector3
  isExternal: false
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
- uid: System.Numerics.Vector3.UnitX*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitX
  nameWithType: Vector3.UnitX
- uid: System.Numerics.Vector3.UnitY*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitY
  nameWithType: Vector3.UnitY
- uid: System.Numerics.Vector3.UnitZ*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitZ
  nameWithType: Vector3.UnitZ
- uid: System.Numerics.Vector3.Zero*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Zero
  nameWithType: Vector3.Zero
