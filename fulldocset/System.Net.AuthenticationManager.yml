### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "Gestisce i moduli di autenticazione chiamati durante il processo di autenticazione client."
  remarks: "AuthenticationManager è una classe statica che gestisce i moduli di autenticazione utilizzati da un&quot;applicazione. Quando viene effettuata una richiesta a risorse protette, le chiamate di AuthenticationManager il <xref:System.Net.AuthenticationManager.Authenticate%2A>metodo per ottenere un <xref:System.Net.Authorization>istanza da utilizzare nelle richieste successive.</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       AuthenticationManager query ogni modulo di autenticazione registrati per la chiamata di <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>metodo per ogni modulo.</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> Il primo modulo di autenticazione per restituire un <xref:System.Net.Authorization>istanza viene usata per autenticare la richiesta.</xref:System.Net.Authorization>       I moduli che forniscono il base, digest, negotiate, NTLM, e i tipi di autenticazione Kerberos sono registrati con AuthenticationManager per impostazione predefinita. I moduli di autenticazione aggiuntivi che implementano il <xref:System.Net.IAuthenticationModule>interfaccia può essere aggiunti mediante la <xref:System.Net.AuthenticationManager.Register%2A>metodo.</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> Moduli di autenticazione vengono chiamati nell&quot;ordine in cui sono stati aggiunti all&quot;elenco.      > [!NOTE] > Di Kerberos e negotiate tipo di autenticazione non è supportato in Windows 95/98 o Windows NT 4.0."
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Chiama ogni modulo di autenticazione registrati per trovare il primo modulo in grado di rispondere alla richiesta di autenticazione."
  remarks: "Le chiamate al metodo autentica il <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>metodo su ogni modulo di autenticazione registrati finché uno dei moduli risponde con un <xref:System.Net.Authorization>istanza.</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       Il primo <xref:System.Net.Authorization>istanza restituita viene usato per autenticare la richiesta.</xref:System.Net.Authorization> Se nessun modulo di autenticazione può autenticare la richiesta, il metodo Authenticate restituisce `null`.       Moduli di autenticazione vengono chiamati nell&quot;ordine in cui sono registrati con <xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "La richiesta restituita dalla risorsa Internet."
    - id: request
      type: System.Net.WebRequest
      description: "Il <xref:System.Net.WebRequest>che ha avviato la richiesta di autenticazione.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "Il <xref:System.Net.ICredentials>associato alla richiesta.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Un&quot;istanza di <xref href=&quot;System.Net.Authorization&quot;> </xref> classe contenente il risultato del tentativo di autorizzazione. Se non è presente alcun modulo per rispondere alla richiesta di autenticazione, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta i criteri delle credenziali da utilizzare per le richieste di risorse utilizzando la <xref:System.Net.HttpWebRequest>classe.</xref:System.Net.HttpWebRequest>"
  remarks: "I criteri delle credenziali determinano se inviare le credenziali quando si invia una richiesta per una risorsa di rete, ad esempio il contenuto di una pagina Web. Se le credenziali vengono inviate, è possono tentare i server che richiedono l&quot;autenticazione client autenticare il client quando viene ricevuta la richiesta anziché inviare una risposta che indica che le credenziali del client sono obbligatori. Quando si salva un round trip al server, si devono essere bilanciata con il rischio di sicurezza inerente l&quot;invio di credenziali attraverso la rete. Quando il server di destinazione non richiede l&quot;autenticazione client è consigliabile non inviare le credenziali.       I criteri delle credenziali verranno chiamato solo per le richieste che specificano le credenziali o utilizzano un <xref:System.Net.WebProxy>oggetto che specifica le credenziali.</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "Oggetto che implementa il <xref href=&quot;System.Net.ICredentialPolicy&quot;> </xref> interfaccia che determina se le credenziali vengono inviate con le richieste. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il dizionario che contiene i nomi dell&quot;entità servizio (SPN) che consentono di identificare gli host durante l&quot;autenticazione Kerberos per le richieste effettuate utilizzando <xref:System.Net.WebRequest>e le relative classi derivate.</xref:System.Net.WebRequest>"
  remarks: "Un nome SPN è un nome con cui un client identifica in modo univoco un&quot;istanza di un servizio o applicazione in un server per l&quot;autenticazione reciproca. Per impostazione predefinita è richiesta l&quot;autenticazione reciproca e desiderate impostando <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>per <xref:System.Net.Security.AuthenticationLevel>nella richiesta.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       Quando un <xref:System.Net.WebRequest>richiede l&quot;autenticazione reciproca, il nome SPN per la destinazione deve essere fornita dal client.</xref:System.Net.WebRequest> Se si conosce il nome SPN, è possibile aggiungere per il CustomTargetNameDictionary prima di inviare la richiesta. Se non sono state aggiunte informazioni relative a SPN al dizionario, la <xref:System.Net.AuthenticationManager>utilizza il <xref:System.Net.WebRequest.RequestUri%2A>metodo SPN più probabile; tuttavia, questo è un valore calcolato e potrebbe non essere corretto.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> Se viene tentata l&quot;autenticazione reciproca e ha esito negativo, è possibile controllare il dizionario per determinare il SPN calcolato. Se il protocollo di autenticazione non supporta l&quot;autenticazione reciproca, nel dizionario non viene immesso alcun nome SPN.       Per aggiungere un valore SPN al dizionario, utilizzare il <xref:System.Uri.AbsoluteUri%2A>del <xref:System.Net.WebRequest.RequestUri%2A>come chiave.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> Internamente, la chiave viene troncata per includere il <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>e <xref:System.Uri.Port%2A>in caso contrario il valore predefinito porta</xref:System.Uri.Port%2A> </xref:System.Uri.Host%2A> </xref:System.Uri.Scheme%2A>      > [!NOTE] > Richiede l&quot;accesso ai metodi e proprietà del CustomTargetNameDictionary <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> senza restrizioni      > [!NOTE] > L&quot;autenticazione Kerberos quando viene eseguita tramite un proxy, il proxy e il nome host finale dovrà essere risolto in un nome SPN. La risoluzione dei nomi proxy è protetto da un timeout. Risoluzione del nome host finale in un SPN richiede una ricerca DNS, e non vi è alcun timeout associato direttamente a questa operazione. Operazioni sincrone pertanto possono richiedere più di timeout. Per ovviare al problema, aggiungere un prefisso URI dell&quot;host finale alla cache SPN prima di effettuare richieste a esso.       Versione 3.5 SP1 ora per impostazione predefinita che specifica il nome host utilizzato nell&quot;URL della richiesta in SPN nello scambio di autenticazione NTLM (NT LAN Manager) quando non è impostata la proprietà CustomTargetNameDictionary. Il nome host utilizzato nell&quot;URL della richiesta potrebbe essere diverso dall&quot;intestazione Host specificato nella <xref:System.Net.HttpRequestHeader?displayProperty=fullName>nella richiesta del client.</xref:System.Net.HttpRequestHeader?displayProperty=fullName> Il nome host utilizzato nell&quot;URL della richiesta può essere diverso dal nome host effettivo del server, il nome del computer del server, l&quot;indirizzo IP del computer o l&quot;indirizzo di loopback. In questi casi, Windows avrà esito negativo della richiesta di autenticazione. Per risolvere il problema, è necessario inviare una notifica di Windows che il nome host utilizzato nell&quot;URL della richiesta del client richiesta (&quot;contoso&quot;, ad esempio) è in realtà un nome alternativo per il computer locale."
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Scrivibile <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> che contiene i valori del nome SPN per chiavi composte di informazioni sull&quot;host."
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Esegue l&quot;autenticazione preliminare una richiesta."
  remarks: "Se il modulo di autenticazione in grado di preautenticare la richiesta, il metodo PreAuthenticate restituisce un&quot;istanza di autenticazione e invia le informazioni di autorizzazione per il server in modalità preemptive anziché attendere che la risorsa per l&quot;emissione di un problema. Questo comportamento è illustrato nella sezione 3.3 di RFC 2617 (HTTP Authentication: Basic and Digest Authentication accesso). I moduli di autenticazione che supportano la preautenticazione consentono ai client di migliorare l&quot;efficienza di server, evitando causati da richieste di autenticazione aggiuntivi di round trip.       Set di richieste di moduli di autorizzazione in grado di preautenticare la <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>proprietà `true`.</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Oggetto <xref:System.Net.WebRequest>a una risorsa Internet.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "Il <xref:System.Net.ICredentials>associato alla richiesta.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Un&quot;istanza di <xref href=&quot;System.Net.Authorization&quot;> </xref> classe se la richiesta può essere preautenticata; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Registra un modulo di autenticazione con il gestore di autenticazione."
  remarks: "Il metodo Register aggiunge alla fine dell&quot;elenco di moduli denominati moduli di autenticazione il <xref:System.Net.AuthenticationManager.Authenticate%2A>metodo.</xref:System.Net.AuthenticationManager.Authenticate%2A> Moduli di autenticazione vengono chiamati nell&quot;ordine in cui sono stati aggiunti all&quot;elenco. Se un modulo con lo stesso <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>è già stato registrato, questo metodo rimuove il modulo registrato e aggiunge `authenticationModule` alla fine dell&quot;elenco.</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "Il <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> per registrare il gestore di autenticazione."
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un elenco di moduli di autenticazione che sono registrati con il gestore di autenticazione."
  remarks: "La proprietà RegisteredModules fornisce un <xref:System.Collections.IEnumerator>istanza che consente l&quot;elenco dei moduli di autenticazione per la lettura è registrata.</xref:System.Collections.IEnumerator> L&quot; <xref:System.Net.AuthenticationManager.Register%2A>metodo aggiunge i moduli per l&quot;elenco e il <xref:System.Net.AuthenticationManager.Unregister%2A>metodo rimuove i moduli da esso</xref:System.Net.AuthenticationManager.Unregister%2A> </xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che consente i moduli di autenticazione registrati da leggere.</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rimuove il modulo di autenticazione specificato dall&quot;elenco dei moduli registrati."
  remarks: "Il metodo Unregister rimuove il modulo di autenticazione specificato dall&quot;elenco dei moduli di autenticazione chiamati dal <xref:System.Net.AuthenticationManager.Authenticate%2A>metodo.</xref:System.Net.AuthenticationManager.Authenticate%2A> Il modulo deve essere aggiunto all&quot;elenco utilizzando il <xref:System.Net.AuthenticationManager.Register%2A>metodo può essere rimosso dall&quot;elenco.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "Il <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> da rimuovere dall&quot;elenco dei moduli registrati."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Specificato <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> non è registrato."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rimuove i moduli di autenticazione con lo schema di autenticazione specificato dall&quot;elenco dei moduli registrati."
  remarks: "Il <xref:System.Net.AuthenticationManager.Unregister%2A>metodo rimuove il modulo di autenticazione con lo schema di autenticazione specificato dall&quot;elenco dei moduli di autenticazione chiamati dal <xref:System.Net.AuthenticationManager.Authenticate%2A>metodo.</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> Il modulo deve essere aggiunto all&quot;elenco utilizzando il <xref:System.Net.AuthenticationManager.Register%2A>metodo può essere rimosso dall&quot;elenco.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "Lo schema di autenticazione del modulo da rimuovere."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Un modulo per questo schema di autenticazione non è registrato."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
