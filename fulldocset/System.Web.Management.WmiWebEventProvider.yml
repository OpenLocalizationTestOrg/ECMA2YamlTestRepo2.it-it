### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WmiWebEventProvider
  id: WmiWebEventProvider
  children:
  - System.Web.Management.WmiWebEventProvider.#ctor
  - System.Web.Management.WmiWebEventProvider.Flush
  - System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WmiWebEventProvider.Shutdown
  langs:
  - csharp
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider
  fullName: System.Web.Management.WmiWebEventProvider
  type: Class
  summary: "Implementa un provider di eventi che esegue il mapping degli eventi di monitoraggio dello stato ASP.NET per gli eventi di Strumentazione gestione Windows (WMI)."
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n ASP.NET uses this class to map health-monitoring events to WMI events. To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the WmiWebEventProvider class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.  \n  \n The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the WmiWebEventProvider class and mapped into WMI events. The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\\Microsoft.NET\\Framework\\\\*BuildNumber*. For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/en-us/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.  \n  \n> [!NOTE]\n>  The WmiWebEventProvider class and the health event types to monitor are already configured by default. The only thing you need to do is to define the rule for all the health events. Remember that the health events are not dispatched to the WmiWebEventProvider provider by default.  \n  \n [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._2_1.cs)]  \n  \n The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the WmiWebEventProvider provider to process all health-monitoring events.  \n  \n```  \n<healthMonitoring>  \n  <rules>  \n    <add   \n      name=\"Using Wmi\"  \n      eventName=\"All Events\"   \n      provider=\"WmiWebEventProvider\"   \n      profile=\"Critical\"/>  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WmiWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Management.WmiWebEventProvider&quot;> </xref> classe."
  remarks: "Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un&quot;istanza della <xref:System.Web.Management.TraceWebEventProvider>classe, ma è possibile chiamare questo costruttore quando si implementa un tipo di provider che eredita da questa classe.</xref:System.Web.Management.TraceWebEventProvider>"
  syntax:
    content: public WmiWebEventProvider ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Rimuove tutti gli eventi dal buffer del provider."
  remarks: "Quando viene chiamato questo metodo, tutti gli eventi nel buffer del provider vengono rimosse immediatamente, indipendentemente dal tempo trascorso dall&quot;ultima scrittura o il numero di eventi è nel buffer. L&quot;ora dell&quot;ultima scrittura viene reimpostato per l&quot;ora dell&quot;operazione di svuotamento. Chiamare questo metodo quando non è abilitato il meccanismo di memorizzazione nel buffer non ha alcun effetto."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Imposta i valori iniziali per questo oggetto."
  remarks: "In ASP.NET viene chiamato il metodo Initialize dopo la chiamata di <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A>costruttore.</xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> Questo metodo viene chiamato per inizializzare la <xref:System.Web.Management.WmiWebEventProvider>classe con le impostazioni di configurazione e il nome specificato nel file di configurazione.</xref:System.Web.Management.WmiWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Il nome utilizzato nel file di configurazione per identificare questo provider."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> oggetto che specifica gli attributi assegnati per questo provider nel file di configurazione."
  overload: System.Web.Management.WmiWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Elabora l&quot;evento passato al provider."
  remarks: "Si tratta del metodo che il monitoraggio dello stato ASP.NET chiama per avviare l&quot;elaborazione dell&quot;evento."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "Il <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> dell&quot;oggetto da elaborare."
  overload: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;evento non può essere generato."
  platform:
  - net462
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Esegue le attività associate all&quot;arresto del provider."
  remarks: "ASP.NET chiama il <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>metodo quando il dominio applicazione che ospita l&quot;applicazione Web.</xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> Il metodo viene chiamato per eseguire attività che consente di terminare normalmente l&quot;applicazione."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.WmiWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Management.WmiWebEventProvider.#ctor
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider()
  nameWithType: WmiWebEventProvider.WmiWebEventProvider()
  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()
- uid: System.Web.Management.WmiWebEventProvider.Flush
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WmiWebEventProvider.Flush()
  fullName: System.Web.Management.WmiWebEventProvider.Flush()
- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WmiWebEventProvider.Shutdown()
  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()
- uid: System.Web.Management.WmiWebEventProvider.#ctor*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: WmiWebEventProvider
  nameWithType: WmiWebEventProvider.WmiWebEventProvider
- uid: System.Web.Management.WmiWebEventProvider.Flush*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WmiWebEventProvider.Flush
- uid: System.Web.Management.WmiWebEventProvider.Initialize*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: WmiWebEventProvider.Initialize
- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WmiWebEventProvider.ProcessEvent
- uid: System.Web.Management.WmiWebEventProvider.Shutdown*
  parent: System.Web.Management.WmiWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WmiWebEventProvider.Shutdown
