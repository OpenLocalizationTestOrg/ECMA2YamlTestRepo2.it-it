### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Fornisce servizi di sessione per un&quot;applicazione. Questa classe non può essere ereditata."
  remarks: "Classe SessionStateModule è ASP. Gestore di sessione predefinito della rete. Scrive i dati di sessione viene recuperato dall&quot;archivio dello stato della sessione e genera il **Session_OnStart** e **Session_OnEnd** eventi. Per informazioni dettagliate su come utilizzare lo stato della sessione ASP.NET per archiviare e recuperare i valori per una sessione utente, vedere [panoramica dello stato della sessione di ASP.NET](~/add/includes/ajax-current-ext-md.md).       È possibile sostituire la classe SessionStateModule con un&quot;implementazione personalizzata del <xref:System.Web.IHttpModule>interfaccia che gestisce lo stato della sessione.</xref:System.Web.IHttpModule> Per un esempio di un modulo di stato sessione personalizzato, vedere il <xref:System.Web.SessionState.SessionStateUtility>Cenni preliminari sulla classe.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> classe."
  remarks: "Questo costruttore non è destinato a essere chiamato dal codice dell&quot;applicazione.       Un <xref:System.Web.HttpApplication>oggetto viene creato quando viene avviata un&quot;applicazione ASP.NET.</xref:System.Web.HttpApplication> Il <xref:System.Web.HttpApplication>chiama il <xref:System.Web.SessionState.SessionStateModule>costruttore per creare il <xref:System.Web.SessionState.SessionStateModule>oggetto per l&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> Il <xref:System.Web.SessionState.SessionStateModule>è specificato nella configurazione per un&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Esegue il codice di pulitura finale prima di <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> oggetto viene rilasciato dalla memoria."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Un <xref:System.Web.HttpApplication>oggetto viene creato quando viene avviata un&quot;applicazione ASP.NET.</xref:System.Web.HttpApplication> Il <xref:System.Web.HttpApplication>oggetto crea e inizializza il <xref:System.Web.SessionState.SessionStateModule>oggetto per l&quot;applicazione e chiama il metodo Dispose quando l&quot;oggetto viene rilasciato.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> Il <xref:System.Web.SessionState.SessionStateModule>è specificato nella configurazione per un&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Si verifica quando termina una sessione."
  remarks: "L&quot;evento di fine viene generato alla fine di una richiesta quando il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo è stato chiamato o quando la sessione è scaduta.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Quando il numero di minuti specificato dalla scadenza di una sessione di <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>proprietà passa senza una richiesta effettuata per la sessione.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       Il **Session_OnEnd** evento viene utilizzato per eseguire le operazioni di pulizia per una sessione, ad esempio l&quot;eliminazione delle risorse utilizzate dalla sessione.       È possibile specificare un gestore per l&quot;evento di fine mediante l&quot;aggiunta di una subroutine pubblica denominata **Session_OnEnd** nel file Global. asax.      > [!NOTE] > Il **Session_OnEnd** evento è supportata quando lo stato della sessione <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>valore della proprietà è <xref:System.Web.SessionState.SessionStateMode>, che è il valore predefinito.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Se lo stato della sessione <xref:System.Web.SessionState.HttpSessionState.Mode%2A>è impostato su <xref:System.Web.SessionState.SessionStateMode>o <xref:System.Web.SessionState.SessionStateMode>, quindi il **Session_OnEnd** viene ignorato l&quot;evento nel file Global. asax.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Se lo stato della sessione <xref:System.Web.SessionState.HttpSessionState.Mode%2A>valore della proprietà è <xref:System.Web.SessionState.SessionStateMode>, il supporto per il **Session_OnEnd** evento è determinato dal provider di archivio dello stato sessione personalizzato.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Se l&quot;evento di fine è pubblico, si può essere gestito solo aggiungendo un gestore eventi nel file Global. asax. Questa restrizione è stata implementata perché <xref:System.Web.HttpApplication>le istanze vengono riutilizzate per le prestazioni.</xref:System.Web.HttpApplication> Quando una sessione scade, solo il **Session_OnEnd** evento specificato nel file Global. asax viene eseguito, per impedire al codice di chiamata di un gestore eventi di fine associato a un <xref:System.Web.HttpApplication>istanza attualmente in uso.</xref:System.Web.HttpApplication>       Per ulteriori informazioni sul file Global. asax, vedere [sintassi Global. asax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inizializzazione chiama il codice quando una <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> viene creato l&quot;oggetto."
  remarks: "Questo metodo non deve essere chiamato dal codice dell&quot;applicazione.       Un <xref:System.Web.HttpApplication>viene creato quando viene avviata un&quot;applicazione ASP.NET.</xref:System.Web.HttpApplication> Il <xref:System.Web.HttpApplication>oggetto chiama il metodo Init durante la creazione di <xref:System.Web.SessionState.SessionStateModule>oggetto per l&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> La <xref:System.Web.SessionState.SessionStateModule>classe è specificata nella configurazione per un&quot;applicazione.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "L&quot;applicazione corrente."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attributo la [sessionState Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento di configurazione è impostata su <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> o <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, e l&quot;applicazione ASP.NET è minore di <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> trust."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Il <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attributo la [sessionState Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento di configurazione è impostata su <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> attributo è vuoto o non esiste.       - o - <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attributo il [sessionState Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento di configurazione è impostata su <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> e il provider identificato dal nome nella <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> attributo non è stato aggiunto il [elemento providers per sessionState (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) sottoelemento."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Lo stato della sessione per l&quot;oggetto specificato rilascia <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per il quale a rilasciare lo stato della sessione."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Rilascia in modo asincrono lo stato della sessione per l&quot;oggetto specificato <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per il quale a rilasciare lo stato della sessione."
    return:
      type: System.Threading.Tasks.Task
      description: "Oggetto <xref:System.Threading.Tasks.Task>per l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "L&quot;evento che si verifica quando viene creata una sessione."
  remarks: "L&quot;evento di inizio viene generato all&quot;inizio di una richiesta quando viene avviata una nuova sessione. Se viene effettuata una richiesta che non contiene un identificatore di sessione, l&quot;identificatore di sessione non è valido o la sessione associata a un identificatore di sessione è scaduta, viene avviata una nuova sessione.       Il **Session_OnStart** evento viene utilizzato per eseguire le operazioni di inizializzazione per una sessione, ad esempio l&quot;impostazione dei valori predefiniti per le variabili di sessione.       È possibile specificare un gestore per l&quot;evento di inizio mediante l&quot;aggiunta di una subroutine pubblica denominata **Session_OnStart** nel file Global. asax.       Per ulteriori informazioni sul file Global. asax, vedere [sintassi Global. asax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
