### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  id: CompositionContainer
  children:
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  langs:
  - csharp
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
  type: Class
  summary: "Gestisce la composizione delle parti."
  remarks: "A CompositionContainer object serves two major purposes in an application. First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes. Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property. All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container. Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts. Imports marked as recomposable will be registered for recomposition.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container. If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.  \n  \n CompositionContainer objects should always be disposed. When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the CompositionContainer object also disposes all the parts that it has created.  \n  \n A CompositionContainer object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the [CompositionContainer(ComposablePartCatalog, Boolean, ExportProvider\\[\\])](assetId:///M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])?qualifyHint=False&autoUpgrade=False) constructor. Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios. The default is `false`.  \n  \n> [!WARNING]\n>  A CompositionContainer should never import itself, or a part that has a reference to it. Such a reference could allow an untrusted part to gain access all the parts in the container."
  example:
  - "In the following example, a CompositionContainer object is initialized with a catalog and is used to fill the imports of a part. This example uses the Attributed Programming Model.  \n  \n [!code-cs[Composition.CompositionContainer#1](~/add/codesnippet/csharp/composition.compositioncontainer.consoleapplication1/program.cs#1)]\n [!code-vb[Composition.CompositionContainer#1](~/add/codesnippet/visualbasic/compositioncontainerexample/module1.vb#1)]"
  syntax:
    content: 'public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Hosting.ExportProvider
  implements:
  - System.ComponentModel.Composition.ICompositionService
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe."
  syntax:
    content: public CompositionContainer ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe con il provider di esportazione specificato."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;accesso a <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> impostare <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>su un elemento vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe con le opzioni e i provider di esportazione specificato."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "Oggetto che specifica il comportamento di questo contenitore."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;accesso a <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> impostare <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>su un elemento vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe con il catalogo specificato e provider di esportazione."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Un catalogo che fornisce <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti per il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;accesso a <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> impostare <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>su un elemento vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe con il catalogo specificato, la modalità thread-safe e provider di esportazione."
  remarks: "Oggetto <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>necessario impostare l&quot;oggetto che è possibile accedere da più thread di `isThreadSafe` parametro `true`.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Le prestazioni sono leggermente più lente quando `isThreadSafe` è `true`, pertanto è consigliabile impostare questo parametro `false` in scenari a thread singolo. Il valore predefinito è `false`."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Un catalogo che fornisce <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti per il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: isThreadSafe
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;oggetto deve essere thread-safe; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;accesso a <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per impostare il <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>proprietà per un oggetto vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uno o più elementi di <code> providers </code> sono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe con il catalogo specificato, opzioni e provider di esportazione."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Un catalogo che fornisce <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti per il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "Oggetto che specifica le opzioni che influiscono sul comportamento del contenitore."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Matrice di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> l&quot;accesso a <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> impostare <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>su un elemento vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  id: Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ottiene il <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> che fornisce l&quot;accesso al contenitore di <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti."
  syntax:
    content: public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Il catalogo che fornisce il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> accesso alle esportazioni prodotte da <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> oggetti. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> oggetto è stato eliminato."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  id: Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Aggiunge o rimuove le parti specificato <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionBatch&quot;> </xref> dal contenitore ed esegue la composizione."
  remarks: "Questo metodo è il modo principale di direttamente aggiungendo o rimuovendo le parti dal contenitore. Il <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>manterrà sempre uno stato stabile e comporre.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Pertanto, la chiamata di composizione con un oggetto vuoto <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>non è mai necessaria iniziare la composizione.</xref:System.ComponentModel.Composition.Hosting.CompositionBatch> In alternativa, chiamare il metodo di composizione quando è necessario apportare modifiche alle parti disponibili in <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Il <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>può contenere entrambe le parti da aggiungere e le parti da rimuovere.</xref:System.ComponentModel.Composition.Hosting.CompositionBatch>  La ricomposizione verrà eseguita una sola volta per ogni chiamata a Compose."
  example:
  - "In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled. This example uses the Attributed Programming Model.  \n  \n [!code-vb[Composition.CompositionContainer.Compose#1](~/add/codesnippet/visualbasic/consoleapplication6/module1.vb#1)]\n [!code-cs[Composition.CompositionContainer.Compose#1](~/add/codesnippet/csharp/consoleapplication5/program.cs#1)]"
  syntax:
    content: public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "Diventa il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> da includere durante la composizione."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe."
  remarks: "Chiamare `Dispose` quando si è terminato di utilizzare <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Il `Dispose` metodo lascia la <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>in uno stato inutilizzabile.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>occupata.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre `Dispose` prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>dell&quot;oggetto `Finalize` metodo.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Restituisce una raccolta di tutte le esportazioni che corrispondono alle condizioni specificato <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref> oggetto."
  remarks: "Le implementazioni non devono considerare le mancate corrispondenze correlate alla cardinalità come errori e non devono generare eccezioni per le mancate corrispondenze correlate alla cardinalità. Ad esempio, se l&quot;importazione richiede esattamente un&quot;esportazione e il provider ha non esportazioni corrispondenti o più, il metodo GetExportsCore deve restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601>insieme di <xref:System.ComponentModel.Composition.Primitives.Export>oggetti.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected override System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "L&quot;oggetto che definisce le condizioni del <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti da ottenere."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "La transazione di composizione da utilizzare, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per disabilitare la composizione transazionale."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "Una raccolta di tutti i <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> gli oggetti in questa <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> oggetti che soddisfano le condizioni specificate dai <code> definition </code>."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  id: Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ottiene i provider di esportazione che forniscono l&quot;accesso al contenitore per altri <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> oggetti."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider> Providers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: "Una raccolta di <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> oggetti che forniscono il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> accedere a ulteriori <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti. Il valore predefinito è vuoto &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> è stata eliminata."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  id: ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> dall&quot;oggetto di <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
  remarks: "Il comportamento di questo metodo può variare a seconda dell&quot;implementazione del <xref:System.ComponentModel.Composition.Hosting.ExportProvider>che ha generato il <xref:System.ComponentModel.Composition.Primitives.Export>istanza.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.ExportProvider> Di norma, le esportazioni non condivisi devono essere disconnesse dal contenitore.       Ad esempio, il <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>rilasceranno solo un <xref:System.ComponentModel.Composition.Primitives.Export>provengono da un <xref:System.ComponentModel.Composition.Primitives.ComposablePart>che è stato costruito con un <xref:System.ComponentModel.Composition.CreationPolicy>contesto.</xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> Versione in questo contesto indica che l&quot;analisi della catena di dipendenze del <xref:System.ComponentModel.Composition.Primitives.Export>oggetti, la disconnessione dei riferimenti dal contenitore e chiamare il metodo `Dispose` sul <xref:System.ComponentModel.Composition.Primitives.ComposablePart>oggetti in base alle esigenze.</xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> Se il <xref:System.ComponentModel.Composition.Primitives.Export>è stato costruito con un <xref:System.ComponentModel.Composition.CreationPolicy>contesto il <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>non eseguirà alcuna operazione, come specificato <xref:System.ComponentModel.Composition.Primitives.Export>potrebbe essere in uso da parte di altri richiedenti.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> </xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.Export> Tali verranno disconnessi solo quando il contenitore è a sua volta è stato eliminato."
  syntax:
    content: public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);
    parameters:
    - id: export
      type: System.ComponentModel.Composition.Primitives.Export
      description: "Il <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> che deve essere rilasciato."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>export</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  id: ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExport<T> (Lazy<T> export);
    parameters:
    - id: export
      type: System.Lazy{T}
      description: "Da aggiungere."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  id: ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Rilascia un set di <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti dal <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
  remarks: "Il comportamento di questo metodo può variare a seconda del contesto in cui il <xref:System.ComponentModel.Composition.Primitives.Export>è stata costruita.</xref:System.ComponentModel.Composition.Primitives.Export> Per ulteriori informazioni, vedere il <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>metodo.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>"
  syntax:
    content: public void ReleaseExports (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "Una raccolta di <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> oggetti da rilasciare."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exports</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>exports</code>contiene un elemento che è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  id: ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T> (System.Collections.Generic.IEnumerable<Lazy<T>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: "Da aggiungere."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  id: ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T,TMetadataView> (System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: "Da aggiungere."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Soddisfa le importazioni dell&quot;oggetto specificato <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> oggetto senza registrarlo per la ricomposizione."
  syntax:
    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "La parte per soddisfare le importazioni."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> oggetto è stato eliminato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>part</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Composition.CompositionException
    commentId: T:System.ComponentModel.Composition.CompositionException
    description: "Si è verificato un errore durante la composizione. <xref:System.ComponentModel.Composition.CompositionException.Errors*>contiene una raccolta di errori che si sono verificati.</xref:System.ComponentModel.Composition.CompositionException.Errors*>"
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: System.ComponentModel.Composition.Hosting.ExportProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Composition.CompositionException
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CompositionException
  nameWithType: CompositionException
  fullName: System.ComponentModel.Composition.CompositionException
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.ExportProvider[]
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
  spec.csharp:
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionOptions
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionOptions
  nameWithType: CompositionOptions
  fullName: System.ComponentModel.Composition.Hosting.CompositionOptions
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
- uid: System.ComponentModel.Composition.Hosting.CompositionBatch
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionBatch
  nameWithType: CompositionBatch
  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.Export
    name: Export
    nameWithType: Export
    fullName: Export
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ExportProvider>
  nameWithType: ReadOnlyCollection<ExportProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
- uid: System.ComponentModel.Composition.Primitives.Export
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: Export
  nameWithType: Export
  fullName: System.ComponentModel.Composition.Primitives.Export
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
- uid: System.Lazy{T}
  parent: System
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T>>
  nameWithType: IEnumerable<Lazy<T>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T,TMetadataView>>
  nameWithType: IEnumerable<Lazy<T,TMetadataView>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T,TMetadataView>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T,TMetadataView>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMetadataView
    name: TMetadataView
    nameWithType: TMetadataView
    fullName: TMetadataView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer
  nameWithType: CompositionContainer.CompositionContainer
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose
  nameWithType: CompositionContainer.Compose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose
  nameWithType: CompositionContainer.Dispose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore
  nameWithType: CompositionContainer.GetExportsCore
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport
  nameWithType: CompositionContainer.ReleaseExport
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport<T>
  nameWithType: CompositionContainer.ReleaseExport<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports
  nameWithType: CompositionContainer.ReleaseExports
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T>
  nameWithType: CompositionContainer.ReleaseExports<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T,TMetadataView>
  nameWithType: CompositionContainer.ReleaseExports<T,TMetadataView>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce
  nameWithType: CompositionContainer.SatisfyImportsOnce
