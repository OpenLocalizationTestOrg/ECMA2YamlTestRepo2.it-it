### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Fornisce un meccanismo per l&quot;enumerazione di tutti i provider OLE DB disponibili all&quot;interno della rete locale."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Crea un&quot;istanza di <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Recupera un <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni su tutti i provider OLE DB visibili."
  remarks: "La tabella restituita da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe: | Numero ordinale di colonna | Colonna | Descrizione |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Il nome dell&quot;origine di dati OLE DB nativo o enumeratore invariante. |   |&1; | SOURCES_PARSENAME | Nome leggibile dall&quot;utente che può essere convertito in un moniker utilizzando l&quot;interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrizione dell&quot;origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo. |   |&3; | SOURCES_TYPE | Uno dei seguenti membri dell&quot;enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l&quot;enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo. |   |&4; | SOURCES_ISPARENT | Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui è stato chiamato GetSourcesRowset, implicando che è incluso anche nell&quot;enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT |   |&5; | SOURCES_CLSID | Un nome leggibile dall&quot;utente, che può essere convertito in un moniker utilizzando l&quot;interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_CLSID restituita dal rowset di origini di OLE DB nativo. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Restituisce un <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sul provider OLE DB visibili."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il provider non supporta ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Si è verificata l&quot;eccezione nel provider sottostante."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Utilizza un enumeratore OLE DB specifico per restituire un <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> che contiene informazioni sul provider OLE DB attualmente installati, senza dover ricorrere a un&quot;istanza di <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  remarks: "Il lettore restituito da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe: | Numero ordinale di colonna | Colonna | Descrizione |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Il nome dell&quot;origine di dati OLE DB nativo o enumeratore invariante. |   |&1; | SOURCES_PARSENAME | Un nome leggibile dall&quot;utente che può essere convertito in un moniker utilizzando l&quot;interfaccia COM nativa **IParseDisplayName**. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrizione dell&quot;origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo. |   |&3; | SOURCES_TYPE | Uno dei seguenti membri dell&quot;enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l&quot;enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo. |   |&4; | SOURCES_ISPARENT | Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui **GetSourcesRowset** è stato chiamato per indicare che è incluso anche nell&quot;enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT |       OLE DB fornisce numerosi componenti enumeratori, tra cui MSDAENUM enumeratore MSDASQL, enumeratore SQLNCLI, enumeratore SQLOLEDB e altri utenti. Per ulteriori informazioni sui componenti dell&quot;enumeratore e sul loro utilizzo, vedere il [riferimento per programmatori OLE DB](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Restituisce un <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> che contiene informazioni sul provider OLE DB richiesti utilizzando l&quot;enumeratore OLE DB specificato."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il provider non supporta **ISourcesRowset**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Si è verificata un&quot;eccezione nel provider sottostante."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Restituisce un <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> che contiene informazioni sul provider OLE DB attualmente installati, senza dover ricorrere a un&quot;istanza di <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  remarks: "Il lettore restituito da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe: | Numero ordinale di colonna | Colonna | Descrizione |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Il nome dell&quot;origine di dati OLE DB nativo o enumeratore invariante. |   |&1; | SOURCES_PARSENAME | Nome leggibile dall&quot;utente che può essere convertito in un moniker utilizzando l&quot;interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrizione dell&quot;origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo. |   |&3; | SOURCES_TYPE | Uno dei seguenti membri dell&quot;enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l&quot;enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo. |   |&4; | SOURCES_ISPARENT | Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui è stato chiamato GetSourcesRowset, implicando che è incluso anche nell&quot;enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT |   |&5; | SOURCES_CLSID | Un nome leggibile dall&quot;utente, che può essere convertito in un moniker utilizzando l&quot;interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_CLSID restituita dal rowset di origini di OLE DB nativo. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Restituisce un <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> che contiene informazioni sul provider OLE DB visibili."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il provider non supporta ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Si è verificata l&quot;eccezione nel provider sottostante."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
