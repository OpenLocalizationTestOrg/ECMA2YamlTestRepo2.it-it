### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SpeechHypothesizedEventArgs
  id: SpeechHypothesizedEventArgs
  children: []
  langs:
  - csharp
  name: "SpeechHypothesizedEventArgs"
  nameWithType: SpeechHypothesizedEventArgs
  fullName: System.Speech.Recognition.SpeechHypothesizedEventArgs
  type: Class
  summary: "Returns notification from <see cref=\"E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized\"></see> or <see cref=\"E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized\"></see> events.  \n  \n This class supports the .NET Framework infrastructure and is not intended to be used directly from application code."
  remarks: "A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \n  \n You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.  \n  \n Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase. Typically, handling these events is useful only for debugging.  \n  \n `SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>."
  example:
  - "The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=fullName> events. The handler uses an instance of `SpeechHypothesizedEventArgs` to return and display information about a tentatively recognized phrase.  \n  \n```  \n// Create a handler for the SpeechHypothesized event.  \nrecognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  \n  \n// Handle the event and display the hypothesized result.  \nvoid recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Hypothesized text: \" + e.Result.Text);  \n  }  \n  \n```"
  syntax:
    content: 'public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs'
  inheritance:
  - System.EventArgs
  - System.Speech.Recognition.RecognitionEventArgs
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.RecognitionEventArgs.Result
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Speech.Recognition.RecognitionEventArgs
  isExternal: false
  name: "System.Speech.Recognition.RecognitionEventArgs"
