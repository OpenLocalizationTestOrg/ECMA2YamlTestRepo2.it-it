### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.ServiceProviders
  id: ServiceProviders
  children:
  - System.Windows.Markup.ServiceProviders.#ctor
  - System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  - System.Windows.Markup.ServiceProviders.GetService(System.Type)
  langs:
  - csharp
  name: ServiceProviders
  nameWithType: ServiceProviders
  fullName: System.Windows.Markup.ServiceProviders
  type: Class
  summary: "Fornisce un&quot;implementazione per il <xref:System.IServiceProvider>interfaccia con metodi che consentono l&quot;aggiunta di servizi.</xref:System.IServiceProvider>"
  remarks: "Si tratta di una classe di utilità per l&quot;utilizzo durante la serializzazione del contenuto. La classe è fondamentalmente un dizionario di solo input solo per l&quot;archiviazione dei servizi con chiave basata sul tipo di servizio che implementa <xref:System.IServiceProvider>per il successivo recupero dal dizionario stesso.</xref:System.IServiceProvider> Utilizzando il dizionario consente di evitare l&quot;esecuzione di query per lo stesso servizio più volte. Questa classe è la classe di base di <xref:System.Windows.Markup.XamlDesignerSerializationManager>, che viene usato per il servizio `ShouldSerialize` implementazioni del metodo in altre parti di WPF.</xref:System.Windows.Markup.XamlDesignerSerializationManager>       Utilizzo di questa classe richiede facendo riferimento agli assembly WPF, non è progettato per scenari di servizi XAML di .NET Framework generali. Lo scenario illustrato si all&quot;implementazione interna del servizio a elevato utilizzo di funzionalità WPF durante la serializzazione, ad esempio durante l&quot;elaborazione di `ShouldSerialize` le implementazioni di determinati tipi. La classe pratica coinvolti in questo scenario è la classe derivata <xref:System.Windows.Markup.XamlDesignerSerializationManager>.</xref:System.Windows.Markup.XamlDesignerSerializationManager>      <a name=&quot;xamlTextUsage_ServiceProviders&quot;></a># # Utilizzo di testo XAML"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class ServiceProviders : IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Markup.ServiceProviders&quot;> </xref> classe."
  syntax:
    content: public ServiceProviders ();
    parameters: []
  overload: System.Windows.Markup.ServiceProviders.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Aggiunge un servizio all&quot;elenco."
  syntax:
    content: public void AddService (Type serviceType, object service);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Tipo di servizio del nuovo servizio."
    - id: service
      type: System.Object
      description: "La classe di implementazione del servizio."
  overload: System.Windows.Markup.ServiceProviders.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>service</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tentativo di aggiungere un servizio che esiste già nel dizionario."
  platform:
  - net462
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "Ottiene l&quot;oggetto servizio del tipo specificato."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di oggetto servizio da ottenere."
    return:
      type: System.Object
      description: "Un&quot;implementazione del servizio per il tipo di <code> serviceType </code>. Potrebbe essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è memorizzato alcun servizio per tipo <code> serviceType </code>."
  overload: System.Windows.Markup.ServiceProviders.GetService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.ServiceProviders.#ctor
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders()
  nameWithType: ServiceProviders.ServiceProviders()
  fullName: System.Windows.Markup.ServiceProviders.ServiceProviders()
- uid: System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceProviders.AddService(Type,Object)
  fullName: System.Windows.Markup.ServiceProviders.AddService(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.ServiceProviders.GetService(System.Type)
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceProviders.GetService(Type)
  fullName: System.Windows.Markup.ServiceProviders.GetService(Type)
- uid: System.Windows.Markup.ServiceProviders.#ctor*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: ServiceProviders
  nameWithType: ServiceProviders.ServiceProviders
- uid: System.Windows.Markup.ServiceProviders.AddService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: AddService
  nameWithType: ServiceProviders.AddService
- uid: System.Windows.Markup.ServiceProviders.GetService*
  parent: System.Windows.Markup.ServiceProviders
  isExternal: false
  name: GetService
  nameWithType: ServiceProviders.GetService
