### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.BinaryOp
  id: BinaryOp
  children:
  - Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)
  - Microsoft.JScript.BinaryOp.operand1
  - Microsoft.JScript.BinaryOp.operand2
  - Microsoft.JScript.BinaryOp.operatorMeth
  - Microsoft.JScript.BinaryOp.operatorTok
  - Microsoft.JScript.BinaryOp.type1
  - Microsoft.JScript.BinaryOp.type2
  langs:
  - csharp
  name: BinaryOp
  nameWithType: BinaryOp
  fullName: Microsoft.JScript.BinaryOp
  type: Class
  summary: "Rappresenta la classe base per le classi che eseguono operazioni su due operandi, ad esempio <xref href=&quot;Microsoft.JScript.Plus&quot;> </xref>, <xref href=&quot;Microsoft.JScript.Equality&quot;> </xref>, e <xref href=&quot;Microsoft.JScript.Relational&quot;> </xref>. Questa classe appartiene alla categoria dell&quot;albero sintattico astratto."
  syntax:
    content: 'public abstract class BinaryOp : Microsoft.JScript.AST'
  inheritance:
  - System.Object
  - Microsoft.JScript.AST
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)
  id: GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: GetOperator(IReflect,IReflect)
  nameWithType: BinaryOp.GetOperator(IReflect,IReflect)
  fullName: Microsoft.JScript.BinaryOp.GetOperator(IReflect,IReflect)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Determina il metodo migliore per la chiamata in base all&quot;operazione richiesta e i tipi di dati degli operandi."
  syntax:
    content: protected System.Reflection.MethodInfo GetOperator (System.Reflection.IReflect ir1, System.Reflection.IReflect ir2);
    parameters:
    - id: ir1
      type: System.Reflection.IReflect
      description: "Il tipo di dati del primo operando."
    - id: ir2
      type: System.Reflection.IReflect
      description: "Il tipo di dati del secondo operando."
    return:
      type: System.Reflection.MethodInfo
      description: "Il metodo consigliato per chiamare sugli operandi."
  overload: Microsoft.JScript.BinaryOp.GetOperator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.operand1
  id: operand1
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: operand1
  nameWithType: BinaryOp.operand1
  fullName: Microsoft.JScript.BinaryOp.operand1
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta il primo operando dell&quot;operazione."
  syntax:
    content: protected Microsoft.JScript.AST operand1;
    return:
      type: Microsoft.JScript.AST
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.operand2
  id: operand2
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: operand2
  nameWithType: BinaryOp.operand2
  fullName: Microsoft.JScript.BinaryOp.operand2
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta il secondo operando dell&quot;operazione."
  syntax:
    content: protected Microsoft.JScript.AST operand2;
    return:
      type: Microsoft.JScript.AST
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.operatorMeth
  id: operatorMeth
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: operatorMeth
  nameWithType: BinaryOp.operatorMeth
  fullName: Microsoft.JScript.BinaryOp.operatorMeth
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta l&quot;operazione che viene effettivamente eseguita."
  syntax:
    content: protected System.Reflection.MethodInfo operatorMeth;
    return:
      type: System.Reflection.MethodInfo
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.operatorTok
  id: operatorTok
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: operatorTok
  nameWithType: BinaryOp.operatorTok
  fullName: Microsoft.JScript.BinaryOp.operatorTok
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta l&quot;operazione richiesta. Uno del <xref href=&quot;Microsoft.JScript.JSToken&quot;> </xref> valori di enumerazione."
  syntax:
    content: protected Microsoft.JScript.JSToken operatorTok;
    return:
      type: Microsoft.JScript.JSToken
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.type1
  id: type1
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: type1
  nameWithType: BinaryOp.type1
  fullName: Microsoft.JScript.BinaryOp.type1
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta il tipo di dati del primo operando dell&quot;operazione."
  syntax:
    content: protected Type type1;
    return:
      type: System.Type
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.BinaryOp.type2
  id: type2
  parent: Microsoft.JScript.BinaryOp
  langs:
  - csharp
  name: type2
  nameWithType: BinaryOp.type2
  fullName: Microsoft.JScript.BinaryOp.type2
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Rappresenta il tipo di dati del secondo operando dell&quot;operazione."
  syntax:
    content: protected Type type2;
    return:
      type: System.Type
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.AST
  isExternal: false
  name: Microsoft.JScript.AST
- uid: Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: GetOperator(IReflect,IReflect)
  nameWithType: BinaryOp.GetOperator(IReflect,IReflect)
  fullName: Microsoft.JScript.BinaryOp.GetOperator(IReflect,IReflect)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.IReflect
  parent: System.Reflection
  isExternal: false
  name: IReflect
  nameWithType: IReflect
  fullName: System.Reflection.IReflect
- uid: Microsoft.JScript.BinaryOp.operand1
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: operand1
  nameWithType: BinaryOp.operand1
  fullName: Microsoft.JScript.BinaryOp.operand1
- uid: Microsoft.JScript.BinaryOp.operand2
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: operand2
  nameWithType: BinaryOp.operand2
  fullName: Microsoft.JScript.BinaryOp.operand2
- uid: Microsoft.JScript.BinaryOp.operatorMeth
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: operatorMeth
  nameWithType: BinaryOp.operatorMeth
  fullName: Microsoft.JScript.BinaryOp.operatorMeth
- uid: Microsoft.JScript.BinaryOp.operatorTok
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: operatorTok
  nameWithType: BinaryOp.operatorTok
  fullName: Microsoft.JScript.BinaryOp.operatorTok
- uid: Microsoft.JScript.JSToken
  parent: Microsoft.JScript
  isExternal: false
  name: JSToken
  nameWithType: JSToken
  fullName: Microsoft.JScript.JSToken
- uid: Microsoft.JScript.BinaryOp.type1
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: type1
  nameWithType: BinaryOp.type1
  fullName: Microsoft.JScript.BinaryOp.type1
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.JScript.BinaryOp.type2
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: type2
  nameWithType: BinaryOp.type2
  fullName: Microsoft.JScript.BinaryOp.type2
- uid: Microsoft.JScript.BinaryOp.GetOperator*
  parent: Microsoft.JScript.BinaryOp
  isExternal: false
  name: GetOperator
  nameWithType: BinaryOp.GetOperator
