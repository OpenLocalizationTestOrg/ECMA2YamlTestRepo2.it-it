### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlEntity
  id: XmlEntity
  children:
  - System.Xml.XmlEntity.BaseURI
  - System.Xml.XmlEntity.CloneNode(System.Boolean)
  - System.Xml.XmlEntity.InnerText
  - System.Xml.XmlEntity.InnerXml
  - System.Xml.XmlEntity.IsReadOnly
  - System.Xml.XmlEntity.LocalName
  - System.Xml.XmlEntity.Name
  - System.Xml.XmlEntity.NodeType
  - System.Xml.XmlEntity.NotationName
  - System.Xml.XmlEntity.OuterXml
  - System.Xml.XmlEntity.PublicId
  - System.Xml.XmlEntity.SystemId
  - System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlEntity
  nameWithType: XmlEntity
  fullName: System.Xml.XmlEntity
  type: Class
  summary: "Rappresenta una dichiarazione di entità, ad esempio &lt;! ENTITÀ... &gt;."
  syntax:
    content: 'public class XmlEntity : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlEntity.BaseURI
  id: BaseURI
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
  fullName: System.Xml.XmlEntity.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene la base identificatore URI (Uniform Resource) del nodo corrente."
  remarks: "Un documento XML in rete è costituito da blocchi di dati aggregati tramite vari meccanismi di inclusione standard di World Wide Web Consortium (W3C) e pertanto contiene nodi provenienti da diverse posizioni. Il `BaseURI` indica la provenienza di questi nodi.       Il valore di questa proprietà varia a seconda del tipo di nodo. Nodi figlio di nodi EntityReference esterni restituiscono il percorso dell&quot;entità stessa. Ad esempio, si consideri il seguente documento XML: ```   <!DOCTYPE item [   <!ENTITY xyz SYSTEM &quot;a/b.xml&quot;>   ]>   <item num=&quot;123&quot;>&xyz;</item>   ``` in cui l&quot;entità esterna `a/b.xml` contiene il testo XML `<test>123</test>`.       Se il documento viene caricato da http://server/mydata.xml, `BaseURI` restituisce le operazioni seguenti: | Tipo di nodo | Nome | BaseURI |   |--------------|----------|-------------|   | Attributo | num | http://server/mydata.xml |   | Documento | #document | http://server/mydata.xml |   | DocumentType | elemento | http://server/mydata.xml |   | Entità | xyz | http://server/mydata.xml |   | Elemento | elemento | http://server/mydata.xml |   | EntityReference | xyz | http://server/mydata.xml |   | Elemento | test | http://server/a/b.xml |   | Testo | #text | http://server/a/b.xml |       `BaseURI` cerca i limiti dei riferimenti all&quot;entità, se le entità vengono espanse, queste informazioni non vengono mantenute e questa proprietà restituisce la posizione del `XmlDocument` oggetto in tutti i casi.       Come secondo esempio, dato il documento XML seguente: ```   <!DOCTYPE Mydata SYSTEM &quot;http://localhost/doctype.dtd&quot;>   <baa>&xyz;</baa>   ``` in cui il file di definizione (DTD) di tipo di documento contiene le operazioni seguenti: ```   <!ENTITY xyz &quot;<E1>My Data</E1>&quot;>   <!ELEMENT baa #PCDATA>   <!ATTLIST baa attr1 &quot;woof&quot;>   ``` se il documento XML viene caricato da http://localhost/mydata.xml, `BaseURI` restituisce quanto segue per ciascuno dei nodi: | Tipo di nodo | Nome | BaseURI |   |--------------|----------|-------------|   | Documento | #document | http://localhost/mydata.xml |   | DocumentType | MyData | http://localhost/doctype.dtd |   | Elemento | baa | http://localhost/mydata.xml |   | Entità | xyz | http://localhost/doctype.dtd |   | EntityReference | xyz | http://localhost/mydata.xml |   | Attributo | woof | http://localhost/mydata.xml |      > [!NOTE] > L&quot;URI di base di un attributo predefinito è lo stesso come URI di base dell&quot;elemento a cui appartengono.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "Il percorso da cui è stato caricato il nodo."
  overload: System.Xml.XmlEntity.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlEntity.CloneNode(Boolean)
  fullName: System.Xml.XmlEntity.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Crea un duplicato del nodo. Impossibile duplicare i nodi di entità. Chiamare questo metodo su un <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> oggetto genera un&quot;eccezione."
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in modo ricorsivo il sottoalbero del nodo specificato; di clonazione <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per clonare solo il nodo stesso."
    return:
      type: System.Xml.XmlNode
      description: "Restituisce una copia del <xref href=&quot;System.Xml.XmlNode&quot;> </xref> da cui viene chiamato il metodo."
  overload: System.Xml.XmlEntity.CloneNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Impossibile duplicare i nodi di entità. Chiamare questo metodo su un <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> oggetto genera un&quot;eccezione."
  platform:
  - net462
- uid: System.Xml.XmlEntity.InnerText
  id: InnerText
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlEntity.InnerText
  fullName: System.Xml.XmlEntity.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene i valori concatenati del nodo entità e i relativi elementi figlio."
  remarks: "`XmlEntity`i nodi sono di sola lettura. Impostazione di questa proprietà genera un&quot;eccezione.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override string InnerText { get; set; }
    return:
      type: System.String
      description: "Valori concatenati del nodo e tutti gli elementi figlio."
  overload: System.Xml.XmlEntity.InnerText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il tentativo di impostare la proprietà."
  platform:
  - net462
- uid: System.Xml.XmlEntity.InnerXml
  id: InnerXml
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
  fullName: System.Xml.XmlEntity.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il markup che rappresenta gli elementi figlio del nodo."
  remarks: "`XmlEntity`i nodi sono di sola lettura. Impostazione di questa proprietà genera un&quot;eccezione.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, viene restituito String. Empty."
  overload: System.Xml.XmlEntity.InnerXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il tentativo di impostare la proprietà."
  platform:
  - net462
- uid: System.Xml.XmlEntity.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
  fullName: System.Xml.XmlEntity.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene un valore che indica se il nodo è di sola lettura."
  remarks: "Un nodo di sola lettura è la cui proprietà, attributi o elementi figlio non può essere modificato. È possibile rimuovere un nodo di sola lettura dall&quot;albero e inserirlo in un&quot;altra posizione."
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo è di sola lettura. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Poiché <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi sono di sola lettura, questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlEntity.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.LocalName
  id: LocalName
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlEntity.LocalName
  fullName: System.Xml.XmlEntity.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nome del nodo senza il prefisso dello spazio dei nomi."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, questa proprietà restituisce il nome dell&quot;entità."
  overload: System.Xml.XmlEntity.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.Name
  id: Name
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: Name
  nameWithType: XmlEntity.Name
  fullName: System.Xml.XmlEntity.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nome del nodo."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_2_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_2_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_2_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_2_2.xml)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;entità."
  overload: System.Xml.XmlEntity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.NodeType
  id: NodeType
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlEntity.NodeType
  fullName: System.Xml.XmlEntity.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il tipo del nodo."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_1_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_1_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_1_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_1_2.xml)]"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Il tipo di nodo. Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, il valore è XmlNodeType."
  overload: System.Xml.XmlEntity.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.NotationName
  id: NotationName
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: NotationName
  nameWithType: XmlEntity.NotationName
  fullName: System.Xml.XmlEntity.NotationName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nome dell&quot;attributo NDATA facoltativo nella dichiarazione di entità."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_0_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_0_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_0_1.vb)]  \n  \n The example uses the file, `doment.xml`, as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_0_2.xml)]"
  syntax:
    content: public string NotationName { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;attributo NDATA. Se NDATA non è presente, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Xml.XmlEntity.NotationName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.OuterXml
  id: OuterXml
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
  fullName: System.Xml.XmlEntity.OuterXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il markup che rappresenta questo nodo e tutti gli elementi figlio."
  remarks: "Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override string OuterXml { get; }
    return:
      type: System.String
      description: "Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, viene restituito String. Empty."
  overload: System.Xml.XmlEntity.OuterXml*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.PublicId
  id: PublicId
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: PublicId
  nameWithType: XmlEntity.PublicId
  fullName: System.Xml.XmlEntity.PublicId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il valore dell&quot;identificatore pubblico sulla dichiarazione dell&quot;entità."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.p_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.p_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.p_1.vb)]  \n  \n The example uses the file, `doment.xml`, as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.p_2.xml)]"
  syntax:
    content: public string PublicId { get; }
    return:
      type: System.String
      description: "L&quot;identificatore pubblico sull&quot;entità. Se è presente alcun identificatore pubblico, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Xml.XmlEntity.PublicId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.SystemId
  id: SystemId
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: SystemId
  nameWithType: XmlEntity.SystemId
  fullName: System.Xml.XmlEntity.SystemId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il valore dell&quot;identificatore di sistema nella dichiarazione di entità."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.s_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.s_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.s_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.s_2.xml)]"
  syntax:
    content: public string SystemId { get; }
    return:
      type: System.String
      description: "L&quot;identificatore di sistema per l&quot;entità. Se è presente alcun identificatore di sistema, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Xml.XmlEntity.SystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntity.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva tutti gli elementi figlio del nodo specificata <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, questo metodo non ha alcun effetto."
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Il <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> a cui si desidera salvare."
  overload: System.Xml.XmlEntity.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntity.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva il nodo specificato <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> Per <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nodi, questo metodo non ha alcun effetto."
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Il <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> a cui si desidera salvare."
  overload: System.Xml.XmlEntity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlEntity.BaseURI
  parent: System.Xml.XmlEntity
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
  fullName: System.Xml.XmlEntity.BaseURI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlEntity.CloneNode(System.Boolean)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlEntity.CloneNode(Boolean)
  fullName: System.Xml.XmlEntity.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlEntity.InnerText
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerText
  nameWithType: XmlEntity.InnerText
  fullName: System.Xml.XmlEntity.InnerText
- uid: System.Xml.XmlEntity.InnerXml
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
  fullName: System.Xml.XmlEntity.InnerXml
- uid: System.Xml.XmlEntity.IsReadOnly
  parent: System.Xml.XmlEntity
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
  fullName: System.Xml.XmlEntity.IsReadOnly
- uid: System.Xml.XmlEntity.LocalName
  parent: System.Xml.XmlEntity
  isExternal: false
  name: LocalName
  nameWithType: XmlEntity.LocalName
  fullName: System.Xml.XmlEntity.LocalName
- uid: System.Xml.XmlEntity.Name
  parent: System.Xml.XmlEntity
  isExternal: false
  name: Name
  nameWithType: XmlEntity.Name
  fullName: System.Xml.XmlEntity.Name
- uid: System.Xml.XmlEntity.NodeType
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NodeType
  nameWithType: XmlEntity.NodeType
  fullName: System.Xml.XmlEntity.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlEntity.NotationName
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NotationName
  nameWithType: XmlEntity.NotationName
  fullName: System.Xml.XmlEntity.NotationName
- uid: System.Xml.XmlEntity.OuterXml
  parent: System.Xml.XmlEntity
  isExternal: false
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
  fullName: System.Xml.XmlEntity.OuterXml
- uid: System.Xml.XmlEntity.PublicId
  parent: System.Xml.XmlEntity
  isExternal: false
  name: PublicId
  nameWithType: XmlEntity.PublicId
  fullName: System.Xml.XmlEntity.PublicId
- uid: System.Xml.XmlEntity.SystemId
  parent: System.Xml.XmlEntity
  isExternal: false
  name: SystemId
  nameWithType: XmlEntity.SystemId
  fullName: System.Xml.XmlEntity.SystemId
- uid: System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntity.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntity.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteTo(XmlWriter)
- uid: System.Xml.XmlEntity.BaseURI*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
- uid: System.Xml.XmlEntity.CloneNode*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: CloneNode
  nameWithType: XmlEntity.CloneNode
- uid: System.Xml.XmlEntity.InnerText*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerText
  nameWithType: XmlEntity.InnerText
- uid: System.Xml.XmlEntity.InnerXml*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
- uid: System.Xml.XmlEntity.IsReadOnly*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
- uid: System.Xml.XmlEntity.LocalName*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: LocalName
  nameWithType: XmlEntity.LocalName
- uid: System.Xml.XmlEntity.Name*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: Name
  nameWithType: XmlEntity.Name
- uid: System.Xml.XmlEntity.NodeType*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NodeType
  nameWithType: XmlEntity.NodeType
- uid: System.Xml.XmlEntity.NotationName*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NotationName
  nameWithType: XmlEntity.NotationName
- uid: System.Xml.XmlEntity.OuterXml*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
- uid: System.Xml.XmlEntity.PublicId*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: PublicId
  nameWithType: XmlEntity.PublicId
- uid: System.Xml.XmlEntity.SystemId*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: SystemId
  nameWithType: XmlEntity.SystemId
- uid: System.Xml.XmlEntity.WriteContentTo*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlEntity.WriteContentTo
- uid: System.Xml.XmlEntity.WriteTo*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteTo
  nameWithType: XmlEntity.WriteTo
